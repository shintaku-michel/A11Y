import {
  createEvent,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-user.entry.js
var __awaiter = function(e, r, t, i) {
  function n(e2) {
    return e2 instanceof t ? e2 : new t(function(r2) {
      r2(e2);
    });
  }
  return new (t || (t = Promise))(function(t2, a) {
    function c(e2) {
      try {
        o(i.next(e2));
      } catch (e3) {
        a(e3);
      }
    }
    function s(e2) {
      try {
        o(i["throw"](e2));
      } catch (e3) {
        a(e3);
      }
    }
    function o(e2) {
      e2.done ? t2(e2.value) : n(e2.value).then(c, s);
    }
    o((i = i.apply(e, r || [])).next());
  });
};
var __generator = function(e, r) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, i, n, a, c;
  return c = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol === "function" && (c[Symbol.iterator] = function() {
    return this;
  }), c;
  function s(e2) {
    return function(r2) {
      return o([e2, r2]);
    };
  }
  function o(s2) {
    if (i) throw new TypeError("Generator is already executing.");
    while (c && (c = 0, s2[0] && (t = 0)), t) try {
      if (i = 1, n && (a = s2[0] & 2 ? n["return"] : s2[0] ? n["throw"] || ((a = n["return"]) && a.call(n), 0) : n.next) && !(a = a.call(n, s2[1])).done) return a;
      if (n = 0, a) s2 = [s2[0] & 2, a.value];
      switch (s2[0]) {
        case 0:
        case 1:
          a = s2;
          break;
        case 4:
          t.label++;
          return { value: s2[1], done: false };
        case 5:
          t.label++;
          n = s2[1];
          s2 = [0];
          continue;
        case 7:
          s2 = t.ops.pop();
          t.trys.pop();
          continue;
        default:
          if (!(a = t.trys, a = a.length > 0 && a[a.length - 1]) && (s2[0] === 6 || s2[0] === 2)) {
            t = 0;
            continue;
          }
          if (s2[0] === 3 && (!a || s2[1] > a[0] && s2[1] < a[3])) {
            t.label = s2[1];
            break;
          }
          if (s2[0] === 6 && t.label < a[1]) {
            t.label = a[1];
            a = s2;
            break;
          }
          if (a && t.label < a[2]) {
            t.label = a[2];
            t.ops.push(s2);
            break;
          }
          if (a[2]) t.ops.pop();
          t.trys.pop();
          continue;
      }
      s2 = r.call(e, t);
    } catch (e2) {
      s2 = [6, e2];
      n = 0;
    } finally {
      i = a = 0;
    }
    if (s2[0] & 5) throw s2[1];
    return { value: s2[0] ? s2[1] : void 0, done: true };
  }
};
var alcUserCss = ".alc-user{display:-ms-flexbox;display:flex}.alc-user__image{margin-right:1rem;height:3.5rem;width:3.5rem;border-radius:9999px;-o-object-fit:cover;object-fit:cover}.alc-user__image--icon{font-size:3.5rem;line-height:1}.alc-user__name{margin-top:0.5rem;font-size:1.125rem;line-height:1.5rem;font-weight:700}";
var AlcUser = function() {
  function e(e2) {
    registerInstance(this, e2);
    this.alcLogout = createEvent(this, "alc-logout", 7);
    this.name = "UsuÃ¡rio";
    this.registrationNumber = "";
    this.logoutUrl = "#";
    this.imgSrc = "";
  }
  e.prototype.handleLogout = function(e2) {
    return __awaiter(this, void 0, void 0, function() {
      var r;
      return __generator(this, function(t) {
        r = this.alcLogout.emit();
        if (r.defaultPrevented) {
          e2.preventDefault();
        }
        return [2];
      });
    });
  };
  e.prototype.render = function() {
    var e2 = this;
    return h("div", { key: "b880f04f7c16cd12bbff75f682e2027df7aaf0e0", class: "alc-user" }, this.imgSrc ? h("img", { class: "alc-user__image", src: this.imgSrc, alt: "" }) : h("alc-icon", { class: "alc-user__image alc-user__image--icon", name: "person-circle", label: "" }), h("div", { key: "8413b4f7e3df2f870b96dc7c46e3e37a62d84de8" }, h("div", { key: "6aee9461e654e08b0e47255c11df6ff4c92e61d0", class: "alc-user__name" }, this.name), h("div", { key: "344f61f96eacf268712084b4990384133d37e494" }, this.registrationNumber), h("slot", { key: "57b56ec0b6450763e1adab33ba6c69abb8ef9d15" }), h("div", { key: "9b10ea4a41c5bd4d0c66effdd0d4ca308ad03706" }, h("alc-icon", { key: "760138d17d0de1b12bf0757e7de19d99cc903059", name: "box-arrow-right", label: "" }), h("a", { key: "9733df1f115340fe20a43165ae8ab935d6ca91a1", class: "alc-link ml-2", href: this.logoutUrl, onClick: function(r) {
      return e2.handleLogout(r);
    } }, "Sair"))));
  };
  return e;
}();
AlcUser.style = alcUserCss;
export {
  AlcUser as alc_user
};
