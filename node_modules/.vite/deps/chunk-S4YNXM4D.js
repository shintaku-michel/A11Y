// node_modules/alcance/dist/esm-es5/index-BuFKlV49.js
var __extends = /* @__PURE__ */ function() {
  var e = function(r, t) {
    e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e2, r2) {
      e2.__proto__ = r2;
    } || function(e2, r2) {
      for (var t2 in r2) if (Object.prototype.hasOwnProperty.call(r2, t2)) e2[t2] = r2[t2];
    };
    return e(r, t);
  };
  return function(r, t) {
    if (typeof t !== "function" && t !== null) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
    e(r, t);
    function n() {
      this.constructor = r;
    }
    r.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n());
  };
}();
var __assign = function() {
  __assign = Object.assign || function(e) {
    for (var r, t = 1, n = arguments.length; t < n; t++) {
      r = arguments[t];
      for (var o in r) if (Object.prototype.hasOwnProperty.call(r, o)) e[o] = r[o];
    }
    return e;
  };
  return __assign.apply(this, arguments);
};
var __awaiter = function(e, r, t, n) {
  function o(e2) {
    return e2 instanceof t ? e2 : new t(function(r2) {
      r2(e2);
    });
  }
  return new (t || (t = Promise))(function(t2, a) {
    function i(e2) {
      try {
        s(n.next(e2));
      } catch (e3) {
        a(e3);
      }
    }
    function l(e2) {
      try {
        s(n["throw"](e2));
      } catch (e3) {
        a(e3);
      }
    }
    function s(e2) {
      e2.done ? t2(e2.value) : o(e2.value).then(i, l);
    }
    s((n = n.apply(e, r || [])).next());
  });
};
var __generator = function(e, r) {
  var t = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, n, o, a, i;
  return i = { next: l(0), throw: l(1), return: l(2) }, typeof Symbol === "function" && (i[Symbol.iterator] = function() {
    return this;
  }), i;
  function l(e2) {
    return function(r2) {
      return s([e2, r2]);
    };
  }
  function s(l2) {
    if (n) throw new TypeError("Generator is already executing.");
    while (i && (i = 0, l2[0] && (t = 0)), t) try {
      if (n = 1, o && (a = l2[0] & 2 ? o["return"] : l2[0] ? o["throw"] || ((a = o["return"]) && a.call(o), 0) : o.next) && !(a = a.call(o, l2[1])).done) return a;
      if (o = 0, a) l2 = [l2[0] & 2, a.value];
      switch (l2[0]) {
        case 0:
        case 1:
          a = l2;
          break;
        case 4:
          t.label++;
          return { value: l2[1], done: false };
        case 5:
          t.label++;
          o = l2[1];
          l2 = [0];
          continue;
        case 7:
          l2 = t.ops.pop();
          t.trys.pop();
          continue;
        default:
          if (!(a = t.trys, a = a.length > 0 && a[a.length - 1]) && (l2[0] === 6 || l2[0] === 2)) {
            t = 0;
            continue;
          }
          if (l2[0] === 3 && (!a || l2[1] > a[0] && l2[1] < a[3])) {
            t.label = l2[1];
            break;
          }
          if (l2[0] === 6 && t.label < a[1]) {
            t.label = a[1];
            a = l2;
            break;
          }
          if (a && t.label < a[2]) {
            t.label = a[2];
            t.ops.push(l2);
            break;
          }
          if (a[2]) t.ops.pop();
          t.trys.pop();
          continue;
      }
      l2 = r.call(e, t);
    } catch (e2) {
      l2 = [6, e2];
      o = 0;
    } finally {
      n = a = 0;
    }
    if (l2[0] & 5) throw l2[1];
    return { value: l2[0] ? l2[1] : void 0, done: true };
  }
};
var __spreadArray = function(e, r, t) {
  if (t || arguments.length === 2) for (var n = 0, o = r.length, a; n < o; n++) {
    if (a || !(n in r)) {
      if (!a) a = Array.prototype.slice.call(r, 0, n);
      a[n] = r[n];
    }
  }
  return e.concat(a || Array.prototype.slice.call(r));
};
var NAMESPACE = "alcance";
var BUILD = { hydratedSelectorName: "hydrated", lazyLoad: true, shadowDom: false, slotRelocation: true, updatable: true };
var __defProp = Object.defineProperty;
var __export = function(e, r) {
  for (var t in r) __defProp(e, t, { get: r[t], enumerable: true });
};
var SVG_NS = "http://www.w3.org/2000/svg";
var HTML_NS = "http://www.w3.org/1999/xhtml";
var getHostRef = function(e) {
  if (e.__stencil__getHostRef) {
    return e.__stencil__getHostRef();
  }
  return void 0;
};
var registerInstance = function(e, r) {
  e.__stencil__getHostRef = function() {
    return r;
  };
  r.t = e;
};
var registerHost = function(e, r) {
  var t = { o: 0, $hostElement$: e, i: r, l: /* @__PURE__ */ new Map() };
  {
    t.u = new Promise(function(e2) {
      return t.v = e2;
    });
  }
  {
    t.p = new Promise(function(e2) {
      return t.m = e2;
    });
    e["s-p"] = [];
    e["s-rc"] = [];
  }
  var n = t;
  e.__stencil__getHostRef = function() {
    return n;
  };
  return n;
};
var isMemberInElement = function(e, r) {
  return r in e;
};
var consoleError = function(e, r) {
  return (0, console.error)(e, r);
};
var cmpModules = /* @__PURE__ */ new Map();
var loadModule = function(e, r, t) {
  var n = e.h.replace(/-/g, "_");
  var o = e.S;
  if (!o) {
    return void 0;
  }
  var a = cmpModules.get(o);
  if (a) {
    return a[n];
  }
  if (!t || !BUILD.hotModuleReplacement) {
    var i = function(e2) {
      cmpModules.set(o, e2);
      return e2[n];
    };
    switch (o) {
      case "alc-autocomplete":
        return import("./alc-autocomplete.entry-Y7BUF33E.js").then(i, consoleError);
      case "alc-breadcrumb":
        return import("./alc-breadcrumb.entry-LTANGC5Y.js").then(i, consoleError);
      case "alc-breadcrumb-item":
        return import("./alc-breadcrumb-item.entry-HYYT2V4V.js").then(i, consoleError);
      case "alc-checkbox":
        return import("./alc-checkbox.entry-X2VPCF53.js").then(i, consoleError);
      case "alc-event-lab":
        return import("./alc-event-lab.entry-73WM3QZG.js").then(i, consoleError);
      case "alc-field-checker":
        return import("./alc-field-checker.entry-7AXGN2QR.js").then(i, consoleError);
      case "alc-fieldset":
        return import("./alc-fieldset.entry-Q2HGFPI4.js").then(i, consoleError);
      case "alc-header":
        return import("./alc-header.entry-BYX4KZSZ.js").then(i, consoleError);
      case "alc-header-action":
        return import("./alc-header-action.entry-VWCF7E3R.js").then(i, consoleError);
      case "alc-header-notifications":
        return import("./alc-header-notifications.entry-4UBI23SK.js").then(i, consoleError);
      case "alc-header-v1":
        return import("./alc-header-v1.entry-H3KOHDSL.js").then(i, consoleError);
      case "alc-input-file":
        return import("./alc-input-file.entry-P4IZ2DU4.js").then(i, consoleError);
      case "alc-nav-panel":
        return import("./alc-nav-panel.entry-RCTJIA3L.js").then(i, consoleError);
      case "alc-radio":
        return import("./alc-radio.entry-4I74FSGX.js").then(i, consoleError);
      case "alc-sidepanel":
        return import("./alc-sidepanel.entry-UDXPT4KK.js").then(i, consoleError);
      case "alc-skip-link":
        return import("./alc-skip-link.entry-CSTVXN2S.js").then(i, consoleError);
      case "alc-skip-to-nav":
        return import("./alc-skip-to-nav.entry-7UUVY3FT.js").then(i, consoleError);
      case "alc-tooltip":
        return import("./alc-tooltip.entry-AAJ6DUW3.js").then(i, consoleError);
      case "alc-user":
        return import("./alc-user.entry-VNQN37KR.js").then(i, consoleError);
      case "alc-user-menu":
        return import("./alc-user-menu.entry-4POYS2LT.js").then(i, consoleError);
      case "alc-view-more":
        return import("./alc-view-more.entry-7M3UCXZM.js").then(i, consoleError);
      case "alc-badge":
        return import("./alc-badge.entry-ZFVUIBDC.js").then(i, consoleError);
      case "alc-header-id":
        return import("./alc-header-id.entry-IQIEEUXO.js").then(i, consoleError);
      case "alc-menu-link":
        return import("./alc-menu-link.entry-QKNV7622.js").then(i, consoleError);
      case "alc-menu-item":
        return import("./alc-menu-item.entry-V7O2WCRF.js").then(i, consoleError);
      case "alc-details":
        return import("./alc-details.entry-KO2AXETM.js").then(i, consoleError);
      case "alc-environment-label":
        return import("./alc-environment-label.entry-BSHWAJRU.js").then(i, consoleError);
      case "alc-modal":
        return import("./alc-modal.entry-SWNOHOJY.js").then(i, consoleError);
      case "alc-nav":
        return import("./alc-nav.entry-EYVMFYGK.js").then(i, consoleError);
      case "alc-tab":
        return import("./alc-tab.entry-ZLKCRMWH.js").then(i, consoleError);
      case "alc-table":
        return import("./alc-table.entry-GU3CGLEN.js").then(i, consoleError);
      case "alc-tabs":
        return import("./alc-tabs.entry-ZARNDV2D.js").then(i, consoleError);
      case "alc-drawer":
        return import("./alc-drawer.entry-7AQ2HGHI.js").then(i, consoleError);
      case "alc-expander_2":
        return import("./alc-expander_2.entry-DPMUAA4R.js").then(i, consoleError);
      case "alc-dropdown_2":
        return import("./alc-dropdown_2.entry-N6JKZGWP.js").then(i, consoleError);
      case "alc-field_2":
        return import("./alc-field_2.entry-LY77AAAL.js").then(i, consoleError);
      case "alc-icon":
        return import("./alc-icon.entry-SQRHCREG.js").then(i, consoleError);
      case "alc-loading_3":
        return import("./alc-loading_3.entry-7JWKVNNJ.js").then(i, consoleError);
      case "alc-scroll-panel_2":
        return import("./alc-scroll-panel_2.entry-LVXOPTOQ.js").then(i, consoleError);
      case "alc-alert":
        return import("./alc-alert.entry-ZN6GMHSQ.js").then(i, consoleError);
      case "alc-popup":
        return import("./alc-popup.entry-6HW4UVVY.js").then(i, consoleError);
      case "alc-datatable":
        return import("./alc-datatable.entry-7RY2OCMX.js").then(i, consoleError);
    }
  }
  return import("./".concat(o, ".entry.js").concat("")).then(function(e2) {
    {
      cmpModules.set(o, e2);
    }
    return e2[n];
  }, function(e2) {
    consoleError(e2, r.$hostElement$);
  });
};
var styles = /* @__PURE__ */ new Map();
var modeResolutionChain = [];
var HYDRATED_STYLE_ID = "sty-id";
var HYDRATED_CSS = "{visibility:hidden}.hydrated{visibility:inherit}";
var SLOT_FB_CSS = "slot-fb{display:contents}slot-fb[hidden]{display:none}";
var XLINK_NS = "http://www.w3.org/1999/xlink";
var win = typeof window !== "undefined" ? window : {};
var plt = { o: 0, _: "", jmp: function(e) {
  return e();
}, raf: function(e) {
  return requestAnimationFrame(e);
}, ael: function(e, r, t, n) {
  return e.addEventListener(r, t, n);
}, rel: function(e, r, t, n) {
  return e.removeEventListener(r, t, n);
}, ce: function(e, r) {
  return new CustomEvent(e, r);
} };
var supportsShadow = BUILD.shadowDom;
var supportsListenerOptions = function() {
  var e;
  var r = false;
  try {
    (e = win.document) == null ? void 0 : e.addEventListener("e", null, Object.defineProperty({}, "passive", { get: function() {
      r = true;
    } }));
  } catch (e2) {
  }
  return r;
}();
var promiseResolve = function(e) {
  return Promise.resolve(e);
};
var supportsConstructableStylesheets = function() {
  try {
    new CSSStyleSheet();
    return typeof new CSSStyleSheet().replaceSync === "function";
  } catch (e) {
  }
  return false;
}();
var queuePending = false;
var queueDomReads = [];
var queueDomWrites = [];
var queueTask = function(e, r) {
  return function(t) {
    e.push(t);
    if (!queuePending) {
      queuePending = true;
      if (r && plt.o & 4) {
        nextTick(flush);
      } else {
        plt.raf(flush);
      }
    }
  };
};
var consume = function(e) {
  for (var r = 0; r < e.length; r++) {
    try {
      e[r](performance.now());
    } catch (e2) {
      consoleError(e2);
    }
  }
  e.length = 0;
};
var flush = function() {
  consume(queueDomReads);
  {
    consume(queueDomWrites);
    if (queuePending = queueDomReads.length > 0) {
      plt.raf(flush);
    }
  }
};
var nextTick = function(e) {
  return promiseResolve().then(e);
};
var writeTask = queueTask(queueDomWrites, true);
var getAssetPath = function(e) {
  var r = new URL(e, plt._);
  return r.origin !== win.location.origin ? r.href : r.pathname;
};
var isComplexType = function(e) {
  e = typeof e;
  return e === "object" || e === "function";
};
function queryNonceMetaTagContent(e) {
  var r, t, n;
  return (n = (t = (r = e.head) == null ? void 0 : r.querySelector('meta[name="csp-nonce"]')) == null ? void 0 : t.getAttribute("content")) != null ? n : void 0;
}
var result_exports = {};
__export(result_exports, { err: function() {
  return err;
}, map: function() {
  return map;
}, ok: function() {
  return ok;
}, unwrap: function() {
  return unwrap;
}, unwrapErr: function() {
  return unwrapErr;
} });
var ok = function(e) {
  return { isOk: true, isErr: false, value: e };
};
var err = function(e) {
  return { isOk: false, isErr: true, value: e };
};
function map(e, r) {
  if (e.isOk) {
    var t = r(e.value);
    if (t instanceof Promise) {
      return t.then(function(e2) {
        return ok(e2);
      });
    } else {
      return ok(t);
    }
  }
  if (e.isErr) {
    var n = e.value;
    return err(n);
  }
  throw "should never get here";
}
var unwrap = function(e) {
  if (e.isOk) {
    return e.value;
  } else {
    throw e.value;
  }
};
var unwrapErr = function(e) {
  if (e.isErr) {
    return e.value;
  } else {
    throw e.value;
  }
};
var updateFallbackSlotVisibility = function(e) {
  var r = internalCall(e, "childNodes");
  if (e.tagName && e.tagName.includes("-") && e["s-cr"] && e.tagName !== "SLOT-FB") {
    getHostSlotNodes(r, e.tagName).forEach(function(e2) {
      if (e2.nodeType === 1 && e2.tagName === "SLOT-FB") {
        if (getSlotChildSiblings(e2, getSlotName(e2), false).length) {
          e2.hidden = true;
        } else {
          e2.hidden = false;
        }
      }
    });
  }
  var t = 0;
  for (t = 0; t < r.length; t++) {
    var n = r[t];
    if (n.nodeType === 1 && internalCall(n, "childNodes").length) {
      updateFallbackSlotVisibility(n);
    }
  }
};
var getSlottedChildNodes = function(e) {
  var r = [];
  for (var t = 0; t < e.length; t++) {
    var n = e[t]["s-nr"] || void 0;
    if (n && n.isConnected) {
      r.push(n);
    }
  }
  return r;
};
function getHostSlotNodes(e, r, t) {
  var n = 0;
  var o = [];
  var a;
  for (; n < e.length; n++) {
    a = e[n];
    if (a["s-sr"] && (!r || a["s-hn"] === r) && t === void 0) {
      o.push(a);
    }
    o = __spreadArray(__spreadArray([], o, true), getHostSlotNodes(a.childNodes, r, t), true);
  }
  return o;
}
var getSlotChildSiblings = function(e, r, t) {
  if (t === void 0) {
    t = true;
  }
  var n = [];
  if (t && e["s-sr"] || !e["s-sr"]) n.push(e);
  var o = e;
  while (o = o.nextSibling) {
    if (getSlotName(o) === r && (t || !o["s-sr"])) n.push(o);
  }
  return n;
};
var isNodeLocatedInSlot = function(e, r) {
  if (e.nodeType === 1) {
    if (e.getAttribute("slot") === null && r === "") {
      return true;
    }
    if (e.getAttribute("slot") === r) {
      return true;
    }
    return false;
  }
  if (e["s-sn"] === r) {
    return true;
  }
  return r === "";
};
var getSlotName = function(e) {
  return typeof e["s-sn"] === "string" ? e["s-sn"] : e.nodeType === 1 && e.getAttribute("slot") || void 0;
};
function patchSlotNode(e) {
  if (e.assignedElements || e.assignedNodes || !e["s-sr"]) return;
  var r = function(r2) {
    return (function(e2) {
      var t = [];
      var n = this["s-sn"];
      if (e2 == null ? void 0 : e2.flatten) {
        console.error("\n          Flattening is not supported for Stencil non-shadow slots. \n          You can use `.childNodes` to nested slot fallback content.\n          If you have a particular use case, please open an issue on the Stencil repo.\n        ");
      }
      var o = this["s-cr"].parentElement;
      var a = o.__childNodes ? o.childNodes : getSlottedChildNodes(o.childNodes);
      a.forEach(function(e3) {
        if (n === getSlotName(e3)) {
          t.push(e3);
        }
      });
      if (r2) {
        return t.filter(function(e3) {
          return e3.nodeType === 1;
        });
      }
      return t;
    }).bind(e);
  };
  e.assignedElements = r(true);
  e.assignedNodes = r(false);
}
function internalCall(e, r) {
  if ("__" + r in e) {
    var t = e["__" + r];
    if (typeof t !== "function") return t;
    return t.bind(e);
  } else {
    if (typeof e[r] !== "function") return e[r];
    return e[r].bind(e);
  }
}
var createTime = function(e, r) {
  if (r === void 0) {
    r = "";
  }
  {
    return function() {
      return;
    };
  }
};
var uniqueTime = function(e, r) {
  {
    return function() {
      return;
    };
  }
};
var h = function(e, r) {
  var t = [];
  for (var n = 2; n < arguments.length; n++) {
    t[n - 2] = arguments[n];
  }
  var o = null;
  var a = null;
  var i = null;
  var l = false;
  var s = false;
  var u = [];
  var c = function(r2) {
    for (var t2 = 0; t2 < r2.length; t2++) {
      o = r2[t2];
      if (Array.isArray(o)) {
        c(o);
      } else if (o != null && typeof o !== "boolean") {
        if (l = typeof e !== "function" && !isComplexType(o)) {
          o = String(o);
        }
        if (l && s) {
          u[u.length - 1].C += o;
        } else {
          u.push(l ? newVNode(null, o) : o);
        }
        s = l;
      }
    }
  };
  c(t);
  if (r) {
    if (r.key) {
      a = r.key;
    }
    if (r.name) {
      i = r.name;
    }
    {
      var f = r.className || r.class;
      if (f) {
        r.class = typeof f !== "object" ? f : Object.keys(f).filter(function(e2) {
          return f[e2];
        }).join(" ");
      }
    }
  }
  if (typeof e === "function") {
    return e(r === null ? {} : r, u, vdomFnUtils);
  }
  var v = newVNode(e, null);
  v.k = r;
  if (u.length > 0) {
    v.N = u;
  }
  {
    v.j = a;
  }
  {
    v.T = i;
  }
  return v;
};
var newVNode = function(e, r) {
  var t = { o: 0, R: e, C: r, L: null, N: null };
  {
    t.k = null;
  }
  {
    t.j = null;
  }
  {
    t.T = null;
  }
  return t;
};
var Host = {};
var isHost = function(e) {
  return e && e.R === Host;
};
var vdomFnUtils = { forEach: function(e, r) {
  return e.map(convertToPublic).forEach(r);
}, map: function(e, r) {
  return e.map(convertToPublic).map(r).map(convertToPrivate);
} };
var convertToPublic = function(e) {
  return { vattrs: e.k, vchildren: e.N, vkey: e.j, vname: e.T, vtag: e.R, vtext: e.C };
};
var convertToPrivate = function(e) {
  if (typeof e.vtag === "function") {
    var r = __assign({}, e.vattrs);
    if (e.vkey) {
      r.key = e.vkey;
    }
    if (e.vname) {
      r.name = e.vname;
    }
    return h.apply(void 0, __spreadArray([e.vtag, r], e.vchildren || [], false));
  }
  var t = newVNode(e.vtag, e.vtext);
  t.k = e.vattrs;
  t.N = e.vchildren;
  t.j = e.vkey;
  t.T = e.vname;
  return t;
};
var computeMode = function(e) {
  return modeResolutionChain.map(function(r) {
    return r(e);
  }).find(function(e2) {
    return !!e2;
  });
};
var setMode = function(e) {
  return modeResolutionChain.push(e);
};
var parsePropertyValue = function(e, r) {
  if (e != null && !isComplexType(e)) {
    if (r & 4) {
      return e === "false" ? false : e === "" || !!e;
    }
    if (r & 2) {
      return parseFloat(e);
    }
    if (r & 1) {
      return String(e);
    }
    return e;
  }
  return e;
};
var getElement = function(e) {
  return getHostRef(e).$hostElement$;
};
var createEvent = function(e, r, t) {
  var n = getElement(e);
  return { emit: function(e2) {
    return emitEvent(n, r, { bubbles: !!(t & 4), composed: !!(t & 2), cancelable: !!(t & 1), detail: e2 });
  } };
};
var emitEvent = function(e, r, t) {
  var n = plt.ce(r, t);
  e.dispatchEvent(n);
  return n;
};
var rootAppliedStyles = /* @__PURE__ */ new WeakMap();
var registerStyle = function(e, r, t) {
  var n = styles.get(e);
  if (supportsConstructableStylesheets && t) {
    n = n || new CSSStyleSheet();
    if (typeof n === "string") {
      n = r;
    } else {
      n.replaceSync(r);
    }
  } else {
    n = r;
  }
  styles.set(e, n);
};
var addStyle = function(e, r, t) {
  var n;
  var o = getScopeId(r, t);
  var a = styles.get(o);
  if (!win.document) {
    return o;
  }
  e = e.nodeType === 11 ? e : win.document;
  if (a) {
    if (typeof a === "string") {
      e = e.head || e;
      var i = rootAppliedStyles.get(e);
      var l = void 0;
      if (!i) {
        rootAppliedStyles.set(e, i = /* @__PURE__ */ new Set());
      }
      if (!i.has(o)) {
        {
          l = document.querySelector("[".concat(HYDRATED_STYLE_ID, '="').concat(o, '"]')) || win.document.createElement("style");
          l.innerHTML = a;
          var s = (n = plt.A) != null ? n : queryNonceMetaTagContent(win.document);
          if (s != null) {
            l.setAttribute("nonce", s);
          }
          if (!(r.o & 1)) {
            if (e.nodeName === "HEAD") {
              var u = e.querySelectorAll("link[rel=preconnect]");
              var c = u.length > 0 ? u[u.length - 1].nextSibling : e.querySelector("style");
              e.insertBefore(l, (c == null ? void 0 : c.parentNode) === e ? c : null);
            } else if ("host" in e) {
              if (supportsConstructableStylesheets) {
                var f = new CSSStyleSheet();
                f.replaceSync(a);
                e.adoptedStyleSheets = __spreadArray([f], e.adoptedStyleSheets, true);
              } else {
                var v = e.querySelector("style");
                if (v) {
                  v.innerHTML = a + v.innerHTML;
                } else {
                  e.prepend(l);
                }
              }
            } else {
              e.append(l);
            }
          }
          if (r.o & 1) {
            e.insertBefore(l, null);
          }
        }
        if (r.o & 4) {
          l.innerHTML += SLOT_FB_CSS;
        }
        if (i) {
          i.add(o);
        }
      }
    } else if (!e.adoptedStyleSheets.includes(a)) {
      e.adoptedStyleSheets = __spreadArray(__spreadArray([], e.adoptedStyleSheets, true), [a], false);
    }
  }
  return o;
};
var attachStyles = function(e) {
  var r = e.i;
  var t = e.$hostElement$;
  var n = createTime("attachStyles", r.h);
  addStyle(t.getRootNode(), r, e.V);
  n();
};
var getScopeId = function(e, r) {
  return "sc-" + (r && e.o & 32 ? e.h + "-" + r : e.h);
};
var setAccessor = function(e, r, t, n, o, a, i) {
  if (t === n) {
    return;
  }
  var l = isMemberInElement(e, r);
  var s = r.toLowerCase();
  if (r === "class") {
    var u = e.classList;
    var c = parseClassList(t);
    var f = parseClassList(n);
    {
      u.remove.apply(u, c.filter(function(e2) {
        return e2 && !f.includes(e2);
      }));
      u.add.apply(u, f.filter(function(e2) {
        return e2 && !c.includes(e2);
      }));
    }
  } else if (r === "style") {
    {
      for (var v in t) {
        if (!n || n[v] == null) {
          if (v.includes("-")) {
            e.style.removeProperty(v);
          } else {
            e.style[v] = "";
          }
        }
      }
    }
    for (var v in n) {
      if (!t || n[v] !== t[v]) {
        if (v.includes("-")) {
          e.style.setProperty(v, n[v]);
        } else {
          e.style[v] = n[v];
        }
      }
    }
  } else if (r === "key") ;
  else if (r === "ref") {
    if (n) {
      n(e);
    }
  } else if (!l && r[0] === "o" && r[1] === "n") {
    if (r[2] === "-") {
      r = r.slice(3);
    } else if (isMemberInElement(win, s)) {
      r = s.slice(2);
    } else {
      r = s[2] + r.slice(3);
    }
    if (t || n) {
      var d = r.endsWith(CAPTURE_EVENT_SUFFIX);
      r = r.replace(CAPTURE_EVENT_REGEX, "");
      if (t) {
        plt.rel(e, r, t, d);
      }
      if (n) {
        plt.ael(e, r, n, d);
      }
    }
  } else {
    var p = isComplexType(n);
    if ((l || p && n !== null) && !o) {
      try {
        if (!e.tagName.includes("-")) {
          var m = n == null ? "" : n;
          if (r === "list") {
            l = false;
          } else if (t == null || e[r] != m) {
            if (typeof e.__lookupSetter__(r) === "function") {
              e[r] = m;
            } else {
              e.setAttribute(r, m);
            }
          }
        } else if (e[r] !== n) {
          e[r] = n;
        }
      } catch (e2) {
      }
    }
    var h2 = false;
    {
      if (s !== (s = s.replace(/^xlink\:?/, ""))) {
        r = s;
        h2 = true;
      }
    }
    if (n == null || n === false) {
      if (n !== false || e.getAttribute(r) === "") {
        if (h2) {
          e.removeAttributeNS(XLINK_NS, r);
        } else {
          e.removeAttribute(r);
        }
      }
    } else if ((!l || a & 4 || o) && !p && e.nodeType === 1) {
      n = n === true ? "" : n;
      if (h2) {
        e.setAttributeNS(XLINK_NS, r, n);
      } else {
        e.setAttribute(r, n);
      }
    }
  }
};
var parseClassListRegex = /\s/;
var parseClassList = function(e) {
  if (typeof e === "object" && e && "baseVal" in e) {
    e = e.baseVal;
  }
  if (!e || typeof e !== "string") {
    return [];
  }
  return e.split(parseClassListRegex);
};
var CAPTURE_EVENT_SUFFIX = "Capture";
var CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + "$");
var updateElement = function(e, r, t, n) {
  var o = r.L.nodeType === 11 && r.L.host ? r.L.host : r.L;
  var a = e && e.k || {};
  var i = r.k || {};
  {
    for (var l = 0, s = sortedAttrNames(Object.keys(a)); l < s.length; l++) {
      var u = s[l];
      if (!(u in i)) {
        setAccessor(o, u, a[u], void 0, t, r.o);
      }
    }
  }
  for (var c = 0, f = sortedAttrNames(Object.keys(i)); c < f.length; c++) {
    var u = f[c];
    setAccessor(o, u, a[u], i[u], t, r.o);
  }
};
function sortedAttrNames(e) {
  return e.includes("ref") ? __spreadArray(__spreadArray([], e.filter(function(e2) {
    return e2 !== "ref";
  }), true), ["ref"], false) : e;
}
var contentRef;
var hostTagName;
var useNativeShadowDom = false;
var checkSlotFallbackVisibility = false;
var checkSlotRelocate = false;
var isSvgMode = false;
var createElm = function(e, r, t) {
  var n;
  var o = r.N[t];
  var a = 0;
  var i;
  var l;
  var s;
  if (!useNativeShadowDom) {
    checkSlotRelocate = true;
    if (o.R === "slot") {
      o.o |= o.N ? 2 : 1;
    }
  }
  if (o.C !== null) {
    i = o.L = win.document.createTextNode(o.C);
  } else if (o.o & 1) {
    i = o.L = win.document.createTextNode("");
    {
      updateElement(null, o, isSvgMode);
    }
  } else {
    if (!isSvgMode) {
      isSvgMode = o.R === "svg";
    }
    if (!win.document) {
      throw new Error("You are trying to render a Stencil component in an environment that doesn't support the DOM. Make sure to populate the [`window`](https://developer.mozilla.org/en-US/docs/Web/API/Window/window) object before rendering a component.");
    }
    i = o.L = win.document.createElementNS(isSvgMode ? SVG_NS : HTML_NS, !useNativeShadowDom && BUILD.slotRelocation && o.o & 2 ? "slot-fb" : o.R);
    if (isSvgMode && o.R === "foreignObject") {
      isSvgMode = false;
    }
    {
      updateElement(null, o, isSvgMode);
    }
    if (o.N) {
      for (a = 0; a < o.N.length; ++a) {
        l = createElm(e, o, a);
        if (l) {
          i.appendChild(l);
        }
      }
    }
    {
      if (o.R === "svg") {
        isSvgMode = false;
      } else if (i.tagName === "foreignObject") {
        isSvgMode = true;
      }
    }
  }
  i["s-hn"] = hostTagName;
  {
    if (o.o & (2 | 1)) {
      i["s-sr"] = true;
      i["s-cr"] = contentRef;
      i["s-sn"] = o.T || "";
      i["s-rf"] = (n = o.k) == null ? void 0 : n.ref;
      patchSlotNode(i);
      s = e && e.N && e.N[t];
      if (s && s.R === o.R && e.L) {
        {
          putBackInOriginalLocation(e.L, false);
        }
      }
    }
  }
  return i;
};
var putBackInOriginalLocation = function(e, r) {
  plt.o |= 1;
  var t = Array.from(e.__childNodes || e.childNodes);
  for (var n = t.length - 1; n >= 0; n--) {
    var o = t[n];
    if (o["s-hn"] !== hostTagName && o["s-ol"]) {
      insertBefore(referenceNode(o).parentNode, o, referenceNode(o));
      o["s-ol"].remove();
      o["s-ol"] = void 0;
      o["s-sh"] = void 0;
      checkSlotRelocate = true;
    }
    if (r) {
      putBackInOriginalLocation(o, r);
    }
  }
  plt.o &= -2;
};
var addVnodes = function(e, r, t, n, o, a) {
  var i = e["s-cr"] && e["s-cr"].parentNode || e;
  var l;
  for (; o <= a; ++o) {
    if (n[o]) {
      l = createElm(null, t, o);
      if (l) {
        n[o].L = l;
        insertBefore(i, l, referenceNode(r));
      }
    }
  }
};
var removeVnodes = function(e, r, t) {
  for (var n = r; n <= t; ++n) {
    var o = e[n];
    if (o) {
      var a = o.L;
      nullifyVNodeRefs(o);
      if (a) {
        {
          checkSlotFallbackVisibility = true;
          if (a["s-ol"]) {
            a["s-ol"].remove();
          } else {
            putBackInOriginalLocation(a, true);
          }
        }
        a.remove();
      }
    }
  }
};
var updateChildren = function(e, r, t, n, o) {
  if (o === void 0) {
    o = false;
  }
  var a = 0;
  var i = 0;
  var l = 0;
  var s = 0;
  var u = r.length - 1;
  var c = r[0];
  var f = r[u];
  var v = n.length - 1;
  var d = n[0];
  var p = n[v];
  var m;
  var h2;
  while (a <= u && i <= v) {
    if (c == null) {
      c = r[++a];
    } else if (f == null) {
      f = r[--u];
    } else if (d == null) {
      d = n[++i];
    } else if (p == null) {
      p = n[--v];
    } else if (isSameVnode(c, d, o)) {
      patch(c, d, o);
      c = r[++a];
      d = n[++i];
    } else if (isSameVnode(f, p, o)) {
      patch(f, p, o);
      f = r[--u];
      p = n[--v];
    } else if (isSameVnode(c, p, o)) {
      if (c.R === "slot" || p.R === "slot") {
        putBackInOriginalLocation(c.L.parentNode, false);
      }
      patch(c, p, o);
      insertBefore(e, c.L, f.L.nextSibling);
      c = r[++a];
      p = n[--v];
    } else if (isSameVnode(f, d, o)) {
      if (c.R === "slot" || p.R === "slot") {
        putBackInOriginalLocation(f.L.parentNode, false);
      }
      patch(f, d, o);
      insertBefore(e, f.L, c.L);
      f = r[--u];
      d = n[++i];
    } else {
      l = -1;
      {
        for (s = a; s <= u; ++s) {
          if (r[s] && r[s].j !== null && r[s].j === d.j) {
            l = s;
            break;
          }
        }
      }
      if (l >= 0) {
        h2 = r[l];
        if (h2.R !== d.R) {
          m = createElm(r && r[i], t, l);
        } else {
          patch(h2, d, o);
          r[l] = void 0;
          m = h2.L;
        }
        d = n[++i];
      } else {
        m = createElm(r && r[i], t, i);
        d = n[++i];
      }
      if (m) {
        {
          insertBefore(referenceNode(c.L).parentNode, m, referenceNode(c.L));
        }
      }
    }
  }
  if (a > u) {
    addVnodes(e, n[v + 1] == null ? null : n[v + 1].L, t, n, i, v);
  } else if (i > v) {
    removeVnodes(r, a, u);
  }
};
var isSameVnode = function(e, r, t) {
  if (t === void 0) {
    t = false;
  }
  if (e.R === r.R) {
    if (e.R === "slot") {
      return e.T === r.T;
    }
    if (!t) {
      return e.j === r.j;
    }
    if (t && !e.j && r.j) {
      e.j = r.j;
    }
    return true;
  }
  return false;
};
var referenceNode = function(e) {
  return e && e["s-ol"] || e;
};
var patch = function(e, r, t) {
  if (t === void 0) {
    t = false;
  }
  var n = r.L = e.L;
  var o = e.N;
  var a = r.N;
  var i = r.R;
  var l = r.C;
  var s;
  if (l === null) {
    {
      isSvgMode = i === "svg" ? true : i === "foreignObject" ? false : isSvgMode;
    }
    {
      updateElement(e, r, isSvgMode);
    }
    if (o !== null && a !== null) {
      updateChildren(n, o, r, a, t);
    } else if (a !== null) {
      if (e.C !== null) {
        n.textContent = "";
      }
      addVnodes(n, null, r, a, 0, a.length - 1);
    } else if (!t && BUILD.updatable && o !== null) {
      removeVnodes(o, 0, o.length - 1);
    }
    if (isSvgMode && i === "svg") {
      isSvgMode = false;
    }
  } else if (s = n["s-cr"]) {
    s.parentNode.textContent = l;
  } else if (e.C !== l) {
    n.data = l;
  }
};
var relocateNodes = [];
var markSlotContentForRelocation = function(e) {
  var r;
  var t;
  var n;
  var o = e.__childNodes || e.childNodes;
  for (var a = 0, i = o; a < i.length; a++) {
    var l = i[a];
    if (l["s-sr"] && (r = l["s-cr"]) && r.parentNode) {
      t = r.parentNode.__childNodes || r.parentNode.childNodes;
      var s = l["s-sn"];
      var u = function() {
        r = t[n];
        if (!r["s-cn"] && !r["s-nr"] && r["s-hn"] !== l["s-hn"] && true) {
          if (isNodeLocatedInSlot(r, s)) {
            var e2 = relocateNodes.find(function(e3) {
              return e3.M === r;
            });
            checkSlotFallbackVisibility = true;
            r["s-sn"] = r["s-sn"] || s;
            if (e2) {
              e2.M["s-sh"] = l["s-hn"];
              e2.H = l;
            } else {
              r["s-sh"] = l["s-hn"];
              relocateNodes.push({ H: l, M: r });
            }
            if (r["s-sr"]) {
              relocateNodes.map(function(t2) {
                if (isNodeLocatedInSlot(t2.M, r["s-sn"])) {
                  e2 = relocateNodes.find(function(e3) {
                    return e3.M === r;
                  });
                  if (e2 && !t2.H) {
                    t2.H = e2.H;
                  }
                }
              });
            }
          } else if (!relocateNodes.some(function(e3) {
            return e3.M === r;
          })) {
            relocateNodes.push({ M: r });
          }
        }
      };
      for (n = t.length - 1; n >= 0; n--) {
        u();
      }
    }
    if (l.nodeType === 1) {
      markSlotContentForRelocation(l);
    }
  }
};
var nullifyVNodeRefs = function(e) {
  {
    e.k && e.k.ref && e.k.ref(null);
    e.N && e.N.map(nullifyVNodeRefs);
  }
};
var insertBefore = function(e, r, t) {
  {
    return e == null ? void 0 : e.insertBefore(r, t);
  }
};
var renderVdom = function(e, r, t) {
  if (t === void 0) {
    t = false;
  }
  var n, o, a, i;
  var l = e.$hostElement$;
  var s = e.i;
  var u = e.O || newVNode(null, null);
  var c = isHost(r) ? r : h(null, null, r);
  hostTagName = l.tagName;
  if (s.I) {
    c.k = c.k || {};
    s.I.map(function(e2) {
      var r2 = e2[0], t2 = e2[1];
      return c.k[t2] = l[r2];
    });
  }
  if (t && c.k) {
    for (var f = 0, v = Object.keys(c.k); f < v.length; f++) {
      var d = v[f];
      if (l.hasAttribute(d) && !["key", "ref", "style", "class"].includes(d)) {
        c.k[d] = l[d];
      }
    }
  }
  c.R = null;
  c.o |= 4;
  e.O = c;
  c.L = u.L = l;
  useNativeShadowDom = supportsShadow;
  {
    contentRef = l["s-cr"];
    checkSlotFallbackVisibility = false;
  }
  patch(u, c, t);
  {
    plt.o |= 1;
    if (checkSlotRelocate) {
      markSlotContentForRelocation(c.L);
      for (var p = 0, m = relocateNodes; p < m.length; p++) {
        var y = m[p];
        var S = y.M;
        if (!S["s-ol"] && win.document) {
          var g = win.document.createTextNode("");
          g["s-nr"] = S;
          insertBefore(S.parentNode, S["s-ol"] = g, S);
        }
      }
      for (var w = 0, b = relocateNodes; w < b.length; w++) {
        var y = b[w];
        var S = y.M;
        var E = y.H;
        if (E) {
          var _ = E.parentNode;
          var C = E.nextSibling;
          {
            var g = (n = S["s-ol"]) == null ? void 0 : n.previousSibling;
            while (g) {
              var k = (o = g["s-nr"]) != null ? o : null;
              if (k && k["s-sn"] === S["s-sn"] && _ === (k.__parentNode || k.parentNode)) {
                k = k.nextSibling;
                while (k === S || (k == null ? void 0 : k["s-sr"])) {
                  k = k == null ? void 0 : k.nextSibling;
                }
                if (!k || !k["s-nr"]) {
                  C = k;
                  break;
                }
              }
              g = g.previousSibling;
            }
          }
          var N = S.__parentNode || S.parentNode;
          var j = S.__nextSibling || S.nextSibling;
          if (!C && _ !== N || j !== C) {
            if (S !== C) {
              if (!S["s-hn"] && S["s-ol"]) {
                S["s-hn"] = S["s-ol"].parentNode.nodeName;
              }
              insertBefore(_, S, C);
              if (S.nodeType === 1 && S.tagName !== "SLOT-FB") {
                S.hidden = (a = S["s-ih"]) != null ? a : false;
              }
            }
          }
          S && typeof E["s-rf"] === "function" && E["s-rf"](E);
        } else {
          if (S.nodeType === 1) {
            if (t) {
              S["s-ih"] = (i = S.hidden) != null ? i : false;
            }
            S.hidden = true;
          }
        }
      }
    }
    if (checkSlotFallbackVisibility) {
      updateFallbackSlotVisibility(c.L);
    }
    plt.o &= -2;
    relocateNodes.length = 0;
  }
  contentRef = void 0;
};
var attachToAncestor = function(e, r) {
  if (r && !e.P && r["s-p"]) {
    var t = r["s-p"].push(new Promise(function(n) {
      return e.P = function() {
        r["s-p"].splice(t - 1, 1);
        n();
      };
    }));
  }
};
var scheduleUpdate = function(e, r) {
  {
    e.o |= 16;
  }
  if (e.o & 4) {
    e.o |= 512;
    return;
  }
  attachToAncestor(e, e.D);
  var t = function() {
    return dispatchHooks(e, r);
  };
  return writeTask(t);
};
var dispatchHooks = function(e, r) {
  var t = e.$hostElement$;
  var n = createTime("scheduleUpdate", e.i.h);
  var o = e.t;
  if (!o) {
    throw new Error("Can't render component <".concat(t.tagName.toLowerCase(), " /> with invalid Stencil runtime! Make sure this imported component is compiled with a `externalRuntime: true` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime"));
  }
  var a;
  if (r) {
    {
      e.o |= 256;
      if (e.$) {
        e.$.map(function(e2) {
          var r2 = e2[0], n2 = e2[1];
          return safeCall(o, r2, n2, t);
        });
        e.$ = void 0;
      }
    }
    a = safeCall(o, "componentWillLoad", void 0, t);
  } else {
    a = safeCall(o, "componentWillUpdate", void 0, t);
  }
  a = enqueue(a, function() {
    return safeCall(o, "componentWillRender", void 0, t);
  });
  n();
  return enqueue(a, function() {
    return updateComponent(e, o, r);
  });
};
var enqueue = function(e, r) {
  return isPromisey(e) ? e.then(r).catch(function(e2) {
    console.error(e2);
    r();
  }) : r();
};
var isPromisey = function(e) {
  return e instanceof Promise || e && e.then && typeof e.then === "function";
};
var updateComponent = function(e, r, t) {
  return __awaiter(void 0, void 0, void 0, function() {
    var n, o, a, i, l, s, u;
    return __generator(this, function(c) {
      o = e.$hostElement$;
      a = createTime("update", e.i.h);
      i = o["s-rc"];
      if (t) {
        attachStyles(e);
      }
      l = createTime("render", e.i.h);
      {
        callRender(e, r, o, t);
      }
      if (i) {
        i.map(function(e2) {
          return e2();
        });
        o["s-rc"] = void 0;
      }
      l();
      a();
      {
        s = (n = o["s-p"]) != null ? n : [];
        u = function() {
          return postUpdateComponent(e);
        };
        if (s.length === 0) {
          u();
        } else {
          Promise.all(s).then(u);
          e.o |= 4;
          s.length = 0;
        }
      }
      return [2];
    });
  });
};
var callRender = function(e, r, t, n) {
  try {
    r = r.render();
    {
      e.o &= -17;
    }
    {
      e.o |= 2;
    }
    {
      {
        {
          renderVdom(e, r, n);
        }
      }
    }
  } catch (r2) {
    consoleError(r2, e.$hostElement$);
  }
  return null;
};
var postUpdateComponent = function(e) {
  var r = e.i.h;
  var t = e.$hostElement$;
  var n = createTime("postUpdate", r);
  var o = e.t;
  var a = e.D;
  safeCall(o, "componentDidRender", void 0, t);
  if (!(e.o & 64)) {
    e.o |= 64;
    {
      addHydratedFlag(t);
    }
    safeCall(o, "componentDidLoad", void 0, t);
    n();
    {
      e.m(t);
      if (!a) {
        appDidLoad();
      }
    }
  } else {
    safeCall(o, "componentDidUpdate", void 0, t);
    n();
  }
  {
    e.v(t);
  }
  {
    if (e.P) {
      e.P();
      e.P = void 0;
    }
    if (e.o & 512) {
      nextTick(function() {
        return scheduleUpdate(e, false);
      });
    }
    e.o &= -517;
  }
};
var forceUpdate = function(e) {
  {
    var r = getHostRef(e);
    var t = r.$hostElement$.isConnected;
    if (t && (r.o & (2 | 16)) === 2) {
      scheduleUpdate(r, false);
    }
    return t;
  }
};
var appDidLoad = function(e) {
  nextTick(function() {
    return emitEvent(win, "appload", { detail: { namespace: NAMESPACE } });
  });
};
var safeCall = function(e, r, t, n) {
  if (e && e[r]) {
    try {
      return e[r](t);
    } catch (e2) {
      consoleError(e2, n);
    }
  }
  return void 0;
};
var addHydratedFlag = function(e) {
  var r;
  return e.classList.add((r = BUILD.hydratedSelectorName) != null ? r : "hydrated");
};
var getValue = function(e, r) {
  return getHostRef(e).l.get(r);
};
var setValue = function(e, r, t, n) {
  var o = getHostRef(e);
  if (!o) {
    throw new Error(`Couldn't find host element for "`.concat(n.h, '" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/stenciljs/core/issues/5457).'));
  }
  var a = o.$hostElement$;
  var i = o.l.get(r);
  var l = o.o;
  var s = o.t;
  t = parsePropertyValue(t, n.U[r][0]);
  var u = Number.isNaN(i) && Number.isNaN(t);
  var c = t !== i && !u;
  if ((!(l & 8) || i === void 0) && c) {
    o.l.set(r, t);
    if (s) {
      if (n.F && l & 128) {
        var f = n.F[r];
        if (f) {
          f.map(function(e2) {
            try {
              s[e2](t, i, r);
            } catch (e3) {
              consoleError(e3, a);
            }
          });
        }
      }
      if ((l & (2 | 16)) === 2) {
        if (s.componentShouldUpdate) {
          if (s.componentShouldUpdate(t, i, r) === false) {
            return;
          }
        }
        scheduleUpdate(o, false);
      }
    }
  }
};
var proxyComponent = function(e, r, t) {
  var n, o;
  var a = e.prototype;
  if (r.U || (r.F || e.watchers)) {
    if (e.watchers && !r.F) {
      r.F = e.watchers;
    }
    var i = Object.entries((n = r.U) != null ? n : {});
    i.map(function(e2) {
      var n2 = e2[0], o2 = e2[1][0];
      if (o2 & 31 || t & 2 && o2 & 32) {
        var i2 = Object.getOwnPropertyDescriptor(a, n2) || {}, l2 = i2.get, s = i2.set;
        if (l2) r.U[n2][0] |= 2048;
        if (s) r.U[n2][0] |= 4096;
        if (t & 1 || !l2) {
          Object.defineProperty(a, n2, { get: function() {
            {
              if ((r.U[n2][0] & 2048) === 0) {
                return getValue(this, n2);
              }
              var e3 = getHostRef(this);
              var t2 = e3 ? e3.t : a;
              if (!t2) return;
              return t2[n2];
            }
          }, configurable: true, enumerable: true });
        }
        Object.defineProperty(a, n2, { set: function(e3) {
          var a2 = this;
          var i3 = getHostRef(this);
          if (s) {
            var l3 = o2 & 32 ? this[n2] : i3.$hostElement$[n2];
            if (typeof l3 === "undefined" && i3.l.get(n2)) {
              e3 = i3.l.get(n2);
            } else if (!i3.l.get(n2) && l3) {
              i3.l.set(n2, l3);
            }
            s.apply(this, [parsePropertyValue(e3, o2)]);
            e3 = o2 & 32 ? this[n2] : i3.$hostElement$[n2];
            setValue(this, n2, e3, r);
            return;
          }
          {
            if ((t & 1) === 0 || (r.U[n2][0] & 4096) === 0) {
              setValue(this, n2, e3, r);
              if (t & 1 && !i3.t) {
                i3.p.then(function() {
                  if (r.U[n2][0] & 4096 && i3.t[n2] !== i3.l.get(n2)) {
                    i3.t[n2] = e3;
                  }
                });
              }
              return;
            }
            var u = function() {
              var t2 = i3.t[n2];
              if (!i3.l.get(n2) && t2) {
                i3.l.set(n2, t2);
              }
              i3.t[n2] = parsePropertyValue(e3, o2);
              setValue(a2, n2, i3.t[n2], r);
            };
            if (i3.t) {
              u();
            } else {
              i3.p.then(function() {
                return u();
              });
            }
          }
        } });
      } else if (t & 1 && o2 & 64) {
        Object.defineProperty(a, n2, { value: function() {
          var e3 = [];
          for (var r2 = 0; r2 < arguments.length; r2++) {
            e3[r2] = arguments[r2];
          }
          var t2;
          var o3 = getHostRef(this);
          return (t2 = o3 == null ? void 0 : o3.u) == null ? void 0 : t2.then(function() {
            var r3;
            return (r3 = o3.t) == null ? void 0 : r3[n2].apply(r3, e3);
          });
        } });
      }
    });
    if (t & 1) {
      var l = /* @__PURE__ */ new Map();
      a.attributeChangedCallback = function(e2, t2, n2) {
        var o2 = this;
        plt.jmp(function() {
          var i2;
          var s = l.get(e2);
          if (o2.hasOwnProperty(s) && BUILD.lazyLoad) {
            n2 = o2[s];
            delete o2[s];
          } else if (a.hasOwnProperty(s) && typeof o2[s] === "number" && o2[s] == n2) {
            return;
          } else if (s == null) {
            var u = getHostRef(o2);
            var c = u == null ? void 0 : u.o;
            if (c && !(c & 8) && c & 128 && n2 !== t2) {
              var f = u.t;
              var v = (i2 = r.F) == null ? void 0 : i2[e2];
              v == null ? void 0 : v.forEach(function(r2) {
                if (f[r2] != null) {
                  f[r2].call(f, n2, t2, e2);
                }
              });
            }
            return;
          }
          var d = Object.getOwnPropertyDescriptor(a, s);
          n2 = n2 === null && typeof o2[s] === "boolean" ? false : n2;
          if (n2 !== o2[s] && (!d.get || !!d.set)) {
            o2[s] = n2;
          }
        });
      };
      e.observedAttributes = Array.from(new Set(__spreadArray(__spreadArray([], Object.keys((o = r.F) != null ? o : {}), true), i.filter(function(e2) {
        var r2 = e2[0], t2 = e2[1];
        return t2[0] & 15;
      }).map(function(e2) {
        var t2 = e2[0], n2 = e2[1];
        var o2;
        var a2 = n2[1] || t2;
        l.set(a2, t2);
        if (n2[0] & 512) {
          (o2 = r.I) == null ? void 0 : o2.push([t2, a2]);
        }
        return a2;
      }), true)));
    }
  }
  return e;
};
var initializeComponent = function(e, r, t, n) {
  return __awaiter(void 0, void 0, void 0, function() {
    var n2, o, a, i, l, s, u, c, f, v, d;
    return __generator(this, function(p) {
      switch (p.label) {
        case 0:
          if (!((r.o & 32) === 0)) return [3, 6];
          r.o |= 32;
          o = t.S;
          if (!o) return [3, 4];
          a = loadModule(t, r);
          if (!(a && "then" in a)) return [3, 2];
          i = uniqueTime();
          return [4, a];
        case 1:
          n2 = p.sent();
          i();
          return [3, 3];
        case 2:
          n2 = a;
          p.label = 3;
        case 3:
          if (!n2) {
            throw new Error('Constructor for "'.concat(t.h, "#").concat(r.V, '" was not found'));
          }
          if (!n2.isProxied) {
            {
              t.F = n2.watchers;
            }
            proxyComponent(n2, t, 2);
            n2.isProxied = true;
          }
          l = createTime("createInstance", t.h);
          {
            r.o |= 8;
          }
          try {
            new n2(r);
          } catch (r2) {
            consoleError(r2, e);
          }
          {
            r.o &= -9;
          }
          {
            r.o |= 128;
          }
          l();
          fireConnectedCallback(r.t, e);
          return [3, 5];
        case 4:
          n2 = e.constructor;
          s = e.localName;
          customElements.whenDefined(s).then(function() {
            return r.o |= 128;
          });
          p.label = 5;
        case 5:
          if (n2 && n2.style) {
            u = void 0;
            if (typeof n2.style === "string") {
              u = n2.style;
            } else if (typeof n2.style !== "string") {
              r.V = computeMode(e);
              if (r.V) {
                u = n2.style[r.V];
              }
            }
            c = getScopeId(t, r.V);
            if (!styles.has(c)) {
              f = createTime("registerStyles", t.h);
              registerStyle(c, u, !!(t.o & 1));
              f();
            }
          }
          p.label = 6;
        case 6:
          v = r.D;
          d = function() {
            return scheduleUpdate(r, true);
          };
          if (v && v["s-rc"]) {
            v["s-rc"].push(d);
          } else {
            d();
          }
          return [2];
      }
    });
  });
};
var fireConnectedCallback = function(e, r) {
  {
    safeCall(e, "connectedCallback", void 0, r);
  }
};
var connectedCallback = function(e) {
  if ((plt.o & 1) === 0) {
    var r = getHostRef(e);
    var t = r.i;
    var n = createTime("connectedCallback", t.h);
    if (!(r.o & 1)) {
      r.o |= 1;
      {
        if (t.o & (4 | 8)) {
          setContentReference(e);
        }
      }
      {
        var o = e;
        while (o = o.parentNode || o.host) {
          if (o["s-p"]) {
            attachToAncestor(r, r.D = o);
            break;
          }
        }
      }
      if (t.U) {
        Object.entries(t.U).map(function(r2) {
          var t2 = r2[0], n2 = r2[1][0];
          if (n2 & 31 && e.hasOwnProperty(t2)) {
            var o2 = e[t2];
            delete e[t2];
            e[t2] = o2;
          }
        });
      }
      {
        initializeComponent(e, r, t);
      }
    } else {
      addHostEventListeners(e, r, t.B);
      if (r == null ? void 0 : r.t) {
        fireConnectedCallback(r.t, e);
      } else if (r == null ? void 0 : r.p) {
        r.p.then(function() {
          return fireConnectedCallback(r.t, e);
        });
      }
    }
    n();
  }
};
var setContentReference = function(e) {
  if (!win.document) {
    return;
  }
  var r = e["s-cr"] = win.document.createComment("");
  r["s-cn"] = true;
  insertBefore(e, r, e.firstChild);
};
var disconnectInstance = function(e, r) {
  {
    safeCall(e, "disconnectedCallback", void 0, r || e);
  }
};
var disconnectedCallback = function(e) {
  return __awaiter(void 0, void 0, void 0, function() {
    var r;
    return __generator(this, function(t) {
      if ((plt.o & 1) === 0) {
        r = getHostRef(e);
        {
          if (r.q) {
            r.q.map(function(e2) {
              return e2();
            });
            r.q = void 0;
          }
        }
        if (r == null ? void 0 : r.t) {
          disconnectInstance(r.t, e);
        } else if (r == null ? void 0 : r.p) {
          r.p.then(function() {
            return disconnectInstance(r.t, e);
          });
        }
      }
      if (rootAppliedStyles.has(e)) {
        rootAppliedStyles.delete(e);
      }
      if (e.shadowRoot && rootAppliedStyles.has(e.shadowRoot)) {
        rootAppliedStyles.delete(e.shadowRoot);
      }
      return [2];
    });
  });
};
var bootstrapLazy = function(e, r) {
  if (r === void 0) {
    r = {};
  }
  var t;
  if (!win.document) {
    console.warn("Stencil: No document found. Skipping bootstrapping lazy components.");
    return;
  }
  var n = createTime();
  var o = [];
  var a = r.exclude || [];
  var i = win.customElements;
  var l = win.document.head;
  var s = l.querySelector("meta[charset]");
  var u = win.document.createElement("style");
  var c = [];
  var f;
  var v = true;
  Object.assign(plt, r);
  plt._ = new URL(r.resourcesUrl || "./", win.document.baseURI).href;
  var d = false;
  e.map(function(e2) {
    e2[1].map(function(r2) {
      var t2;
      var n2 = { o: r2[0], h: r2[1], U: r2[2], B: r2[3] };
      if (n2.o & 4) {
        d = true;
      }
      {
        n2.U = r2[2];
      }
      {
        n2.B = r2[3];
      }
      {
        n2.I = [];
      }
      {
        n2.F = (t2 = r2[4]) != null ? t2 : {};
      }
      var l2 = n2.h;
      var s2 = function(e3) {
        __extends(r3, e3);
        function r3(r4) {
          var t3 = e3.call(this, r4) || this;
          t3.hasRegisteredEventListeners = false;
          r4 = t3;
          registerHost(r4, n2);
          return t3;
        }
        r3.prototype.connectedCallback = function() {
          var e4 = this;
          var r4 = getHostRef(this);
          if (!this.hasRegisteredEventListeners) {
            this.hasRegisteredEventListeners = true;
            addHostEventListeners(this, r4, n2.B);
          }
          if (f) {
            clearTimeout(f);
            f = null;
          }
          if (v) {
            c.push(this);
          } else {
            plt.jmp(function() {
              return connectedCallback(e4);
            });
          }
        };
        r3.prototype.disconnectedCallback = function() {
          var e4 = this;
          plt.jmp(function() {
            return disconnectedCallback(e4);
          });
          plt.raf(function() {
            var r4;
            var t3 = getHostRef(e4);
            var n3 = c.findIndex(function(r5) {
              return r5 === e4;
            });
            if (n3 > -1) {
              c.splice(n3, 1);
            }
            if (((r4 = t3 == null ? void 0 : t3.O) == null ? void 0 : r4.L) instanceof Node && !t3.O.L.isConnected) {
              delete t3.O.L;
            }
          });
        };
        r3.prototype.componentOnReady = function() {
          return getHostRef(this).p;
        };
        return r3;
      }(HTMLElement);
      n2.S = e2[0];
      if (!a.includes(l2) && !i.get(l2)) {
        o.push(l2);
        i.define(l2, proxyComponent(s2, n2, 1));
      }
    });
  });
  if (o.length > 0) {
    if (d) {
      u.textContent += SLOT_FB_CSS;
    }
    {
      u.textContent += o.sort() + HYDRATED_CSS;
    }
    if (u.innerHTML.length) {
      u.setAttribute("data-styles", "");
      var p = (t = plt.A) != null ? t : queryNonceMetaTagContent(win.document);
      if (p != null) {
        u.setAttribute("nonce", p);
      }
      l.insertBefore(u, s ? s.nextSibling : l.firstChild);
    }
  }
  v = false;
  if (c.length) {
    c.map(function(e2) {
      return e2.connectedCallback();
    });
  } else {
    {
      plt.jmp(function() {
        return f = setTimeout(appDidLoad, 30);
      });
    }
  }
  n();
};
var addHostEventListeners = function(e, r, t, n) {
  if (t && win.document) {
    t.map(function(t2) {
      var n2 = t2[0], o = t2[1], a = t2[2];
      var i = getHostListenerTarget(win.document, e, n2);
      var l = hostListenerProxy(r, a);
      var s = hostListenerOpts(n2);
      plt.ael(i, o, l, s);
      (r.q = r.q || []).push(function() {
        return plt.rel(i, o, l, s);
      });
    });
  }
};
var hostListenerProxy = function(e, r) {
  return function(t) {
    var n;
    try {
      {
        if (e.o & 256) {
          (n = e.t) == null ? void 0 : n[r](t);
        } else {
          (e.$ = e.$ || []).push([r, t]);
        }
      }
    } catch (r2) {
      consoleError(r2, e.$hostElement$);
    }
  };
};
var getHostListenerTarget = function(e, r, t) {
  if (t & 4) {
    return e;
  }
  if (t & 8) {
    return win;
  }
  if (t & 16) {
    return e.body;
  }
  return r;
};
var hostListenerOpts = function(e) {
  return supportsListenerOptions ? { passive: (e & 1) !== 0, capture: (e & 2) !== 0 } : (e & 2) !== 0;
};

export {
  registerInstance,
  getAssetPath,
  h,
  Host,
  setMode,
  getElement,
  createEvent,
  forceUpdate,
  bootstrapLazy
};
//# sourceMappingURL=chunk-S4YNXM4D.js.map
