import {
  getDefaultExportFromCjs
} from "./chunk-IJMRG62Q.js";

// node_modules/alcance/dist/esm-es5/index-CfLUdh2X.js
var classnames = { exports: {} };
var hasRequiredClassnames;
function requireClassnames() {
  if (hasRequiredClassnames) return classnames.exports;
  hasRequiredClassnames = 1;
  (function(s) {
    (function() {
      var e = {}.hasOwnProperty;
      function a() {
        var s2 = [];
        for (var r = 0; r < arguments.length; r++) {
          var n = arguments[r];
          if (!n) continue;
          var i = typeof n;
          if (i === "string" || i === "number") {
            s2.push(n);
          } else if (Array.isArray(n)) {
            if (n.length) {
              var t = a.apply(null, n);
              if (t) {
                s2.push(t);
              }
            }
          } else if (i === "object") {
            if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) {
              s2.push(n.toString());
              continue;
            }
            for (var o in n) {
              if (e.call(n, o) && n[o]) {
                s2.push(o);
              }
            }
          }
        }
        return s2.join(" ");
      }
      if (s.exports) {
        a.default = a;
        s.exports = a;
      } else {
        window.classNames = a;
      }
    })();
  })(classnames);
  return classnames.exports;
}
var classnamesExports = requireClassnames();
var classNames = getDefaultExportFromCjs(classnamesExports);

export {
  classNames
};
/*! Bundled license information:

alcance/dist/esm-es5/index-CfLUdh2X.js:
  (*!
      Copyright (c) 2018 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
  *)
*/
