import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-header-action.entry.js
var alcHeaderActionCss = "alc-header-action{display:inline}.alc-header-action__menu-link-icon{margin-right:0.5rem}";
var AlcHeaderAction = function() {
  function t(t2) {
    var i = this;
    registerInstance(this, t2);
    this.alcSelect = createEvent(this, "alc-select", 7);
    this.slotNodes = null;
    this.iconName = "square";
    this.variant = "button";
    this.url = "";
    this.spaceKeyEvent = null;
    this.triggerEvent = function(t3) {
      i.alcSelect.emit(t3);
    };
  }
  t.prototype.handleKeyDownLink = function(t2) {
    if (t2.key === " ") {
      t2.preventDefault();
      var i = this.hostElement.querySelector("a");
      if (i) {
        this.spaceKeyEvent = t2;
        i.click();
      }
    }
  };
  t.prototype.handleClickLink = function(t2) {
    var i;
    var n = (i = this.spaceKeyEvent) !== null && i !== void 0 ? i : t2;
    this.spaceKeyEvent = null;
    this.triggerEvent({ originalEvent: n });
  };
  t.prototype.handleKeyDownButton = function(t2) {
    if (t2.key === " " || t2.key === "Enter") {
      t2.preventDefault();
      this.triggerEvent({ originalEvent: t2 });
    }
  };
  t.prototype.handleClickButton = function(t2) {
    t2.preventDefault();
    this.triggerEvent({ originalEvent: t2 });
  };
  t.prototype.handleAlcSelect = function(t2) {
    t2.stopPropagation();
    this.triggerEvent({ originalEvent: t2.detail.originalEvent });
  };
  t.prototype.componentDidLoad = function() {
    this.slotNodes = this.slot.assignedNodes();
  };
  t.prototype.componentDidRender = function() {
    var t2, i, n;
    logger.debug("alc-header-action did render", this.slotNodes);
    (t2 = this.slotNodes) !== null && t2 !== void 0 ? t2 : this.slotNodes = (i = this.slot) === null || i === void 0 ? void 0 : i.assignedNodes();
    var e = { button: this.buttonContainer, link: this.linkContainer, "menu-item": this.menuItemContainer, "menu-link": this.menuLinkContainer };
    var s = e[this.variant];
    var a = (n = this.slotNodes) === null || n === void 0 ? void 0 : n[0];
    if (s && a && !s.contains(a)) {
      s.appendChild(a);
    }
  };
  t.prototype.render = function() {
    var t2 = this;
    var i;
    var n = { button: this.renderButton.bind(this), link: this.renderLink.bind(this), "menu-item": this.renderMenuItem.bind(this), "menu-link": this.renderMenuLink.bind(this) };
    var e = (i = n[this.variant]) === null || i === void 0 ? void 0 : i.call(n);
    return h(Host, { key: "d02313f6b6c7bc5a94fabdd43f96920b1fbdc459" }, h("slot", { key: "a507bd91aef614b15bdc168e8e0c2335b5baa360", ref: function(i2) {
      return t2.slot = i2;
    } }), e);
  };
  t.prototype.renderButton = function() {
    var t2 = this;
    return h("button", { class: "alc-header-button", onClick: this.handleClickButton.bind(this), onKeyDown: this.handleKeyDownButton.bind(this) }, h("alc-icon", { icon: this.iconName, label: "", class: "alc-header-button__icon" }), h("span", { class: "alc-header-button__label", ref: function(i) {
      return t2.buttonContainer = i;
    } }));
  };
  t.prototype.renderLink = function() {
    var t2 = this;
    return h("a", { href: this.url, class: "alc-header-button", onClick: this.handleClickLink.bind(this), onKeyDown: this.handleKeyDownLink.bind(this) }, h("alc-icon", { icon: this.iconName, label: "", class: "alc-header-button__icon" }), h("span", { class: "alc-header-button__label", ref: function(i) {
      return t2.linkContainer = i;
    } }));
  };
  t.prototype.renderMenuItem = function() {
    var t2 = this;
    return h("alc-menu-item", { "onAlc-select": this.handleAlcSelect.bind(this) }, h("alc-icon", { slot: "prefix", icon: this.iconName, label: "" }), h("span", { ref: function(i) {
      return t2.menuItemContainer = i;
    } }));
  };
  t.prototype.renderMenuLink = function() {
    var t2 = this;
    return h("alc-menu-link", { "onAlc-select": this.handleAlcSelect.bind(this) }, h("a", { href: this.url, ref: function(i) {
      return t2.menuLinkContainer = i;
    } }, h("alc-icon", { icon: this.iconName, label: "", class: "alc-header-action__menu-link-icon" })));
  };
  Object.defineProperty(t.prototype, "hostElement", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  return t;
}();
AlcHeaderAction.style = alcHeaderActionCss;
export {
  AlcHeaderAction as alc_header_action
};
