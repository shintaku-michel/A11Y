import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  Host,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-breadcrumb-item.entry.js
var alcBreadcrumbItemCss = '[data-alc-theme="dark"] alc-breadcrumb-item{--outline-color:var(--alc-color-action-30)}[data-alc-theme="light"] alc-breadcrumb-item{--outline-color:var(--alc-color-action-60)}.alc-breadcrumb-item{display:-ms-flexbox;display:flex;-ms-flex-align:baseline;align-items:baseline}.alc-breadcrumb-item__link{display:-ms-flexbox;display:flex;-ms-flex-align:baseline;align-items:baseline;color:var(--alc-color-text-secondary)}.alc-breadcrumb-item__icon{margin-right:0.25rem}.alc-breadcrumb-item__link a{border-radius:0.125rem;outline-color:var(--outline-color)}.alc-breadcrumb-item__separator{margin-left:0.25rem;margin-right:0.25rem}';
var AlcBreadcrumbItem = function() {
  function e(e2) {
    registerInstance(this, e2);
    this.url = null;
    this.label = null;
    this.iconName = null;
    this.isCurrentPage = false;
  }
  e.prototype.componentWillLoad = function() {
    this.isCurrentPage = !!this.el.ariaCurrent;
  };
  e.prototype.onAriaLabelChange = function(e2) {
    this.isCurrentPage = e2 === null ? false : true;
  };
  e.prototype.render = function() {
    return h(Host, { key: "eb3336d1010473107ba48af621865847c669b7e0", role: "listitem" }, h("div", { key: "843d998744324ad3e0e4b38c07db32dda9fff05a", class: "alc-breadcrumb-item" }, h("div", { key: "5a271f68cc38681bab776a0b8ceda5ce53f859f3", class: { "alc-breadcrumb-item__link": true, "alc-link": !this.isCurrentPage } }, this.iconName && h("alc-icon", Object.assign({ key: "2b47b53113ed0e955b4c9b022a9aa7a508a54e02", label: "", name: this.iconName, class: "alc-breadcrumb-item__icon", "aria-hidden": "true" }, testAttributes())), this.url ? h("a", Object.assign({ href: this.url }, testAttributes()), this.label) : h("slot", null)), !this.isCurrentPage && h("span", { key: "4d72144f8495b0da57230a7c3af5d403f127b9e8", class: "alc-breadcrumb-item__separator" }, "/")));
  };
  Object.defineProperty(e.prototype, "el", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  Object.defineProperty(e, "watchers", { get: function() {
    return { "aria-current": ["onAriaLabelChange"] };
  }, enumerable: false, configurable: true });
  return e;
}();
AlcBreadcrumbItem.style = alcBreadcrumbItemCss;
export {
  AlcBreadcrumbItem as alc_breadcrumb_item
};
