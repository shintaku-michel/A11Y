import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  getAppliedTheme,
  loadUserPreference,
  saveUserPreference,
  setAppliedTheme
} from "./chunk-IGSHYZLV.js";
import {
  getUniqueId
} from "./chunk-6E7TTPYM.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-expander_2.entry.js
var __awaiter = function(e, t, a, r) {
  function n(e2) {
    return e2 instanceof a ? e2 : new a(function(t2) {
      t2(e2);
    });
  }
  return new (a || (a = Promise))(function(a2, s) {
    function i(e2) {
      try {
        c(r.next(e2));
      } catch (e3) {
        s(e3);
      }
    }
    function o(e2) {
      try {
        c(r["throw"](e2));
      } catch (e3) {
        s(e3);
      }
    }
    function c(e2) {
      e2.done ? a2(e2.value) : n(e2.value).then(i, o);
    }
    c((r = r.apply(e, t || [])).next());
  });
};
var __generator = function(e, t) {
  var a = { label: 0, sent: function() {
    if (s[0] & 1) throw s[1];
    return s[1];
  }, trys: [], ops: [] }, r, n, s, i;
  return i = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol === "function" && (i[Symbol.iterator] = function() {
    return this;
  }), i;
  function o(e2) {
    return function(t2) {
      return c([e2, t2]);
    };
  }
  function c(o2) {
    if (r) throw new TypeError("Generator is already executing.");
    while (i && (i = 0, o2[0] && (a = 0)), a) try {
      if (r = 1, n && (s = o2[0] & 2 ? n["return"] : o2[0] ? n["throw"] || ((s = n["return"]) && s.call(n), 0) : n.next) && !(s = s.call(n, o2[1])).done) return s;
      if (n = 0, s) o2 = [o2[0] & 2, s.value];
      switch (o2[0]) {
        case 0:
        case 1:
          s = o2;
          break;
        case 4:
          a.label++;
          return { value: o2[1], done: false };
        case 5:
          a.label++;
          n = o2[1];
          o2 = [0];
          continue;
        case 7:
          o2 = a.ops.pop();
          a.trys.pop();
          continue;
        default:
          if (!(s = a.trys, s = s.length > 0 && s[s.length - 1]) && (o2[0] === 6 || o2[0] === 2)) {
            a = 0;
            continue;
          }
          if (o2[0] === 3 && (!s || o2[1] > s[0] && o2[1] < s[3])) {
            a.label = o2[1];
            break;
          }
          if (o2[0] === 6 && a.label < s[1]) {
            a.label = s[1];
            s = o2;
            break;
          }
          if (s && a.label < s[2]) {
            a.label = s[2];
            a.ops.push(o2);
            break;
          }
          if (s[2]) a.ops.pop();
          a.trys.pop();
          continue;
      }
      o2 = t.call(e, a);
    } catch (e2) {
      o2 = [6, e2];
      n = 0;
    } finally {
      r = s = 0;
    }
    if (o2[0] & 5) throw o2[1];
    return { value: o2[0] ? o2[1] : void 0, done: true };
  }
};
var alcExpanderCss = '.alc-expander{margin:0px;width:100%;border-style:none;background-color:transparent;padding:0px}.alc-expander__summary{display:-ms-flexbox;display:flex;width:100%;cursor:pointer;list-style-type:none;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;border-style:none;background-color:transparent;padding:0.5rem;--tw-shadow:0px 4px 4px 0px rgba(0,0,0,0.10);--tw-shadow-colored:0px 4px 4px 0px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.alc-expander__summary:is([data-alc-theme="dark"] *){--tw-shadow:0px 4px 4px 0px rgba(255,255,255,0.20);--tw-shadow-colored:0px 4px 4px 0px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.alc-expander__summary--center{-ms-flex-pack:center;justify-content:center}.alc-expander__label-container{margin-right:auto}.alc-expander__chevron{height:1.5rem;-ms-flex-negative:0;flex-shrink:0}.alc-expander__content{width:100%;background-color:transparent;--tw-shadow:0px 4px 4px 0px rgba(0,0,0,0.10);--tw-shadow-colored:0px 4px 4px 0px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.alc-expander__content:is([data-alc-theme="dark"] *){--tw-shadow:0px 4px 4px 0px rgba(255,255,255,0.20);--tw-shadow-colored:0px 4px 4px 0px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}';
var AlcExpander = function() {
  function e(e2) {
    var t = this;
    registerInstance(this, e2);
    this.alcShow = createEvent(this, "alc-show", 7);
    this.alcAfterShow = createEvent(this, "alc-after-show", 7);
    this.alcHide = createEvent(this, "alc-hide", 7);
    this.alcAfterHide = createEvent(this, "alc-after-hide", 7);
    this.expanderId = getUniqueId();
    this.open = false;
    this.hideLabel = false;
    this.isOpen = this.open;
    this.toggleExpander = function(e3) {
      return __awaiter(t, void 0, void 0, function() {
        return __generator(this, function(t2) {
          switch (t2.label) {
            case 0:
              e3.preventDefault();
              if (!!this.isOpen) return [3, 2];
              return [4, this.show()];
            case 1:
              t2.sent();
              return [3, 4];
            case 2:
              return [4, this.hide()];
            case 3:
              t2.sent();
              t2.label = 4;
            case 4:
              return [2];
          }
        });
      });
    };
  }
  e.prototype.syncOpen = function(e2) {
    this.isOpen = e2;
  };
  e.prototype.componentWillLoad = function() {
    this.isOpen = this.open;
  };
  e.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2;
      return __generator(this, function(t) {
        if (!this.isOpen) {
          e2 = this.alcShow.emit();
          if (e2.defaultPrevented) return [2];
          this.isOpen = true;
          this.open = true;
          this.alcAfterShow.emit();
        }
        return [2];
      });
    });
  };
  e.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2;
      return __generator(this, function(t) {
        if (this.isOpen) {
          e2 = this.alcHide.emit();
          if (e2.defaultPrevented) return [2];
          this.isOpen = false;
          this.open = false;
          this.alcAfterHide.emit();
        }
        return [2];
      });
    });
  };
  e.prototype.renderChevron = function() {
    var e2 = this.isOpen ? "chevron-up" : "chevron-down";
    return h("alc-icon", { name: e2, label: "", class: "alc-expander__chevron" });
  };
  e.prototype.render = function() {
    var e2;
    (e2 = this.label) !== null && e2 !== void 0 ? e2 : logger.report("label", this.element.tagName.toLowerCase(), this.element);
    var t = h("div", { key: "f9f7843360293de8ea12c3115ee58c7a11f4ba80", class: { "alc-expander__label-container": true, "sr-only": this.hideLabel } }, h("slot", { key: "a74be46734382e662851548b60d8fff2e094d9a7", name: "label" }, this.label));
    var a = { "alc-expander__summary": true, "alc-expander__summary--center": this.hideLabel };
    return h(Host, { key: "d24d4d2eb204875d5b8d83c9bb08ea98da175ee5" }, h("details", { key: "f8058daa11fd2bb53b025075a9cf53844bd829cf", id: this.expanderId, class: { "alc-expander": true, "is-open": this.isOpen }, open: this.isOpen }, h("summary", { key: "6555336775d80fffb826d5a77e63998d926188ea", class: a, onClick: this.toggleExpander }, t, this.renderChevron()), h("div", { key: "5762d27fb7c7c3983c577543dc291546d27bdc45", class: "alc-expander__content" }, h("slot", { key: "5e8ee74e265c53e67f15f42ef4166f2797726035" }))));
  };
  Object.defineProperty(e.prototype, "element", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  Object.defineProperty(e, "watchers", { get: function() {
    return { open: ["syncOpen"] };
  }, enumerable: false, configurable: true });
  return e;
}();
AlcExpander.style = alcExpanderCss;
var alcMenuItemThemeCss = "";
var AlcMenuItemTheme = function() {
  function e(e2) {
    registerInstance(this, e2);
    this.checked = false;
    this.DARK_THEME = "dark";
    this.LIGHT_THEME = "light";
  }
  e.prototype.handleClick = function() {
    this.toggleTheme();
  };
  e.prototype.toggleTheme = function() {
    this.checked = !this.checked;
    var e2 = this.checked ? this.DARK_THEME : this.LIGHT_THEME;
    setAppliedTheme(e2);
    saveUserPreference(e2);
  };
  e.prototype.componentWillLoad = function() {
    var e2 = loadUserPreference();
    switch (e2) {
      case this.LIGHT_THEME:
        this.checked = false;
        break;
      case this.DARK_THEME:
        this.checked = true;
        break;
      default:
        this.checked = getAppliedTheme("system") === this.DARK_THEME;
        break;
    }
  };
  e.prototype.render = function() {
    return h(Host, { key: "788a260b2aeae1d875d478e3ad990fb3cef50866" }, h("alc-menu-item", { key: "4b333a7fc81b036be43319a6411f363e13d6d04e", type: "checkbox", checked: this.checked }, h("alc-icon", { key: "6723be08ad75ec0f9e9fe4736d8befb3fbfba68a", icon: "moon", label: "", slot: "prefix" }), "Ver no tema escuro"));
  };
  return e;
}();
AlcMenuItemTheme.style = alcMenuItemThemeCss;
export {
  AlcExpander as alc_expander,
  AlcMenuItemTheme as alc_menu_item_theme
};
//# sourceMappingURL=alc-expander_2.entry-DPMUAA4R.js.map
