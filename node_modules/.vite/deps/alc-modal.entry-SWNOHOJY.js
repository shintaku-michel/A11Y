import {
  lockBodyScroll,
  unlockBodyScroll
} from "./chunk-LJRJFVT3.js";
import {
  focusFirstElement,
  getFocusableElements,
  handleKeyDown
} from "./chunk-WGMPJW27.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  getUniqueId
} from "./chunk-6E7TTPYM.js";
import {
  Host,
  createEvent,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-modal.entry.js
var __awaiter = function(a, e, t, i) {
  function l(a2) {
    return a2 instanceof t ? a2 : new t(function(e2) {
      e2(a2);
    });
  }
  return new (t || (t = Promise))(function(t2, d) {
    function c(a2) {
      try {
        o(i.next(a2));
      } catch (a3) {
        d(a3);
      }
    }
    function r(a2) {
      try {
        o(i["throw"](a2));
      } catch (a3) {
        d(a3);
      }
    }
    function o(a2) {
      a2.done ? t2(a2.value) : l(a2.value).then(c, r);
    }
    o((i = i.apply(a, e || [])).next());
  });
};
var __generator = function(a, e) {
  var t = { label: 0, sent: function() {
    if (d[0] & 1) throw d[1];
    return d[1];
  }, trys: [], ops: [] }, i, l, d, c;
  return c = { next: r(0), throw: r(1), return: r(2) }, typeof Symbol === "function" && (c[Symbol.iterator] = function() {
    return this;
  }), c;
  function r(a2) {
    return function(e2) {
      return o([a2, e2]);
    };
  }
  function o(r2) {
    if (i) throw new TypeError("Generator is already executing.");
    while (c && (c = 0, r2[0] && (t = 0)), t) try {
      if (i = 1, l && (d = r2[0] & 2 ? l["return"] : r2[0] ? l["throw"] || ((d = l["return"]) && d.call(l), 0) : l.next) && !(d = d.call(l, r2[1])).done) return d;
      if (l = 0, d) r2 = [r2[0] & 2, d.value];
      switch (r2[0]) {
        case 0:
        case 1:
          d = r2;
          break;
        case 4:
          t.label++;
          return { value: r2[1], done: false };
        case 5:
          t.label++;
          l = r2[1];
          r2 = [0];
          continue;
        case 7:
          r2 = t.ops.pop();
          t.trys.pop();
          continue;
        default:
          if (!(d = t.trys, d = d.length > 0 && d[d.length - 1]) && (r2[0] === 6 || r2[0] === 2)) {
            t = 0;
            continue;
          }
          if (r2[0] === 3 && (!d || r2[1] > d[0] && r2[1] < d[3])) {
            t.label = r2[1];
            break;
          }
          if (r2[0] === 6 && t.label < d[1]) {
            t.label = d[1];
            d = r2;
            break;
          }
          if (d && t.label < d[2]) {
            t.label = d[2];
            t.ops.push(r2);
            break;
          }
          if (d[2]) t.ops.pop();
          t.trys.pop();
          continue;
      }
      r2 = e.call(a, t);
    } catch (a2) {
      r2 = [6, a2];
      l = 0;
    } finally {
      i = d = 0;
    }
    if (r2[0] & 5) throw r2[1];
    return { value: r2[0] ? r2[1] : void 0, done: true };
  }
};
var alcModalBaseCss = ".alc-modal__overlay{position:fixed;top:0px;left:0px;z-index:10;height:100vh;width:100vw;padding:0.5rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.alc-modal__card{border-width:2px;--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));width:100%}@media (min-width: 768px){.alc-modal__card{max-width:32rem}}.alc-modal__header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.alc-modal__close{height:2rem;width:2rem;font-size:1.125rem;line-height:1.5rem}";
var themeAlcModalCss = '[data-alc-theme="light"] alc-modal{--bg-color-overlay:#2d2e2f66;--border-color:#8d9297}[data-alc-theme="dark"] alc-modal{--bg-color-overlay:#565c6566;--border-color:#565c65}alc-modal{--bg-color-card:var(--alc-color-surface-primary);--bg-color-header:var(--alc-color-layer-b)}.alc-modal__base{position:fixed;top:0px;left:0px;z-index:1050;height:100%;width:100%;}@media (min-width: 576px){.alc-modal__base{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}}.alc-modal__overlay{position:fixed;top:0px;left:0px;height:100%;width:100%;background-color:var(--bg-color-overlay)}.alc-modal__card{overflow:hidden;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem;border-top-width:1px;border-color:var(--border-color);background-color:var(--bg-color-card);}@media (min-width: 576px){.alc-modal__card{border-width:1px}}.alc-modal__card{max-height:90%;width:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;position:fixed;bottom:0px;left:0px;}@media (min-width: 576px){.alc-modal__card{position:relative}}.alc-modal__card--sm{}@media (min-width: 576px){.alc-modal__card--sm{max-height:72%;width:66%}}.alc-modal__card--sm{}@media (min-width: 768px){.alc-modal__card--sm{width:50%}}.alc-modal__card--sm{}@media (min-width: 992px){.alc-modal__card--sm{width:40%}}.alc-modal__card--sm{}@media (min-width: 1200px){.alc-modal__card--sm{width:33%}}.alc-modal__card--sm{}@media (min-width: 1400px){.alc-modal__card--sm{width:28%}}.alc-modal__card--md{}@media (min-width: 576px){.alc-modal__card--md{max-height:84%;width:96%}}.alc-modal__card--md{}@media (min-width: 768px){.alc-modal__card--md{width:80%}}.alc-modal__card--md{}@media (min-width: 992px){.alc-modal__card--md{width:56%}}.alc-modal__card--md{}@media (min-width: 1200px){.alc-modal__card--md{width:52%}}.alc-modal__card--md{}@media (min-width: 1400px){.alc-modal__card--md{width:50%}}.alc-modal__card--lg{}@media (min-width: 576px){.alc-modal__card--lg{max-height:96%;width:96%}}.alc-modal__card--lg{}@media (min-width: 768px){.alc-modal__card--lg{width:96%}}.alc-modal__card--lg{}@media (min-width: 992px){.alc-modal__card--lg{width:78%}}.alc-modal__card--lg{}@media (min-width: 1200px){.alc-modal__card--lg{width:72%}}.alc-modal__card--lg{}@media (min-width: 1400px){.alc-modal__card--lg{width:70%}}.alc-modal__card--xl{}@media (min-width: 576px){.alc-modal__card--xl{max-height:96%;width:96%}}.alc-modal__card--xl{}@media (min-width: 768px){.alc-modal__card--xl{width:96%}}.alc-modal__card--xl{}@media (min-width: 992px){.alc-modal__card--xl{width:96%}}.alc-modal__card--xl{}@media (min-width: 1200px){.alc-modal__card--xl{width:98%}}.alc-modal__card--xl{}@media (min-width: 1400px){.alc-modal__card--xl{width:98%}}.alc-modal__header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;background-color:var(--bg-color-header);padding:1rem}.alc-modal__title{margin:0px}.alc-modal__content{overflow-y:auto;padding:1rem}.alc-modal__footer{border-top-width:1px;border-top-color:var(--border-color);padding:1rem;text-align:right}';
var AlcModal = function() {
  function a(a2) {
    var e = this;
    registerInstance(this, a2);
    this.alcAfterShow = createEvent(this, "alc-after-show", 6);
    this.alcHide = createEvent(this, "alc-hide", 7);
    this.alcAfterHide = createEvent(this, "alc-after-hide", 6);
    this.alcFocusAfterHide = createEvent(this, "alc-focus-after-hide", 7);
    this.idModalTitle = null;
    this.triggerElement = null;
    this.open = false;
    this.headerText = "";
    this.size = "md";
    this.preventOverlayClose = false;
    this.getModalRef = function(a3) {
      return e.modalRef = a3;
    };
    this.handleFocusWhenCloseModal = function() {
      var a3 = ["BODY", "DOCUMENT"];
      var t = !!e.triggerElement && document.body.contains(e.triggerElement);
      if (t && !a3.includes(e.triggerElement.tagName)) {
        e.triggerElement.focus();
      }
    };
  }
  a.prototype.watchOpen = function(a2) {
    if (a2) {
      this.alcAfterShow.emit();
      this.triggerElement = document.activeElement;
      lockBodyScroll();
    } else {
      this.alcAfterHide.emit();
      var e = this.alcFocusAfterHide.emit().defaultPrevented;
      if (!e) {
        this.handleFocusWhenCloseModal();
        unlockBodyScroll();
      }
    }
  };
  a.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(a2) {
        if (this.open) {
          return [2, false];
        }
        this.open = true;
        return [2, true];
      });
    });
  };
  a.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(a2) {
        if (!this.open) {
          return [2, false];
        }
        this.open = false;
        return [2, true];
      });
    });
  };
  a.prototype.handleKeyDown = function(a2) {
    if (!this.open) {
      return;
    }
    if (a2.defaultPrevented) {
      return;
    }
    if (a2.key === "Escape") {
      a2.preventDefault();
      this.handleHideByUser("keyboard");
      return;
    }
    if (a2.key !== "Tab") return;
    var e = getFocusableElements(this.modalRef);
    handleKeyDown(a2, e);
  };
  a.prototype.componentWillLoad = function() {
    this.idModalTitle = getUniqueId();
  };
  a.prototype.componentDidRender = function() {
    var a2 = getFocusableElements(this.modalRef);
    if (this.open) {
      focusFirstElement(a2);
    }
  };
  a.prototype.connectedCallback = function() {
    if (this.open) {
      lockBodyScroll();
    }
  };
  a.prototype.disconnectedCallback = function() {
    if (this.open) {
      unlockBodyScroll();
    }
  };
  a.prototype.handleOutsideClick = function(a2) {
    var e = a2.target === this.overlayRef;
    if (e) {
      this.handleHideByUser("overlay");
    }
  };
  a.prototype.handleHideByUser = function(a2) {
    if (a2 === "overlay" && this.preventOverlayClose) return;
    var e = this.alcHide.emit({ from: a2 }).defaultPrevented;
    if (!e) {
      this.open = false;
    }
  };
  a.prototype.render = function() {
    var a2 = this;
    return h(Host, { key: "8df9b10e800caa99c53028e32433128b72da1497", style: { display: this.open ? "block" : "none" } }, h("div", { key: "9f19c7aa8381b24d765bee25ef7451140fe4fe66", class: "alc-modal__base" }, h("div", Object.assign({ key: "639800fce03bf27e4648c4ca8d8bf7ebcb8db5e2", class: "alc-modal__overlay", onClick: function(e) {
      return a2.handleOutsideClick(e);
    } }, testAttributes(), { ref: function(e) {
      return a2.overlayRef = e;
    } })), h("div", { key: "de7683718c16ad92d2e2a203c4de14306cfd35ef", class: { "alc-modal__card": true, "alc-modal__card--sm": this.size === "sm", "alc-modal__card--md": this.size === "md", "alc-modal__card--lg": this.size === "lg", "alc-modal__card--xl": this.size === "xl" }, role: "dialog", "aria-modal": "true", "aria-labelledby": this.idModalTitle, ref: this.getModalRef }, h("div", { key: "b8f6dd643bb6ddb909cd5c101ca25d53b0e253dd", class: "alc-modal__header" }, this.headerText ? h("h2", { id: this.idModalTitle, class: "alc-modal__title" }, this.headerText) : h("slot", { name: "header" }), h("button", Object.assign({ key: "9bb4fe3fecc1ae3be0efd1bbd862696cbe55a1e7", type: "button", class: "alc-button alc-button-rounded", onClick: function() {
      return a2.handleHideByUser("header-button");
    } }, testAttributes()), h("alc-icon", Object.assign({ key: "43e419c1b7badb46c95a5e2ae5789edbd7c782b2", name: "x-lg", label: "Fechar Modal" }, testAttributes())))), h("div", { key: "3ae84356e5d7842d24d6a4d166dae9b99ccc756b", class: "alc-modal__content" }, h("slot", { key: "91e0a806036b3b5f0f7179d227912d96c707cf0b" })), h("div", { key: "3b567a11e954c34183af1628b71d16322b0c7210", class: "alc-modal__footer" }, h("slot", { key: "5e3678855e574f4885aea217b4ab0519d6d14a4a", name: "footer" }, h("button", Object.assign({ key: "68a0b787119f1662e9f03a02c536850ce8244d5e", type: "button", class: "alc-button alc-button-primary", onClick: function() {
      return a2.handleHideByUser("footer-button");
    } }, testAttributes()), "Fechar"))))));
  };
  Object.defineProperty(a, "watchers", { get: function() {
    return { open: ["watchOpen"] };
  }, enumerable: false, configurable: true });
  return a;
}();
AlcModal.style = { base: alcModalBaseCss, theme: themeAlcModalCss };
export {
  AlcModal as alc_modal
};
