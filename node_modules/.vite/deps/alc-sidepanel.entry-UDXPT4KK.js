import {
  screens
} from "./chunk-WJTQCJDD.js";
import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-sidepanel.entry.js
var __awaiter = function(t, e, i, n) {
  function s(t2) {
    return t2 instanceof i ? t2 : new i(function(e2) {
      e2(t2);
    });
  }
  return new (i || (i = Promise))(function(i2, a) {
    function r(t2) {
      try {
        c(n.next(t2));
      } catch (t3) {
        a(t3);
      }
    }
    function o(t2) {
      try {
        c(n["throw"](t2));
      } catch (t3) {
        a(t3);
      }
    }
    function c(t2) {
      t2.done ? i2(t2.value) : s(t2.value).then(r, o);
    }
    c((n = n.apply(t, e || [])).next());
  });
};
var __generator = function(t, e) {
  var i = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, n, s, a, r;
  return r = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol === "function" && (r[Symbol.iterator] = function() {
    return this;
  }), r;
  function o(t2) {
    return function(e2) {
      return c([t2, e2]);
    };
  }
  function c(o2) {
    if (n) throw new TypeError("Generator is already executing.");
    while (r && (r = 0, o2[0] && (i = 0)), i) try {
      if (n = 1, s && (a = o2[0] & 2 ? s["return"] : o2[0] ? s["throw"] || ((a = s["return"]) && a.call(s), 0) : s.next) && !(a = a.call(s, o2[1])).done) return a;
      if (s = 0, a) o2 = [o2[0] & 2, a.value];
      switch (o2[0]) {
        case 0:
        case 1:
          a = o2;
          break;
        case 4:
          i.label++;
          return { value: o2[1], done: false };
        case 5:
          i.label++;
          s = o2[1];
          o2 = [0];
          continue;
        case 7:
          o2 = i.ops.pop();
          i.trys.pop();
          continue;
        default:
          if (!(a = i.trys, a = a.length > 0 && a[a.length - 1]) && (o2[0] === 6 || o2[0] === 2)) {
            i = 0;
            continue;
          }
          if (o2[0] === 3 && (!a || o2[1] > a[0] && o2[1] < a[3])) {
            i.label = o2[1];
            break;
          }
          if (o2[0] === 6 && i.label < a[1]) {
            i.label = a[1];
            a = o2;
            break;
          }
          if (a && i.label < a[2]) {
            i.label = a[2];
            i.ops.push(o2);
            break;
          }
          if (a[2]) i.ops.pop();
          i.trys.pop();
          continue;
      }
      o2 = e.call(t, i);
    } catch (t2) {
      o2 = [6, t2];
      s = 0;
    } finally {
      n = a = 0;
    }
    if (o2[0] & 5) throw o2[1];
    return { value: o2[0] ? o2[1] : void 0, done: true };
  }
};
var alcSidepanelCss = ':host{display:block}alc-sidepanel{--_offset:calc(var(--offset, 80) * 1px);--height:calc(100vh - var(--_offset))}@media (min-width: 768px){.alc-sidepanel__mobile-container{display:none}}.alc-sidepanel__desktop-container{position:-webkit-sticky;position:sticky;top:var(--_offset);z-index:1020;display:none}@media (min-width: 768px){.alc-sidepanel__desktop-container{display:block}}.alc-sidepanel__desktop-slot{display:none;overflow-y:auto;--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.alc-sidepanel__desktop-slot:is([data-alc-theme="dark"] *){--tw-bg-opacity:1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.alc-sidepanel__desktop-slot{height:var(--height)}.alc-sidepanel__desktop-slot.is-open{display:block;width:18rem;--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}';
var MOBILE_BREAKPOINT = Number(screens.md.split("px")[0]);
var DEFAULT_STATE = { visible: true };
var AlcSidepanel = function() {
  function t(t2) {
    var e = this;
    registerInstance(this, t2);
    this.alcStateChange = createEvent(this, "alc-state-change", 6);
    this.alcStateRequest = createEvent(this, "alc-state-request", 6);
    this.isMobile = false;
    this.drawer = null;
    this.slotContainer = null;
    this.mobileSlot = null;
    this.desktopSlot = null;
    this.slotContent = null;
    this.state = DEFAULT_STATE;
    this.visible = true;
    this.renderMobile = function() {
      return [h("button", Object.assign({ class: "alc-button alc-button-rounded absolute right-2 -mt-[3.25rem] text-white", onClick: function() {
        return e.drawer.show();
      } }, testAttributes(), { "data-alc-sidepanel-drawer-button": true }), h("alc-icon", { name: "list", label: "Abrir" })), h("alc-drawer", { "onSl-show": function() {
        return e.visible = true;
      }, "onSl-hide": function() {
        return e.visible = false;
      }, ref: function(t3) {
        return e.drawer = t3;
      } }, h("div", { ref: function(t3) {
        return e.mobileSlot = t3;
      } }))];
    };
  }
  t.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(t2) {
        this.visible = true;
        this.state.visible = this.visible;
        if (this.isMobile) {
          return [2, this.drawer.show()];
        } else {
          this.alcStateChange.emit({ state: this.state });
        }
        return [2];
      });
    });
  };
  t.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(t2) {
        this.visible = false;
        this.state.visible = this.visible;
        if (this.isMobile) {
          return [2, this.drawer.hide()];
        } else {
          this.alcStateChange.emit({ state: this.state });
        }
        return [2];
      });
    });
  };
  t.prototype.handleResize = function() {
    this.isMobile = window.innerWidth < MOBILE_BREAKPOINT;
  };
  t.prototype.componentWillLoad = function() {
    var t2 = { state: this.state };
    this.handleResize();
    this.state.visible = this.visible;
    this.alcStateRequest.emit(t2);
    this.state = Object.assign(Object.assign({}, DEFAULT_STATE), t2.state);
    this.visible = this.state.visible;
  };
  t.prototype.componentDidRender = function() {
    var t2 = this;
    var e, i;
    if ((e = this.slotContainer.children) === null || e === void 0 ? void 0 : e.length) {
      this.slotContent = this.slotContainer.children[0];
    }
    if (this.isMobile) {
      this.mobileSlot.appendChild(this.slotContent);
    } else {
      this.desktopSlot.appendChild(this.slotContent);
    }
    this.setOffset();
    var n = document.querySelector("[data-alc-top]");
    (i = this.ro) === null || i === void 0 ? void 0 : i.disconnect();
    this.ro = new ResizeObserver(function() {
      t2.setOffset();
    });
    this.ro.observe(n);
  };
  t.prototype.disconnectedCallback = function() {
    var t2;
    (t2 = this.ro) === null || t2 === void 0 ? void 0 : t2.disconnect();
  };
  t.prototype.render = function() {
    var t2 = this;
    console.debug("render menu container");
    if (!this.isMobile && this.visible) {
      document.querySelector("html").classList.add("alc-sidepanel-visible");
    } else {
      document.querySelector("html").classList.remove("alc-sidepanel-visible");
    }
    return h(Host, { key: "faeacb3a035ddcb2f77951759e3fabf13f055aa9", class: "alc-sidepanel" }, h("div", { key: "1b168abcc82fbad96e26743ad6ef750083e0aac8", ref: function(e) {
      return t2.slotContainer = e;
    } }, h("slot", { key: "6d8bd910fe70f5c65f122c7d9f6cbc951cd8ed4c" })), h("div", { key: "677d9bcdb77d68b05dbeef0933aca74f3f4fb929", class: { "alc-sidepanel__mobile-container": true } }, this.renderMobile()), h("div", { key: "f5efb3e8a82ed58eabeca33939da1f8ae65eb6c5", class: { "alc-sidepanel__desktop-container": true } }, h("button", Object.assign({ key: "0c15d78e6ba75a566173b4cb55e3e41dc3585588", type: "button", class: "alc-button alc-button-rounded fixed left-2 -mt-[3.75rem] text-white z-[1020] focus-visible:outline-2 focus-visible:outline-white", onClick: function() {
      return t2.visible ? t2.hide() : t2.show();
    }, "aria-pressed": this.visible ? "true" : "false" }, testAttributes(), { "data-alc-sidepanel-button": true }), h("alc-icon", { key: "79b13d7cc336a82bc4c7fa2856fbe5275fb59996", name: "list", label: "Exibir navegação" })), h("div", { key: "1d694d33e34441ae63b323d69249dddddb942e3e", ref: function(e) {
      return t2.desktopSlot = e;
    }, class: { "alc-sidepanel__desktop-slot": true, "is-open": this.visible } })));
  };
  t.prototype.setOffset = function() {
    var t2 = document.querySelector("[data-alc-top]");
    logger.debug(t2.offsetHeight);
    this.el.style.setProperty("--offset", t2.offsetHeight.toString());
  };
  Object.defineProperty(t.prototype, "el", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  return t;
}();
AlcSidepanel.style = alcSidepanelCss;
export {
  AlcSidepanel as alc_sidepanel
};
