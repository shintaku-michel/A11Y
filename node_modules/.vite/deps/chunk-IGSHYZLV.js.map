{
  "version": 3,
  "sources": ["../../alcance/dist/esm-es5/src/components/utils/theme.ts"],
  "sourcesContent": ["/*\n  Controle do tema.\n  Inspirado em \"Dark mode Series' Articles\": https://dev.to/ayc0/series/12983\n */\n\nfunction loadUserPreference(): string {\n  return localStorage.getItem('alc-theme') || 'system';\n}\n\nfunction saveUserPreference(theme: 'light' | 'dark') : void {\n  localStorage.setItem('alc-theme', theme);\n}\n\nfunction removeUserPreference() : void {\n  localStorage.removeItem('alc-theme');\n}\n\nfunction getAppliedTheme(userPreference: string) : 'light' | 'dark' {\n  // Usuário definiu sua preferência (light ou dark)\n  if (userPreference === 'light') {\n    return 'light';\n  }\n  if (userPreference === 'dark') {\n    return 'dark';\n  }\n\n  // Usuário não definiu sua preferência aqui\n  // mas indicou dark por meio do sistema operacional\n  if (matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n\n  // Por default, light\n  return 'light';\n}\n\nfunction setAppliedTheme(theme: 'light' | 'dark') : void {\n\n  let themeTag = document.querySelector('html').dataset.alcThemeTag ;\n\n  themeTag = themeTag === undefined ? 'html' : themeTag;\n\n  if (themeTag === '') {\n    return;\n  }\n\n  const tags = document.querySelectorAll(themeTag);\n\n  tags.forEach(tag => {\n    if (tag instanceof HTMLElement) {\n      tag.dataset['alcTheme'] = theme;\n    };\n  });\n}\n\nfunction getMode(): 'base' | 'theme' {\n  // A página informou que não quer usar o tema do Alcance\n  // usando o atributo data-alc-no-theme\n  // <html data-alc-no-theme>\n  const noTheme = document.querySelector('html').dataset.alcNoTheme !== undefined;\n  return noTheme ? 'base' : 'theme';\n}\n\nexport { loadUserPreference, saveUserPreference, removeUserPreference, getAppliedTheme, setAppliedTheme, getMode };"],
  "mappings": ";AAAA,SAAA,qBAAA;AAAA,SAAA,aAAA,QAAA,WAAA,KAAA;AAAA;AAAA,SAAA,mBAAA,GAAA;AAAA,eAAA,QAAA,aAAA,CAAA;AAAA;AAAA,SAAA,uBAAA;AAAA,eAAA,WAAA,WAAA;AAAA;AAAA,SAAA,gBAAA,GAAA;AAAA,MAAA,MAAA,SAAA;AAAA,WAAA;EAAA;AAAA,MAAA,MAAA,QAAA;AAAA,WAAA;EAAA;AAAA,MAAA,WAAA,8BAAA,EAAA,SAAA;AAAA,WAAA;EAAA;AAAA,SAAA;AAAA;AAAA,SAAA,gBAAA,GAAA;AAAA,MAAA,IAAA,SAAA,cAAA,MAAA,EAAA,QAAA;AAAA,MAAA,MAAA,SAAA,SAAA;AAAA,MAAA,MAAA,IAAA;AAAA;EAAA;AAAA,MAAA,IAAA,SAAA,iBAAA,CAAA;AAAA,IAAA,QAAA,SAAAA,IAAA;AAAA,QAAAA,cAAA,aAAA;AAAA,MAAAA,GAAA,QAAA,UAAA,IAAA;IAAA;EAAA,CAAA;AAAA;AAAA,SAAA,UAAA;AAAA,MAAA,IAAA,SAAA,cAAA,MAAA,EAAA,QAAA,eAAA;AAAA,SAAA,IAAA,SAAA;AAAA;",
  "names": ["r"]
}
