import {
  setCssClasses
} from "./chunk-OWEDR7FW.js";
import {
  getDefaultExportFromCjs
} from "./chunk-IJMRG62Q.js";
import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  getUniqueId
} from "./chunk-6E7TTPYM.js";
import {
  Host,
  createEvent,
  forceUpdate,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import {
  __require
} from "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-datatable.entry.js
var __awaiter = function(e, t, n, r) {
  function i(e2) {
    return e2 instanceof n ? e2 : new n(function(t2) {
      t2(e2);
    });
  }
  return new (n || (n = Promise))(function(n2, a) {
    function o(e2) {
      try {
        u(r.next(e2));
      } catch (e3) {
        a(e3);
      }
    }
    function s(e2) {
      try {
        u(r["throw"](e2));
      } catch (e3) {
        a(e3);
      }
    }
    function u(e2) {
      e2.done ? n2(e2.value) : i(e2.value).then(o, s);
    }
    u((r = r.apply(e, t || [])).next());
  });
};
var __generator = function(e, t) {
  var n = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, r, i, a, o;
  return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol === "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(e2) {
    return function(t2) {
      return u([e2, t2]);
    };
  }
  function u(s2) {
    if (r) throw new TypeError("Generator is already executing.");
    while (o && (o = 0, s2[0] && (n = 0)), n) try {
      if (r = 1, i && (a = s2[0] & 2 ? i["return"] : s2[0] ? i["throw"] || ((a = i["return"]) && a.call(i), 0) : i.next) && !(a = a.call(i, s2[1])).done) return a;
      if (i = 0, a) s2 = [s2[0] & 2, a.value];
      switch (s2[0]) {
        case 0:
        case 1:
          a = s2;
          break;
        case 4:
          n.label++;
          return { value: s2[1], done: false };
        case 5:
          n.label++;
          i = s2[1];
          s2 = [0];
          continue;
        case 7:
          s2 = n.ops.pop();
          n.trys.pop();
          continue;
        default:
          if (!(a = n.trys, a = a.length > 0 && a[a.length - 1]) && (s2[0] === 6 || s2[0] === 2)) {
            n = 0;
            continue;
          }
          if (s2[0] === 3 && (!a || s2[1] > a[0] && s2[1] < a[3])) {
            n.label = s2[1];
            break;
          }
          if (s2[0] === 6 && n.label < a[1]) {
            n.label = a[1];
            a = s2;
            break;
          }
          if (a && n.label < a[2]) {
            n.label = a[2];
            n.ops.push(s2);
            break;
          }
          if (a[2]) n.ops.pop();
          n.trys.pop();
          continue;
      }
      s2 = t.call(e, n);
    } catch (e2) {
      s2 = [6, e2];
      i = 0;
    } finally {
      r = a = 0;
    }
    if (s2[0] & 5) throw s2[1];
    return { value: s2[0] ? s2[1] : void 0, done: true };
  }
};
var __spreadArray = function(e, t, n) {
  if (n || arguments.length === 2) for (var r = 0, i = t.length, a; r < i; r++) {
    if (a || !(r in t)) {
      if (!a) a = Array.prototype.slice.call(t, 0, r);
      a[r] = t[r];
    }
  }
  return e.concat(a || Array.prototype.slice.call(t));
};
var jquery_dataTables = { exports: {} };
var jquery$1 = { exports: {} };
var jquery = jquery$1.exports;
var hasRequiredJquery;
function requireJquery() {
  if (hasRequiredJquery) return jquery$1.exports;
  hasRequiredJquery = 1;
  (function(e) {
    (function(t, n) {
      {
        e.exports = t.document ? n(t, true) : function(e2) {
          if (!e2.document) {
            throw new Error("jQuery requires a window with a document");
          }
          return n(e2);
        };
      }
    })(typeof window !== "undefined" ? window : jquery, function(e2, t) {
      var n = [];
      var r = Object.getPrototypeOf;
      var i = n.slice;
      var a = n.flat ? function(e3) {
        return n.flat.call(e3);
      } : function(e3) {
        return n.concat.apply([], e3);
      };
      var o = n.push;
      var s = n.indexOf;
      var u = {};
      var f = u.toString;
      var l = u.hasOwnProperty;
      var c = l.toString;
      var d = c.call(Object);
      var h2 = {};
      var v = function e3(t2) {
        return typeof t2 === "function" && typeof t2.nodeType !== "number" && typeof t2.item !== "function";
      };
      var m = function e3(t2) {
        return t2 != null && t2 === t2.window;
      };
      var p = e2.document;
      var g = { type: true, src: true, nonce: true, noModule: true };
      function b(e3, t2, n2) {
        n2 = n2 || p;
        var r2, i2, a2 = n2.createElement("script");
        a2.text = e3;
        if (t2) {
          for (r2 in g) {
            i2 = t2[r2] || t2.getAttribute && t2.getAttribute(r2);
            if (i2) {
              a2.setAttribute(r2, i2);
            }
          }
        }
        n2.head.appendChild(a2).parentNode.removeChild(a2);
      }
      function y(e3) {
        if (e3 == null) {
          return e3 + "";
        }
        return typeof e3 === "object" || typeof e3 === "function" ? u[f.call(e3)] || "object" : typeof e3;
      }
      var w = "3.7.1", S = /HTML$/i, D = function(e3, t2) {
        return new D.fn.init(e3, t2);
      };
      D.fn = D.prototype = { jquery: w, constructor: D, length: 0, toArray: function() {
        return i.call(this);
      }, get: function(e3) {
        if (e3 == null) {
          return i.call(this);
        }
        return e3 < 0 ? this[e3 + this.length] : this[e3];
      }, pushStack: function(e3) {
        var t2 = D.merge(this.constructor(), e3);
        t2.prevObject = this;
        return t2;
      }, each: function(e3) {
        return D.each(this, e3);
      }, map: function(e3) {
        return this.pushStack(D.map(this, function(t2, n2) {
          return e3.call(t2, n2, t2);
        }));
      }, slice: function() {
        return this.pushStack(i.apply(this, arguments));
      }, first: function() {
        return this.eq(0);
      }, last: function() {
        return this.eq(-1);
      }, even: function() {
        return this.pushStack(D.grep(this, function(e3, t2) {
          return (t2 + 1) % 2;
        }));
      }, odd: function() {
        return this.pushStack(D.grep(this, function(e3, t2) {
          return t2 % 2;
        }));
      }, eq: function(e3) {
        var t2 = this.length, n2 = +e3 + (e3 < 0 ? t2 : 0);
        return this.pushStack(n2 >= 0 && n2 < t2 ? [this[n2]] : []);
      }, end: function() {
        return this.prevObject || this.constructor();
      }, push: o, sort: n.sort, splice: n.splice };
      D.extend = D.fn.extend = function() {
        var e3, t2, n2, r2, i2, a2, o2 = arguments[0] || {}, s2 = 1, u2 = arguments.length, f2 = false;
        if (typeof o2 === "boolean") {
          f2 = o2;
          o2 = arguments[s2] || {};
          s2++;
        }
        if (typeof o2 !== "object" && !v(o2)) {
          o2 = {};
        }
        if (s2 === u2) {
          o2 = this;
          s2--;
        }
        for (; s2 < u2; s2++) {
          if ((e3 = arguments[s2]) != null) {
            for (t2 in e3) {
              r2 = e3[t2];
              if (t2 === "__proto__" || o2 === r2) {
                continue;
              }
              if (f2 && r2 && (D.isPlainObject(r2) || (i2 = Array.isArray(r2)))) {
                n2 = o2[t2];
                if (i2 && !Array.isArray(n2)) {
                  a2 = [];
                } else if (!i2 && !D.isPlainObject(n2)) {
                  a2 = {};
                } else {
                  a2 = n2;
                }
                i2 = false;
                o2[t2] = D.extend(f2, a2, r2);
              } else if (r2 !== void 0) {
                o2[t2] = r2;
              }
            }
          }
        }
        return o2;
      };
      D.extend({ expando: "jQuery" + (w + Math.random()).replace(/\D/g, ""), isReady: true, error: function(e3) {
        throw new Error(e3);
      }, noop: function() {
      }, isPlainObject: function(e3) {
        var t2, n2;
        if (!e3 || f.call(e3) !== "[object Object]") {
          return false;
        }
        t2 = r(e3);
        if (!t2) {
          return true;
        }
        n2 = l.call(t2, "constructor") && t2.constructor;
        return typeof n2 === "function" && c.call(n2) === d;
      }, isEmptyObject: function(e3) {
        var t2;
        for (t2 in e3) {
          return false;
        }
        return true;
      }, globalEval: function(e3, t2, n2) {
        b(e3, { nonce: t2 && t2.nonce }, n2);
      }, each: function(e3, t2) {
        var n2, r2 = 0;
        if (k(e3)) {
          n2 = e3.length;
          for (; r2 < n2; r2++) {
            if (t2.call(e3[r2], r2, e3[r2]) === false) {
              break;
            }
          }
        } else {
          for (r2 in e3) {
            if (t2.call(e3[r2], r2, e3[r2]) === false) {
              break;
            }
          }
        }
        return e3;
      }, text: function(e3) {
        var t2, n2 = "", r2 = 0, i2 = e3.nodeType;
        if (!i2) {
          while (t2 = e3[r2++]) {
            n2 += D.text(t2);
          }
        }
        if (i2 === 1 || i2 === 11) {
          return e3.textContent;
        }
        if (i2 === 9) {
          return e3.documentElement.textContent;
        }
        if (i2 === 3 || i2 === 4) {
          return e3.nodeValue;
        }
        return n2;
      }, makeArray: function(e3, t2) {
        var n2 = t2 || [];
        if (e3 != null) {
          if (k(Object(e3))) {
            D.merge(n2, typeof e3 === "string" ? [e3] : e3);
          } else {
            o.call(n2, e3);
          }
        }
        return n2;
      }, inArray: function(e3, t2, n2) {
        return t2 == null ? -1 : s.call(t2, e3, n2);
      }, isXMLDoc: function(e3) {
        var t2 = e3 && e3.namespaceURI, n2 = e3 && (e3.ownerDocument || e3).documentElement;
        return !S.test(t2 || n2 && n2.nodeName || "HTML");
      }, merge: function(e3, t2) {
        var n2 = +t2.length, r2 = 0, i2 = e3.length;
        for (; r2 < n2; r2++) {
          e3[i2++] = t2[r2];
        }
        e3.length = i2;
        return e3;
      }, grep: function(e3, t2, n2) {
        var r2, i2 = [], a2 = 0, o2 = e3.length, s2 = !n2;
        for (; a2 < o2; a2++) {
          r2 = !t2(e3[a2], a2);
          if (r2 !== s2) {
            i2.push(e3[a2]);
          }
        }
        return i2;
      }, map: function(e3, t2, n2) {
        var r2, i2, o2 = 0, s2 = [];
        if (k(e3)) {
          r2 = e3.length;
          for (; o2 < r2; o2++) {
            i2 = t2(e3[o2], o2, n2);
            if (i2 != null) {
              s2.push(i2);
            }
          }
        } else {
          for (o2 in e3) {
            i2 = t2(e3[o2], o2, n2);
            if (i2 != null) {
              s2.push(i2);
            }
          }
        }
        return a(s2);
      }, guid: 1, support: h2 });
      if (typeof Symbol === "function") {
        D.fn[Symbol.iterator] = n[Symbol.iterator];
      }
      D.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e3, t2) {
        u["[object " + t2 + "]"] = t2.toLowerCase();
      });
      function k(e3) {
        var t2 = !!e3 && "length" in e3 && e3.length, n2 = y(e3);
        if (v(e3) || m(e3)) {
          return false;
        }
        return n2 === "array" || t2 === 0 || typeof t2 === "number" && t2 > 0 && t2 - 1 in e3;
      }
      function x(e3, t2) {
        return e3.nodeName && e3.nodeName.toLowerCase() === t2.toLowerCase();
      }
      var _ = n.pop;
      var M = n.sort;
      var T = n.splice;
      var E = "[\\x20\\t\\r\\n\\f]";
      var F = new RegExp("^" + E + "+|((?:^|[^\\\\])(?:\\\\.)*)" + E + "+$", "g");
      D.contains = function(e3, t2) {
        var n2 = t2 && t2.parentNode;
        return e3 === n2 || !!(n2 && n2.nodeType === 1 && (e3.contains ? e3.contains(n2) : e3.compareDocumentPosition && e3.compareDocumentPosition(n2) & 16));
      };
      var Y = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      function A(e3, t2) {
        if (t2) {
          if (e3 === "\0") {
            return "�";
          }
          return e3.slice(0, -1) + "\\" + e3.charCodeAt(e3.length - 1).toString(16) + " ";
        }
        return "\\" + e3;
      }
      D.escapeSelector = function(e3) {
        return (e3 + "").replace(Y, A);
      };
      var O = p, N = o;
      (function() {
        var t2, r2, a2, o2, u2, f2 = N, c2, d2, v2, m2, p2, g2 = D.expando, b2 = 0, y2 = 0, w2 = te2(), S2 = te2(), k2 = te2(), Y2 = te2(), A2 = function(e3, t3) {
          if (e3 === t3) {
            u2 = true;
          }
          return 0;
        }, R2 = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", C2 = "(?:\\\\[\\da-fA-F]{1,6}" + E + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", I2 = "\\[" + E + "*(" + C2 + ")(?:" + E + "*([*^$|!~]?=)" + E + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + C2 + "))|)" + E + "*\\]", P2 = ":(" + C2 + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + I2 + ")*)|.*)\\)|)", L2 = new RegExp(E + "+", "g"), W2 = new RegExp("^" + E + "*," + E + "*"), j2 = new RegExp("^" + E + "*([>+~]|" + E + ")" + E + "*"), H2 = new RegExp(E + "|>"), U2 = new RegExp(P2), $2 = new RegExp("^" + C2 + "$"), G2 = { ID: new RegExp("^#(" + C2 + ")"), CLASS: new RegExp("^\\.(" + C2 + ")"), TAG: new RegExp("^(" + C2 + "|[*])"), ATTR: new RegExp("^" + I2), PSEUDO: new RegExp("^" + P2), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + E + "*(even|odd|(([+-]|)(\\d*)n|)" + E + "*(?:([+-]|)" + E + "*(\\d+)|))" + E + "*\\)|)", "i"), bool: new RegExp("^(?:" + R2 + ")$", "i"), needsContext: new RegExp("^" + E + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + E + "*((?:-\\d)?\\d*)" + E + "*\\)|)(?=[^-]|$)", "i") }, q2 = /^(?:input|select|textarea|button)$/i, z2 = /^h\d$/i, B2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, Z2 = /[+~]/, J2 = new RegExp("\\\\[\\da-fA-F]{1,6}" + E + "?|\\\\([^\\r\\n\\f])", "g"), V2 = function(e3, t3) {
          var n2 = "0x" + e3.slice(1) - 65536;
          if (t3) {
            return t3;
          }
          return n2 < 0 ? String.fromCharCode(n2 + 65536) : String.fromCharCode(n2 >> 10 | 55296, n2 & 1023 | 56320);
        }, X2 = function() {
          fe2();
        }, Q2 = he2(function(e3) {
          return e3.disabled === true && x(e3, "fieldset");
        }, { dir: "parentNode", next: "legend" });
        function K2() {
          try {
            return c2.activeElement;
          } catch (e3) {
          }
        }
        try {
          f2.apply(n = i.call(O.childNodes), O.childNodes);
        } catch (e3) {
          f2 = { apply: function(e4, t3) {
            N.apply(e4, i.call(t3));
          }, call: function(e4) {
            N.apply(e4, i.call(arguments, 1));
          } };
        }
        function ee2(e3, t3, n2, r3) {
          var i2, a3, o3, s2, u3, l2, d3, p3 = t3 && t3.ownerDocument, b3 = t3 ? t3.nodeType : 9;
          n2 = n2 || [];
          if (typeof e3 !== "string" || !e3 || b3 !== 1 && b3 !== 9 && b3 !== 11) {
            return n2;
          }
          if (!r3) {
            fe2(t3);
            t3 = t3 || c2;
            if (v2) {
              if (b3 !== 11 && (u3 = B2.exec(e3))) {
                if (i2 = u3[1]) {
                  if (b3 === 9) {
                    if (o3 = t3.getElementById(i2)) {
                      if (o3.id === i2) {
                        f2.call(n2, o3);
                        return n2;
                      }
                    } else {
                      return n2;
                    }
                  } else {
                    if (p3 && (o3 = p3.getElementById(i2)) && ee2.contains(t3, o3) && o3.id === i2) {
                      f2.call(n2, o3);
                      return n2;
                    }
                  }
                } else if (u3[2]) {
                  f2.apply(n2, t3.getElementsByTagName(e3));
                  return n2;
                } else if ((i2 = u3[3]) && t3.getElementsByClassName) {
                  f2.apply(n2, t3.getElementsByClassName(i2));
                  return n2;
                }
              }
              if (!Y2[e3 + " "] && (!m2 || !m2.test(e3))) {
                d3 = e3;
                p3 = t3;
                if (b3 === 1 && (H2.test(e3) || j2.test(e3))) {
                  p3 = Z2.test(e3) && ue2(t3.parentNode) || t3;
                  if (p3 != t3 || !h2.scope) {
                    if (s2 = t3.getAttribute("id")) {
                      s2 = D.escapeSelector(s2);
                    } else {
                      t3.setAttribute("id", s2 = g2);
                    }
                  }
                  l2 = ce2(e3);
                  a3 = l2.length;
                  while (a3--) {
                    l2[a3] = (s2 ? "#" + s2 : ":scope") + " " + de2(l2[a3]);
                  }
                  d3 = l2.join(",");
                }
                try {
                  f2.apply(n2, p3.querySelectorAll(d3));
                  return n2;
                } catch (t4) {
                  Y2(e3, true);
                } finally {
                  if (s2 === g2) {
                    t3.removeAttribute("id");
                  }
                }
              }
            }
          }
          return Se2(e3.replace(F, "$1"), t3, n2, r3);
        }
        function te2() {
          var e3 = [];
          function t3(n2, i2) {
            if (e3.push(n2 + " ") > r2.cacheLength) {
              delete t3[e3.shift()];
            }
            return t3[n2 + " "] = i2;
          }
          return t3;
        }
        function ne2(e3) {
          e3[g2] = true;
          return e3;
        }
        function re2(e3) {
          var t3 = c2.createElement("fieldset");
          try {
            return !!e3(t3);
          } catch (e4) {
            return false;
          } finally {
            if (t3.parentNode) {
              t3.parentNode.removeChild(t3);
            }
            t3 = null;
          }
        }
        function ie2(e3) {
          return function(t3) {
            return x(t3, "input") && t3.type === e3;
          };
        }
        function ae2(e3) {
          return function(t3) {
            return (x(t3, "input") || x(t3, "button")) && t3.type === e3;
          };
        }
        function oe2(e3) {
          return function(t3) {
            if ("form" in t3) {
              if (t3.parentNode && t3.disabled === false) {
                if ("label" in t3) {
                  if ("label" in t3.parentNode) {
                    return t3.parentNode.disabled === e3;
                  } else {
                    return t3.disabled === e3;
                  }
                }
                return t3.isDisabled === e3 || t3.isDisabled !== !e3 && Q2(t3) === e3;
              }
              return t3.disabled === e3;
            } else if ("label" in t3) {
              return t3.disabled === e3;
            }
            return false;
          };
        }
        function se2(e3) {
          return ne2(function(t3) {
            t3 = +t3;
            return ne2(function(n2, r3) {
              var i2, a3 = e3([], n2.length, t3), o3 = a3.length;
              while (o3--) {
                if (n2[i2 = a3[o3]]) {
                  n2[i2] = !(r3[i2] = n2[i2]);
                }
              }
            });
          });
        }
        function ue2(e3) {
          return e3 && typeof e3.getElementsByTagName !== "undefined" && e3;
        }
        function fe2(e3) {
          var t3, n2 = e3 ? e3.ownerDocument || e3 : O;
          if (n2 == c2 || n2.nodeType !== 9 || !n2.documentElement) {
            return c2;
          }
          c2 = n2;
          d2 = c2.documentElement;
          v2 = !D.isXMLDoc(c2);
          p2 = d2.matches || d2.webkitMatchesSelector || d2.msMatchesSelector;
          if (d2.msMatchesSelector && O != c2 && (t3 = c2.defaultView) && t3.top !== t3) {
            t3.addEventListener("unload", X2);
          }
          h2.getById = re2(function(e4) {
            d2.appendChild(e4).id = D.expando;
            return !c2.getElementsByName || !c2.getElementsByName(D.expando).length;
          });
          h2.disconnectedMatch = re2(function(e4) {
            return p2.call(e4, "*");
          });
          h2.scope = re2(function() {
            return c2.querySelectorAll(":scope");
          });
          h2.cssHas = re2(function() {
            try {
              c2.querySelector(":has(*,:jqfake)");
              return false;
            } catch (e4) {
              return true;
            }
          });
          if (h2.getById) {
            r2.filter.ID = function(e4) {
              var t4 = e4.replace(J2, V2);
              return function(e5) {
                return e5.getAttribute("id") === t4;
              };
            };
            r2.find.ID = function(e4, t4) {
              if (typeof t4.getElementById !== "undefined" && v2) {
                var n3 = t4.getElementById(e4);
                return n3 ? [n3] : [];
              }
            };
          } else {
            r2.filter.ID = function(e4) {
              var t4 = e4.replace(J2, V2);
              return function(e5) {
                var n3 = typeof e5.getAttributeNode !== "undefined" && e5.getAttributeNode("id");
                return n3 && n3.value === t4;
              };
            };
            r2.find.ID = function(e4, t4) {
              if (typeof t4.getElementById !== "undefined" && v2) {
                var n3, r3, i2, a3 = t4.getElementById(e4);
                if (a3) {
                  n3 = a3.getAttributeNode("id");
                  if (n3 && n3.value === e4) {
                    return [a3];
                  }
                  i2 = t4.getElementsByName(e4);
                  r3 = 0;
                  while (a3 = i2[r3++]) {
                    n3 = a3.getAttributeNode("id");
                    if (n3 && n3.value === e4) {
                      return [a3];
                    }
                  }
                }
                return [];
              }
            };
          }
          r2.find.TAG = function(e4, t4) {
            if (typeof t4.getElementsByTagName !== "undefined") {
              return t4.getElementsByTagName(e4);
            } else {
              return t4.querySelectorAll(e4);
            }
          };
          r2.find.CLASS = function(e4, t4) {
            if (typeof t4.getElementsByClassName !== "undefined" && v2) {
              return t4.getElementsByClassName(e4);
            }
          };
          m2 = [];
          re2(function(e4) {
            var t4;
            d2.appendChild(e4).innerHTML = "<a id='" + g2 + "' href='' disabled='disabled'></a><select id='" + g2 + "-\r\\' disabled='disabled'><option selected=''></option></select>";
            if (!e4.querySelectorAll("[selected]").length) {
              m2.push("\\[" + E + "*(?:value|" + R2 + ")");
            }
            if (!e4.querySelectorAll("[id~=" + g2 + "-]").length) {
              m2.push("~=");
            }
            if (!e4.querySelectorAll("a#" + g2 + "+*").length) {
              m2.push(".#.+[+~]");
            }
            if (!e4.querySelectorAll(":checked").length) {
              m2.push(":checked");
            }
            t4 = c2.createElement("input");
            t4.setAttribute("type", "hidden");
            e4.appendChild(t4).setAttribute("name", "D");
            d2.appendChild(e4).disabled = true;
            if (e4.querySelectorAll(":disabled").length !== 2) {
              m2.push(":enabled", ":disabled");
            }
            t4 = c2.createElement("input");
            t4.setAttribute("name", "");
            e4.appendChild(t4);
            if (!e4.querySelectorAll("[name='']").length) {
              m2.push("\\[" + E + "*name" + E + "*=" + E + `*(?:''|"")`);
            }
          });
          if (!h2.cssHas) {
            m2.push(":has");
          }
          m2 = m2.length && new RegExp(m2.join("|"));
          A2 = function(e4, t4) {
            if (e4 === t4) {
              u2 = true;
              return 0;
            }
            var n3 = !e4.compareDocumentPosition - !t4.compareDocumentPosition;
            if (n3) {
              return n3;
            }
            n3 = (e4.ownerDocument || e4) == (t4.ownerDocument || t4) ? e4.compareDocumentPosition(t4) : 1;
            if (n3 & 1 || !h2.sortDetached && t4.compareDocumentPosition(e4) === n3) {
              if (e4 === c2 || e4.ownerDocument == O && ee2.contains(O, e4)) {
                return -1;
              }
              if (t4 === c2 || t4.ownerDocument == O && ee2.contains(O, t4)) {
                return 1;
              }
              return o2 ? s.call(o2, e4) - s.call(o2, t4) : 0;
            }
            return n3 & 4 ? -1 : 1;
          };
          return c2;
        }
        ee2.matches = function(e3, t3) {
          return ee2(e3, null, null, t3);
        };
        ee2.matchesSelector = function(e3, t3) {
          fe2(e3);
          if (v2 && !Y2[t3 + " "] && (!m2 || !m2.test(t3))) {
            try {
              var n2 = p2.call(e3, t3);
              if (n2 || h2.disconnectedMatch || e3.document && e3.document.nodeType !== 11) {
                return n2;
              }
            } catch (e4) {
              Y2(t3, true);
            }
          }
          return ee2(t3, c2, null, [e3]).length > 0;
        };
        ee2.contains = function(e3, t3) {
          if ((e3.ownerDocument || e3) != c2) {
            fe2(e3);
          }
          return D.contains(e3, t3);
        };
        ee2.attr = function(e3, t3) {
          if ((e3.ownerDocument || e3) != c2) {
            fe2(e3);
          }
          var n2 = r2.attrHandle[t3.toLowerCase()], i2 = n2 && l.call(r2.attrHandle, t3.toLowerCase()) ? n2(e3, t3, !v2) : void 0;
          if (i2 !== void 0) {
            return i2;
          }
          return e3.getAttribute(t3);
        };
        ee2.error = function(e3) {
          throw new Error("Syntax error, unrecognized expression: " + e3);
        };
        D.uniqueSort = function(e3) {
          var t3, n2 = [], r3 = 0, a3 = 0;
          u2 = !h2.sortStable;
          o2 = !h2.sortStable && i.call(e3, 0);
          M.call(e3, A2);
          if (u2) {
            while (t3 = e3[a3++]) {
              if (t3 === e3[a3]) {
                r3 = n2.push(a3);
              }
            }
            while (r3--) {
              T.call(e3, n2[r3], 1);
            }
          }
          o2 = null;
          return e3;
        };
        D.fn.uniqueSort = function() {
          return this.pushStack(D.uniqueSort(i.apply(this)));
        };
        r2 = D.expr = { cacheLength: 50, createPseudo: ne2, match: G2, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function(e3) {
          e3[1] = e3[1].replace(J2, V2);
          e3[3] = (e3[3] || e3[4] || e3[5] || "").replace(J2, V2);
          if (e3[2] === "~=") {
            e3[3] = " " + e3[3] + " ";
          }
          return e3.slice(0, 4);
        }, CHILD: function(e3) {
          e3[1] = e3[1].toLowerCase();
          if (e3[1].slice(0, 3) === "nth") {
            if (!e3[3]) {
              ee2.error(e3[0]);
            }
            e3[4] = +(e3[4] ? e3[5] + (e3[6] || 1) : 2 * (e3[3] === "even" || e3[3] === "odd"));
            e3[5] = +(e3[7] + e3[8] || e3[3] === "odd");
          } else if (e3[3]) {
            ee2.error(e3[0]);
          }
          return e3;
        }, PSEUDO: function(e3) {
          var t3, n2 = !e3[6] && e3[2];
          if (G2.CHILD.test(e3[0])) {
            return null;
          }
          if (e3[3]) {
            e3[2] = e3[4] || e3[5] || "";
          } else if (n2 && U2.test(n2) && (t3 = ce2(n2, true)) && (t3 = n2.indexOf(")", n2.length - t3) - n2.length)) {
            e3[0] = e3[0].slice(0, t3);
            e3[2] = n2.slice(0, t3);
          }
          return e3.slice(0, 3);
        } }, filter: { TAG: function(e3) {
          var t3 = e3.replace(J2, V2).toLowerCase();
          return e3 === "*" ? function() {
            return true;
          } : function(e4) {
            return x(e4, t3);
          };
        }, CLASS: function(e3) {
          var t3 = w2[e3 + " "];
          return t3 || (t3 = new RegExp("(^|" + E + ")" + e3 + "(" + E + "|$)")) && w2(e3, function(e4) {
            return t3.test(typeof e4.className === "string" && e4.className || typeof e4.getAttribute !== "undefined" && e4.getAttribute("class") || "");
          });
        }, ATTR: function(e3, t3, n2) {
          return function(r3) {
            var i2 = ee2.attr(r3, e3);
            if (i2 == null) {
              return t3 === "!=";
            }
            if (!t3) {
              return true;
            }
            i2 += "";
            if (t3 === "=") {
              return i2 === n2;
            }
            if (t3 === "!=") {
              return i2 !== n2;
            }
            if (t3 === "^=") {
              return n2 && i2.indexOf(n2) === 0;
            }
            if (t3 === "*=") {
              return n2 && i2.indexOf(n2) > -1;
            }
            if (t3 === "$=") {
              return n2 && i2.slice(-n2.length) === n2;
            }
            if (t3 === "~=") {
              return (" " + i2.replace(L2, " ") + " ").indexOf(n2) > -1;
            }
            if (t3 === "|=") {
              return i2 === n2 || i2.slice(0, n2.length + 1) === n2 + "-";
            }
            return false;
          };
        }, CHILD: function(e3, t3, n2, r3, i2) {
          var a3 = e3.slice(0, 3) !== "nth", o3 = e3.slice(-4) !== "last", s2 = t3 === "of-type";
          return r3 === 1 && i2 === 0 ? function(e4) {
            return !!e4.parentNode;
          } : function(t4, n3, u3) {
            var f3, l2, c3, d3, h3, v3 = a3 !== o3 ? "nextSibling" : "previousSibling", m3 = t4.parentNode, p3 = s2 && t4.nodeName.toLowerCase(), y3 = !u3 && !s2, w3 = false;
            if (m3) {
              if (a3) {
                while (v3) {
                  c3 = t4;
                  while (c3 = c3[v3]) {
                    if (s2 ? x(c3, p3) : c3.nodeType === 1) {
                      return false;
                    }
                  }
                  h3 = v3 = e3 === "only" && !h3 && "nextSibling";
                }
                return true;
              }
              h3 = [o3 ? m3.firstChild : m3.lastChild];
              if (o3 && y3) {
                l2 = m3[g2] || (m3[g2] = {});
                f3 = l2[e3] || [];
                d3 = f3[0] === b2 && f3[1];
                w3 = d3 && f3[2];
                c3 = d3 && m3.childNodes[d3];
                while (c3 = ++d3 && c3 && c3[v3] || (w3 = d3 = 0) || h3.pop()) {
                  if (c3.nodeType === 1 && ++w3 && c3 === t4) {
                    l2[e3] = [b2, d3, w3];
                    break;
                  }
                }
              } else {
                if (y3) {
                  l2 = t4[g2] || (t4[g2] = {});
                  f3 = l2[e3] || [];
                  d3 = f3[0] === b2 && f3[1];
                  w3 = d3;
                }
                if (w3 === false) {
                  while (c3 = ++d3 && c3 && c3[v3] || (w3 = d3 = 0) || h3.pop()) {
                    if ((s2 ? x(c3, p3) : c3.nodeType === 1) && ++w3) {
                      if (y3) {
                        l2 = c3[g2] || (c3[g2] = {});
                        l2[e3] = [b2, w3];
                      }
                      if (c3 === t4) {
                        break;
                      }
                    }
                  }
                }
              }
              w3 -= i2;
              return w3 === r3 || w3 % r3 === 0 && w3 / r3 >= 0;
            }
          };
        }, PSEUDO: function(e3, t3) {
          var n2, i2 = r2.pseudos[e3] || r2.setFilters[e3.toLowerCase()] || ee2.error("unsupported pseudo: " + e3);
          if (i2[g2]) {
            return i2(t3);
          }
          if (i2.length > 1) {
            n2 = [e3, e3, "", t3];
            return r2.setFilters.hasOwnProperty(e3.toLowerCase()) ? ne2(function(e4, n3) {
              var r3, a3 = i2(e4, t3), o3 = a3.length;
              while (o3--) {
                r3 = s.call(e4, a3[o3]);
                e4[r3] = !(n3[r3] = a3[o3]);
              }
            }) : function(e4) {
              return i2(e4, 0, n2);
            };
          }
          return i2;
        } }, pseudos: { not: ne2(function(e3) {
          var t3 = [], n2 = [], r3 = we2(e3.replace(F, "$1"));
          return r3[g2] ? ne2(function(e4, t4, n3, i2) {
            var a3, o3 = r3(e4, null, i2, []), s2 = e4.length;
            while (s2--) {
              if (a3 = o3[s2]) {
                e4[s2] = !(t4[s2] = a3);
              }
            }
          }) : function(e4, i2, a3) {
            t3[0] = e4;
            r3(t3, null, a3, n2);
            t3[0] = null;
            return !n2.pop();
          };
        }), has: ne2(function(e3) {
          return function(t3) {
            return ee2(e3, t3).length > 0;
          };
        }), contains: ne2(function(e3) {
          e3 = e3.replace(J2, V2);
          return function(t3) {
            return (t3.textContent || D.text(t3)).indexOf(e3) > -1;
          };
        }), lang: ne2(function(e3) {
          if (!$2.test(e3 || "")) {
            ee2.error("unsupported lang: " + e3);
          }
          e3 = e3.replace(J2, V2).toLowerCase();
          return function(t3) {
            var n2;
            do {
              if (n2 = v2 ? t3.lang : t3.getAttribute("xml:lang") || t3.getAttribute("lang")) {
                n2 = n2.toLowerCase();
                return n2 === e3 || n2.indexOf(e3 + "-") === 0;
              }
            } while ((t3 = t3.parentNode) && t3.nodeType === 1);
            return false;
          };
        }), target: function(t3) {
          var n2 = e2.location && e2.location.hash;
          return n2 && n2.slice(1) === t3.id;
        }, root: function(e3) {
          return e3 === d2;
        }, focus: function(e3) {
          return e3 === K2() && c2.hasFocus() && !!(e3.type || e3.href || ~e3.tabIndex);
        }, enabled: oe2(false), disabled: oe2(true), checked: function(e3) {
          return x(e3, "input") && !!e3.checked || x(e3, "option") && !!e3.selected;
        }, selected: function(e3) {
          return e3.selected === true;
        }, empty: function(e3) {
          for (e3 = e3.firstChild; e3; e3 = e3.nextSibling) {
            if (e3.nodeType < 6) {
              return false;
            }
          }
          return true;
        }, parent: function(e3) {
          return !r2.pseudos.empty(e3);
        }, header: function(e3) {
          return z2.test(e3.nodeName);
        }, input: function(e3) {
          return q2.test(e3.nodeName);
        }, button: function(e3) {
          return x(e3, "input") && e3.type === "button" || x(e3, "button");
        }, text: function(e3) {
          var t3;
          return x(e3, "input") && e3.type === "text" && ((t3 = e3.getAttribute("type")) == null || t3.toLowerCase() === "text");
        }, first: se2(function() {
          return [0];
        }), last: se2(function(e3, t3) {
          return [t3 - 1];
        }), eq: se2(function(e3, t3, n2) {
          return [n2 < 0 ? n2 + t3 : n2];
        }), even: se2(function(e3, t3) {
          var n2 = 0;
          for (; n2 < t3; n2 += 2) {
            e3.push(n2);
          }
          return e3;
        }), odd: se2(function(e3, t3) {
          var n2 = 1;
          for (; n2 < t3; n2 += 2) {
            e3.push(n2);
          }
          return e3;
        }), lt: se2(function(e3, t3, n2) {
          var r3;
          if (n2 < 0) {
            r3 = n2 + t3;
          } else if (n2 > t3) {
            r3 = t3;
          } else {
            r3 = n2;
          }
          for (; --r3 >= 0; ) {
            e3.push(r3);
          }
          return e3;
        }), gt: se2(function(e3, t3, n2) {
          var r3 = n2 < 0 ? n2 + t3 : n2;
          for (; ++r3 < t3; ) {
            e3.push(r3);
          }
          return e3;
        }) } };
        r2.pseudos.nth = r2.pseudos.eq;
        for (t2 in { radio: true, checkbox: true, file: true, password: true, image: true }) {
          r2.pseudos[t2] = ie2(t2);
        }
        for (t2 in { submit: true, reset: true }) {
          r2.pseudos[t2] = ae2(t2);
        }
        function le2() {
        }
        le2.prototype = r2.filters = r2.pseudos;
        r2.setFilters = new le2();
        function ce2(e3, t3) {
          var n2, i2, a3, o3, s2, u3, f3, l2 = S2[e3 + " "];
          if (l2) {
            return t3 ? 0 : l2.slice(0);
          }
          s2 = e3;
          u3 = [];
          f3 = r2.preFilter;
          while (s2) {
            if (!n2 || (i2 = W2.exec(s2))) {
              if (i2) {
                s2 = s2.slice(i2[0].length) || s2;
              }
              u3.push(a3 = []);
            }
            n2 = false;
            if (i2 = j2.exec(s2)) {
              n2 = i2.shift();
              a3.push({ value: n2, type: i2[0].replace(F, " ") });
              s2 = s2.slice(n2.length);
            }
            for (o3 in r2.filter) {
              if ((i2 = G2[o3].exec(s2)) && (!f3[o3] || (i2 = f3[o3](i2)))) {
                n2 = i2.shift();
                a3.push({ value: n2, type: o3, matches: i2 });
                s2 = s2.slice(n2.length);
              }
            }
            if (!n2) {
              break;
            }
          }
          if (t3) {
            return s2.length;
          }
          return s2 ? ee2.error(e3) : S2(e3, u3).slice(0);
        }
        function de2(e3) {
          var t3 = 0, n2 = e3.length, r3 = "";
          for (; t3 < n2; t3++) {
            r3 += e3[t3].value;
          }
          return r3;
        }
        function he2(e3, t3, n2) {
          var r3 = t3.dir, i2 = t3.next, a3 = i2 || r3, o3 = n2 && a3 === "parentNode", s2 = y2++;
          return t3.first ? function(t4, n3, i3) {
            while (t4 = t4[r3]) {
              if (t4.nodeType === 1 || o3) {
                return e3(t4, n3, i3);
              }
            }
            return false;
          } : function(t4, n3, u3) {
            var f3, l2, c3 = [b2, s2];
            if (u3) {
              while (t4 = t4[r3]) {
                if (t4.nodeType === 1 || o3) {
                  if (e3(t4, n3, u3)) {
                    return true;
                  }
                }
              }
            } else {
              while (t4 = t4[r3]) {
                if (t4.nodeType === 1 || o3) {
                  l2 = t4[g2] || (t4[g2] = {});
                  if (i2 && x(t4, i2)) {
                    t4 = t4[r3] || t4;
                  } else if ((f3 = l2[a3]) && f3[0] === b2 && f3[1] === s2) {
                    return c3[2] = f3[2];
                  } else {
                    l2[a3] = c3;
                    if (c3[2] = e3(t4, n3, u3)) {
                      return true;
                    }
                  }
                }
              }
            }
            return false;
          };
        }
        function ve2(e3) {
          return e3.length > 1 ? function(t3, n2, r3) {
            var i2 = e3.length;
            while (i2--) {
              if (!e3[i2](t3, n2, r3)) {
                return false;
              }
            }
            return true;
          } : e3[0];
        }
        function me2(e3, t3, n2) {
          var r3 = 0, i2 = t3.length;
          for (; r3 < i2; r3++) {
            ee2(e3, t3[r3], n2);
          }
          return n2;
        }
        function pe2(e3, t3, n2, r3, i2) {
          var a3, o3 = [], s2 = 0, u3 = e3.length, f3 = t3 != null;
          for (; s2 < u3; s2++) {
            if (a3 = e3[s2]) {
              if (!n2 || n2(a3, r3, i2)) {
                o3.push(a3);
                if (f3) {
                  t3.push(s2);
                }
              }
            }
          }
          return o3;
        }
        function ge2(e3, t3, n2, r3, i2, a3) {
          if (r3 && !r3[g2]) {
            r3 = ge2(r3);
          }
          if (i2 && !i2[g2]) {
            i2 = ge2(i2, a3);
          }
          return ne2(function(a4, o3, u3, l2) {
            var c3, d3, h3, v3, m3 = [], p3 = [], g3 = o3.length, b3 = a4 || me2(t3 || "*", u3.nodeType ? [u3] : u3, []), y3 = e3 && (a4 || !t3) ? pe2(b3, m3, e3, u3, l2) : b3;
            if (n2) {
              v3 = i2 || (a4 ? e3 : g3 || r3) ? [] : o3;
              n2(y3, v3, u3, l2);
            } else {
              v3 = y3;
            }
            if (r3) {
              c3 = pe2(v3, p3);
              r3(c3, [], u3, l2);
              d3 = c3.length;
              while (d3--) {
                if (h3 = c3[d3]) {
                  v3[p3[d3]] = !(y3[p3[d3]] = h3);
                }
              }
            }
            if (a4) {
              if (i2 || e3) {
                if (i2) {
                  c3 = [];
                  d3 = v3.length;
                  while (d3--) {
                    if (h3 = v3[d3]) {
                      c3.push(y3[d3] = h3);
                    }
                  }
                  i2(null, v3 = [], c3, l2);
                }
                d3 = v3.length;
                while (d3--) {
                  if ((h3 = v3[d3]) && (c3 = i2 ? s.call(a4, h3) : m3[d3]) > -1) {
                    a4[c3] = !(o3[c3] = h3);
                  }
                }
              }
            } else {
              v3 = pe2(v3 === o3 ? v3.splice(g3, v3.length) : v3);
              if (i2) {
                i2(null, o3, v3, l2);
              } else {
                f2.apply(o3, v3);
              }
            }
          });
        }
        function be2(e3) {
          var t3, n2, i2, o3 = e3.length, u3 = r2.relative[e3[0].type], f3 = u3 || r2.relative[" "], l2 = u3 ? 1 : 0, c3 = he2(function(e4) {
            return e4 === t3;
          }, f3, true), d3 = he2(function(e4) {
            return s.call(t3, e4) > -1;
          }, f3, true), h3 = [function(e4, n3, r3) {
            var i3 = !u3 && (r3 || n3 != a2) || ((t3 = n3).nodeType ? c3(e4, n3, r3) : d3(e4, n3, r3));
            t3 = null;
            return i3;
          }];
          for (; l2 < o3; l2++) {
            if (n2 = r2.relative[e3[l2].type]) {
              h3 = [he2(ve2(h3), n2)];
            } else {
              n2 = r2.filter[e3[l2].type].apply(null, e3[l2].matches);
              if (n2[g2]) {
                i2 = ++l2;
                for (; i2 < o3; i2++) {
                  if (r2.relative[e3[i2].type]) {
                    break;
                  }
                }
                return ge2(l2 > 1 && ve2(h3), l2 > 1 && de2(e3.slice(0, l2 - 1).concat({ value: e3[l2 - 2].type === " " ? "*" : "" })).replace(F, "$1"), n2, l2 < i2 && be2(e3.slice(l2, i2)), i2 < o3 && be2(e3 = e3.slice(i2)), i2 < o3 && de2(e3));
              }
              h3.push(n2);
            }
          }
          return ve2(h3);
        }
        function ye2(e3, t3) {
          var n2 = t3.length > 0, i2 = e3.length > 0, o3 = function(o4, s2, u3, l2, d3) {
            var h3, m3, p3, g3 = 0, y3 = "0", w3 = o4 && [], S3 = [], k3 = a2, x2 = o4 || i2 && r2.find.TAG("*", d3), M2 = b2 += k3 == null ? 1 : Math.random() || 0.1, T2 = x2.length;
            if (d3) {
              a2 = s2 == c2 || s2 || d3;
            }
            for (; y3 !== T2 && (h3 = x2[y3]) != null; y3++) {
              if (i2 && h3) {
                m3 = 0;
                if (!s2 && h3.ownerDocument != c2) {
                  fe2(h3);
                  u3 = !v2;
                }
                while (p3 = e3[m3++]) {
                  if (p3(h3, s2 || c2, u3)) {
                    f2.call(l2, h3);
                    break;
                  }
                }
                if (d3) {
                  b2 = M2;
                }
              }
              if (n2) {
                if (h3 = !p3 && h3) {
                  g3--;
                }
                if (o4) {
                  w3.push(h3);
                }
              }
            }
            g3 += y3;
            if (n2 && y3 !== g3) {
              m3 = 0;
              while (p3 = t3[m3++]) {
                p3(w3, S3, s2, u3);
              }
              if (o4) {
                if (g3 > 0) {
                  while (y3--) {
                    if (!(w3[y3] || S3[y3])) {
                      S3[y3] = _.call(l2);
                    }
                  }
                }
                S3 = pe2(S3);
              }
              f2.apply(l2, S3);
              if (d3 && !o4 && S3.length > 0 && g3 + t3.length > 1) {
                D.uniqueSort(l2);
              }
            }
            if (d3) {
              b2 = M2;
              a2 = k3;
            }
            return w3;
          };
          return n2 ? ne2(o3) : o3;
        }
        function we2(e3, t3) {
          var n2, r3 = [], i2 = [], a3 = k2[e3 + " "];
          if (!a3) {
            if (!t3) {
              t3 = ce2(e3);
            }
            n2 = t3.length;
            while (n2--) {
              a3 = be2(t3[n2]);
              if (a3[g2]) {
                r3.push(a3);
              } else {
                i2.push(a3);
              }
            }
            a3 = k2(e3, ye2(i2, r3));
            a3.selector = e3;
          }
          return a3;
        }
        function Se2(e3, t3, n2, i2) {
          var a3, o3, s2, u3, l2, c3 = typeof e3 === "function" && e3, d3 = !i2 && ce2(e3 = c3.selector || e3);
          n2 = n2 || [];
          if (d3.length === 1) {
            o3 = d3[0] = d3[0].slice(0);
            if (o3.length > 2 && (s2 = o3[0]).type === "ID" && t3.nodeType === 9 && v2 && r2.relative[o3[1].type]) {
              t3 = (r2.find.ID(s2.matches[0].replace(J2, V2), t3) || [])[0];
              if (!t3) {
                return n2;
              } else if (c3) {
                t3 = t3.parentNode;
              }
              e3 = e3.slice(o3.shift().value.length);
            }
            a3 = G2.needsContext.test(e3) ? 0 : o3.length;
            while (a3--) {
              s2 = o3[a3];
              if (r2.relative[u3 = s2.type]) {
                break;
              }
              if (l2 = r2.find[u3]) {
                if (i2 = l2(s2.matches[0].replace(J2, V2), Z2.test(o3[0].type) && ue2(t3.parentNode) || t3)) {
                  o3.splice(a3, 1);
                  e3 = i2.length && de2(o3);
                  if (!e3) {
                    f2.apply(n2, i2);
                    return n2;
                  }
                  break;
                }
              }
            }
          }
          (c3 || we2(e3, d3))(i2, t3, !v2, n2, !t3 || Z2.test(e3) && ue2(t3.parentNode) || t3);
          return n2;
        }
        h2.sortStable = g2.split("").sort(A2).join("") === g2;
        fe2();
        h2.sortDetached = re2(function(e3) {
          return e3.compareDocumentPosition(c2.createElement("fieldset")) & 1;
        });
        D.find = ee2;
        D.expr[":"] = D.expr.pseudos;
        D.unique = D.uniqueSort;
        ee2.compile = we2;
        ee2.select = Se2;
        ee2.setDocument = fe2;
        ee2.tokenize = ce2;
        ee2.escape = D.escapeSelector;
        ee2.getText = D.text;
        ee2.isXML = D.isXMLDoc;
        ee2.selectors = D.expr;
        ee2.support = D.support;
        ee2.uniqueSort = D.uniqueSort;
      })();
      var R = function(e3, t2, n2) {
        var r2 = [], i2 = n2 !== void 0;
        while ((e3 = e3[t2]) && e3.nodeType !== 9) {
          if (e3.nodeType === 1) {
            if (i2 && D(e3).is(n2)) {
              break;
            }
            r2.push(e3);
          }
        }
        return r2;
      };
      var C = function(e3, t2) {
        var n2 = [];
        for (; e3; e3 = e3.nextSibling) {
          if (e3.nodeType === 1 && e3 !== t2) {
            n2.push(e3);
          }
        }
        return n2;
      };
      var I = D.expr.match.needsContext;
      var P = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
      function L(e3, t2, n2) {
        if (v(t2)) {
          return D.grep(e3, function(e4, r2) {
            return !!t2.call(e4, r2, e4) !== n2;
          });
        }
        if (t2.nodeType) {
          return D.grep(e3, function(e4) {
            return e4 === t2 !== n2;
          });
        }
        if (typeof t2 !== "string") {
          return D.grep(e3, function(e4) {
            return s.call(t2, e4) > -1 !== n2;
          });
        }
        return D.filter(t2, e3, n2);
      }
      D.filter = function(e3, t2, n2) {
        var r2 = t2[0];
        if (n2) {
          e3 = ":not(" + e3 + ")";
        }
        if (t2.length === 1 && r2.nodeType === 1) {
          return D.find.matchesSelector(r2, e3) ? [r2] : [];
        }
        return D.find.matches(e3, D.grep(t2, function(e4) {
          return e4.nodeType === 1;
        }));
      };
      D.fn.extend({ find: function(e3) {
        var t2, n2, r2 = this.length, i2 = this;
        if (typeof e3 !== "string") {
          return this.pushStack(D(e3).filter(function() {
            for (t2 = 0; t2 < r2; t2++) {
              if (D.contains(i2[t2], this)) {
                return true;
              }
            }
          }));
        }
        n2 = this.pushStack([]);
        for (t2 = 0; t2 < r2; t2++) {
          D.find(e3, i2[t2], n2);
        }
        return r2 > 1 ? D.uniqueSort(n2) : n2;
      }, filter: function(e3) {
        return this.pushStack(L(this, e3 || [], false));
      }, not: function(e3) {
        return this.pushStack(L(this, e3 || [], true));
      }, is: function(e3) {
        return !!L(this, typeof e3 === "string" && I.test(e3) ? D(e3) : e3 || [], false).length;
      } });
      var W, j = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, H = D.fn.init = function(e3, t2, n2) {
        var r2, i2;
        if (!e3) {
          return this;
        }
        n2 = n2 || W;
        if (typeof e3 === "string") {
          if (e3[0] === "<" && e3[e3.length - 1] === ">" && e3.length >= 3) {
            r2 = [null, e3, null];
          } else {
            r2 = j.exec(e3);
          }
          if (r2 && (r2[1] || !t2)) {
            if (r2[1]) {
              t2 = t2 instanceof D ? t2[0] : t2;
              D.merge(this, D.parseHTML(r2[1], t2 && t2.nodeType ? t2.ownerDocument || t2 : p, true));
              if (P.test(r2[1]) && D.isPlainObject(t2)) {
                for (r2 in t2) {
                  if (v(this[r2])) {
                    this[r2](t2[r2]);
                  } else {
                    this.attr(r2, t2[r2]);
                  }
                }
              }
              return this;
            } else {
              i2 = p.getElementById(r2[2]);
              if (i2) {
                this[0] = i2;
                this.length = 1;
              }
              return this;
            }
          } else if (!t2 || t2.jquery) {
            return (t2 || n2).find(e3);
          } else {
            return this.constructor(t2).find(e3);
          }
        } else if (e3.nodeType) {
          this[0] = e3;
          this.length = 1;
          return this;
        } else if (v(e3)) {
          return n2.ready !== void 0 ? n2.ready(e3) : e3(D);
        }
        return D.makeArray(e3, this);
      };
      H.prototype = D.fn;
      W = D(p);
      var U = /^(?:parents|prev(?:Until|All))/, $ = { children: true, contents: true, next: true, prev: true };
      D.fn.extend({ has: function(e3) {
        var t2 = D(e3, this), n2 = t2.length;
        return this.filter(function() {
          var e4 = 0;
          for (; e4 < n2; e4++) {
            if (D.contains(this, t2[e4])) {
              return true;
            }
          }
        });
      }, closest: function(e3, t2) {
        var n2, r2 = 0, i2 = this.length, a2 = [], o2 = typeof e3 !== "string" && D(e3);
        if (!I.test(e3)) {
          for (; r2 < i2; r2++) {
            for (n2 = this[r2]; n2 && n2 !== t2; n2 = n2.parentNode) {
              if (n2.nodeType < 11 && (o2 ? o2.index(n2) > -1 : n2.nodeType === 1 && D.find.matchesSelector(n2, e3))) {
                a2.push(n2);
                break;
              }
            }
          }
        }
        return this.pushStack(a2.length > 1 ? D.uniqueSort(a2) : a2);
      }, index: function(e3) {
        if (!e3) {
          return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        }
        if (typeof e3 === "string") {
          return s.call(D(e3), this[0]);
        }
        return s.call(this, e3.jquery ? e3[0] : e3);
      }, add: function(e3, t2) {
        return this.pushStack(D.uniqueSort(D.merge(this.get(), D(e3, t2))));
      }, addBack: function(e3) {
        return this.add(e3 == null ? this.prevObject : this.prevObject.filter(e3));
      } });
      function G(e3, t2) {
        while ((e3 = e3[t2]) && e3.nodeType !== 1) {
        }
        return e3;
      }
      D.each({ parent: function(e3) {
        var t2 = e3.parentNode;
        return t2 && t2.nodeType !== 11 ? t2 : null;
      }, parents: function(e3) {
        return R(e3, "parentNode");
      }, parentsUntil: function(e3, t2, n2) {
        return R(e3, "parentNode", n2);
      }, next: function(e3) {
        return G(e3, "nextSibling");
      }, prev: function(e3) {
        return G(e3, "previousSibling");
      }, nextAll: function(e3) {
        return R(e3, "nextSibling");
      }, prevAll: function(e3) {
        return R(e3, "previousSibling");
      }, nextUntil: function(e3, t2, n2) {
        return R(e3, "nextSibling", n2);
      }, prevUntil: function(e3, t2, n2) {
        return R(e3, "previousSibling", n2);
      }, siblings: function(e3) {
        return C((e3.parentNode || {}).firstChild, e3);
      }, children: function(e3) {
        return C(e3.firstChild);
      }, contents: function(e3) {
        if (e3.contentDocument != null && r(e3.contentDocument)) {
          return e3.contentDocument;
        }
        if (x(e3, "template")) {
          e3 = e3.content || e3;
        }
        return D.merge([], e3.childNodes);
      } }, function(e3, t2) {
        D.fn[e3] = function(n2, r2) {
          var i2 = D.map(this, t2, n2);
          if (e3.slice(-5) !== "Until") {
            r2 = n2;
          }
          if (r2 && typeof r2 === "string") {
            i2 = D.filter(r2, i2);
          }
          if (this.length > 1) {
            if (!$[e3]) {
              D.uniqueSort(i2);
            }
            if (U.test(e3)) {
              i2.reverse();
            }
          }
          return this.pushStack(i2);
        };
      });
      var q = /[^\x20\t\r\n\f]+/g;
      function z(e3) {
        var t2 = {};
        D.each(e3.match(q) || [], function(e4, n2) {
          t2[n2] = true;
        });
        return t2;
      }
      D.Callbacks = function(e3) {
        e3 = typeof e3 === "string" ? z(e3) : D.extend({}, e3);
        var t2, n2, r2, i2, a2 = [], o2 = [], s2 = -1, u2 = function() {
          i2 = i2 || e3.once;
          r2 = t2 = true;
          for (; o2.length; s2 = -1) {
            n2 = o2.shift();
            while (++s2 < a2.length) {
              if (a2[s2].apply(n2[0], n2[1]) === false && e3.stopOnFalse) {
                s2 = a2.length;
                n2 = false;
              }
            }
          }
          if (!e3.memory) {
            n2 = false;
          }
          t2 = false;
          if (i2) {
            if (n2) {
              a2 = [];
            } else {
              a2 = "";
            }
          }
        }, f2 = { add: function() {
          if (a2) {
            if (n2 && !t2) {
              s2 = a2.length - 1;
              o2.push(n2);
            }
            (function t3(n3) {
              D.each(n3, function(n4, r3) {
                if (v(r3)) {
                  if (!e3.unique || !f2.has(r3)) {
                    a2.push(r3);
                  }
                } else if (r3 && r3.length && y(r3) !== "string") {
                  t3(r3);
                }
              });
            })(arguments);
            if (n2 && !t2) {
              u2();
            }
          }
          return this;
        }, remove: function() {
          D.each(arguments, function(e4, t3) {
            var n3;
            while ((n3 = D.inArray(t3, a2, n3)) > -1) {
              a2.splice(n3, 1);
              if (n3 <= s2) {
                s2--;
              }
            }
          });
          return this;
        }, has: function(e4) {
          return e4 ? D.inArray(e4, a2) > -1 : a2.length > 0;
        }, empty: function() {
          if (a2) {
            a2 = [];
          }
          return this;
        }, disable: function() {
          i2 = o2 = [];
          a2 = n2 = "";
          return this;
        }, disabled: function() {
          return !a2;
        }, lock: function() {
          i2 = o2 = [];
          if (!n2 && !t2) {
            a2 = n2 = "";
          }
          return this;
        }, locked: function() {
          return !!i2;
        }, fireWith: function(e4, n3) {
          if (!i2) {
            n3 = n3 || [];
            n3 = [e4, n3.slice ? n3.slice() : n3];
            o2.push(n3);
            if (!t2) {
              u2();
            }
          }
          return this;
        }, fire: function() {
          f2.fireWith(this, arguments);
          return this;
        }, fired: function() {
          return !!r2;
        } };
        return f2;
      };
      function B(e3) {
        return e3;
      }
      function Z(e3) {
        throw e3;
      }
      function J(e3, t2, n2, r2) {
        var i2;
        try {
          if (e3 && v(i2 = e3.promise)) {
            i2.call(e3).done(t2).fail(n2);
          } else if (e3 && v(i2 = e3.then)) {
            i2.call(e3, t2, n2);
          } else {
            t2.apply(void 0, [e3].slice(r2));
          }
        } catch (e4) {
          n2.apply(void 0, [e4]);
        }
      }
      D.extend({ Deferred: function(t2) {
        var n2 = [["notify", "progress", D.Callbacks("memory"), D.Callbacks("memory"), 2], ["resolve", "done", D.Callbacks("once memory"), D.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", D.Callbacks("once memory"), D.Callbacks("once memory"), 1, "rejected"]], r2 = "pending", i2 = { state: function() {
          return r2;
        }, always: function() {
          a2.done(arguments).fail(arguments);
          return this;
        }, catch: function(e3) {
          return i2.then(null, e3);
        }, pipe: function() {
          var e3 = arguments;
          return D.Deferred(function(t3) {
            D.each(n2, function(n3, r3) {
              var i3 = v(e3[r3[4]]) && e3[r3[4]];
              a2[r3[1]](function() {
                var e4 = i3 && i3.apply(this, arguments);
                if (e4 && v(e4.promise)) {
                  e4.promise().progress(t3.notify).done(t3.resolve).fail(t3.reject);
                } else {
                  t3[r3[0] + "With"](this, i3 ? [e4] : arguments);
                }
              });
            });
            e3 = null;
          }).promise();
        }, then: function(t3, r3, i3) {
          var a3 = 0;
          function o2(t4, n3, r4, i4) {
            return function() {
              var s2 = this, u2 = arguments, f2 = function() {
                var e3, f3;
                if (t4 < a3) {
                  return;
                }
                e3 = r4.apply(s2, u2);
                if (e3 === n3.promise()) {
                  throw new TypeError("Thenable self-resolution");
                }
                f3 = e3 && (typeof e3 === "object" || typeof e3 === "function") && e3.then;
                if (v(f3)) {
                  if (i4) {
                    f3.call(e3, o2(a3, n3, B, i4), o2(a3, n3, Z, i4));
                  } else {
                    a3++;
                    f3.call(e3, o2(a3, n3, B, i4), o2(a3, n3, Z, i4), o2(a3, n3, B, n3.notifyWith));
                  }
                } else {
                  if (r4 !== B) {
                    s2 = void 0;
                    u2 = [e3];
                  }
                  (i4 || n3.resolveWith)(s2, u2);
                }
              }, l2 = i4 ? f2 : function() {
                try {
                  f2();
                } catch (e3) {
                  if (D.Deferred.exceptionHook) {
                    D.Deferred.exceptionHook(e3, l2.error);
                  }
                  if (t4 + 1 >= a3) {
                    if (r4 !== Z) {
                      s2 = void 0;
                      u2 = [e3];
                    }
                    n3.rejectWith(s2, u2);
                  }
                }
              };
              if (t4) {
                l2();
              } else {
                if (D.Deferred.getErrorHook) {
                  l2.error = D.Deferred.getErrorHook();
                } else if (D.Deferred.getStackHook) {
                  l2.error = D.Deferred.getStackHook();
                }
                e2.setTimeout(l2);
              }
            };
          }
          return D.Deferred(function(e3) {
            n2[0][3].add(o2(0, e3, v(i3) ? i3 : B, e3.notifyWith));
            n2[1][3].add(o2(0, e3, v(t3) ? t3 : B));
            n2[2][3].add(o2(0, e3, v(r3) ? r3 : Z));
          }).promise();
        }, promise: function(e3) {
          return e3 != null ? D.extend(e3, i2) : i2;
        } }, a2 = {};
        D.each(n2, function(e3, t3) {
          var o2 = t3[2], s2 = t3[5];
          i2[t3[1]] = o2.add;
          if (s2) {
            o2.add(function() {
              r2 = s2;
            }, n2[3 - e3][2].disable, n2[3 - e3][3].disable, n2[0][2].lock, n2[0][3].lock);
          }
          o2.add(t3[3].fire);
          a2[t3[0]] = function() {
            a2[t3[0] + "With"](this === a2 ? void 0 : this, arguments);
            return this;
          };
          a2[t3[0] + "With"] = o2.fireWith;
        });
        i2.promise(a2);
        if (t2) {
          t2.call(a2, a2);
        }
        return a2;
      }, when: function(e3) {
        var t2 = arguments.length, n2 = t2, r2 = Array(n2), a2 = i.call(arguments), o2 = D.Deferred(), s2 = function(e4) {
          return function(n3) {
            r2[e4] = this;
            a2[e4] = arguments.length > 1 ? i.call(arguments) : n3;
            if (!--t2) {
              o2.resolveWith(r2, a2);
            }
          };
        };
        if (t2 <= 1) {
          J(e3, o2.done(s2(n2)).resolve, o2.reject, !t2);
          if (o2.state() === "pending" || v(a2[n2] && a2[n2].then)) {
            return o2.then();
          }
        }
        while (n2--) {
          J(a2[n2], s2(n2), o2.reject);
        }
        return o2.promise();
      } });
      var V = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      D.Deferred.exceptionHook = function(t2, n2) {
        if (e2.console && e2.console.warn && t2 && V.test(t2.name)) {
          e2.console.warn("jQuery.Deferred exception: " + t2.message, t2.stack, n2);
        }
      };
      D.readyException = function(t2) {
        e2.setTimeout(function() {
          throw t2;
        });
      };
      var X = D.Deferred();
      D.fn.ready = function(e3) {
        X.then(e3).catch(function(e4) {
          D.readyException(e4);
        });
        return this;
      };
      D.extend({ isReady: false, readyWait: 1, ready: function(e3) {
        if (e3 === true ? --D.readyWait : D.isReady) {
          return;
        }
        D.isReady = true;
        if (e3 !== true && --D.readyWait > 0) {
          return;
        }
        X.resolveWith(p, [D]);
      } });
      D.ready.then = X.then;
      function Q() {
        p.removeEventListener("DOMContentLoaded", Q);
        e2.removeEventListener("load", Q);
        D.ready();
      }
      if (p.readyState === "complete" || p.readyState !== "loading" && !p.documentElement.doScroll) {
        e2.setTimeout(D.ready);
      } else {
        p.addEventListener("DOMContentLoaded", Q);
        e2.addEventListener("load", Q);
      }
      var K = function(e3, t2, n2, r2, i2, a2, o2) {
        var s2 = 0, u2 = e3.length, f2 = n2 == null;
        if (y(n2) === "object") {
          i2 = true;
          for (s2 in n2) {
            K(e3, t2, s2, n2[s2], true, a2, o2);
          }
        } else if (r2 !== void 0) {
          i2 = true;
          if (!v(r2)) {
            o2 = true;
          }
          if (f2) {
            if (o2) {
              t2.call(e3, r2);
              t2 = null;
            } else {
              f2 = t2;
              t2 = function(e4, t3, n3) {
                return f2.call(D(e4), n3);
              };
            }
          }
          if (t2) {
            for (; s2 < u2; s2++) {
              t2(e3[s2], n2, o2 ? r2 : r2.call(e3[s2], s2, t2(e3[s2], n2)));
            }
          }
        }
        if (i2) {
          return e3;
        }
        if (f2) {
          return t2.call(e3);
        }
        return u2 ? t2(e3[0], n2) : a2;
      };
      var ee = /^-ms-/, te = /-([a-z])/g;
      function ne(e3, t2) {
        return t2.toUpperCase();
      }
      function re(e3) {
        return e3.replace(ee, "ms-").replace(te, ne);
      }
      var ie = function(e3) {
        return e3.nodeType === 1 || e3.nodeType === 9 || !+e3.nodeType;
      };
      function ae() {
        this.expando = D.expando + ae.uid++;
      }
      ae.uid = 1;
      ae.prototype = { cache: function(e3) {
        var t2 = e3[this.expando];
        if (!t2) {
          t2 = {};
          if (ie(e3)) {
            if (e3.nodeType) {
              e3[this.expando] = t2;
            } else {
              Object.defineProperty(e3, this.expando, { value: t2, configurable: true });
            }
          }
        }
        return t2;
      }, set: function(e3, t2, n2) {
        var r2, i2 = this.cache(e3);
        if (typeof t2 === "string") {
          i2[re(t2)] = n2;
        } else {
          for (r2 in t2) {
            i2[re(r2)] = t2[r2];
          }
        }
        return i2;
      }, get: function(e3, t2) {
        return t2 === void 0 ? this.cache(e3) : e3[this.expando] && e3[this.expando][re(t2)];
      }, access: function(e3, t2, n2) {
        if (t2 === void 0 || t2 && typeof t2 === "string" && n2 === void 0) {
          return this.get(e3, t2);
        }
        this.set(e3, t2, n2);
        return n2 !== void 0 ? n2 : t2;
      }, remove: function(e3, t2) {
        var n2, r2 = e3[this.expando];
        if (r2 === void 0) {
          return;
        }
        if (t2 !== void 0) {
          if (Array.isArray(t2)) {
            t2 = t2.map(re);
          } else {
            t2 = re(t2);
            t2 = t2 in r2 ? [t2] : t2.match(q) || [];
          }
          n2 = t2.length;
          while (n2--) {
            delete r2[t2[n2]];
          }
        }
        if (t2 === void 0 || D.isEmptyObject(r2)) {
          if (e3.nodeType) {
            e3[this.expando] = void 0;
          } else {
            delete e3[this.expando];
          }
        }
      }, hasData: function(e3) {
        var t2 = e3[this.expando];
        return t2 !== void 0 && !D.isEmptyObject(t2);
      } };
      var oe = new ae();
      var se = new ae();
      var ue = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, fe = /[A-Z]/g;
      function le(e3) {
        if (e3 === "true") {
          return true;
        }
        if (e3 === "false") {
          return false;
        }
        if (e3 === "null") {
          return null;
        }
        if (e3 === +e3 + "") {
          return +e3;
        }
        if (ue.test(e3)) {
          return JSON.parse(e3);
        }
        return e3;
      }
      function ce(e3, t2, n2) {
        var r2;
        if (n2 === void 0 && e3.nodeType === 1) {
          r2 = "data-" + t2.replace(fe, "-$&").toLowerCase();
          n2 = e3.getAttribute(r2);
          if (typeof n2 === "string") {
            try {
              n2 = le(n2);
            } catch (e4) {
            }
            se.set(e3, t2, n2);
          } else {
            n2 = void 0;
          }
        }
        return n2;
      }
      D.extend({ hasData: function(e3) {
        return se.hasData(e3) || oe.hasData(e3);
      }, data: function(e3, t2, n2) {
        return se.access(e3, t2, n2);
      }, removeData: function(e3, t2) {
        se.remove(e3, t2);
      }, _data: function(e3, t2, n2) {
        return oe.access(e3, t2, n2);
      }, _removeData: function(e3, t2) {
        oe.remove(e3, t2);
      } });
      D.fn.extend({ data: function(e3, t2) {
        var n2, r2, i2, a2 = this[0], o2 = a2 && a2.attributes;
        if (e3 === void 0) {
          if (this.length) {
            i2 = se.get(a2);
            if (a2.nodeType === 1 && !oe.get(a2, "hasDataAttrs")) {
              n2 = o2.length;
              while (n2--) {
                if (o2[n2]) {
                  r2 = o2[n2].name;
                  if (r2.indexOf("data-") === 0) {
                    r2 = re(r2.slice(5));
                    ce(a2, r2, i2[r2]);
                  }
                }
              }
              oe.set(a2, "hasDataAttrs", true);
            }
          }
          return i2;
        }
        if (typeof e3 === "object") {
          return this.each(function() {
            se.set(this, e3);
          });
        }
        return K(this, function(t3) {
          var n3;
          if (a2 && t3 === void 0) {
            n3 = se.get(a2, e3);
            if (n3 !== void 0) {
              return n3;
            }
            n3 = ce(a2, e3);
            if (n3 !== void 0) {
              return n3;
            }
            return;
          }
          this.each(function() {
            se.set(this, e3, t3);
          });
        }, null, t2, arguments.length > 1, null, true);
      }, removeData: function(e3) {
        return this.each(function() {
          se.remove(this, e3);
        });
      } });
      D.extend({ queue: function(e3, t2, n2) {
        var r2;
        if (e3) {
          t2 = (t2 || "fx") + "queue";
          r2 = oe.get(e3, t2);
          if (n2) {
            if (!r2 || Array.isArray(n2)) {
              r2 = oe.access(e3, t2, D.makeArray(n2));
            } else {
              r2.push(n2);
            }
          }
          return r2 || [];
        }
      }, dequeue: function(e3, t2) {
        t2 = t2 || "fx";
        var n2 = D.queue(e3, t2), r2 = n2.length, i2 = n2.shift(), a2 = D._queueHooks(e3, t2), o2 = function() {
          D.dequeue(e3, t2);
        };
        if (i2 === "inprogress") {
          i2 = n2.shift();
          r2--;
        }
        if (i2) {
          if (t2 === "fx") {
            n2.unshift("inprogress");
          }
          delete a2.stop;
          i2.call(e3, o2, a2);
        }
        if (!r2 && a2) {
          a2.empty.fire();
        }
      }, _queueHooks: function(e3, t2) {
        var n2 = t2 + "queueHooks";
        return oe.get(e3, n2) || oe.access(e3, n2, { empty: D.Callbacks("once memory").add(function() {
          oe.remove(e3, [t2 + "queue", n2]);
        }) });
      } });
      D.fn.extend({ queue: function(e3, t2) {
        var n2 = 2;
        if (typeof e3 !== "string") {
          t2 = e3;
          e3 = "fx";
          n2--;
        }
        if (arguments.length < n2) {
          return D.queue(this[0], e3);
        }
        return t2 === void 0 ? this : this.each(function() {
          var n3 = D.queue(this, e3, t2);
          D._queueHooks(this, e3);
          if (e3 === "fx" && n3[0] !== "inprogress") {
            D.dequeue(this, e3);
          }
        });
      }, dequeue: function(e3) {
        return this.each(function() {
          D.dequeue(this, e3);
        });
      }, clearQueue: function(e3) {
        return this.queue(e3 || "fx", []);
      }, promise: function(e3, t2) {
        var n2, r2 = 1, i2 = D.Deferred(), a2 = this, o2 = this.length, s2 = function() {
          if (!--r2) {
            i2.resolveWith(a2, [a2]);
          }
        };
        if (typeof e3 !== "string") {
          t2 = e3;
          e3 = void 0;
        }
        e3 = e3 || "fx";
        while (o2--) {
          n2 = oe.get(a2[o2], e3 + "queueHooks");
          if (n2 && n2.empty) {
            r2++;
            n2.empty.add(s2);
          }
        }
        s2();
        return i2.promise(t2);
      } });
      var de = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
      var he = new RegExp("^(?:([+-])=|)(" + de + ")([a-z%]*)$", "i");
      var ve = ["Top", "Right", "Bottom", "Left"];
      var me = p.documentElement;
      var pe = function(e3) {
        return D.contains(e3.ownerDocument, e3);
      }, ge = { composed: true };
      if (me.getRootNode) {
        pe = function(e3) {
          return D.contains(e3.ownerDocument, e3) || e3.getRootNode(ge) === e3.ownerDocument;
        };
      }
      var be = function(e3, t2) {
        e3 = t2 || e3;
        return e3.style.display === "none" || e3.style.display === "" && pe(e3) && D.css(e3, "display") === "none";
      };
      function ye(e3, t2, n2, r2) {
        var i2, a2, o2 = 20, s2 = r2 ? function() {
          return r2.cur();
        } : function() {
          return D.css(e3, t2, "");
        }, u2 = s2(), f2 = n2 && n2[3] || (D.cssNumber[t2] ? "" : "px"), l2 = e3.nodeType && (D.cssNumber[t2] || f2 !== "px" && +u2) && he.exec(D.css(e3, t2));
        if (l2 && l2[3] !== f2) {
          u2 = u2 / 2;
          f2 = f2 || l2[3];
          l2 = +u2 || 1;
          while (o2--) {
            D.style(e3, t2, l2 + f2);
            if ((1 - a2) * (1 - (a2 = s2() / u2 || 0.5)) <= 0) {
              o2 = 0;
            }
            l2 = l2 / a2;
          }
          l2 = l2 * 2;
          D.style(e3, t2, l2 + f2);
          n2 = n2 || [];
        }
        if (n2) {
          l2 = +l2 || +u2 || 0;
          i2 = n2[1] ? l2 + (n2[1] + 1) * n2[2] : +n2[2];
          if (r2) {
            r2.unit = f2;
            r2.start = l2;
            r2.end = i2;
          }
        }
        return i2;
      }
      var we = {};
      function Se(e3) {
        var t2, n2 = e3.ownerDocument, r2 = e3.nodeName, i2 = we[r2];
        if (i2) {
          return i2;
        }
        t2 = n2.body.appendChild(n2.createElement(r2));
        i2 = D.css(t2, "display");
        t2.parentNode.removeChild(t2);
        if (i2 === "none") {
          i2 = "block";
        }
        we[r2] = i2;
        return i2;
      }
      function De(e3, t2) {
        var n2, r2, i2 = [], a2 = 0, o2 = e3.length;
        for (; a2 < o2; a2++) {
          r2 = e3[a2];
          if (!r2.style) {
            continue;
          }
          n2 = r2.style.display;
          if (t2) {
            if (n2 === "none") {
              i2[a2] = oe.get(r2, "display") || null;
              if (!i2[a2]) {
                r2.style.display = "";
              }
            }
            if (r2.style.display === "" && be(r2)) {
              i2[a2] = Se(r2);
            }
          } else {
            if (n2 !== "none") {
              i2[a2] = "none";
              oe.set(r2, "display", n2);
            }
          }
        }
        for (a2 = 0; a2 < o2; a2++) {
          if (i2[a2] != null) {
            e3[a2].style.display = i2[a2];
          }
        }
        return e3;
      }
      D.fn.extend({ show: function() {
        return De(this, true);
      }, hide: function() {
        return De(this);
      }, toggle: function(e3) {
        if (typeof e3 === "boolean") {
          return e3 ? this.show() : this.hide();
        }
        return this.each(function() {
          if (be(this)) {
            D(this).show();
          } else {
            D(this).hide();
          }
        });
      } });
      var ke = /^(?:checkbox|radio)$/i;
      var xe = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
      var _e = /^$|^module$|\/(?:java|ecma)script/i;
      (function() {
        var e3 = p.createDocumentFragment(), t2 = e3.appendChild(p.createElement("div")), n2 = p.createElement("input");
        n2.setAttribute("type", "radio");
        n2.setAttribute("checked", "checked");
        n2.setAttribute("name", "t");
        t2.appendChild(n2);
        h2.checkClone = t2.cloneNode(true).cloneNode(true).lastChild.checked;
        t2.innerHTML = "<textarea>x</textarea>";
        h2.noCloneChecked = !!t2.cloneNode(true).lastChild.defaultValue;
        t2.innerHTML = "<option></option>";
        h2.option = !!t2.lastChild;
      })();
      var Me = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
      Me.tbody = Me.tfoot = Me.colgroup = Me.caption = Me.thead;
      Me.th = Me.td;
      if (!h2.option) {
        Me.optgroup = Me.option = [1, "<select multiple='multiple'>", "</select>"];
      }
      function Te(e3, t2) {
        var n2;
        if (typeof e3.getElementsByTagName !== "undefined") {
          n2 = e3.getElementsByTagName(t2 || "*");
        } else if (typeof e3.querySelectorAll !== "undefined") {
          n2 = e3.querySelectorAll(t2 || "*");
        } else {
          n2 = [];
        }
        if (t2 === void 0 || t2 && x(e3, t2)) {
          return D.merge([e3], n2);
        }
        return n2;
      }
      function Ee(e3, t2) {
        var n2 = 0, r2 = e3.length;
        for (; n2 < r2; n2++) {
          oe.set(e3[n2], "globalEval", !t2 || oe.get(t2[n2], "globalEval"));
        }
      }
      var Fe = /<|&#?\w+;/;
      function Ye(e3, t2, n2, r2, i2) {
        var a2, o2, s2, u2, f2, l2, c2 = t2.createDocumentFragment(), d2 = [], h3 = 0, v2 = e3.length;
        for (; h3 < v2; h3++) {
          a2 = e3[h3];
          if (a2 || a2 === 0) {
            if (y(a2) === "object") {
              D.merge(d2, a2.nodeType ? [a2] : a2);
            } else if (!Fe.test(a2)) {
              d2.push(t2.createTextNode(a2));
            } else {
              o2 = o2 || c2.appendChild(t2.createElement("div"));
              s2 = (xe.exec(a2) || ["", ""])[1].toLowerCase();
              u2 = Me[s2] || Me._default;
              o2.innerHTML = u2[1] + D.htmlPrefilter(a2) + u2[2];
              l2 = u2[0];
              while (l2--) {
                o2 = o2.lastChild;
              }
              D.merge(d2, o2.childNodes);
              o2 = c2.firstChild;
              o2.textContent = "";
            }
          }
        }
        c2.textContent = "";
        h3 = 0;
        while (a2 = d2[h3++]) {
          if (r2 && D.inArray(a2, r2) > -1) {
            if (i2) {
              i2.push(a2);
            }
            continue;
          }
          f2 = pe(a2);
          o2 = Te(c2.appendChild(a2), "script");
          if (f2) {
            Ee(o2);
          }
          if (n2) {
            l2 = 0;
            while (a2 = o2[l2++]) {
              if (_e.test(a2.type || "")) {
                n2.push(a2);
              }
            }
          }
        }
        return c2;
      }
      var Ae = /^([^.]*)(?:\.(.+)|)/;
      function Oe() {
        return true;
      }
      function Ne() {
        return false;
      }
      function Re(e3, t2, n2, r2, i2, a2) {
        var o2, s2;
        if (typeof t2 === "object") {
          if (typeof n2 !== "string") {
            r2 = r2 || n2;
            n2 = void 0;
          }
          for (s2 in t2) {
            Re(e3, s2, n2, r2, t2[s2], a2);
          }
          return e3;
        }
        if (r2 == null && i2 == null) {
          i2 = n2;
          r2 = n2 = void 0;
        } else if (i2 == null) {
          if (typeof n2 === "string") {
            i2 = r2;
            r2 = void 0;
          } else {
            i2 = r2;
            r2 = n2;
            n2 = void 0;
          }
        }
        if (i2 === false) {
          i2 = Ne;
        } else if (!i2) {
          return e3;
        }
        if (a2 === 1) {
          o2 = i2;
          i2 = function(e4) {
            D().off(e4);
            return o2.apply(this, arguments);
          };
          i2.guid = o2.guid || (o2.guid = D.guid++);
        }
        return e3.each(function() {
          D.event.add(this, t2, i2, r2, n2);
        });
      }
      D.event = { global: {}, add: function(e3, t2, n2, r2, i2) {
        var a2, o2, s2, u2, f2, l2, c2, d2, h3, v2, m2, p2 = oe.get(e3);
        if (!ie(e3)) {
          return;
        }
        if (n2.handler) {
          a2 = n2;
          n2 = a2.handler;
          i2 = a2.selector;
        }
        if (i2) {
          D.find.matchesSelector(me, i2);
        }
        if (!n2.guid) {
          n2.guid = D.guid++;
        }
        if (!(u2 = p2.events)) {
          u2 = p2.events = /* @__PURE__ */ Object.create(null);
        }
        if (!(o2 = p2.handle)) {
          o2 = p2.handle = function(t3) {
            return typeof D !== "undefined" && D.event.triggered !== t3.type ? D.event.dispatch.apply(e3, arguments) : void 0;
          };
        }
        t2 = (t2 || "").match(q) || [""];
        f2 = t2.length;
        while (f2--) {
          s2 = Ae.exec(t2[f2]) || [];
          h3 = m2 = s2[1];
          v2 = (s2[2] || "").split(".").sort();
          if (!h3) {
            continue;
          }
          c2 = D.event.special[h3] || {};
          h3 = (i2 ? c2.delegateType : c2.bindType) || h3;
          c2 = D.event.special[h3] || {};
          l2 = D.extend({ type: h3, origType: m2, data: r2, handler: n2, guid: n2.guid, selector: i2, needsContext: i2 && D.expr.match.needsContext.test(i2), namespace: v2.join(".") }, a2);
          if (!(d2 = u2[h3])) {
            d2 = u2[h3] = [];
            d2.delegateCount = 0;
            if (!c2.setup || c2.setup.call(e3, r2, v2, o2) === false) {
              if (e3.addEventListener) {
                e3.addEventListener(h3, o2);
              }
            }
          }
          if (c2.add) {
            c2.add.call(e3, l2);
            if (!l2.handler.guid) {
              l2.handler.guid = n2.guid;
            }
          }
          if (i2) {
            d2.splice(d2.delegateCount++, 0, l2);
          } else {
            d2.push(l2);
          }
          D.event.global[h3] = true;
        }
      }, remove: function(e3, t2, n2, r2, i2) {
        var a2, o2, s2, u2, f2, l2, c2, d2, h3, v2, m2, p2 = oe.hasData(e3) && oe.get(e3);
        if (!p2 || !(u2 = p2.events)) {
          return;
        }
        t2 = (t2 || "").match(q) || [""];
        f2 = t2.length;
        while (f2--) {
          s2 = Ae.exec(t2[f2]) || [];
          h3 = m2 = s2[1];
          v2 = (s2[2] || "").split(".").sort();
          if (!h3) {
            for (h3 in u2) {
              D.event.remove(e3, h3 + t2[f2], n2, r2, true);
            }
            continue;
          }
          c2 = D.event.special[h3] || {};
          h3 = (r2 ? c2.delegateType : c2.bindType) || h3;
          d2 = u2[h3] || [];
          s2 = s2[2] && new RegExp("(^|\\.)" + v2.join("\\.(?:.*\\.|)") + "(\\.|$)");
          o2 = a2 = d2.length;
          while (a2--) {
            l2 = d2[a2];
            if ((i2 || m2 === l2.origType) && (!n2 || n2.guid === l2.guid) && (!s2 || s2.test(l2.namespace)) && (!r2 || r2 === l2.selector || r2 === "**" && l2.selector)) {
              d2.splice(a2, 1);
              if (l2.selector) {
                d2.delegateCount--;
              }
              if (c2.remove) {
                c2.remove.call(e3, l2);
              }
            }
          }
          if (o2 && !d2.length) {
            if (!c2.teardown || c2.teardown.call(e3, v2, p2.handle) === false) {
              D.removeEvent(e3, h3, p2.handle);
            }
            delete u2[h3];
          }
        }
        if (D.isEmptyObject(u2)) {
          oe.remove(e3, "handle events");
        }
      }, dispatch: function(e3) {
        var t2, n2, r2, i2, a2, o2, s2 = new Array(arguments.length), u2 = D.event.fix(e3), f2 = (oe.get(this, "events") || /* @__PURE__ */ Object.create(null))[u2.type] || [], l2 = D.event.special[u2.type] || {};
        s2[0] = u2;
        for (t2 = 1; t2 < arguments.length; t2++) {
          s2[t2] = arguments[t2];
        }
        u2.delegateTarget = this;
        if (l2.preDispatch && l2.preDispatch.call(this, u2) === false) {
          return;
        }
        o2 = D.event.handlers.call(this, u2, f2);
        t2 = 0;
        while ((i2 = o2[t2++]) && !u2.isPropagationStopped()) {
          u2.currentTarget = i2.elem;
          n2 = 0;
          while ((a2 = i2.handlers[n2++]) && !u2.isImmediatePropagationStopped()) {
            if (!u2.rnamespace || a2.namespace === false || u2.rnamespace.test(a2.namespace)) {
              u2.handleObj = a2;
              u2.data = a2.data;
              r2 = ((D.event.special[a2.origType] || {}).handle || a2.handler).apply(i2.elem, s2);
              if (r2 !== void 0) {
                if ((u2.result = r2) === false) {
                  u2.preventDefault();
                  u2.stopPropagation();
                }
              }
            }
          }
        }
        if (l2.postDispatch) {
          l2.postDispatch.call(this, u2);
        }
        return u2.result;
      }, handlers: function(e3, t2) {
        var n2, r2, i2, a2, o2, s2 = [], u2 = t2.delegateCount, f2 = e3.target;
        if (u2 && f2.nodeType && !(e3.type === "click" && e3.button >= 1)) {
          for (; f2 !== this; f2 = f2.parentNode || this) {
            if (f2.nodeType === 1 && !(e3.type === "click" && f2.disabled === true)) {
              a2 = [];
              o2 = {};
              for (n2 = 0; n2 < u2; n2++) {
                r2 = t2[n2];
                i2 = r2.selector + " ";
                if (o2[i2] === void 0) {
                  o2[i2] = r2.needsContext ? D(i2, this).index(f2) > -1 : D.find(i2, this, null, [f2]).length;
                }
                if (o2[i2]) {
                  a2.push(r2);
                }
              }
              if (a2.length) {
                s2.push({ elem: f2, handlers: a2 });
              }
            }
          }
        }
        f2 = this;
        if (u2 < t2.length) {
          s2.push({ elem: f2, handlers: t2.slice(u2) });
        }
        return s2;
      }, addProp: function(e3, t2) {
        Object.defineProperty(D.Event.prototype, e3, { enumerable: true, configurable: true, get: v(t2) ? function() {
          if (this.originalEvent) {
            return t2(this.originalEvent);
          }
        } : function() {
          if (this.originalEvent) {
            return this.originalEvent[e3];
          }
        }, set: function(t3) {
          Object.defineProperty(this, e3, { enumerable: true, configurable: true, writable: true, value: t3 });
        } });
      }, fix: function(e3) {
        return e3[D.expando] ? e3 : new D.Event(e3);
      }, special: { load: { noBubble: true }, click: { setup: function(e3) {
        var t2 = this || e3;
        if (ke.test(t2.type) && t2.click && x(t2, "input")) {
          Ce(t2, "click", true);
        }
        return false;
      }, trigger: function(e3) {
        var t2 = this || e3;
        if (ke.test(t2.type) && t2.click && x(t2, "input")) {
          Ce(t2, "click");
        }
        return true;
      }, _default: function(e3) {
        var t2 = e3.target;
        return ke.test(t2.type) && t2.click && x(t2, "input") && oe.get(t2, "click") || x(t2, "a");
      } }, beforeunload: { postDispatch: function(e3) {
        if (e3.result !== void 0 && e3.originalEvent) {
          e3.originalEvent.returnValue = e3.result;
        }
      } } } };
      function Ce(e3, t2, n2) {
        if (!n2) {
          if (oe.get(e3, t2) === void 0) {
            D.event.add(e3, t2, Oe);
          }
          return;
        }
        oe.set(e3, t2, false);
        D.event.add(e3, t2, { namespace: false, handler: function(e4) {
          var n3, r2 = oe.get(this, t2);
          if (e4.isTrigger & 1 && this[t2]) {
            if (!r2) {
              r2 = i.call(arguments);
              oe.set(this, t2, r2);
              this[t2]();
              n3 = oe.get(this, t2);
              oe.set(this, t2, false);
              if (r2 !== n3) {
                e4.stopImmediatePropagation();
                e4.preventDefault();
                return n3;
              }
            } else if ((D.event.special[t2] || {}).delegateType) {
              e4.stopPropagation();
            }
          } else if (r2) {
            oe.set(this, t2, D.event.trigger(r2[0], r2.slice(1), this));
            e4.stopPropagation();
            e4.isImmediatePropagationStopped = Oe;
          }
        } });
      }
      D.removeEvent = function(e3, t2, n2) {
        if (e3.removeEventListener) {
          e3.removeEventListener(t2, n2);
        }
      };
      D.Event = function(e3, t2) {
        if (!(this instanceof D.Event)) {
          return new D.Event(e3, t2);
        }
        if (e3 && e3.type) {
          this.originalEvent = e3;
          this.type = e3.type;
          this.isDefaultPrevented = e3.defaultPrevented || e3.defaultPrevented === void 0 && e3.returnValue === false ? Oe : Ne;
          this.target = e3.target && e3.target.nodeType === 3 ? e3.target.parentNode : e3.target;
          this.currentTarget = e3.currentTarget;
          this.relatedTarget = e3.relatedTarget;
        } else {
          this.type = e3;
        }
        if (t2) {
          D.extend(this, t2);
        }
        this.timeStamp = e3 && e3.timeStamp || Date.now();
        this[D.expando] = true;
      };
      D.Event.prototype = { constructor: D.Event, isDefaultPrevented: Ne, isPropagationStopped: Ne, isImmediatePropagationStopped: Ne, isSimulated: false, preventDefault: function() {
        var e3 = this.originalEvent;
        this.isDefaultPrevented = Oe;
        if (e3 && !this.isSimulated) {
          e3.preventDefault();
        }
      }, stopPropagation: function() {
        var e3 = this.originalEvent;
        this.isPropagationStopped = Oe;
        if (e3 && !this.isSimulated) {
          e3.stopPropagation();
        }
      }, stopImmediatePropagation: function() {
        var e3 = this.originalEvent;
        this.isImmediatePropagationStopped = Oe;
        if (e3 && !this.isSimulated) {
          e3.stopImmediatePropagation();
        }
        this.stopPropagation();
      } };
      D.each({ altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, char: true, code: true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: true }, D.event.addProp);
      D.each({ focus: "focusin", blur: "focusout" }, function(e3, t2) {
        function n2(e4) {
          if (p.documentMode) {
            var n3 = oe.get(this, "handle"), r2 = D.event.fix(e4);
            r2.type = e4.type === "focusin" ? "focus" : "blur";
            r2.isSimulated = true;
            n3(e4);
            if (r2.target === r2.currentTarget) {
              n3(r2);
            }
          } else {
            D.event.simulate(t2, e4.target, D.event.fix(e4));
          }
        }
        D.event.special[e3] = { setup: function() {
          var r2;
          Ce(this, e3, true);
          if (p.documentMode) {
            r2 = oe.get(this, t2);
            if (!r2) {
              this.addEventListener(t2, n2);
            }
            oe.set(this, t2, (r2 || 0) + 1);
          } else {
            return false;
          }
        }, trigger: function() {
          Ce(this, e3);
          return true;
        }, teardown: function() {
          var e4;
          if (p.documentMode) {
            e4 = oe.get(this, t2) - 1;
            if (!e4) {
              this.removeEventListener(t2, n2);
              oe.remove(this, t2);
            } else {
              oe.set(this, t2, e4);
            }
          } else {
            return false;
          }
        }, _default: function(t3) {
          return oe.get(t3.target, e3);
        }, delegateType: t2 };
        D.event.special[t2] = { setup: function() {
          var r2 = this.ownerDocument || this.document || this, i2 = p.documentMode ? this : r2, a2 = oe.get(i2, t2);
          if (!a2) {
            if (p.documentMode) {
              this.addEventListener(t2, n2);
            } else {
              r2.addEventListener(e3, n2, true);
            }
          }
          oe.set(i2, t2, (a2 || 0) + 1);
        }, teardown: function() {
          var r2 = this.ownerDocument || this.document || this, i2 = p.documentMode ? this : r2, a2 = oe.get(i2, t2) - 1;
          if (!a2) {
            if (p.documentMode) {
              this.removeEventListener(t2, n2);
            } else {
              r2.removeEventListener(e3, n2, true);
            }
            oe.remove(i2, t2);
          } else {
            oe.set(i2, t2, a2);
          }
        } };
      });
      D.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function(e3, t2) {
        D.event.special[e3] = { delegateType: t2, bindType: t2, handle: function(e4) {
          var n2, r2 = this, i2 = e4.relatedTarget, a2 = e4.handleObj;
          if (!i2 || i2 !== r2 && !D.contains(r2, i2)) {
            e4.type = a2.origType;
            n2 = a2.handler.apply(this, arguments);
            e4.type = t2;
          }
          return n2;
        } };
      });
      D.fn.extend({ on: function(e3, t2, n2, r2) {
        return Re(this, e3, t2, n2, r2);
      }, one: function(e3, t2, n2, r2) {
        return Re(this, e3, t2, n2, r2, 1);
      }, off: function(e3, t2, n2) {
        var r2, i2;
        if (e3 && e3.preventDefault && e3.handleObj) {
          r2 = e3.handleObj;
          D(e3.delegateTarget).off(r2.namespace ? r2.origType + "." + r2.namespace : r2.origType, r2.selector, r2.handler);
          return this;
        }
        if (typeof e3 === "object") {
          for (i2 in e3) {
            this.off(i2, t2, e3[i2]);
          }
          return this;
        }
        if (t2 === false || typeof t2 === "function") {
          n2 = t2;
          t2 = void 0;
        }
        if (n2 === false) {
          n2 = Ne;
        }
        return this.each(function() {
          D.event.remove(this, e3, n2, t2);
        });
      } });
      var Ie = /<script|<style|<link/i, Pe = /checked\s*(?:[^=]|=\s*.checked.)/i, Le = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
      function We(e3, t2) {
        if (x(e3, "table") && x(t2.nodeType !== 11 ? t2 : t2.firstChild, "tr")) {
          return D(e3).children("tbody")[0] || e3;
        }
        return e3;
      }
      function je(e3) {
        e3.type = (e3.getAttribute("type") !== null) + "/" + e3.type;
        return e3;
      }
      function He(e3) {
        if ((e3.type || "").slice(0, 5) === "true/") {
          e3.type = e3.type.slice(5);
        } else {
          e3.removeAttribute("type");
        }
        return e3;
      }
      function Ue(e3, t2) {
        var n2, r2, i2, a2, o2, s2, u2;
        if (t2.nodeType !== 1) {
          return;
        }
        if (oe.hasData(e3)) {
          a2 = oe.get(e3);
          u2 = a2.events;
          if (u2) {
            oe.remove(t2, "handle events");
            for (i2 in u2) {
              for (n2 = 0, r2 = u2[i2].length; n2 < r2; n2++) {
                D.event.add(t2, i2, u2[i2][n2]);
              }
            }
          }
        }
        if (se.hasData(e3)) {
          o2 = se.access(e3);
          s2 = D.extend({}, o2);
          se.set(t2, s2);
        }
      }
      function $e(e3, t2) {
        var n2 = t2.nodeName.toLowerCase();
        if (n2 === "input" && ke.test(e3.type)) {
          t2.checked = e3.checked;
        } else if (n2 === "input" || n2 === "textarea") {
          t2.defaultValue = e3.defaultValue;
        }
      }
      function Ge(e3, t2, n2, r2) {
        t2 = a(t2);
        var i2, o2, s2, u2, f2, l2, c2 = 0, d2 = e3.length, m2 = d2 - 1, p2 = t2[0], g2 = v(p2);
        if (g2 || d2 > 1 && typeof p2 === "string" && !h2.checkClone && Pe.test(p2)) {
          return e3.each(function(i3) {
            var a2 = e3.eq(i3);
            if (g2) {
              t2[0] = p2.call(this, i3, a2.html());
            }
            Ge(a2, t2, n2, r2);
          });
        }
        if (d2) {
          i2 = Ye(t2, e3[0].ownerDocument, false, e3, r2);
          o2 = i2.firstChild;
          if (i2.childNodes.length === 1) {
            i2 = o2;
          }
          if (o2 || r2) {
            s2 = D.map(Te(i2, "script"), je);
            u2 = s2.length;
            for (; c2 < d2; c2++) {
              f2 = i2;
              if (c2 !== m2) {
                f2 = D.clone(f2, true, true);
                if (u2) {
                  D.merge(s2, Te(f2, "script"));
                }
              }
              n2.call(e3[c2], f2, c2);
            }
            if (u2) {
              l2 = s2[s2.length - 1].ownerDocument;
              D.map(s2, He);
              for (c2 = 0; c2 < u2; c2++) {
                f2 = s2[c2];
                if (_e.test(f2.type || "") && !oe.access(f2, "globalEval") && D.contains(l2, f2)) {
                  if (f2.src && (f2.type || "").toLowerCase() !== "module") {
                    if (D._evalUrl && !f2.noModule) {
                      D._evalUrl(f2.src, { nonce: f2.nonce || f2.getAttribute("nonce") }, l2);
                    }
                  } else {
                    b(f2.textContent.replace(Le, ""), f2, l2);
                  }
                }
              }
            }
          }
        }
        return e3;
      }
      function qe(e3, t2, n2) {
        var r2, i2 = t2 ? D.filter(t2, e3) : e3, a2 = 0;
        for (; (r2 = i2[a2]) != null; a2++) {
          if (!n2 && r2.nodeType === 1) {
            D.cleanData(Te(r2));
          }
          if (r2.parentNode) {
            if (n2 && pe(r2)) {
              Ee(Te(r2, "script"));
            }
            r2.parentNode.removeChild(r2);
          }
        }
        return e3;
      }
      D.extend({ htmlPrefilter: function(e3) {
        return e3;
      }, clone: function(e3, t2, n2) {
        var r2, i2, a2, o2, s2 = e3.cloneNode(true), u2 = pe(e3);
        if (!h2.noCloneChecked && (e3.nodeType === 1 || e3.nodeType === 11) && !D.isXMLDoc(e3)) {
          o2 = Te(s2);
          a2 = Te(e3);
          for (r2 = 0, i2 = a2.length; r2 < i2; r2++) {
            $e(a2[r2], o2[r2]);
          }
        }
        if (t2) {
          if (n2) {
            a2 = a2 || Te(e3);
            o2 = o2 || Te(s2);
            for (r2 = 0, i2 = a2.length; r2 < i2; r2++) {
              Ue(a2[r2], o2[r2]);
            }
          } else {
            Ue(e3, s2);
          }
        }
        o2 = Te(s2, "script");
        if (o2.length > 0) {
          Ee(o2, !u2 && Te(e3, "script"));
        }
        return s2;
      }, cleanData: function(e3) {
        var t2, n2, r2, i2 = D.event.special, a2 = 0;
        for (; (n2 = e3[a2]) !== void 0; a2++) {
          if (ie(n2)) {
            if (t2 = n2[oe.expando]) {
              if (t2.events) {
                for (r2 in t2.events) {
                  if (i2[r2]) {
                    D.event.remove(n2, r2);
                  } else {
                    D.removeEvent(n2, r2, t2.handle);
                  }
                }
              }
              n2[oe.expando] = void 0;
            }
            if (n2[se.expando]) {
              n2[se.expando] = void 0;
            }
          }
        }
      } });
      D.fn.extend({ detach: function(e3) {
        return qe(this, e3, true);
      }, remove: function(e3) {
        return qe(this, e3);
      }, text: function(e3) {
        return K(this, function(e4) {
          return e4 === void 0 ? D.text(this) : this.empty().each(function() {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
              this.textContent = e4;
            }
          });
        }, null, e3, arguments.length);
      }, append: function() {
        return Ge(this, arguments, function(e3) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var t2 = We(this, e3);
            t2.appendChild(e3);
          }
        });
      }, prepend: function() {
        return Ge(this, arguments, function(e3) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var t2 = We(this, e3);
            t2.insertBefore(e3, t2.firstChild);
          }
        });
      }, before: function() {
        return Ge(this, arguments, function(e3) {
          if (this.parentNode) {
            this.parentNode.insertBefore(e3, this);
          }
        });
      }, after: function() {
        return Ge(this, arguments, function(e3) {
          if (this.parentNode) {
            this.parentNode.insertBefore(e3, this.nextSibling);
          }
        });
      }, empty: function() {
        var e3, t2 = 0;
        for (; (e3 = this[t2]) != null; t2++) {
          if (e3.nodeType === 1) {
            D.cleanData(Te(e3, false));
            e3.textContent = "";
          }
        }
        return this;
      }, clone: function(e3, t2) {
        e3 = e3 == null ? false : e3;
        t2 = t2 == null ? e3 : t2;
        return this.map(function() {
          return D.clone(this, e3, t2);
        });
      }, html: function(e3) {
        return K(this, function(e4) {
          var t2 = this[0] || {}, n2 = 0, r2 = this.length;
          if (e4 === void 0 && t2.nodeType === 1) {
            return t2.innerHTML;
          }
          if (typeof e4 === "string" && !Ie.test(e4) && !Me[(xe.exec(e4) || ["", ""])[1].toLowerCase()]) {
            e4 = D.htmlPrefilter(e4);
            try {
              for (; n2 < r2; n2++) {
                t2 = this[n2] || {};
                if (t2.nodeType === 1) {
                  D.cleanData(Te(t2, false));
                  t2.innerHTML = e4;
                }
              }
              t2 = 0;
            } catch (e5) {
            }
          }
          if (t2) {
            this.empty().append(e4);
          }
        }, null, e3, arguments.length);
      }, replaceWith: function() {
        var e3 = [];
        return Ge(this, arguments, function(t2) {
          var n2 = this.parentNode;
          if (D.inArray(this, e3) < 0) {
            D.cleanData(Te(this));
            if (n2) {
              n2.replaceChild(t2, this);
            }
          }
        }, e3);
      } });
      D.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function(e3, t2) {
        D.fn[e3] = function(e4) {
          var n2, r2 = [], i2 = D(e4), a2 = i2.length - 1, s2 = 0;
          for (; s2 <= a2; s2++) {
            n2 = s2 === a2 ? this : this.clone(true);
            D(i2[s2])[t2](n2);
            o.apply(r2, n2.get());
          }
          return this.pushStack(r2);
        };
      });
      var ze = new RegExp("^(" + de + ")(?!px)[a-z%]+$", "i");
      var Be = /^--/;
      var Ze = function(t2) {
        var n2 = t2.ownerDocument.defaultView;
        if (!n2 || !n2.opener) {
          n2 = e2;
        }
        return n2.getComputedStyle(t2);
      };
      var Je = function(e3, t2, n2) {
        var r2, i2, a2 = {};
        for (i2 in t2) {
          a2[i2] = e3.style[i2];
          e3.style[i2] = t2[i2];
        }
        r2 = n2.call(e3);
        for (i2 in t2) {
          e3.style[i2] = a2[i2];
        }
        return r2;
      };
      var Ve = new RegExp(ve.join("|"), "i");
      (function() {
        function t2() {
          if (!l2) {
            return;
          }
          f2.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
          l2.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
          me.appendChild(f2).appendChild(l2);
          var t3 = e2.getComputedStyle(l2);
          r2 = t3.top !== "1%";
          u2 = n2(t3.marginLeft) === 12;
          l2.style.right = "60%";
          o2 = n2(t3.right) === 36;
          i2 = n2(t3.width) === 36;
          l2.style.position = "absolute";
          a2 = n2(l2.offsetWidth / 3) === 12;
          me.removeChild(f2);
          l2 = null;
        }
        function n2(e3) {
          return Math.round(parseFloat(e3));
        }
        var r2, i2, a2, o2, s2, u2, f2 = p.createElement("div"), l2 = p.createElement("div");
        if (!l2.style) {
          return;
        }
        l2.style.backgroundClip = "content-box";
        l2.cloneNode(true).style.backgroundClip = "";
        h2.clearCloneStyle = l2.style.backgroundClip === "content-box";
        D.extend(h2, { boxSizingReliable: function() {
          t2();
          return i2;
        }, pixelBoxStyles: function() {
          t2();
          return o2;
        }, pixelPosition: function() {
          t2();
          return r2;
        }, reliableMarginLeft: function() {
          t2();
          return u2;
        }, scrollboxSize: function() {
          t2();
          return a2;
        }, reliableTrDimensions: function() {
          var t3, n3, r3, i3;
          if (s2 == null) {
            t3 = p.createElement("table");
            n3 = p.createElement("tr");
            r3 = p.createElement("div");
            t3.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
            n3.style.cssText = "box-sizing:content-box;border:1px solid";
            n3.style.height = "1px";
            r3.style.height = "9px";
            r3.style.display = "block";
            me.appendChild(t3).appendChild(n3).appendChild(r3);
            i3 = e2.getComputedStyle(n3);
            s2 = parseInt(i3.height, 10) + parseInt(i3.borderTopWidth, 10) + parseInt(i3.borderBottomWidth, 10) === n3.offsetHeight;
            me.removeChild(t3);
          }
          return s2;
        } });
      })();
      function Xe(e3, t2, n2) {
        var r2, i2, a2, o2, s2 = Be.test(t2), u2 = e3.style;
        n2 = n2 || Ze(e3);
        if (n2) {
          o2 = n2.getPropertyValue(t2) || n2[t2];
          if (s2 && o2) {
            o2 = o2.replace(F, "$1") || void 0;
          }
          if (o2 === "" && !pe(e3)) {
            o2 = D.style(e3, t2);
          }
          if (!h2.pixelBoxStyles() && ze.test(o2) && Ve.test(t2)) {
            r2 = u2.width;
            i2 = u2.minWidth;
            a2 = u2.maxWidth;
            u2.minWidth = u2.maxWidth = u2.width = o2;
            o2 = n2.width;
            u2.width = r2;
            u2.minWidth = i2;
            u2.maxWidth = a2;
          }
        }
        return o2 !== void 0 ? o2 + "" : o2;
      }
      function Qe(e3, t2) {
        return { get: function() {
          if (e3()) {
            delete this.get;
            return;
          }
          return (this.get = t2).apply(this, arguments);
        } };
      }
      var Ke = ["Webkit", "Moz", "ms"], et = p.createElement("div").style, tt = {};
      function nt(e3) {
        var t2 = e3[0].toUpperCase() + e3.slice(1), n2 = Ke.length;
        while (n2--) {
          e3 = Ke[n2] + t2;
          if (e3 in et) {
            return e3;
          }
        }
      }
      function rt(e3) {
        var t2 = D.cssProps[e3] || tt[e3];
        if (t2) {
          return t2;
        }
        if (e3 in et) {
          return e3;
        }
        return tt[e3] = nt(e3) || e3;
      }
      var it = /^(none|table(?!-c[ea]).+)/, at = { position: "absolute", visibility: "hidden", display: "block" }, ot = { letterSpacing: "0", fontWeight: "400" };
      function st(e3, t2, n2) {
        var r2 = he.exec(t2);
        return r2 ? Math.max(0, r2[2] - (n2 || 0)) + (r2[3] || "px") : t2;
      }
      function ut(e3, t2, n2, r2, i2, a2) {
        var o2 = t2 === "width" ? 1 : 0, s2 = 0, u2 = 0, f2 = 0;
        if (n2 === (r2 ? "border" : "content")) {
          return 0;
        }
        for (; o2 < 4; o2 += 2) {
          if (n2 === "margin") {
            f2 += D.css(e3, n2 + ve[o2], true, i2);
          }
          if (!r2) {
            u2 += D.css(e3, "padding" + ve[o2], true, i2);
            if (n2 !== "padding") {
              u2 += D.css(e3, "border" + ve[o2] + "Width", true, i2);
            } else {
              s2 += D.css(e3, "border" + ve[o2] + "Width", true, i2);
            }
          } else {
            if (n2 === "content") {
              u2 -= D.css(e3, "padding" + ve[o2], true, i2);
            }
            if (n2 !== "margin") {
              u2 -= D.css(e3, "border" + ve[o2] + "Width", true, i2);
            }
          }
        }
        if (!r2 && a2 >= 0) {
          u2 += Math.max(0, Math.ceil(e3["offset" + t2[0].toUpperCase() + t2.slice(1)] - a2 - u2 - s2 - 0.5)) || 0;
        }
        return u2 + f2;
      }
      function ft(e3, t2, n2) {
        var r2 = Ze(e3), i2 = !h2.boxSizingReliable() || n2, a2 = i2 && D.css(e3, "boxSizing", false, r2) === "border-box", o2 = a2, s2 = Xe(e3, t2, r2), u2 = "offset" + t2[0].toUpperCase() + t2.slice(1);
        if (ze.test(s2)) {
          if (!n2) {
            return s2;
          }
          s2 = "auto";
        }
        if ((!h2.boxSizingReliable() && a2 || !h2.reliableTrDimensions() && x(e3, "tr") || s2 === "auto" || !parseFloat(s2) && D.css(e3, "display", false, r2) === "inline") && e3.getClientRects().length) {
          a2 = D.css(e3, "boxSizing", false, r2) === "border-box";
          o2 = u2 in e3;
          if (o2) {
            s2 = e3[u2];
          }
        }
        s2 = parseFloat(s2) || 0;
        return s2 + ut(e3, t2, n2 || (a2 ? "border" : "content"), o2, r2, s2) + "px";
      }
      D.extend({ cssHooks: { opacity: { get: function(e3, t2) {
        if (t2) {
          var n2 = Xe(e3, "opacity");
          return n2 === "" ? "1" : n2;
        }
      } } }, cssNumber: { animationIterationCount: true, aspectRatio: true, borderImageSlice: true, columnCount: true, flexGrow: true, flexShrink: true, fontWeight: true, gridArea: true, gridColumn: true, gridColumnEnd: true, gridColumnStart: true, gridRow: true, gridRowEnd: true, gridRowStart: true, lineHeight: true, opacity: true, order: true, orphans: true, scale: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeMiterlimit: true, strokeOpacity: true }, cssProps: {}, style: function(e3, t2, n2, r2) {
        if (!e3 || e3.nodeType === 3 || e3.nodeType === 8 || !e3.style) {
          return;
        }
        var i2, a2, o2, s2 = re(t2), u2 = Be.test(t2), f2 = e3.style;
        if (!u2) {
          t2 = rt(s2);
        }
        o2 = D.cssHooks[t2] || D.cssHooks[s2];
        if (n2 !== void 0) {
          a2 = typeof n2;
          if (a2 === "string" && (i2 = he.exec(n2)) && i2[1]) {
            n2 = ye(e3, t2, i2);
            a2 = "number";
          }
          if (n2 == null || n2 !== n2) {
            return;
          }
          if (a2 === "number" && !u2) {
            n2 += i2 && i2[3] || (D.cssNumber[s2] ? "" : "px");
          }
          if (!h2.clearCloneStyle && n2 === "" && t2.indexOf("background") === 0) {
            f2[t2] = "inherit";
          }
          if (!o2 || !("set" in o2) || (n2 = o2.set(e3, n2, r2)) !== void 0) {
            if (u2) {
              f2.setProperty(t2, n2);
            } else {
              f2[t2] = n2;
            }
          }
        } else {
          if (o2 && "get" in o2 && (i2 = o2.get(e3, false, r2)) !== void 0) {
            return i2;
          }
          return f2[t2];
        }
      }, css: function(e3, t2, n2, r2) {
        var i2, a2, o2, s2 = re(t2), u2 = Be.test(t2);
        if (!u2) {
          t2 = rt(s2);
        }
        o2 = D.cssHooks[t2] || D.cssHooks[s2];
        if (o2 && "get" in o2) {
          i2 = o2.get(e3, true, n2);
        }
        if (i2 === void 0) {
          i2 = Xe(e3, t2, r2);
        }
        if (i2 === "normal" && t2 in ot) {
          i2 = ot[t2];
        }
        if (n2 === "" || n2) {
          a2 = parseFloat(i2);
          return n2 === true || isFinite(a2) ? a2 || 0 : i2;
        }
        return i2;
      } });
      D.each(["height", "width"], function(e3, t2) {
        D.cssHooks[t2] = { get: function(e4, n2, r2) {
          if (n2) {
            return it.test(D.css(e4, "display")) && (!e4.getClientRects().length || !e4.getBoundingClientRect().width) ? Je(e4, at, function() {
              return ft(e4, t2, r2);
            }) : ft(e4, t2, r2);
          }
        }, set: function(e4, n2, r2) {
          var i2, a2 = Ze(e4), o2 = !h2.scrollboxSize() && a2.position === "absolute", s2 = o2 || r2, u2 = s2 && D.css(e4, "boxSizing", false, a2) === "border-box", f2 = r2 ? ut(e4, t2, r2, u2, a2) : 0;
          if (u2 && o2) {
            f2 -= Math.ceil(e4["offset" + t2[0].toUpperCase() + t2.slice(1)] - parseFloat(a2[t2]) - ut(e4, t2, "border", false, a2) - 0.5);
          }
          if (f2 && (i2 = he.exec(n2)) && (i2[3] || "px") !== "px") {
            e4.style[t2] = n2;
            n2 = D.css(e4, t2);
          }
          return st(e4, n2, f2);
        } };
      });
      D.cssHooks.marginLeft = Qe(h2.reliableMarginLeft, function(e3, t2) {
        if (t2) {
          return (parseFloat(Xe(e3, "marginLeft")) || e3.getBoundingClientRect().left - Je(e3, { marginLeft: 0 }, function() {
            return e3.getBoundingClientRect().left;
          })) + "px";
        }
      });
      D.each({ margin: "", padding: "", border: "Width" }, function(e3, t2) {
        D.cssHooks[e3 + t2] = { expand: function(n2) {
          var r2 = 0, i2 = {}, a2 = typeof n2 === "string" ? n2.split(" ") : [n2];
          for (; r2 < 4; r2++) {
            i2[e3 + ve[r2] + t2] = a2[r2] || a2[r2 - 2] || a2[0];
          }
          return i2;
        } };
        if (e3 !== "margin") {
          D.cssHooks[e3 + t2].set = st;
        }
      });
      D.fn.extend({ css: function(e3, t2) {
        return K(this, function(e4, t3, n2) {
          var r2, i2, a2 = {}, o2 = 0;
          if (Array.isArray(t3)) {
            r2 = Ze(e4);
            i2 = t3.length;
            for (; o2 < i2; o2++) {
              a2[t3[o2]] = D.css(e4, t3[o2], false, r2);
            }
            return a2;
          }
          return n2 !== void 0 ? D.style(e4, t3, n2) : D.css(e4, t3);
        }, e3, t2, arguments.length > 1);
      } });
      function lt(e3, t2, n2, r2, i2) {
        return new lt.prototype.init(e3, t2, n2, r2, i2);
      }
      D.Tween = lt;
      lt.prototype = { constructor: lt, init: function(e3, t2, n2, r2, i2, a2) {
        this.elem = e3;
        this.prop = n2;
        this.easing = i2 || D.easing._default;
        this.options = t2;
        this.start = this.now = this.cur();
        this.end = r2;
        this.unit = a2 || (D.cssNumber[n2] ? "" : "px");
      }, cur: function() {
        var e3 = lt.propHooks[this.prop];
        return e3 && e3.get ? e3.get(this) : lt.propHooks._default.get(this);
      }, run: function(e3) {
        var t2, n2 = lt.propHooks[this.prop];
        if (this.options.duration) {
          this.pos = t2 = D.easing[this.easing](e3, this.options.duration * e3, 0, 1, this.options.duration);
        } else {
          this.pos = t2 = e3;
        }
        this.now = (this.end - this.start) * t2 + this.start;
        if (this.options.step) {
          this.options.step.call(this.elem, this.now, this);
        }
        if (n2 && n2.set) {
          n2.set(this);
        } else {
          lt.propHooks._default.set(this);
        }
        return this;
      } };
      lt.prototype.init.prototype = lt.prototype;
      lt.propHooks = { _default: { get: function(e3) {
        var t2;
        if (e3.elem.nodeType !== 1 || e3.elem[e3.prop] != null && e3.elem.style[e3.prop] == null) {
          return e3.elem[e3.prop];
        }
        t2 = D.css(e3.elem, e3.prop, "");
        return !t2 || t2 === "auto" ? 0 : t2;
      }, set: function(e3) {
        if (D.fx.step[e3.prop]) {
          D.fx.step[e3.prop](e3);
        } else if (e3.elem.nodeType === 1 && (D.cssHooks[e3.prop] || e3.elem.style[rt(e3.prop)] != null)) {
          D.style(e3.elem, e3.prop, e3.now + e3.unit);
        } else {
          e3.elem[e3.prop] = e3.now;
        }
      } } };
      lt.propHooks.scrollTop = lt.propHooks.scrollLeft = { set: function(e3) {
        if (e3.elem.nodeType && e3.elem.parentNode) {
          e3.elem[e3.prop] = e3.now;
        }
      } };
      D.easing = { linear: function(e3) {
        return e3;
      }, swing: function(e3) {
        return 0.5 - Math.cos(e3 * Math.PI) / 2;
      }, _default: "swing" };
      D.fx = lt.prototype.init;
      D.fx.step = {};
      var ct, dt, ht = /^(?:toggle|show|hide)$/, vt = /queueHooks$/;
      function mt() {
        if (dt) {
          if (p.hidden === false && e2.requestAnimationFrame) {
            e2.requestAnimationFrame(mt);
          } else {
            e2.setTimeout(mt, D.fx.interval);
          }
          D.fx.tick();
        }
      }
      function pt() {
        e2.setTimeout(function() {
          ct = void 0;
        });
        return ct = Date.now();
      }
      function gt(e3, t2) {
        var n2, r2 = 0, i2 = { height: e3 };
        t2 = t2 ? 1 : 0;
        for (; r2 < 4; r2 += 2 - t2) {
          n2 = ve[r2];
          i2["margin" + n2] = i2["padding" + n2] = e3;
        }
        if (t2) {
          i2.opacity = i2.width = e3;
        }
        return i2;
      }
      function bt(e3, t2, n2) {
        var r2, i2 = (St.tweeners[t2] || []).concat(St.tweeners["*"]), a2 = 0, o2 = i2.length;
        for (; a2 < o2; a2++) {
          if (r2 = i2[a2].call(n2, t2, e3)) {
            return r2;
          }
        }
      }
      function yt(e3, t2, n2) {
        var r2, i2, a2, o2, s2, u2, f2, l2, c2 = "width" in t2 || "height" in t2, d2 = this, h3 = {}, v2 = e3.style, m2 = e3.nodeType && be(e3), p2 = oe.get(e3, "fxshow");
        if (!n2.queue) {
          o2 = D._queueHooks(e3, "fx");
          if (o2.unqueued == null) {
            o2.unqueued = 0;
            s2 = o2.empty.fire;
            o2.empty.fire = function() {
              if (!o2.unqueued) {
                s2();
              }
            };
          }
          o2.unqueued++;
          d2.always(function() {
            d2.always(function() {
              o2.unqueued--;
              if (!D.queue(e3, "fx").length) {
                o2.empty.fire();
              }
            });
          });
        }
        for (r2 in t2) {
          i2 = t2[r2];
          if (ht.test(i2)) {
            delete t2[r2];
            a2 = a2 || i2 === "toggle";
            if (i2 === (m2 ? "hide" : "show")) {
              if (i2 === "show" && p2 && p2[r2] !== void 0) {
                m2 = true;
              } else {
                continue;
              }
            }
            h3[r2] = p2 && p2[r2] || D.style(e3, r2);
          }
        }
        u2 = !D.isEmptyObject(t2);
        if (!u2 && D.isEmptyObject(h3)) {
          return;
        }
        if (c2 && e3.nodeType === 1) {
          n2.overflow = [v2.overflow, v2.overflowX, v2.overflowY];
          f2 = p2 && p2.display;
          if (f2 == null) {
            f2 = oe.get(e3, "display");
          }
          l2 = D.css(e3, "display");
          if (l2 === "none") {
            if (f2) {
              l2 = f2;
            } else {
              De([e3], true);
              f2 = e3.style.display || f2;
              l2 = D.css(e3, "display");
              De([e3]);
            }
          }
          if (l2 === "inline" || l2 === "inline-block" && f2 != null) {
            if (D.css(e3, "float") === "none") {
              if (!u2) {
                d2.done(function() {
                  v2.display = f2;
                });
                if (f2 == null) {
                  l2 = v2.display;
                  f2 = l2 === "none" ? "" : l2;
                }
              }
              v2.display = "inline-block";
            }
          }
        }
        if (n2.overflow) {
          v2.overflow = "hidden";
          d2.always(function() {
            v2.overflow = n2.overflow[0];
            v2.overflowX = n2.overflow[1];
            v2.overflowY = n2.overflow[2];
          });
        }
        u2 = false;
        for (r2 in h3) {
          if (!u2) {
            if (p2) {
              if ("hidden" in p2) {
                m2 = p2.hidden;
              }
            } else {
              p2 = oe.access(e3, "fxshow", { display: f2 });
            }
            if (a2) {
              p2.hidden = !m2;
            }
            if (m2) {
              De([e3], true);
            }
            d2.done(function() {
              if (!m2) {
                De([e3]);
              }
              oe.remove(e3, "fxshow");
              for (r2 in h3) {
                D.style(e3, r2, h3[r2]);
              }
            });
          }
          u2 = bt(m2 ? p2[r2] : 0, r2, d2);
          if (!(r2 in p2)) {
            p2[r2] = u2.start;
            if (m2) {
              u2.end = u2.start;
              u2.start = 0;
            }
          }
        }
      }
      function wt(e3, t2) {
        var n2, r2, i2, a2, o2;
        for (n2 in e3) {
          r2 = re(n2);
          i2 = t2[r2];
          a2 = e3[n2];
          if (Array.isArray(a2)) {
            i2 = a2[1];
            a2 = e3[n2] = a2[0];
          }
          if (n2 !== r2) {
            e3[r2] = a2;
            delete e3[n2];
          }
          o2 = D.cssHooks[r2];
          if (o2 && "expand" in o2) {
            a2 = o2.expand(a2);
            delete e3[r2];
            for (n2 in a2) {
              if (!(n2 in e3)) {
                e3[n2] = a2[n2];
                t2[n2] = i2;
              }
            }
          } else {
            t2[r2] = i2;
          }
        }
      }
      function St(e3, t2, n2) {
        var r2, i2, a2 = 0, o2 = St.prefilters.length, s2 = D.Deferred().always(function() {
          delete u2.elem;
        }), u2 = function() {
          if (i2) {
            return false;
          }
          var t3 = ct || pt(), n3 = Math.max(0, f2.startTime + f2.duration - t3), r3 = n3 / f2.duration || 0, a3 = 1 - r3, o3 = 0, u3 = f2.tweens.length;
          for (; o3 < u3; o3++) {
            f2.tweens[o3].run(a3);
          }
          s2.notifyWith(e3, [f2, a3, n3]);
          if (a3 < 1 && u3) {
            return n3;
          }
          if (!u3) {
            s2.notifyWith(e3, [f2, 1, 0]);
          }
          s2.resolveWith(e3, [f2]);
          return false;
        }, f2 = s2.promise({ elem: e3, props: D.extend({}, t2), opts: D.extend(true, { specialEasing: {}, easing: D.easing._default }, n2), originalProperties: t2, originalOptions: n2, startTime: ct || pt(), duration: n2.duration, tweens: [], createTween: function(t3, n3) {
          var r3 = D.Tween(e3, f2.opts, t3, n3, f2.opts.specialEasing[t3] || f2.opts.easing);
          f2.tweens.push(r3);
          return r3;
        }, stop: function(t3) {
          var n3 = 0, r3 = t3 ? f2.tweens.length : 0;
          if (i2) {
            return this;
          }
          i2 = true;
          for (; n3 < r3; n3++) {
            f2.tweens[n3].run(1);
          }
          if (t3) {
            s2.notifyWith(e3, [f2, 1, 0]);
            s2.resolveWith(e3, [f2, t3]);
          } else {
            s2.rejectWith(e3, [f2, t3]);
          }
          return this;
        } }), l2 = f2.props;
        wt(l2, f2.opts.specialEasing);
        for (; a2 < o2; a2++) {
          r2 = St.prefilters[a2].call(f2, e3, l2, f2.opts);
          if (r2) {
            if (v(r2.stop)) {
              D._queueHooks(f2.elem, f2.opts.queue).stop = r2.stop.bind(r2);
            }
            return r2;
          }
        }
        D.map(l2, bt, f2);
        if (v(f2.opts.start)) {
          f2.opts.start.call(e3, f2);
        }
        f2.progress(f2.opts.progress).done(f2.opts.done, f2.opts.complete).fail(f2.opts.fail).always(f2.opts.always);
        D.fx.timer(D.extend(u2, { elem: e3, anim: f2, queue: f2.opts.queue }));
        return f2;
      }
      D.Animation = D.extend(St, { tweeners: { "*": [function(e3, t2) {
        var n2 = this.createTween(e3, t2);
        ye(n2.elem, e3, he.exec(t2), n2);
        return n2;
      }] }, tweener: function(e3, t2) {
        if (v(e3)) {
          t2 = e3;
          e3 = ["*"];
        } else {
          e3 = e3.match(q);
        }
        var n2, r2 = 0, i2 = e3.length;
        for (; r2 < i2; r2++) {
          n2 = e3[r2];
          St.tweeners[n2] = St.tweeners[n2] || [];
          St.tweeners[n2].unshift(t2);
        }
      }, prefilters: [yt], prefilter: function(e3, t2) {
        if (t2) {
          St.prefilters.unshift(e3);
        } else {
          St.prefilters.push(e3);
        }
      } });
      D.speed = function(e3, t2, n2) {
        var r2 = e3 && typeof e3 === "object" ? D.extend({}, e3) : { complete: n2 || !n2 && t2 || v(e3) && e3, duration: e3, easing: n2 && t2 || t2 && !v(t2) && t2 };
        if (D.fx.off) {
          r2.duration = 0;
        } else {
          if (typeof r2.duration !== "number") {
            if (r2.duration in D.fx.speeds) {
              r2.duration = D.fx.speeds[r2.duration];
            } else {
              r2.duration = D.fx.speeds._default;
            }
          }
        }
        if (r2.queue == null || r2.queue === true) {
          r2.queue = "fx";
        }
        r2.old = r2.complete;
        r2.complete = function() {
          if (v(r2.old)) {
            r2.old.call(this);
          }
          if (r2.queue) {
            D.dequeue(this, r2.queue);
          }
        };
        return r2;
      };
      D.fn.extend({ fadeTo: function(e3, t2, n2, r2) {
        return this.filter(be).css("opacity", 0).show().end().animate({ opacity: t2 }, e3, n2, r2);
      }, animate: function(e3, t2, n2, r2) {
        var i2 = D.isEmptyObject(e3), a2 = D.speed(t2, n2, r2), o2 = function() {
          var t3 = St(this, D.extend({}, e3), a2);
          if (i2 || oe.get(this, "finish")) {
            t3.stop(true);
          }
        };
        o2.finish = o2;
        return i2 || a2.queue === false ? this.each(o2) : this.queue(a2.queue, o2);
      }, stop: function(e3, t2, n2) {
        var r2 = function(e4) {
          var t3 = e4.stop;
          delete e4.stop;
          t3(n2);
        };
        if (typeof e3 !== "string") {
          n2 = t2;
          t2 = e3;
          e3 = void 0;
        }
        if (t2) {
          this.queue(e3 || "fx", []);
        }
        return this.each(function() {
          var t3 = true, i2 = e3 != null && e3 + "queueHooks", a2 = D.timers, o2 = oe.get(this);
          if (i2) {
            if (o2[i2] && o2[i2].stop) {
              r2(o2[i2]);
            }
          } else {
            for (i2 in o2) {
              if (o2[i2] && o2[i2].stop && vt.test(i2)) {
                r2(o2[i2]);
              }
            }
          }
          for (i2 = a2.length; i2--; ) {
            if (a2[i2].elem === this && (e3 == null || a2[i2].queue === e3)) {
              a2[i2].anim.stop(n2);
              t3 = false;
              a2.splice(i2, 1);
            }
          }
          if (t3 || !n2) {
            D.dequeue(this, e3);
          }
        });
      }, finish: function(e3) {
        if (e3 !== false) {
          e3 = e3 || "fx";
        }
        return this.each(function() {
          var t2, n2 = oe.get(this), r2 = n2[e3 + "queue"], i2 = n2[e3 + "queueHooks"], a2 = D.timers, o2 = r2 ? r2.length : 0;
          n2.finish = true;
          D.queue(this, e3, []);
          if (i2 && i2.stop) {
            i2.stop.call(this, true);
          }
          for (t2 = a2.length; t2--; ) {
            if (a2[t2].elem === this && a2[t2].queue === e3) {
              a2[t2].anim.stop(true);
              a2.splice(t2, 1);
            }
          }
          for (t2 = 0; t2 < o2; t2++) {
            if (r2[t2] && r2[t2].finish) {
              r2[t2].finish.call(this);
            }
          }
          delete n2.finish;
        });
      } });
      D.each(["toggle", "show", "hide"], function(e3, t2) {
        var n2 = D.fn[t2];
        D.fn[t2] = function(e4, r2, i2) {
          return e4 == null || typeof e4 === "boolean" ? n2.apply(this, arguments) : this.animate(gt(t2, true), e4, r2, i2);
        };
      });
      D.each({ slideDown: gt("show"), slideUp: gt("hide"), slideToggle: gt("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function(e3, t2) {
        D.fn[e3] = function(e4, n2, r2) {
          return this.animate(t2, e4, n2, r2);
        };
      });
      D.timers = [];
      D.fx.tick = function() {
        var e3, t2 = 0, n2 = D.timers;
        ct = Date.now();
        for (; t2 < n2.length; t2++) {
          e3 = n2[t2];
          if (!e3() && n2[t2] === e3) {
            n2.splice(t2--, 1);
          }
        }
        if (!n2.length) {
          D.fx.stop();
        }
        ct = void 0;
      };
      D.fx.timer = function(e3) {
        D.timers.push(e3);
        D.fx.start();
      };
      D.fx.interval = 13;
      D.fx.start = function() {
        if (dt) {
          return;
        }
        dt = true;
        mt();
      };
      D.fx.stop = function() {
        dt = null;
      };
      D.fx.speeds = { slow: 600, fast: 200, _default: 400 };
      D.fn.delay = function(t2, n2) {
        t2 = D.fx ? D.fx.speeds[t2] || t2 : t2;
        n2 = n2 || "fx";
        return this.queue(n2, function(n3, r2) {
          var i2 = e2.setTimeout(n3, t2);
          r2.stop = function() {
            e2.clearTimeout(i2);
          };
        });
      };
      (function() {
        var e3 = p.createElement("input"), t2 = p.createElement("select"), n2 = t2.appendChild(p.createElement("option"));
        e3.type = "checkbox";
        h2.checkOn = e3.value !== "";
        h2.optSelected = n2.selected;
        e3 = p.createElement("input");
        e3.value = "t";
        e3.type = "radio";
        h2.radioValue = e3.value === "t";
      })();
      var Dt, kt = D.expr.attrHandle;
      D.fn.extend({ attr: function(e3, t2) {
        return K(this, D.attr, e3, t2, arguments.length > 1);
      }, removeAttr: function(e3) {
        return this.each(function() {
          D.removeAttr(this, e3);
        });
      } });
      D.extend({ attr: function(e3, t2, n2) {
        var r2, i2, a2 = e3.nodeType;
        if (a2 === 3 || a2 === 8 || a2 === 2) {
          return;
        }
        if (typeof e3.getAttribute === "undefined") {
          return D.prop(e3, t2, n2);
        }
        if (a2 !== 1 || !D.isXMLDoc(e3)) {
          i2 = D.attrHooks[t2.toLowerCase()] || (D.expr.match.bool.test(t2) ? Dt : void 0);
        }
        if (n2 !== void 0) {
          if (n2 === null) {
            D.removeAttr(e3, t2);
            return;
          }
          if (i2 && "set" in i2 && (r2 = i2.set(e3, n2, t2)) !== void 0) {
            return r2;
          }
          e3.setAttribute(t2, n2 + "");
          return n2;
        }
        if (i2 && "get" in i2 && (r2 = i2.get(e3, t2)) !== null) {
          return r2;
        }
        r2 = D.find.attr(e3, t2);
        return r2 == null ? void 0 : r2;
      }, attrHooks: { type: { set: function(e3, t2) {
        if (!h2.radioValue && t2 === "radio" && x(e3, "input")) {
          var n2 = e3.value;
          e3.setAttribute("type", t2);
          if (n2) {
            e3.value = n2;
          }
          return t2;
        }
      } } }, removeAttr: function(e3, t2) {
        var n2, r2 = 0, i2 = t2 && t2.match(q);
        if (i2 && e3.nodeType === 1) {
          while (n2 = i2[r2++]) {
            e3.removeAttribute(n2);
          }
        }
      } });
      Dt = { set: function(e3, t2, n2) {
        if (t2 === false) {
          D.removeAttr(e3, n2);
        } else {
          e3.setAttribute(n2, n2);
        }
        return n2;
      } };
      D.each(D.expr.match.bool.source.match(/\w+/g), function(e3, t2) {
        var n2 = kt[t2] || D.find.attr;
        kt[t2] = function(e4, t3, r2) {
          var i2, a2, o2 = t3.toLowerCase();
          if (!r2) {
            a2 = kt[o2];
            kt[o2] = i2;
            i2 = n2(e4, t3, r2) != null ? o2 : null;
            kt[o2] = a2;
          }
          return i2;
        };
      });
      var xt = /^(?:input|select|textarea|button)$/i, _t = /^(?:a|area)$/i;
      D.fn.extend({ prop: function(e3, t2) {
        return K(this, D.prop, e3, t2, arguments.length > 1);
      }, removeProp: function(e3) {
        return this.each(function() {
          delete this[D.propFix[e3] || e3];
        });
      } });
      D.extend({ prop: function(e3, t2, n2) {
        var r2, i2, a2 = e3.nodeType;
        if (a2 === 3 || a2 === 8 || a2 === 2) {
          return;
        }
        if (a2 !== 1 || !D.isXMLDoc(e3)) {
          t2 = D.propFix[t2] || t2;
          i2 = D.propHooks[t2];
        }
        if (n2 !== void 0) {
          if (i2 && "set" in i2 && (r2 = i2.set(e3, n2, t2)) !== void 0) {
            return r2;
          }
          return e3[t2] = n2;
        }
        if (i2 && "get" in i2 && (r2 = i2.get(e3, t2)) !== null) {
          return r2;
        }
        return e3[t2];
      }, propHooks: { tabIndex: { get: function(e3) {
        var t2 = D.find.attr(e3, "tabindex");
        if (t2) {
          return parseInt(t2, 10);
        }
        if (xt.test(e3.nodeName) || _t.test(e3.nodeName) && e3.href) {
          return 0;
        }
        return -1;
      } } }, propFix: { for: "htmlFor", class: "className" } });
      if (!h2.optSelected) {
        D.propHooks.selected = { get: function(e3) {
          return null;
        }, set: function(e3) {
        } };
      }
      D.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        D.propFix[this.toLowerCase()] = this;
      });
      function Mt(e3) {
        var t2 = e3.match(q) || [];
        return t2.join(" ");
      }
      function Tt(e3) {
        return e3.getAttribute && e3.getAttribute("class") || "";
      }
      function Et(e3) {
        if (Array.isArray(e3)) {
          return e3;
        }
        if (typeof e3 === "string") {
          return e3.match(q) || [];
        }
        return [];
      }
      D.fn.extend({ addClass: function(e3) {
        var t2, n2, r2, i2, a2, o2;
        if (v(e3)) {
          return this.each(function(t3) {
            D(this).addClass(e3.call(this, t3, Tt(this)));
          });
        }
        t2 = Et(e3);
        if (t2.length) {
          return this.each(function() {
            r2 = Tt(this);
            n2 = this.nodeType === 1 && " " + Mt(r2) + " ";
            if (n2) {
              for (a2 = 0; a2 < t2.length; a2++) {
                i2 = t2[a2];
                if (n2.indexOf(" " + i2 + " ") < 0) {
                  n2 += i2 + " ";
                }
              }
              o2 = Mt(n2);
              if (r2 !== o2) {
                this.setAttribute("class", o2);
              }
            }
          });
        }
        return this;
      }, removeClass: function(e3) {
        var t2, n2, r2, i2, a2, o2;
        if (v(e3)) {
          return this.each(function(t3) {
            D(this).removeClass(e3.call(this, t3, Tt(this)));
          });
        }
        if (!arguments.length) {
          return this.attr("class", "");
        }
        t2 = Et(e3);
        if (t2.length) {
          return this.each(function() {
            r2 = Tt(this);
            n2 = this.nodeType === 1 && " " + Mt(r2) + " ";
            if (n2) {
              for (a2 = 0; a2 < t2.length; a2++) {
                i2 = t2[a2];
                while (n2.indexOf(" " + i2 + " ") > -1) {
                  n2 = n2.replace(" " + i2 + " ", " ");
                }
              }
              o2 = Mt(n2);
              if (r2 !== o2) {
                this.setAttribute("class", o2);
              }
            }
          });
        }
        return this;
      }, toggleClass: function(e3, t2) {
        var n2, r2, i2, a2, o2 = typeof e3, s2 = o2 === "string" || Array.isArray(e3);
        if (v(e3)) {
          return this.each(function(n3) {
            D(this).toggleClass(e3.call(this, n3, Tt(this), t2), t2);
          });
        }
        if (typeof t2 === "boolean" && s2) {
          return t2 ? this.addClass(e3) : this.removeClass(e3);
        }
        n2 = Et(e3);
        return this.each(function() {
          if (s2) {
            a2 = D(this);
            for (i2 = 0; i2 < n2.length; i2++) {
              r2 = n2[i2];
              if (a2.hasClass(r2)) {
                a2.removeClass(r2);
              } else {
                a2.addClass(r2);
              }
            }
          } else if (e3 === void 0 || o2 === "boolean") {
            r2 = Tt(this);
            if (r2) {
              oe.set(this, "__className__", r2);
            }
            if (this.setAttribute) {
              this.setAttribute("class", r2 || e3 === false ? "" : oe.get(this, "__className__") || "");
            }
          }
        });
      }, hasClass: function(e3) {
        var t2, n2, r2 = 0;
        t2 = " " + e3 + " ";
        while (n2 = this[r2++]) {
          if (n2.nodeType === 1 && (" " + Mt(Tt(n2)) + " ").indexOf(t2) > -1) {
            return true;
          }
        }
        return false;
      } });
      var Ft = /\r/g;
      D.fn.extend({ val: function(e3) {
        var t2, n2, r2, i2 = this[0];
        if (!arguments.length) {
          if (i2) {
            t2 = D.valHooks[i2.type] || D.valHooks[i2.nodeName.toLowerCase()];
            if (t2 && "get" in t2 && (n2 = t2.get(i2, "value")) !== void 0) {
              return n2;
            }
            n2 = i2.value;
            if (typeof n2 === "string") {
              return n2.replace(Ft, "");
            }
            return n2 == null ? "" : n2;
          }
          return;
        }
        r2 = v(e3);
        return this.each(function(n3) {
          var i3;
          if (this.nodeType !== 1) {
            return;
          }
          if (r2) {
            i3 = e3.call(this, n3, D(this).val());
          } else {
            i3 = e3;
          }
          if (i3 == null) {
            i3 = "";
          } else if (typeof i3 === "number") {
            i3 += "";
          } else if (Array.isArray(i3)) {
            i3 = D.map(i3, function(e4) {
              return e4 == null ? "" : e4 + "";
            });
          }
          t2 = D.valHooks[this.type] || D.valHooks[this.nodeName.toLowerCase()];
          if (!t2 || !("set" in t2) || t2.set(this, i3, "value") === void 0) {
            this.value = i3;
          }
        });
      } });
      D.extend({ valHooks: { option: { get: function(e3) {
        var t2 = D.find.attr(e3, "value");
        return t2 != null ? t2 : Mt(D.text(e3));
      } }, select: { get: function(e3) {
        var t2, n2, r2, i2 = e3.options, a2 = e3.selectedIndex, o2 = e3.type === "select-one", s2 = o2 ? null : [], u2 = o2 ? a2 + 1 : i2.length;
        if (a2 < 0) {
          r2 = u2;
        } else {
          r2 = o2 ? a2 : 0;
        }
        for (; r2 < u2; r2++) {
          n2 = i2[r2];
          if ((n2.selected || r2 === a2) && !n2.disabled && (!n2.parentNode.disabled || !x(n2.parentNode, "optgroup"))) {
            t2 = D(n2).val();
            if (o2) {
              return t2;
            }
            s2.push(t2);
          }
        }
        return s2;
      }, set: function(e3, t2) {
        var n2, r2, i2 = e3.options, a2 = D.makeArray(t2), o2 = i2.length;
        while (o2--) {
          r2 = i2[o2];
          if (r2.selected = D.inArray(D.valHooks.option.get(r2), a2) > -1) {
            n2 = true;
          }
        }
        if (!n2) {
          e3.selectedIndex = -1;
        }
        return a2;
      } } } });
      D.each(["radio", "checkbox"], function() {
        D.valHooks[this] = { set: function(e3, t2) {
          if (Array.isArray(t2)) {
            return e3.checked = D.inArray(D(e3).val(), t2) > -1;
          }
        } };
        if (!h2.checkOn) {
          D.valHooks[this].get = function(e3) {
            return e3.getAttribute("value") === null ? "on" : e3.value;
          };
        }
      });
      var Yt = e2.location;
      var At = { guid: Date.now() };
      var Ot = /\?/;
      D.parseXML = function(t2) {
        var n2, r2;
        if (!t2 || typeof t2 !== "string") {
          return null;
        }
        try {
          n2 = new e2.DOMParser().parseFromString(t2, "text/xml");
        } catch (e3) {
        }
        r2 = n2 && n2.getElementsByTagName("parsererror")[0];
        if (!n2 || r2) {
          D.error("Invalid XML: " + (r2 ? D.map(r2.childNodes, function(e3) {
            return e3.textContent;
          }).join("\n") : t2));
        }
        return n2;
      };
      var Nt = /^(?:focusinfocus|focusoutblur)$/, Rt = function(e3) {
        e3.stopPropagation();
      };
      D.extend(D.event, { trigger: function(t2, n2, r2, i2) {
        var a2, o2, s2, u2, f2, c2, d2, h3, g2 = [r2 || p], b2 = l.call(t2, "type") ? t2.type : t2, y2 = l.call(t2, "namespace") ? t2.namespace.split(".") : [];
        o2 = h3 = s2 = r2 = r2 || p;
        if (r2.nodeType === 3 || r2.nodeType === 8) {
          return;
        }
        if (Nt.test(b2 + D.event.triggered)) {
          return;
        }
        if (b2.indexOf(".") > -1) {
          y2 = b2.split(".");
          b2 = y2.shift();
          y2.sort();
        }
        f2 = b2.indexOf(":") < 0 && "on" + b2;
        t2 = t2[D.expando] ? t2 : new D.Event(b2, typeof t2 === "object" && t2);
        t2.isTrigger = i2 ? 2 : 3;
        t2.namespace = y2.join(".");
        t2.rnamespace = t2.namespace ? new RegExp("(^|\\.)" + y2.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
        t2.result = void 0;
        if (!t2.target) {
          t2.target = r2;
        }
        n2 = n2 == null ? [t2] : D.makeArray(n2, [t2]);
        d2 = D.event.special[b2] || {};
        if (!i2 && d2.trigger && d2.trigger.apply(r2, n2) === false) {
          return;
        }
        if (!i2 && !d2.noBubble && !m(r2)) {
          u2 = d2.delegateType || b2;
          if (!Nt.test(u2 + b2)) {
            o2 = o2.parentNode;
          }
          for (; o2; o2 = o2.parentNode) {
            g2.push(o2);
            s2 = o2;
          }
          if (s2 === (r2.ownerDocument || p)) {
            g2.push(s2.defaultView || s2.parentWindow || e2);
          }
        }
        a2 = 0;
        while ((o2 = g2[a2++]) && !t2.isPropagationStopped()) {
          h3 = o2;
          t2.type = a2 > 1 ? u2 : d2.bindType || b2;
          c2 = (oe.get(o2, "events") || /* @__PURE__ */ Object.create(null))[t2.type] && oe.get(o2, "handle");
          if (c2) {
            c2.apply(o2, n2);
          }
          c2 = f2 && o2[f2];
          if (c2 && c2.apply && ie(o2)) {
            t2.result = c2.apply(o2, n2);
            if (t2.result === false) {
              t2.preventDefault();
            }
          }
        }
        t2.type = b2;
        if (!i2 && !t2.isDefaultPrevented()) {
          if ((!d2._default || d2._default.apply(g2.pop(), n2) === false) && ie(r2)) {
            if (f2 && v(r2[b2]) && !m(r2)) {
              s2 = r2[f2];
              if (s2) {
                r2[f2] = null;
              }
              D.event.triggered = b2;
              if (t2.isPropagationStopped()) {
                h3.addEventListener(b2, Rt);
              }
              r2[b2]();
              if (t2.isPropagationStopped()) {
                h3.removeEventListener(b2, Rt);
              }
              D.event.triggered = void 0;
              if (s2) {
                r2[f2] = s2;
              }
            }
          }
        }
        return t2.result;
      }, simulate: function(e3, t2, n2) {
        var r2 = D.extend(new D.Event(), n2, { type: e3, isSimulated: true });
        D.event.trigger(r2, null, t2);
      } });
      D.fn.extend({ trigger: function(e3, t2) {
        return this.each(function() {
          D.event.trigger(e3, t2, this);
        });
      }, triggerHandler: function(e3, t2) {
        var n2 = this[0];
        if (n2) {
          return D.event.trigger(e3, t2, n2, true);
        }
      } });
      var Ct = /\[\]$/, It = /\r?\n/g, Pt = /^(?:submit|button|image|reset|file)$/i, Lt = /^(?:input|select|textarea|keygen)/i;
      function Wt(e3, t2, n2, r2) {
        var i2;
        if (Array.isArray(t2)) {
          D.each(t2, function(t3, i3) {
            if (n2 || Ct.test(e3)) {
              r2(e3, i3);
            } else {
              Wt(e3 + "[" + (typeof i3 === "object" && i3 != null ? t3 : "") + "]", i3, n2, r2);
            }
          });
        } else if (!n2 && y(t2) === "object") {
          for (i2 in t2) {
            Wt(e3 + "[" + i2 + "]", t2[i2], n2, r2);
          }
        } else {
          r2(e3, t2);
        }
      }
      D.param = function(e3, t2) {
        var n2, r2 = [], i2 = function(e4, t3) {
          var n3 = v(t3) ? t3() : t3;
          r2[r2.length] = encodeURIComponent(e4) + "=" + encodeURIComponent(n3 == null ? "" : n3);
        };
        if (e3 == null) {
          return "";
        }
        if (Array.isArray(e3) || e3.jquery && !D.isPlainObject(e3)) {
          D.each(e3, function() {
            i2(this.name, this.value);
          });
        } else {
          for (n2 in e3) {
            Wt(n2, e3[n2], t2, i2);
          }
        }
        return r2.join("&");
      };
      D.fn.extend({ serialize: function() {
        return D.param(this.serializeArray());
      }, serializeArray: function() {
        return this.map(function() {
          var e3 = D.prop(this, "elements");
          return e3 ? D.makeArray(e3) : this;
        }).filter(function() {
          var e3 = this.type;
          return this.name && !D(this).is(":disabled") && Lt.test(this.nodeName) && !Pt.test(e3) && (this.checked || !ke.test(e3));
        }).map(function(e3, t2) {
          var n2 = D(this).val();
          if (n2 == null) {
            return null;
          }
          if (Array.isArray(n2)) {
            return D.map(n2, function(e4) {
              return { name: t2.name, value: e4.replace(It, "\r\n") };
            });
          }
          return { name: t2.name, value: n2.replace(It, "\r\n") };
        }).get();
      } });
      var jt = /%20/g, Ht = /#.*$/, Ut = /([?&])_=[^&]*/, $t = /^(.*?):[ \t]*([^\r\n]*)$/gm, Gt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, qt = /^(?:GET|HEAD)$/, zt = /^\/\//, Bt = {}, Zt = {}, Jt = "*/".concat("*"), Vt = p.createElement("a");
      Vt.href = Yt.href;
      function Xt(e3) {
        return function(t2, n2) {
          if (typeof t2 !== "string") {
            n2 = t2;
            t2 = "*";
          }
          var r2, i2 = 0, a2 = t2.toLowerCase().match(q) || [];
          if (v(n2)) {
            while (r2 = a2[i2++]) {
              if (r2[0] === "+") {
                r2 = r2.slice(1) || "*";
                (e3[r2] = e3[r2] || []).unshift(n2);
              } else {
                (e3[r2] = e3[r2] || []).push(n2);
              }
            }
          }
        };
      }
      function Qt(e3, t2, n2, r2) {
        var i2 = {}, a2 = e3 === Zt;
        function o2(s2) {
          var u2;
          i2[s2] = true;
          D.each(e3[s2] || [], function(e4, s3) {
            var f2 = s3(t2, n2, r2);
            if (typeof f2 === "string" && !a2 && !i2[f2]) {
              t2.dataTypes.unshift(f2);
              o2(f2);
              return false;
            } else if (a2) {
              return !(u2 = f2);
            }
          });
          return u2;
        }
        return o2(t2.dataTypes[0]) || !i2["*"] && o2("*");
      }
      function Kt(e3, t2) {
        var n2, r2, i2 = D.ajaxSettings.flatOptions || {};
        for (n2 in t2) {
          if (t2[n2] !== void 0) {
            (i2[n2] ? e3 : r2 || (r2 = {}))[n2] = t2[n2];
          }
        }
        if (r2) {
          D.extend(true, e3, r2);
        }
        return e3;
      }
      function en(e3, t2, n2) {
        var r2, i2, a2, o2, s2 = e3.contents, u2 = e3.dataTypes;
        while (u2[0] === "*") {
          u2.shift();
          if (r2 === void 0) {
            r2 = e3.mimeType || t2.getResponseHeader("Content-Type");
          }
        }
        if (r2) {
          for (i2 in s2) {
            if (s2[i2] && s2[i2].test(r2)) {
              u2.unshift(i2);
              break;
            }
          }
        }
        if (u2[0] in n2) {
          a2 = u2[0];
        } else {
          for (i2 in n2) {
            if (!u2[0] || e3.converters[i2 + " " + u2[0]]) {
              a2 = i2;
              break;
            }
            if (!o2) {
              o2 = i2;
            }
          }
          a2 = a2 || o2;
        }
        if (a2) {
          if (a2 !== u2[0]) {
            u2.unshift(a2);
          }
          return n2[a2];
        }
      }
      function tn(e3, t2, n2, r2) {
        var i2, a2, o2, s2, u2, f2 = {}, l2 = e3.dataTypes.slice();
        if (l2[1]) {
          for (o2 in e3.converters) {
            f2[o2.toLowerCase()] = e3.converters[o2];
          }
        }
        a2 = l2.shift();
        while (a2) {
          if (e3.responseFields[a2]) {
            n2[e3.responseFields[a2]] = t2;
          }
          if (!u2 && r2 && e3.dataFilter) {
            t2 = e3.dataFilter(t2, e3.dataType);
          }
          u2 = a2;
          a2 = l2.shift();
          if (a2) {
            if (a2 === "*") {
              a2 = u2;
            } else if (u2 !== "*" && u2 !== a2) {
              o2 = f2[u2 + " " + a2] || f2["* " + a2];
              if (!o2) {
                for (i2 in f2) {
                  s2 = i2.split(" ");
                  if (s2[1] === a2) {
                    o2 = f2[u2 + " " + s2[0]] || f2["* " + s2[0]];
                    if (o2) {
                      if (o2 === true) {
                        o2 = f2[i2];
                      } else if (f2[i2] !== true) {
                        a2 = s2[0];
                        l2.unshift(s2[1]);
                      }
                      break;
                    }
                  }
                }
              }
              if (o2 !== true) {
                if (o2 && e3.throws) {
                  t2 = o2(t2);
                } else {
                  try {
                    t2 = o2(t2);
                  } catch (e4) {
                    return { state: "parsererror", error: o2 ? e4 : "No conversion from " + u2 + " to " + a2 };
                  }
                }
              }
            }
          }
        }
        return { state: "success", data: t2 };
      }
      D.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Yt.href, type: "GET", isLocal: Gt.test(Yt.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Jt, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": JSON.parse, "text xml": D.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function(e3, t2) {
        return t2 ? Kt(Kt(e3, D.ajaxSettings), t2) : Kt(D.ajaxSettings, e3);
      }, ajaxPrefilter: Xt(Bt), ajaxTransport: Xt(Zt), ajax: function(t2, n2) {
        if (typeof t2 === "object") {
          n2 = t2;
          t2 = void 0;
        }
        n2 = n2 || {};
        var r2, i2, a2, o2, s2, u2, f2, l2, c2, d2, h3 = D.ajaxSetup({}, n2), v2 = h3.context || h3, m2 = h3.context && (v2.nodeType || v2.jquery) ? D(v2) : D.event, g2 = D.Deferred(), b2 = D.Callbacks("once memory"), y2 = h3.statusCode || {}, w2 = {}, S2 = {}, k2 = "canceled", x2 = { readyState: 0, getResponseHeader: function(e3) {
          var t3;
          if (f2) {
            if (!o2) {
              o2 = {};
              while (t3 = $t.exec(a2)) {
                o2[t3[1].toLowerCase() + " "] = (o2[t3[1].toLowerCase() + " "] || []).concat(t3[2]);
              }
            }
            t3 = o2[e3.toLowerCase() + " "];
          }
          return t3 == null ? null : t3.join(", ");
        }, getAllResponseHeaders: function() {
          return f2 ? a2 : null;
        }, setRequestHeader: function(e3, t3) {
          if (f2 == null) {
            e3 = S2[e3.toLowerCase()] = S2[e3.toLowerCase()] || e3;
            w2[e3] = t3;
          }
          return this;
        }, overrideMimeType: function(e3) {
          if (f2 == null) {
            h3.mimeType = e3;
          }
          return this;
        }, statusCode: function(e3) {
          var t3;
          if (e3) {
            if (f2) {
              x2.always(e3[x2.status]);
            } else {
              for (t3 in e3) {
                y2[t3] = [y2[t3], e3[t3]];
              }
            }
          }
          return this;
        }, abort: function(e3) {
          var t3 = e3 || k2;
          if (r2) {
            r2.abort(t3);
          }
          _2(0, t3);
          return this;
        } };
        g2.promise(x2);
        h3.url = ((t2 || h3.url || Yt.href) + "").replace(zt, Yt.protocol + "//");
        h3.type = n2.method || n2.type || h3.method || h3.type;
        h3.dataTypes = (h3.dataType || "*").toLowerCase().match(q) || [""];
        if (h3.crossDomain == null) {
          u2 = p.createElement("a");
          try {
            u2.href = h3.url;
            u2.href = u2.href;
            h3.crossDomain = Vt.protocol + "//" + Vt.host !== u2.protocol + "//" + u2.host;
          } catch (e3) {
            h3.crossDomain = true;
          }
        }
        if (h3.data && h3.processData && typeof h3.data !== "string") {
          h3.data = D.param(h3.data, h3.traditional);
        }
        Qt(Bt, h3, n2, x2);
        if (f2) {
          return x2;
        }
        l2 = D.event && h3.global;
        if (l2 && D.active++ === 0) {
          D.event.trigger("ajaxStart");
        }
        h3.type = h3.type.toUpperCase();
        h3.hasContent = !qt.test(h3.type);
        i2 = h3.url.replace(Ht, "");
        if (!h3.hasContent) {
          d2 = h3.url.slice(i2.length);
          if (h3.data && (h3.processData || typeof h3.data === "string")) {
            i2 += (Ot.test(i2) ? "&" : "?") + h3.data;
            delete h3.data;
          }
          if (h3.cache === false) {
            i2 = i2.replace(Ut, "$1");
            d2 = (Ot.test(i2) ? "&" : "?") + "_=" + At.guid++ + d2;
          }
          h3.url = i2 + d2;
        } else if (h3.data && h3.processData && (h3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
          h3.data = h3.data.replace(jt, "+");
        }
        if (h3.ifModified) {
          if (D.lastModified[i2]) {
            x2.setRequestHeader("If-Modified-Since", D.lastModified[i2]);
          }
          if (D.etag[i2]) {
            x2.setRequestHeader("If-None-Match", D.etag[i2]);
          }
        }
        if (h3.data && h3.hasContent && h3.contentType !== false || n2.contentType) {
          x2.setRequestHeader("Content-Type", h3.contentType);
        }
        x2.setRequestHeader("Accept", h3.dataTypes[0] && h3.accepts[h3.dataTypes[0]] ? h3.accepts[h3.dataTypes[0]] + (h3.dataTypes[0] !== "*" ? ", " + Jt + "; q=0.01" : "") : h3.accepts["*"]);
        for (c2 in h3.headers) {
          x2.setRequestHeader(c2, h3.headers[c2]);
        }
        if (h3.beforeSend && (h3.beforeSend.call(v2, x2, h3) === false || f2)) {
          return x2.abort();
        }
        k2 = "abort";
        b2.add(h3.complete);
        x2.done(h3.success);
        x2.fail(h3.error);
        r2 = Qt(Zt, h3, n2, x2);
        if (!r2) {
          _2(-1, "No Transport");
        } else {
          x2.readyState = 1;
          if (l2) {
            m2.trigger("ajaxSend", [x2, h3]);
          }
          if (f2) {
            return x2;
          }
          if (h3.async && h3.timeout > 0) {
            s2 = e2.setTimeout(function() {
              x2.abort("timeout");
            }, h3.timeout);
          }
          try {
            f2 = false;
            r2.send(w2, _2);
          } catch (e3) {
            if (f2) {
              throw e3;
            }
            _2(-1, e3);
          }
        }
        function _2(t3, n3, o3, u3) {
          var c3, d3, p2, w3, S3, k3 = n3;
          if (f2) {
            return;
          }
          f2 = true;
          if (s2) {
            e2.clearTimeout(s2);
          }
          r2 = void 0;
          a2 = u3 || "";
          x2.readyState = t3 > 0 ? 4 : 0;
          c3 = t3 >= 200 && t3 < 300 || t3 === 304;
          if (o3) {
            w3 = en(h3, x2, o3);
          }
          if (!c3 && D.inArray("script", h3.dataTypes) > -1 && D.inArray("json", h3.dataTypes) < 0) {
            h3.converters["text script"] = function() {
            };
          }
          w3 = tn(h3, w3, x2, c3);
          if (c3) {
            if (h3.ifModified) {
              S3 = x2.getResponseHeader("Last-Modified");
              if (S3) {
                D.lastModified[i2] = S3;
              }
              S3 = x2.getResponseHeader("etag");
              if (S3) {
                D.etag[i2] = S3;
              }
            }
            if (t3 === 204 || h3.type === "HEAD") {
              k3 = "nocontent";
            } else if (t3 === 304) {
              k3 = "notmodified";
            } else {
              k3 = w3.state;
              d3 = w3.data;
              p2 = w3.error;
              c3 = !p2;
            }
          } else {
            p2 = k3;
            if (t3 || !k3) {
              k3 = "error";
              if (t3 < 0) {
                t3 = 0;
              }
            }
          }
          x2.status = t3;
          x2.statusText = (n3 || k3) + "";
          if (c3) {
            g2.resolveWith(v2, [d3, k3, x2]);
          } else {
            g2.rejectWith(v2, [x2, k3, p2]);
          }
          x2.statusCode(y2);
          y2 = void 0;
          if (l2) {
            m2.trigger(c3 ? "ajaxSuccess" : "ajaxError", [x2, h3, c3 ? d3 : p2]);
          }
          b2.fireWith(v2, [x2, k3]);
          if (l2) {
            m2.trigger("ajaxComplete", [x2, h3]);
            if (!--D.active) {
              D.event.trigger("ajaxStop");
            }
          }
        }
        return x2;
      }, getJSON: function(e3, t2, n2) {
        return D.get(e3, t2, n2, "json");
      }, getScript: function(e3, t2) {
        return D.get(e3, void 0, t2, "script");
      } });
      D.each(["get", "post"], function(e3, t2) {
        D[t2] = function(e4, n2, r2, i2) {
          if (v(n2)) {
            i2 = i2 || r2;
            r2 = n2;
            n2 = void 0;
          }
          return D.ajax(D.extend({ url: e4, type: t2, dataType: i2, data: n2, success: r2 }, D.isPlainObject(e4) && e4));
        };
      });
      D.ajaxPrefilter(function(e3) {
        var t2;
        for (t2 in e3.headers) {
          if (t2.toLowerCase() === "content-type") {
            e3.contentType = e3.headers[t2] || "";
          }
        }
      });
      D._evalUrl = function(e3, t2, n2) {
        return D.ajax({ url: e3, type: "GET", dataType: "script", cache: true, async: false, global: false, converters: { "text script": function() {
        } }, dataFilter: function(e4) {
          D.globalEval(e4, t2, n2);
        } });
      };
      D.fn.extend({ wrapAll: function(e3) {
        var t2;
        if (this[0]) {
          if (v(e3)) {
            e3 = e3.call(this[0]);
          }
          t2 = D(e3, this[0].ownerDocument).eq(0).clone(true);
          if (this[0].parentNode) {
            t2.insertBefore(this[0]);
          }
          t2.map(function() {
            var e4 = this;
            while (e4.firstElementChild) {
              e4 = e4.firstElementChild;
            }
            return e4;
          }).append(this);
        }
        return this;
      }, wrapInner: function(e3) {
        if (v(e3)) {
          return this.each(function(t2) {
            D(this).wrapInner(e3.call(this, t2));
          });
        }
        return this.each(function() {
          var t2 = D(this), n2 = t2.contents();
          if (n2.length) {
            n2.wrapAll(e3);
          } else {
            t2.append(e3);
          }
        });
      }, wrap: function(e3) {
        var t2 = v(e3);
        return this.each(function(n2) {
          D(this).wrapAll(t2 ? e3.call(this, n2) : e3);
        });
      }, unwrap: function(e3) {
        this.parent(e3).not("body").each(function() {
          D(this).replaceWith(this.childNodes);
        });
        return this;
      } });
      D.expr.pseudos.hidden = function(e3) {
        return !D.expr.pseudos.visible(e3);
      };
      D.expr.pseudos.visible = function(e3) {
        return !!(e3.offsetWidth || e3.offsetHeight || e3.getClientRects().length);
      };
      D.ajaxSettings.xhr = function() {
        try {
          return new e2.XMLHttpRequest();
        } catch (e3) {
        }
      };
      var nn = { 0: 200, 1223: 204 }, rn = D.ajaxSettings.xhr();
      h2.cors = !!rn && "withCredentials" in rn;
      h2.ajax = rn = !!rn;
      D.ajaxTransport(function(t2) {
        var n2, r2;
        if (h2.cors || rn && !t2.crossDomain) {
          return { send: function(i2, a2) {
            var o2, s2 = t2.xhr();
            s2.open(t2.type, t2.url, t2.async, t2.username, t2.password);
            if (t2.xhrFields) {
              for (o2 in t2.xhrFields) {
                s2[o2] = t2.xhrFields[o2];
              }
            }
            if (t2.mimeType && s2.overrideMimeType) {
              s2.overrideMimeType(t2.mimeType);
            }
            if (!t2.crossDomain && !i2["X-Requested-With"]) {
              i2["X-Requested-With"] = "XMLHttpRequest";
            }
            for (o2 in i2) {
              s2.setRequestHeader(o2, i2[o2]);
            }
            n2 = function(e3) {
              return function() {
                if (n2) {
                  n2 = r2 = s2.onload = s2.onerror = s2.onabort = s2.ontimeout = s2.onreadystatechange = null;
                  if (e3 === "abort") {
                    s2.abort();
                  } else if (e3 === "error") {
                    if (typeof s2.status !== "number") {
                      a2(0, "error");
                    } else {
                      a2(s2.status, s2.statusText);
                    }
                  } else {
                    a2(nn[s2.status] || s2.status, s2.statusText, (s2.responseType || "text") !== "text" || typeof s2.responseText !== "string" ? { binary: s2.response } : { text: s2.responseText }, s2.getAllResponseHeaders());
                  }
                }
              };
            };
            s2.onload = n2();
            r2 = s2.onerror = s2.ontimeout = n2("error");
            if (s2.onabort !== void 0) {
              s2.onabort = r2;
            } else {
              s2.onreadystatechange = function() {
                if (s2.readyState === 4) {
                  e2.setTimeout(function() {
                    if (n2) {
                      r2();
                    }
                  });
                }
              };
            }
            n2 = n2("abort");
            try {
              s2.send(t2.hasContent && t2.data || null);
            } catch (e3) {
              if (n2) {
                throw e3;
              }
            }
          }, abort: function() {
            if (n2) {
              n2();
            }
          } };
        }
      });
      D.ajaxPrefilter(function(e3) {
        if (e3.crossDomain) {
          e3.contents.script = false;
        }
      });
      D.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function(e3) {
        D.globalEval(e3);
        return e3;
      } } });
      D.ajaxPrefilter("script", function(e3) {
        if (e3.cache === void 0) {
          e3.cache = false;
        }
        if (e3.crossDomain) {
          e3.type = "GET";
        }
      });
      D.ajaxTransport("script", function(e3) {
        if (e3.crossDomain || e3.scriptAttrs) {
          var t2, n2;
          return { send: function(r2, i2) {
            t2 = D("<script>").attr(e3.scriptAttrs || {}).prop({ charset: e3.scriptCharset, src: e3.url }).on("load error", n2 = function(e4) {
              t2.remove();
              n2 = null;
              if (e4) {
                i2(e4.type === "error" ? 404 : 200, e4.type);
              }
            });
            p.head.appendChild(t2[0]);
          }, abort: function() {
            if (n2) {
              n2();
            }
          } };
        }
      });
      var an = [], on = /(=)\?(?=&|$)|\?\?/;
      D.ajaxSetup({ jsonp: "callback", jsonpCallback: function() {
        var e3 = an.pop() || D.expando + "_" + At.guid++;
        this[e3] = true;
        return e3;
      } });
      D.ajaxPrefilter("json jsonp", function(t2, n2, r2) {
        var i2, a2, o2, s2 = t2.jsonp !== false && (on.test(t2.url) ? "url" : typeof t2.data === "string" && (t2.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && on.test(t2.data) && "data");
        if (s2 || t2.dataTypes[0] === "jsonp") {
          i2 = t2.jsonpCallback = v(t2.jsonpCallback) ? t2.jsonpCallback() : t2.jsonpCallback;
          if (s2) {
            t2[s2] = t2[s2].replace(on, "$1" + i2);
          } else if (t2.jsonp !== false) {
            t2.url += (Ot.test(t2.url) ? "&" : "?") + t2.jsonp + "=" + i2;
          }
          t2.converters["script json"] = function() {
            if (!o2) {
              D.error(i2 + " was not called");
            }
            return o2[0];
          };
          t2.dataTypes[0] = "json";
          a2 = e2[i2];
          e2[i2] = function() {
            o2 = arguments;
          };
          r2.always(function() {
            if (a2 === void 0) {
              D(e2).removeProp(i2);
            } else {
              e2[i2] = a2;
            }
            if (t2[i2]) {
              t2.jsonpCallback = n2.jsonpCallback;
              an.push(i2);
            }
            if (o2 && v(a2)) {
              a2(o2[0]);
            }
            o2 = a2 = void 0;
          });
          return "script";
        }
      });
      h2.createHTMLDocument = function() {
        var e3 = p.implementation.createHTMLDocument("").body;
        e3.innerHTML = "<form></form><form></form>";
        return e3.childNodes.length === 2;
      }();
      D.parseHTML = function(e3, t2, n2) {
        if (typeof e3 !== "string") {
          return [];
        }
        if (typeof t2 === "boolean") {
          n2 = t2;
          t2 = false;
        }
        var r2, i2, a2;
        if (!t2) {
          if (h2.createHTMLDocument) {
            t2 = p.implementation.createHTMLDocument("");
            r2 = t2.createElement("base");
            r2.href = p.location.href;
            t2.head.appendChild(r2);
          } else {
            t2 = p;
          }
        }
        i2 = P.exec(e3);
        a2 = !n2 && [];
        if (i2) {
          return [t2.createElement(i2[1])];
        }
        i2 = Ye([e3], t2, a2);
        if (a2 && a2.length) {
          D(a2).remove();
        }
        return D.merge([], i2.childNodes);
      };
      D.fn.load = function(e3, t2, n2) {
        var r2, i2, a2, o2 = this, s2 = e3.indexOf(" ");
        if (s2 > -1) {
          r2 = Mt(e3.slice(s2));
          e3 = e3.slice(0, s2);
        }
        if (v(t2)) {
          n2 = t2;
          t2 = void 0;
        } else if (t2 && typeof t2 === "object") {
          i2 = "POST";
        }
        if (o2.length > 0) {
          D.ajax({ url: e3, type: i2 || "GET", dataType: "html", data: t2 }).done(function(e4) {
            a2 = arguments;
            o2.html(r2 ? D("<div>").append(D.parseHTML(e4)).find(r2) : e4);
          }).always(n2 && function(e4, t3) {
            o2.each(function() {
              n2.apply(this, a2 || [e4.responseText, t3, e4]);
            });
          });
        }
        return this;
      };
      D.expr.pseudos.animated = function(e3) {
        return D.grep(D.timers, function(t2) {
          return e3 === t2.elem;
        }).length;
      };
      D.offset = { setOffset: function(e3, t2, n2) {
        var r2, i2, a2, o2, s2, u2, f2, l2 = D.css(e3, "position"), c2 = D(e3), d2 = {};
        if (l2 === "static") {
          e3.style.position = "relative";
        }
        s2 = c2.offset();
        a2 = D.css(e3, "top");
        u2 = D.css(e3, "left");
        f2 = (l2 === "absolute" || l2 === "fixed") && (a2 + u2).indexOf("auto") > -1;
        if (f2) {
          r2 = c2.position();
          o2 = r2.top;
          i2 = r2.left;
        } else {
          o2 = parseFloat(a2) || 0;
          i2 = parseFloat(u2) || 0;
        }
        if (v(t2)) {
          t2 = t2.call(e3, n2, D.extend({}, s2));
        }
        if (t2.top != null) {
          d2.top = t2.top - s2.top + o2;
        }
        if (t2.left != null) {
          d2.left = t2.left - s2.left + i2;
        }
        if ("using" in t2) {
          t2.using.call(e3, d2);
        } else {
          c2.css(d2);
        }
      } };
      D.fn.extend({ offset: function(e3) {
        if (arguments.length) {
          return e3 === void 0 ? this : this.each(function(t3) {
            D.offset.setOffset(this, e3, t3);
          });
        }
        var t2, n2, r2 = this[0];
        if (!r2) {
          return;
        }
        if (!r2.getClientRects().length) {
          return { top: 0, left: 0 };
        }
        t2 = r2.getBoundingClientRect();
        n2 = r2.ownerDocument.defaultView;
        return { top: t2.top + n2.pageYOffset, left: t2.left + n2.pageXOffset };
      }, position: function() {
        if (!this[0]) {
          return;
        }
        var e3, t2, n2, r2 = this[0], i2 = { top: 0, left: 0 };
        if (D.css(r2, "position") === "fixed") {
          t2 = r2.getBoundingClientRect();
        } else {
          t2 = this.offset();
          n2 = r2.ownerDocument;
          e3 = r2.offsetParent || n2.documentElement;
          while (e3 && (e3 === n2.body || e3 === n2.documentElement) && D.css(e3, "position") === "static") {
            e3 = e3.parentNode;
          }
          if (e3 && e3 !== r2 && e3.nodeType === 1) {
            i2 = D(e3).offset();
            i2.top += D.css(e3, "borderTopWidth", true);
            i2.left += D.css(e3, "borderLeftWidth", true);
          }
        }
        return { top: t2.top - i2.top - D.css(r2, "marginTop", true), left: t2.left - i2.left - D.css(r2, "marginLeft", true) };
      }, offsetParent: function() {
        return this.map(function() {
          var e3 = this.offsetParent;
          while (e3 && D.css(e3, "position") === "static") {
            e3 = e3.offsetParent;
          }
          return e3 || me;
        });
      } });
      D.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(e3, t2) {
        var n2 = "pageYOffset" === t2;
        D.fn[e3] = function(r2) {
          return K(this, function(e4, r3, i2) {
            var a2;
            if (m(e4)) {
              a2 = e4;
            } else if (e4.nodeType === 9) {
              a2 = e4.defaultView;
            }
            if (i2 === void 0) {
              return a2 ? a2[t2] : e4[r3];
            }
            if (a2) {
              a2.scrollTo(!n2 ? i2 : a2.pageXOffset, n2 ? i2 : a2.pageYOffset);
            } else {
              e4[r3] = i2;
            }
          }, e3, r2, arguments.length);
        };
      });
      D.each(["top", "left"], function(e3, t2) {
        D.cssHooks[t2] = Qe(h2.pixelPosition, function(e4, n2) {
          if (n2) {
            n2 = Xe(e4, t2);
            return ze.test(n2) ? D(e4).position()[t2] + "px" : n2;
          }
        });
      });
      D.each({ Height: "height", Width: "width" }, function(e3, t2) {
        D.each({ padding: "inner" + e3, content: t2, "": "outer" + e3 }, function(n2, r2) {
          D.fn[r2] = function(i2, a2) {
            var o2 = arguments.length && (n2 || typeof i2 !== "boolean"), s2 = n2 || (i2 === true || a2 === true ? "margin" : "border");
            return K(this, function(t3, n3, i3) {
              var a3;
              if (m(t3)) {
                return r2.indexOf("outer") === 0 ? t3["inner" + e3] : t3.document.documentElement["client" + e3];
              }
              if (t3.nodeType === 9) {
                a3 = t3.documentElement;
                return Math.max(t3.body["scroll" + e3], a3["scroll" + e3], t3.body["offset" + e3], a3["offset" + e3], a3["client" + e3]);
              }
              return i3 === void 0 ? D.css(t3, n3, s2) : D.style(t3, n3, i3, s2);
            }, t2, o2 ? i2 : void 0, o2);
          };
        });
      });
      D.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e3, t2) {
        D.fn[t2] = function(e4) {
          return this.on(t2, e4);
        };
      });
      D.fn.extend({ bind: function(e3, t2, n2) {
        return this.on(e3, null, t2, n2);
      }, unbind: function(e3, t2) {
        return this.off(e3, null, t2);
      }, delegate: function(e3, t2, n2, r2) {
        return this.on(t2, e3, n2, r2);
      }, undelegate: function(e3, t2, n2) {
        return arguments.length === 1 ? this.off(e3, "**") : this.off(t2, e3 || "**", n2);
      }, hover: function(e3, t2) {
        return this.on("mouseenter", e3).on("mouseleave", t2 || e3);
      } });
      D.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e3, t2) {
        D.fn[t2] = function(e4, n2) {
          return arguments.length > 0 ? this.on(t2, null, e4, n2) : this.trigger(t2);
        };
      });
      var sn = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
      D.proxy = function(e3, t2) {
        var n2, r2, a2;
        if (typeof t2 === "string") {
          n2 = e3[t2];
          t2 = e3;
          e3 = n2;
        }
        if (!v(e3)) {
          return void 0;
        }
        r2 = i.call(arguments, 2);
        a2 = function() {
          return e3.apply(t2 || this, r2.concat(i.call(arguments)));
        };
        a2.guid = e3.guid = e3.guid || D.guid++;
        return a2;
      };
      D.holdReady = function(e3) {
        if (e3) {
          D.readyWait++;
        } else {
          D.ready(true);
        }
      };
      D.isArray = Array.isArray;
      D.parseJSON = JSON.parse;
      D.nodeName = x;
      D.isFunction = v;
      D.isWindow = m;
      D.camelCase = re;
      D.type = y;
      D.now = Date.now;
      D.isNumeric = function(e3) {
        var t2 = D.type(e3);
        return (t2 === "number" || t2 === "string") && !isNaN(e3 - parseFloat(e3));
      };
      D.trim = function(e3) {
        return e3 == null ? "" : (e3 + "").replace(sn, "$1");
      };
      var un = e2.jQuery, fn = e2.$;
      D.noConflict = function(t2) {
        if (e2.$ === D) {
          e2.$ = fn;
        }
        if (t2 && e2.jQuery === D) {
          e2.jQuery = un;
        }
        return D;
      };
      if (typeof t === "undefined") {
        e2.jQuery = e2.$ = D;
      }
      return D;
    });
  })(jquery$1);
  return jquery$1.exports;
}
var hasRequiredJquery_dataTables;
function requireJquery_dataTables() {
  if (hasRequiredJquery_dataTables) return jquery_dataTables.exports;
  hasRequiredJquery_dataTables = 1;
  (function(e, t) {
    (function(t2) {
      {
        e.exports = function(e2, n) {
          if (!e2) {
            e2 = window;
          }
          if (!n) {
            n = typeof window !== "undefined" ? requireJquery() : requireJquery()(e2);
          }
          return t2(n, e2, e2.document);
        };
      }
    })(function(e2, t2, n, r) {
      var i = function(t3, n2) {
        if (this instanceof i) {
          return e2(t3).DataTable(n2);
        } else {
          n2 = t3;
        }
        this.$ = function(e3, t4) {
          return this.api(true).$(e3, t4);
        };
        this._ = function(e3, t4) {
          return this.api(true).rows(e3, t4).data();
        };
        this.api = function(e3) {
          return e3 ? new o(ht(this[a.iApiIndex])) : new o(this);
        };
        this.fnAddData = function(t4, n3) {
          var i2 = this.api(true);
          var a2 = Array.isArray(t4) && (Array.isArray(t4[0]) || e2.isPlainObject(t4[0])) ? i2.rows.add(t4) : i2.row.add(t4);
          if (n3 === r || n3) {
            i2.draw();
          }
          return a2.flatten().toArray();
        };
        this.fnAdjustColumnSizing = function(e3) {
          var t4 = this.api(true).columns.adjust();
          var n3 = t4.settings()[0];
          var i2 = n3.oScroll;
          if (e3 === r || e3) {
            t4.draw(false);
          } else if (i2.sX !== "" || i2.sY !== "") {
            Ze(n3);
          }
        };
        this.fnClearTable = function(e3) {
          var t4 = this.api(true).clear();
          if (e3 === r || e3) {
            t4.draw();
          }
        };
        this.fnClose = function(e3) {
          this.api(true).row(e3).child.hide();
        };
        this.fnDeleteRow = function(e3, t4, n3) {
          var i2 = this.api(true);
          var a2 = i2.rows(e3);
          var o2 = a2.settings()[0];
          var s3 = o2.aoData[a2[0][0]];
          a2.remove();
          if (t4) {
            t4.call(this, o2, s3);
          }
          if (n3 === r || n3) {
            i2.draw();
          }
          return s3;
        };
        this.fnDestroy = function(e3) {
          this.api(true).destroy(e3);
        };
        this.fnDraw = function(e3) {
          this.api(true).draw(e3);
        };
        this.fnFilter = function(e3, t4, n3, i2, a2, o2) {
          var s3 = this.api(true);
          if (t4 === null || t4 === r) {
            s3.search(e3, n3, i2, o2);
          } else {
            s3.column(t4).search(e3, n3, i2, o2);
          }
          s3.draw();
        };
        this.fnGetData = function(e3, t4) {
          var n3 = this.api(true);
          if (e3 !== r) {
            var i2 = e3.nodeName ? e3.nodeName.toLowerCase() : "";
            return t4 !== r || i2 == "td" || i2 == "th" ? n3.cell(e3, t4).data() : n3.row(e3).data() || null;
          }
          return n3.data().toArray();
        };
        this.fnGetNodes = function(e3) {
          var t4 = this.api(true);
          return e3 !== r ? t4.row(e3).node() : t4.rows().nodes().flatten().toArray();
        };
        this.fnGetPosition = function(e3) {
          var t4 = this.api(true);
          var n3 = e3.nodeName.toUpperCase();
          if (n3 == "TR") {
            return t4.row(e3).index();
          } else if (n3 == "TD" || n3 == "TH") {
            var r2 = t4.cell(e3).index();
            return [r2.row, r2.columnVisible, r2.column];
          }
          return null;
        };
        this.fnIsOpen = function(e3) {
          return this.api(true).row(e3).child.isShown();
        };
        this.fnOpen = function(e3, t4, n3) {
          return this.api(true).row(e3).child(t4, n3).show().child()[0];
        };
        this.fnPageChange = function(e3, t4) {
          var n3 = this.api(true).page(e3);
          if (t4 === r || t4) {
            n3.draw(false);
          }
        };
        this.fnSetColumnVis = function(e3, t4, n3) {
          var i2 = this.api(true).column(e3).visible(t4);
          if (n3 === r || n3) {
            i2.columns.adjust().draw();
          }
        };
        this.fnSettings = function() {
          return ht(this[a.iApiIndex]);
        };
        this.fnSort = function(e3) {
          this.api(true).order(e3).draw();
        };
        this.fnSortListener = function(e3, t4, n3) {
          this.api(true).order.listener(e3, t4, n3);
        };
        this.fnUpdate = function(e3, t4, n3, i2, a2) {
          var o2 = this.api(true);
          if (n3 === r || n3 === null) {
            o2.row(t4).data(e3);
          } else {
            o2.cell(t4, n3).data(e3);
          }
          if (a2 === r || a2) {
            o2.columns.adjust();
          }
          if (i2 === r || i2) {
            o2.draw();
          }
          return 0;
        };
        this.fnVersionCheck = a.fnVersionCheck;
        var s2 = this;
        var u2 = n2 === r;
        var f2 = this.length;
        if (u2) {
          n2 = {};
        }
        this.oApi = this.internal = a.internal;
        for (var l2 in i.ext.internal) {
          if (l2) {
            this[l2] = on(l2);
          }
        }
        this.each(function() {
          var t4 = {};
          var a2 = f2 > 1 ? pt(t4, n2, true) : n2;
          var o2 = 0, l3;
          var c2 = this.getAttribute("id");
          var d2 = false;
          var h3 = i.defaults;
          var v2 = e2(this);
          if (this.nodeName.toLowerCase() != "table") {
            vt(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
            return;
          }
          R(h3);
          C(h3.column);
          A(h3, h3, true);
          A(h3.column, h3.column, true);
          A(h3, e2.extend(a2, v2.data()), true);
          var m2 = i.settings;
          for (o2 = 0, l3 = m2.length; o2 < l3; o2++) {
            var p2 = m2[o2];
            if (p2.nTable == this || p2.nTHead && p2.nTHead.parentNode == this || p2.nTFoot && p2.nTFoot.parentNode == this) {
              var g2 = a2.bRetrieve !== r ? a2.bRetrieve : h3.bRetrieve;
              var b2 = a2.bDestroy !== r ? a2.bDestroy : h3.bDestroy;
              if (u2 || g2) {
                return p2.oInstance;
              } else if (b2) {
                p2.oInstance.fnDestroy();
                break;
              } else {
                vt(p2, 0, "Cannot reinitialise DataTable", 3);
                return;
              }
            }
            if (p2.sTableId == this.id) {
              m2.splice(o2, 1);
              break;
            }
          }
          if (c2 === null || c2 === "") {
            c2 = "DataTables_Table_" + i.ext._unique++;
            this.id = c2;
          }
          var y2 = e2.extend(true, {}, i.models.oSettings, { sDestroyWidth: v2[0].style.width, sInstance: c2, sTableId: c2 });
          y2.nTable = this;
          y2.oApi = s2.internal;
          y2.oInit = a2;
          m2.push(y2);
          y2.oInstance = s2.length === 1 ? s2 : v2.dataTable();
          R(a2);
          O(a2.oLanguage);
          if (a2.aLengthMenu && !a2.iDisplayLength) {
            a2.iDisplayLength = Array.isArray(a2.aLengthMenu[0]) ? a2.aLengthMenu[0][0] : a2.aLengthMenu[0];
          }
          a2 = pt(e2.extend(true, {}, h3), a2);
          mt(y2.oFeatures, a2, ["bPaginate", "bLengthChange", "bFilter", "bSort", "bSortMulti", "bInfo", "bProcessing", "bAutoWidth", "bSortClasses", "bServerSide", "bDeferRender"]);
          mt(y2, a2, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod", "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", "rowId", ["iCookieDuration", "iStateDuration"], ["oSearch", "oPreviousSearch"], ["aoSearchCols", "aoPreSearchCols"], ["iDisplayLength", "_iDisplayLength"]]);
          mt(y2.oScroll, a2, [["sScrollX", "sX"], ["sScrollXInner", "sXInner"], ["sScrollY", "sY"], ["bScrollCollapse", "bCollapse"]]);
          mt(y2.oLanguage, a2, "fnInfoCallback");
          bt(y2, "aoDrawCallback", a2.fnDrawCallback, "user");
          bt(y2, "aoServerParams", a2.fnServerParams, "user");
          bt(y2, "aoStateSaveParams", a2.fnStateSaveParams, "user");
          bt(y2, "aoStateLoadParams", a2.fnStateLoadParams, "user");
          bt(y2, "aoStateLoaded", a2.fnStateLoaded, "user");
          bt(y2, "aoRowCallback", a2.fnRowCallback, "user");
          bt(y2, "aoRowCreatedCallback", a2.fnCreatedRow, "user");
          bt(y2, "aoHeaderCallback", a2.fnHeaderCallback, "user");
          bt(y2, "aoFooterCallback", a2.fnFooterCallback, "user");
          bt(y2, "aoInitComplete", a2.fnInitComplete, "user");
          bt(y2, "aoPreDrawCallback", a2.fnPreDrawCallback, "user");
          y2.rowIdFn = ne(a2.rowId);
          I(y2);
          var w2 = y2.oClasses;
          e2.extend(w2, i.ext.classes, a2.oClasses);
          v2.addClass(w2.sTable);
          if (y2.iInitDisplayStart === r) {
            y2.iInitDisplayStart = a2.iDisplayStart;
            y2._iDisplayStart = a2.iDisplayStart;
          }
          if (a2.iDeferLoading !== null) {
            y2.bDeferLoading = true;
            var S2 = Array.isArray(a2.iDeferLoading);
            y2._iRecordsDisplay = S2 ? a2.iDeferLoading[0] : a2.iDeferLoading;
            y2._iRecordsTotal = S2 ? a2.iDeferLoading[1] : a2.iDeferLoading;
          }
          var D2 = y2.oLanguage;
          e2.extend(true, D2, a2.oLanguage);
          if (D2.sUrl) {
            e2.ajax({ dataType: "json", url: D2.sUrl, success: function(t5) {
              A(h3.oLanguage, t5);
              O(t5);
              e2.extend(true, D2, t5, y2.oInit.oLanguage);
              yt(y2, null, "i18n", [y2]);
              We(y2);
            }, error: function() {
              We(y2);
            } });
            d2 = true;
          } else {
            yt(y2, null, "i18n", [y2]);
          }
          if (a2.asStripeClasses === null) {
            y2.asStripeClasses = [w2.sStripeOdd, w2.sStripeEven];
          }
          var k2 = y2.asStripeClasses;
          var x2 = v2.children("tbody").find("tr").eq(0);
          if (e2.inArray(true, e2.map(k2, function(e3, t5) {
            return x2.hasClass(e3);
          })) !== -1) {
            e2("tbody tr", this).removeClass(k2.join(" "));
            y2.asDestroyStripes = k2.slice();
          }
          var _2 = [];
          var M2;
          var T2 = this.getElementsByTagName("thead");
          if (T2.length !== 0) {
            pe(y2.aoHeader, T2[0]);
            _2 = ge(y2);
          }
          if (a2.aoColumns === null) {
            M2 = [];
            for (o2 = 0, l3 = _2.length; o2 < l3; o2++) {
              M2.push(null);
            }
          } else {
            M2 = a2.aoColumns;
          }
          for (o2 = 0, l3 = M2.length; o2 < l3; o2++) {
            L(y2, _2 ? _2[o2] : null);
          }
          z(y2, a2.aoColumnDefs, M2, function(e3, t5) {
            W(y2, e3, t5);
          });
          if (x2.length) {
            var E2 = function(e3, t5) {
              return e3.getAttribute("data-" + t5) !== null ? t5 : null;
            };
            e2(x2[0]).children("th, td").each(function(e3, t5) {
              var n3 = y2.aoColumns[e3];
              if (n3.mData === e3) {
                var i2 = E2(t5, "sort") || E2(t5, "order");
                var a3 = E2(t5, "filter") || E2(t5, "search");
                if (i2 !== null || a3 !== null) {
                  n3.mData = { _: e3 + ".display", sort: i2 !== null ? e3 + ".@data-" + i2 : r, type: i2 !== null ? e3 + ".@data-" + i2 : r, filter: a3 !== null ? e3 + ".@data-" + a3 : r };
                  W(y2, e3);
                }
              }
            });
          }
          var F2 = y2.oFeatures;
          var Y2 = function() {
            if (a2.aaSorting === r) {
              var t5 = y2.aaSorting;
              for (o2 = 0, l3 = t5.length; o2 < l3; o2++) {
                t5[o2][1] = y2.aoColumns[o2].asSorting[0];
              }
            }
            ut(y2);
            if (F2.bSort) {
              bt(y2, "aoDrawCallback", function() {
                if (y2.bSorted) {
                  var t6 = rt(y2);
                  var n4 = {};
                  e2.each(t6, function(e3, t7) {
                    n4[t7.src] = t7.dir;
                  });
                  yt(y2, null, "order", [y2, t6, n4]);
                  at(y2);
                }
              });
            }
            bt(y2, "aoDrawCallback", function() {
              if (y2.bSorted || Dt(y2) === "ssp" || F2.bDeferRender) {
                ut(y2);
              }
            }, "sc");
            var n3 = v2.children("caption").each(function() {
              this._captionSide = e2(this).css("caption-side");
            });
            var i2 = v2.children("thead");
            if (i2.length === 0) {
              i2 = e2("<thead/>").appendTo(v2);
            }
            y2.nTHead = i2[0];
            var s3 = v2.children("tbody");
            if (s3.length === 0) {
              s3 = e2("<tbody/>").insertAfter(i2);
            }
            y2.nTBody = s3[0];
            var u3 = v2.children("tfoot");
            if (u3.length === 0 && n3.length > 0 && (y2.oScroll.sX !== "" || y2.oScroll.sY !== "")) {
              u3 = e2("<tfoot/>").appendTo(v2);
            }
            if (u3.length === 0 || u3.children().length === 0) {
              v2.addClass(w2.sNoFooter);
            } else if (u3.length > 0) {
              y2.nTFoot = u3[0];
              pe(y2.aoFooter, y2.nTFoot);
            }
            if (a2.aaData) {
              for (o2 = 0; o2 < a2.aaData.length; o2++) {
                B(y2, a2.aaData[o2]);
              }
            } else if (y2.bDeferLoading || Dt(y2) == "dom") {
              Z(y2, e2(y2.nTBody).children("tr"));
            }
            y2.aiDisplay = y2.aiDisplayMaster.slice();
            y2.bInitialised = true;
            if (d2 === false) {
              We(y2);
            }
          };
          bt(y2, "aoDrawCallback", lt, "state_save");
          if (a2.bStateSave) {
            F2.bStateSave = true;
            ct(y2, a2, Y2);
          } else {
            Y2();
          }
        });
        s2 = null;
        return this;
      };
      var a;
      var o;
      var s;
      var u;
      var f = {};
      var l = /[\r\n\u2028]/g;
      var c = /<.*?>/g;
      var d = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
      var h2 = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g");
      var v = /['\u00A0,$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi;
      var m = function(e3) {
        return !e3 || e3 === true || e3 === "-" ? true : false;
      };
      var p = function(e3) {
        var t3 = parseInt(e3, 10);
        return !isNaN(t3) && isFinite(e3) ? t3 : null;
      };
      var g = function(e3, t3) {
        if (!f[t3]) {
          f[t3] = new RegExp(Ye(t3), "g");
        }
        return typeof e3 === "string" && t3 !== "." ? e3.replace(/\./g, "").replace(f[t3], ".") : e3;
      };
      var b = function(e3, t3, n2) {
        var r2 = typeof e3 === "string";
        if (m(e3)) {
          return true;
        }
        if (t3 && r2) {
          e3 = g(e3, t3);
        }
        if (n2 && r2) {
          e3 = e3.replace(v, "");
        }
        return !isNaN(parseFloat(e3)) && isFinite(e3);
      };
      var y = function(e3) {
        return m(e3) || typeof e3 === "string";
      };
      var w = function(e3, t3, n2) {
        if (m(e3)) {
          return true;
        }
        var r2 = y(e3);
        return !r2 ? null : b(_(e3), t3, n2) ? true : null;
      };
      var S = function(e3, t3, n2) {
        var i2 = [];
        var a2 = 0, o2 = e3.length;
        if (n2 !== r) {
          for (; a2 < o2; a2++) {
            if (e3[a2] && e3[a2][t3]) {
              i2.push(e3[a2][t3][n2]);
            }
          }
        } else {
          for (; a2 < o2; a2++) {
            if (e3[a2]) {
              i2.push(e3[a2][t3]);
            }
          }
        }
        return i2;
      };
      var D = function(e3, t3, n2, i2) {
        var a2 = [];
        var o2 = 0, s2 = t3.length;
        if (i2 !== r) {
          for (; o2 < s2; o2++) {
            if (e3[t3[o2]][n2]) {
              a2.push(e3[t3[o2]][n2][i2]);
            }
          }
        } else {
          for (; o2 < s2; o2++) {
            a2.push(e3[t3[o2]][n2]);
          }
        }
        return a2;
      };
      var k = function(e3, t3) {
        var n2 = [];
        var i2;
        if (t3 === r) {
          t3 = 0;
          i2 = e3;
        } else {
          i2 = t3;
          t3 = e3;
        }
        for (var a2 = t3; a2 < i2; a2++) {
          n2.push(a2);
        }
        return n2;
      };
      var x = function(e3) {
        var t3 = [];
        for (var n2 = 0, r2 = e3.length; n2 < r2; n2++) {
          if (e3[n2]) {
            t3.push(e3[n2]);
          }
        }
        return t3;
      };
      var _ = function(e3) {
        return e3.replace(c, "");
      };
      var M = function(e3) {
        if (e3.length < 2) {
          return true;
        }
        var t3 = e3.slice().sort();
        var n2 = t3[0];
        for (var r2 = 1, i2 = t3.length; r2 < i2; r2++) {
          if (t3[r2] === n2) {
            return false;
          }
          n2 = t3[r2];
        }
        return true;
      };
      var T = function(e3) {
        if (M(e3)) {
          return e3.slice();
        }
        var t3 = [], n2, r2, i2 = e3.length, a2, o2 = 0;
        e: for (r2 = 0; r2 < i2; r2++) {
          n2 = e3[r2];
          for (a2 = 0; a2 < o2; a2++) {
            if (t3[a2] === n2) {
              continue e;
            }
          }
          t3.push(n2);
          o2++;
        }
        return t3;
      };
      var E = function(e3, t3) {
        if (Array.isArray(t3)) {
          for (var n2 = 0; n2 < t3.length; n2++) {
            E(e3, t3[n2]);
          }
        } else {
          e3.push(t3);
        }
        return e3;
      };
      var F = function(e3, t3) {
        if (t3 === r) {
          t3 = 0;
        }
        return this.indexOf(e3, t3) !== -1;
      };
      if (!Array.isArray) {
        Array.isArray = function(e3) {
          return Object.prototype.toString.call(e3) === "[object Array]";
        };
      }
      if (!Array.prototype.includes) {
        Array.prototype.includes = F;
      }
      if (!String.prototype.trim) {
        String.prototype.trim = function() {
          return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        };
      }
      if (!String.prototype.includes) {
        String.prototype.includes = F;
      }
      i.util = { throttle: function(e3, t3) {
        var n2 = t3 !== r ? t3 : 200, i2, a2;
        return function() {
          var t4 = this, o2 = +/* @__PURE__ */ new Date(), s2 = arguments;
          if (i2 && o2 < i2 + n2) {
            clearTimeout(a2);
            a2 = setTimeout(function() {
              i2 = r;
              e3.apply(t4, s2);
            }, n2);
          } else {
            i2 = o2;
            e3.apply(t4, s2);
          }
        };
      }, escapeRegex: function(e3) {
        return e3.replace(h2, "\\$1");
      }, set: function(t3) {
        if (e2.isPlainObject(t3)) {
          return i.util.set(t3._);
        } else if (t3 === null) {
          return function() {
          };
        } else if (typeof t3 === "function") {
          return function(e3, n3, r2) {
            t3(e3, "set", n3, r2);
          };
        } else if (typeof t3 === "string" && (t3.indexOf(".") !== -1 || t3.indexOf("[") !== -1 || t3.indexOf("(") !== -1)) {
          var n2 = function(e3, t4, i2) {
            var a2 = te(i2), o2;
            var s2 = a2[a2.length - 1];
            var u2, f2, l2, c2;
            for (var d2 = 0, h3 = a2.length - 1; d2 < h3; d2++) {
              if (a2[d2] === "__proto__" || a2[d2] === "constructor") {
                throw new Error("Cannot set prototype values");
              }
              u2 = a2[d2].match(K);
              f2 = a2[d2].match(ee);
              if (u2) {
                a2[d2] = a2[d2].replace(K, "");
                e3[a2[d2]] = [];
                o2 = a2.slice();
                o2.splice(0, d2 + 1);
                c2 = o2.join(".");
                if (Array.isArray(t4)) {
                  for (var v2 = 0, m2 = t4.length; v2 < m2; v2++) {
                    l2 = {};
                    n2(l2, t4[v2], c2);
                    e3[a2[d2]].push(l2);
                  }
                } else {
                  e3[a2[d2]] = t4;
                }
                return;
              } else if (f2) {
                a2[d2] = a2[d2].replace(ee, "");
                e3 = e3[a2[d2]](t4);
              }
              if (e3[a2[d2]] === null || e3[a2[d2]] === r) {
                e3[a2[d2]] = {};
              }
              e3 = e3[a2[d2]];
            }
            if (s2.match(ee)) {
              e3 = e3[s2.replace(ee, "")](t4);
            } else {
              e3[s2.replace(K, "")] = t4;
            }
          };
          return function(e3, r2) {
            return n2(e3, r2, t3);
          };
        } else {
          return function(e3, n3) {
            e3[t3] = n3;
          };
        }
      }, get: function(t3) {
        if (e2.isPlainObject(t3)) {
          var n2 = {};
          e2.each(t3, function(e3, t4) {
            if (t4) {
              n2[e3] = i.util.get(t4);
            }
          });
          return function(e3, t4, i2, a3) {
            var o2 = n2[t4] || n2._;
            return o2 !== r ? o2(e3, t4, i2, a3) : e3;
          };
        } else if (t3 === null) {
          return function(e3) {
            return e3;
          };
        } else if (typeof t3 === "function") {
          return function(e3, n3, r2, i2) {
            return t3(e3, n3, r2, i2);
          };
        } else if (typeof t3 === "string" && (t3.indexOf(".") !== -1 || t3.indexOf("[") !== -1 || t3.indexOf("(") !== -1)) {
          var a2 = function(e3, t4, n3) {
            var i2, o2, s2, u2;
            if (n3 !== "") {
              var f2 = te(n3);
              for (var l2 = 0, c2 = f2.length; l2 < c2; l2++) {
                i2 = f2[l2].match(K);
                o2 = f2[l2].match(ee);
                if (i2) {
                  f2[l2] = f2[l2].replace(K, "");
                  if (f2[l2] !== "") {
                    e3 = e3[f2[l2]];
                  }
                  s2 = [];
                  f2.splice(0, l2 + 1);
                  u2 = f2.join(".");
                  if (Array.isArray(e3)) {
                    for (var d2 = 0, h3 = e3.length; d2 < h3; d2++) {
                      s2.push(a2(e3[d2], t4, u2));
                    }
                  }
                  var v2 = i2[0].substring(1, i2[0].length - 1);
                  e3 = v2 === "" ? s2 : s2.join(v2);
                  break;
                } else if (o2) {
                  f2[l2] = f2[l2].replace(ee, "");
                  e3 = e3[f2[l2]]();
                  continue;
                }
                if (e3 === null || e3[f2[l2]] === r) {
                  return r;
                }
                e3 = e3[f2[l2]];
              }
            }
            return e3;
          };
          return function(e3, n3) {
            return a2(e3, n3, t3);
          };
        } else {
          return function(e3, n3) {
            return e3[t3];
          };
        }
      } };
      function Y(t3) {
        var n2 = "a aa ai ao as b fn i m o s ", r2, i2, a2 = {};
        e2.each(t3, function(e3, o2) {
          r2 = e3.match(/^([^A-Z]+?)([A-Z])/);
          if (r2 && n2.indexOf(r2[1] + " ") !== -1) {
            i2 = e3.replace(r2[0], r2[2].toLowerCase());
            a2[i2] = e3;
            if (r2[1] === "o") {
              Y(t3[e3]);
            }
          }
        });
        t3._hungarianMap = a2;
      }
      function A(t3, n2, i2) {
        if (!t3._hungarianMap) {
          Y(t3);
        }
        var a2;
        e2.each(n2, function(o2, s2) {
          a2 = t3._hungarianMap[o2];
          if (a2 !== r && (i2 || n2[a2] === r)) {
            if (a2.charAt(0) === "o") {
              if (!n2[a2]) {
                n2[a2] = {};
              }
              e2.extend(true, n2[a2], n2[o2]);
              A(t3[a2], n2[a2], i2);
            } else {
              n2[a2] = n2[o2];
            }
          }
        });
      }
      function O(e3) {
        var t3 = i.defaults.oLanguage;
        var n2 = t3.sDecimal;
        if (n2) {
          Jt(n2);
        }
        if (e3) {
          var r2 = e3.sZeroRecords;
          if (!e3.sEmptyTable && r2 && t3.sEmptyTable === "No data available in table") {
            mt(e3, e3, "sZeroRecords", "sEmptyTable");
          }
          if (!e3.sLoadingRecords && r2 && t3.sLoadingRecords === "Loading...") {
            mt(e3, e3, "sZeroRecords", "sLoadingRecords");
          }
          if (e3.sInfoThousands) {
            e3.sThousands = e3.sInfoThousands;
          }
          var a2 = e3.sDecimal;
          if (a2 && n2 !== a2) {
            Jt(a2);
          }
        }
      }
      var N = function(e3, t3, n2) {
        if (e3[t3] !== r) {
          e3[n2] = e3[t3];
        }
      };
      function R(e3) {
        N(e3, "ordering", "bSort");
        N(e3, "orderMulti", "bSortMulti");
        N(e3, "orderClasses", "bSortClasses");
        N(e3, "orderCellsTop", "bSortCellsTop");
        N(e3, "order", "aaSorting");
        N(e3, "orderFixed", "aaSortingFixed");
        N(e3, "paging", "bPaginate");
        N(e3, "pagingType", "sPaginationType");
        N(e3, "pageLength", "iDisplayLength");
        N(e3, "searching", "bFilter");
        if (typeof e3.sScrollX === "boolean") {
          e3.sScrollX = e3.sScrollX ? "100%" : "";
        }
        if (typeof e3.scrollX === "boolean") {
          e3.scrollX = e3.scrollX ? "100%" : "";
        }
        var t3 = e3.aoSearchCols;
        if (t3) {
          for (var n2 = 0, r2 = t3.length; n2 < r2; n2++) {
            if (t3[n2]) {
              A(i.models.oSearch, t3[n2]);
            }
          }
        }
      }
      function C(e3) {
        N(e3, "orderable", "bSortable");
        N(e3, "orderData", "aDataSort");
        N(e3, "orderSequence", "asSorting");
        N(e3, "orderDataType", "sortDataType");
        var t3 = e3.aDataSort;
        if (typeof t3 === "number" && !Array.isArray(t3)) {
          e3.aDataSort = [t3];
        }
      }
      function I(n2) {
        if (!i.__browser) {
          var r2 = {};
          i.__browser = r2;
          var a2 = e2("<div/>").css({ position: "fixed", top: 0, left: e2(t2).scrollLeft() * -1, height: 1, width: 1, overflow: "hidden" }).append(e2("<div/>").css({ position: "absolute", top: 1, left: 1, width: 100, overflow: "scroll" }).append(e2("<div/>").css({ width: "100%", height: 10 }))).appendTo("body");
          var o2 = a2.children();
          var s2 = o2.children();
          r2.barWidth = o2[0].offsetWidth - o2[0].clientWidth;
          r2.bScrollOversize = s2[0].offsetWidth === 100 && o2[0].clientWidth !== 100;
          r2.bScrollbarLeft = Math.round(s2.offset().left) !== 1;
          r2.bBounding = a2[0].getBoundingClientRect().width ? true : false;
          a2.remove();
        }
        e2.extend(n2.oBrowser, i.__browser);
        n2.oScroll.iBarWidth = i.__browser.barWidth;
      }
      function P(e3, t3, n2, i2, a2, o2) {
        var s2 = i2, u2, f2 = false;
        if (n2 !== r) {
          u2 = n2;
          f2 = true;
        }
        while (s2 !== a2) {
          if (!e3.hasOwnProperty(s2)) {
            continue;
          }
          u2 = f2 ? t3(u2, e3[s2], s2, e3) : e3[s2];
          f2 = true;
          s2 += o2;
        }
        return u2;
      }
      function L(t3, r2) {
        var a2 = i.defaults.column;
        var o2 = t3.aoColumns.length;
        var s2 = e2.extend({}, i.models.oColumn, a2, { nTh: r2 ? r2 : n.createElement("th"), sTitle: a2.sTitle ? a2.sTitle : r2 ? r2.innerHTML : "", aDataSort: a2.aDataSort ? a2.aDataSort : [o2], mData: a2.mData ? a2.mData : o2, idx: o2 });
        t3.aoColumns.push(s2);
        var u2 = t3.aoPreSearchCols;
        u2[o2] = e2.extend({}, i.models.oSearch, u2[o2]);
        W(t3, o2, e2(r2).data());
      }
      function W(t3, n2, a2) {
        var o2 = t3.aoColumns[n2];
        var s2 = t3.oClasses;
        var u2 = e2(o2.nTh);
        if (!o2.sWidthOrig) {
          o2.sWidthOrig = u2.attr("width") || null;
          var f2 = (u2.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
          if (f2) {
            o2.sWidthOrig = f2[1];
          }
        }
        if (a2 !== r && a2 !== null) {
          C(a2);
          A(i.defaults.column, a2, true);
          if (a2.mDataProp !== r && !a2.mData) {
            a2.mData = a2.mDataProp;
          }
          if (a2.sType) {
            o2._sManualType = a2.sType;
          }
          if (a2.className && !a2.sClass) {
            a2.sClass = a2.className;
          }
          if (a2.sClass) {
            u2.addClass(a2.sClass);
          }
          var l2 = o2.sClass;
          e2.extend(o2, a2);
          mt(o2, a2, "sWidth", "sWidthOrig");
          if (l2 !== o2.sClass) {
            o2.sClass = l2 + " " + o2.sClass;
          }
          if (a2.iDataSort !== r) {
            o2.aDataSort = [a2.iDataSort];
          }
          mt(o2, a2, "aDataSort");
        }
        var c2 = o2.mData;
        var d2 = ne(c2);
        var h3 = o2.mRender ? ne(o2.mRender) : null;
        var v2 = function(e3) {
          return typeof e3 === "string" && e3.indexOf("@") !== -1;
        };
        o2._bAttrSrc = e2.isPlainObject(c2) && (v2(c2.sort) || v2(c2.type) || v2(c2.filter));
        o2._setter = null;
        o2.fnGetData = function(e3, t4, n3) {
          var i2 = d2(e3, t4, r, n3);
          return h3 && t4 ? h3(i2, t4, e3, n3) : i2;
        };
        o2.fnSetData = function(e3, t4, n3) {
          return re(c2)(e3, t4, n3);
        };
        if (typeof c2 !== "number") {
          t3._rowReadObject = true;
        }
        if (!t3.oFeatures.bSort) {
          o2.bSortable = false;
          u2.addClass(s2.sSortableNone);
        }
        var m2 = e2.inArray("asc", o2.asSorting) !== -1;
        var p2 = e2.inArray("desc", o2.asSorting) !== -1;
        if (!o2.bSortable || !m2 && !p2) {
          o2.sSortingClass = s2.sSortableNone;
          o2.sSortingClassJUI = "";
        } else if (m2 && !p2) {
          o2.sSortingClass = s2.sSortableAsc;
          o2.sSortingClassJUI = s2.sSortJUIAscAllowed;
        } else if (!m2 && p2) {
          o2.sSortingClass = s2.sSortableDesc;
          o2.sSortingClassJUI = s2.sSortJUIDescAllowed;
        } else {
          o2.sSortingClass = s2.sSortable;
          o2.sSortingClassJUI = s2.sSortJUI;
        }
      }
      function j(e3) {
        if (e3.oFeatures.bAutoWidth !== false) {
          var t3 = e3.aoColumns;
          Xe(e3);
          for (var n2 = 0, r2 = t3.length; n2 < r2; n2++) {
            t3[n2].nTh.style.width = t3[n2].sWidth;
          }
        }
        var i2 = e3.oScroll;
        if (i2.sY !== "" || i2.sX !== "") {
          Ze(e3);
        }
        yt(e3, null, "column-sizing", [e3]);
      }
      function H(e3, t3) {
        var n2 = G(e3, "bVisible");
        return typeof n2[t3] === "number" ? n2[t3] : null;
      }
      function U(t3, n2) {
        var r2 = G(t3, "bVisible");
        var i2 = e2.inArray(n2, r2);
        return i2 !== -1 ? i2 : null;
      }
      function $(t3) {
        var n2 = 0;
        e2.each(t3.aoColumns, function(t4, r2) {
          if (r2.bVisible && e2(r2.nTh).css("display") !== "none") {
            n2++;
          }
        });
        return n2;
      }
      function G(t3, n2) {
        var r2 = [];
        e2.map(t3.aoColumns, function(e3, t4) {
          if (e3[n2]) {
            r2.push(t4);
          }
        });
        return r2;
      }
      function q(e3) {
        var t3 = e3.aoColumns;
        var n2 = e3.aoData;
        var a2 = i.ext.type.detect;
        var o2, s2, u2, f2, l2, c2;
        var d2, h3, v2;
        for (o2 = 0, s2 = t3.length; o2 < s2; o2++) {
          d2 = t3[o2];
          v2 = [];
          if (!d2.sType && d2._sManualType) {
            d2.sType = d2._sManualType;
          } else if (!d2.sType) {
            for (u2 = 0, f2 = a2.length; u2 < f2; u2++) {
              for (l2 = 0, c2 = n2.length; l2 < c2; l2++) {
                if (v2[l2] === r) {
                  v2[l2] = X(e3, l2, o2, "type");
                }
                h3 = a2[u2](v2[l2], e3);
                if (!h3 && u2 !== a2.length - 1) {
                  break;
                }
                if (h3 === "html" && !m(v2[l2])) {
                  break;
                }
              }
              if (h3) {
                d2.sType = h3;
                break;
              }
            }
            if (!d2.sType) {
              d2.sType = "string";
            }
          }
        }
      }
      function z(t3, n2, i2, a2) {
        var o2, s2, u2, f2, l2, c2, d2;
        var h3 = t3.aoColumns;
        if (n2) {
          for (o2 = n2.length - 1; o2 >= 0; o2--) {
            d2 = n2[o2];
            var v2 = d2.target !== r ? d2.target : d2.targets !== r ? d2.targets : d2.aTargets;
            if (!Array.isArray(v2)) {
              v2 = [v2];
            }
            for (u2 = 0, f2 = v2.length; u2 < f2; u2++) {
              if (typeof v2[u2] === "number" && v2[u2] >= 0) {
                while (h3.length <= v2[u2]) {
                  L(t3);
                }
                a2(v2[u2], d2);
              } else if (typeof v2[u2] === "number" && v2[u2] < 0) {
                a2(h3.length + v2[u2], d2);
              } else if (typeof v2[u2] === "string") {
                for (l2 = 0, c2 = h3.length; l2 < c2; l2++) {
                  if (v2[u2] == "_all" || e2(h3[l2].nTh).hasClass(v2[u2])) {
                    a2(l2, d2);
                  }
                }
              }
            }
          }
        }
        if (i2) {
          for (o2 = 0, s2 = i2.length; o2 < s2; o2++) {
            a2(o2, i2[o2]);
          }
        }
      }
      function B(t3, n2, a2, o2) {
        var s2 = t3.aoData.length;
        var u2 = e2.extend(true, {}, i.models.oRow, { src: a2 ? "dom" : "data", idx: s2 });
        u2._aData = n2;
        t3.aoData.push(u2);
        var f2 = t3.aoColumns;
        for (var l2 = 0, c2 = f2.length; l2 < c2; l2++) {
          f2[l2].sType = null;
        }
        t3.aiDisplayMaster.push(s2);
        var d2 = t3.rowIdFn(n2);
        if (d2 !== r) {
          t3.aIds[d2] = u2;
        }
        if (a2 || !t3.oFeatures.bDeferRender) {
          fe(t3, s2, a2, o2);
        }
        return s2;
      }
      function Z(t3, n2) {
        var r2;
        if (!(n2 instanceof e2)) {
          n2 = e2(n2);
        }
        return n2.map(function(e3, n3) {
          r2 = ue(t3, n3);
          return B(t3, r2.data, n3, r2.cells);
        });
      }
      function J(e3, t3) {
        return t3._DT_RowIndex !== r ? t3._DT_RowIndex : null;
      }
      function V(t3, n2, r2) {
        return e2.inArray(r2, t3.aoData[n2].anCells);
      }
      function X(e3, t3, n2, a2) {
        if (a2 === "search") {
          a2 = "filter";
        } else if (a2 === "order") {
          a2 = "sort";
        }
        var o2 = e3.iDraw;
        var s2 = e3.aoColumns[n2];
        var u2 = e3.aoData[t3]._aData;
        var f2 = s2.sDefaultContent;
        var l2 = s2.fnGetData(u2, a2, { settings: e3, row: t3, col: n2 });
        if (l2 === r) {
          if (e3.iDrawError != o2 && f2 === null) {
            vt(e3, 0, "Requested unknown parameter " + (typeof s2.mData == "function" ? "{function}" : "'" + s2.mData + "'") + " for row " + t3 + ", column " + n2, 4);
            e3.iDrawError = o2;
          }
          return f2;
        }
        if ((l2 === u2 || l2 === null) && f2 !== null && a2 !== r) {
          l2 = f2;
        } else if (typeof l2 === "function") {
          return l2.call(u2);
        }
        if (l2 === null && a2 === "display") {
          return "";
        }
        if (a2 === "filter") {
          var c2 = i.ext.type.search;
          if (c2[s2.sType]) {
            l2 = c2[s2.sType](l2);
          }
        }
        return l2;
      }
      function Q(e3, t3, n2, r2) {
        var i2 = e3.aoColumns[n2];
        var a2 = e3.aoData[t3]._aData;
        i2.fnSetData(a2, r2, { settings: e3, row: t3, col: n2 });
      }
      var K = /\[.*?\]$/;
      var ee = /\(\)$/;
      function te(t3) {
        return e2.map(t3.match(/(\\.|[^\.])+/g) || [""], function(e3) {
          return e3.replace(/\\\./g, ".");
        });
      }
      var ne = i.util.get;
      var re = i.util.set;
      function ie(e3) {
        return S(e3.aoData, "_aData");
      }
      function ae(e3) {
        e3.aoData.length = 0;
        e3.aiDisplayMaster.length = 0;
        e3.aiDisplay.length = 0;
        e3.aIds = {};
      }
      function oe(e3, t3, n2) {
        var i2 = -1;
        for (var a2 = 0, o2 = e3.length; a2 < o2; a2++) {
          if (e3[a2] == t3) {
            i2 = a2;
          } else if (e3[a2] > t3) {
            e3[a2]--;
          }
        }
        if (i2 != -1 && n2 === r) {
          e3.splice(i2, 1);
        }
      }
      function se(e3, t3, n2, i2) {
        var a2 = e3.aoData[t3];
        var o2, s2;
        var u2 = function(n3, r2) {
          while (n3.childNodes.length) {
            n3.removeChild(n3.firstChild);
          }
          n3.innerHTML = X(e3, t3, r2, "display");
        };
        if (n2 === "dom" || (!n2 || n2 === "auto") && a2.src === "dom") {
          a2._aData = ue(e3, a2, i2, i2 === r ? r : a2._aData).data;
        } else {
          var f2 = a2.anCells;
          if (f2) {
            if (i2 !== r) {
              u2(f2[i2], i2);
            } else {
              for (o2 = 0, s2 = f2.length; o2 < s2; o2++) {
                u2(f2[o2], o2);
              }
            }
          }
        }
        a2._aSortData = null;
        a2._aFilterData = null;
        var l2 = e3.aoColumns;
        if (i2 !== r) {
          l2[i2].sType = null;
        } else {
          for (o2 = 0, s2 = l2.length; o2 < s2; o2++) {
            l2[o2].sType = null;
          }
          le(e3, a2);
        }
      }
      function ue(e3, t3, n2, i2) {
        var a2 = [], o2 = t3.firstChild, s2, u2, f2 = 0, l2, c2 = e3.aoColumns, d2 = e3._rowReadObject;
        i2 = i2 !== r ? i2 : d2 ? {} : [];
        var h3 = function(e4, t4) {
          if (typeof e4 === "string") {
            var n3 = e4.indexOf("@");
            if (n3 !== -1) {
              var r2 = e4.substring(n3 + 1);
              var a3 = re(e4);
              a3(i2, t4.getAttribute(r2));
            }
          }
        };
        var v2 = function(e4) {
          if (n2 === r || n2 === f2) {
            u2 = c2[f2];
            l2 = e4.innerHTML.trim();
            if (u2 && u2._bAttrSrc) {
              var t4 = re(u2.mData._);
              t4(i2, l2);
              h3(u2.mData.sort, e4);
              h3(u2.mData.type, e4);
              h3(u2.mData.filter, e4);
            } else {
              if (d2) {
                if (!u2._setter) {
                  u2._setter = re(u2.mData);
                }
                u2._setter(i2, l2);
              } else {
                i2[f2] = l2;
              }
            }
          }
          f2++;
        };
        if (o2) {
          while (o2) {
            s2 = o2.nodeName.toUpperCase();
            if (s2 == "TD" || s2 == "TH") {
              v2(o2);
              a2.push(o2);
            }
            o2 = o2.nextSibling;
          }
        } else {
          a2 = t3.anCells;
          for (var m2 = 0, p2 = a2.length; m2 < p2; m2++) {
            v2(a2[m2]);
          }
        }
        var g2 = t3.firstChild ? t3 : t3.nTr;
        if (g2) {
          var b2 = g2.getAttribute("id");
          if (b2) {
            re(e3.rowId)(i2, b2);
          }
        }
        return { data: i2, cells: a2 };
      }
      function fe(t3, r2, i2, a2) {
        var o2 = t3.aoData[r2], s2 = o2._aData, u2 = [], f2, l2, c2, d2, h3, v2;
        if (o2.nTr === null) {
          f2 = i2 || n.createElement("tr");
          o2.nTr = f2;
          o2.anCells = u2;
          f2._DT_RowIndex = r2;
          le(t3, o2);
          for (d2 = 0, h3 = t3.aoColumns.length; d2 < h3; d2++) {
            c2 = t3.aoColumns[d2];
            v2 = i2 ? false : true;
            l2 = v2 ? n.createElement(c2.sCellType) : a2[d2];
            l2._DT_CellIndex = { row: r2, column: d2 };
            u2.push(l2);
            if (v2 || (c2.mRender || c2.mData !== d2) && (!e2.isPlainObject(c2.mData) || c2.mData._ !== d2 + ".display")) {
              l2.innerHTML = X(t3, r2, d2, "display");
            }
            if (c2.sClass) {
              l2.className += " " + c2.sClass;
            }
            if (c2.bVisible && !i2) {
              f2.appendChild(l2);
            } else if (!c2.bVisible && i2) {
              l2.parentNode.removeChild(l2);
            }
            if (c2.fnCreatedCell) {
              c2.fnCreatedCell.call(t3.oInstance, l2, X(t3, r2, d2), s2, r2, d2);
            }
          }
          yt(t3, "aoRowCreatedCallback", null, [f2, s2, r2, u2]);
        }
      }
      function le(t3, n2) {
        var r2 = n2.nTr;
        var i2 = n2._aData;
        if (r2) {
          var a2 = t3.rowIdFn(i2);
          if (a2) {
            r2.id = a2;
          }
          if (i2.DT_RowClass) {
            var o2 = i2.DT_RowClass.split(" ");
            n2.__rowc = n2.__rowc ? T(n2.__rowc.concat(o2)) : o2;
            e2(r2).removeClass(n2.__rowc.join(" ")).addClass(i2.DT_RowClass);
          }
          if (i2.DT_RowAttr) {
            e2(r2).attr(i2.DT_RowAttr);
          }
          if (i2.DT_RowData) {
            e2(r2).data(i2.DT_RowData);
          }
        }
      }
      function ce(t3) {
        var n2, r2, i2, a2, o2;
        var s2 = t3.nTHead;
        var u2 = t3.nTFoot;
        var f2 = e2("th, td", s2).length === 0;
        var l2 = t3.oClasses;
        var c2 = t3.aoColumns;
        if (f2) {
          a2 = e2("<tr/>").appendTo(s2);
        }
        for (n2 = 0, r2 = c2.length; n2 < r2; n2++) {
          o2 = c2[n2];
          i2 = e2(o2.nTh).addClass(o2.sClass);
          if (f2) {
            i2.appendTo(a2);
          }
          if (t3.oFeatures.bSort) {
            i2.addClass(o2.sSortingClass);
            if (o2.bSortable !== false) {
              i2.attr("tabindex", t3.iTabIndex).attr("aria-controls", t3.sTableId);
              st(t3, o2.nTh, n2);
            }
          }
          if (o2.sTitle != i2[0].innerHTML) {
            i2.html(o2.sTitle);
          }
          St(t3, "header")(t3, i2, o2, l2);
        }
        if (f2) {
          pe(t3.aoHeader, s2);
        }
        e2(s2).children("tr").children("th, td").addClass(l2.sHeaderTH);
        e2(u2).children("tr").children("th, td").addClass(l2.sFooterTH);
        if (u2 !== null) {
          var d2 = t3.aoFooter[0];
          for (n2 = 0, r2 = d2.length; n2 < r2; n2++) {
            o2 = c2[n2];
            o2.nTf = d2[n2].cell;
            if (o2.sClass) {
              e2(o2.nTf).addClass(o2.sClass);
            }
          }
        }
      }
      function de(t3, n2, i2) {
        var a2, o2, s2, u2, f2, l2, c2;
        var d2 = [];
        var h3 = [];
        var v2 = t3.aoColumns.length;
        var m2, p2;
        if (!n2) {
          return;
        }
        if (i2 === r) {
          i2 = false;
        }
        for (a2 = 0, o2 = n2.length; a2 < o2; a2++) {
          d2[a2] = n2[a2].slice();
          d2[a2].nTr = n2[a2].nTr;
          for (s2 = v2 - 1; s2 >= 0; s2--) {
            if (!t3.aoColumns[s2].bVisible && !i2) {
              d2[a2].splice(s2, 1);
            }
          }
          h3.push([]);
        }
        for (a2 = 0, o2 = d2.length; a2 < o2; a2++) {
          c2 = d2[a2].nTr;
          if (c2) {
            while (l2 = c2.firstChild) {
              c2.removeChild(l2);
            }
          }
          for (s2 = 0, u2 = d2[a2].length; s2 < u2; s2++) {
            m2 = 1;
            p2 = 1;
            if (h3[a2][s2] === r) {
              c2.appendChild(d2[a2][s2].cell);
              h3[a2][s2] = 1;
              while (d2[a2 + m2] !== r && d2[a2][s2].cell == d2[a2 + m2][s2].cell) {
                h3[a2 + m2][s2] = 1;
                m2++;
              }
              while (d2[a2][s2 + p2] !== r && d2[a2][s2].cell == d2[a2][s2 + p2].cell) {
                for (f2 = 0; f2 < m2; f2++) {
                  h3[a2 + f2][s2 + p2] = 1;
                }
                p2++;
              }
              e2(d2[a2][s2].cell).attr("rowspan", m2).attr("colspan", p2);
            }
          }
        }
      }
      function he(t3, n2) {
        be(t3);
        var r2 = yt(t3, "aoPreDrawCallback", "preDraw", [t3]);
        if (e2.inArray(false, r2) !== -1) {
          ze(t3, false);
          return;
        }
        var i2 = [];
        var a2 = 0;
        var o2 = t3.asStripeClasses;
        var s2 = o2.length;
        var u2 = t3.oLanguage;
        var f2 = Dt(t3) == "ssp";
        var l2 = t3.aiDisplay;
        var c2 = t3._iDisplayStart;
        var d2 = t3.fnDisplayEnd();
        t3.bDrawing = true;
        if (t3.bDeferLoading) {
          t3.bDeferLoading = false;
          t3.iDraw++;
          ze(t3, false);
        } else if (!f2) {
          t3.iDraw++;
        } else if (!t3.bDestroying && !n2) {
          we(t3);
          return;
        }
        if (l2.length !== 0) {
          var h3 = f2 ? 0 : c2;
          var v2 = f2 ? t3.aoData.length : d2;
          for (var m2 = h3; m2 < v2; m2++) {
            var p2 = l2[m2];
            var g2 = t3.aoData[p2];
            if (g2.nTr === null) {
              fe(t3, p2);
            }
            var b2 = g2.nTr;
            if (s2 !== 0) {
              var y2 = o2[a2 % s2];
              if (g2._sRowStripe != y2) {
                e2(b2).removeClass(g2._sRowStripe).addClass(y2);
                g2._sRowStripe = y2;
              }
            }
            yt(t3, "aoRowCallback", null, [b2, g2._aData, a2, m2, p2]);
            i2.push(b2);
            a2++;
          }
        } else {
          var w2 = u2.sZeroRecords;
          if (t3.iDraw == 1 && Dt(t3) == "ajax") {
            w2 = u2.sLoadingRecords;
          } else if (u2.sEmptyTable && t3.fnRecordsTotal() === 0) {
            w2 = u2.sEmptyTable;
          }
          i2[0] = e2("<tr/>", { class: s2 ? o2[0] : "" }).append(e2("<td />", { valign: "top", colSpan: $(t3), class: t3.oClasses.sRowEmpty }).html(w2))[0];
        }
        yt(t3, "aoHeaderCallback", "header", [e2(t3.nTHead).children("tr")[0], ie(t3), c2, d2, l2]);
        yt(t3, "aoFooterCallback", "footer", [e2(t3.nTFoot).children("tr")[0], ie(t3), c2, d2, l2]);
        var S2 = e2(t3.nTBody);
        S2.children().detach();
        S2.append(e2(i2));
        yt(t3, "aoDrawCallback", "draw", [t3]);
        t3.bSorted = false;
        t3.bFiltered = false;
        t3.bDrawing = false;
      }
      function ve(e3, t3) {
        var n2 = e3.oFeatures, r2 = n2.bSort, i2 = n2.bFilter;
        if (r2) {
          it(e3);
        }
        if (i2) {
          _e(e3, e3.oPreviousSearch);
        } else {
          e3.aiDisplay = e3.aiDisplayMaster.slice();
        }
        if (t3 !== true) {
          e3._iDisplayStart = 0;
        }
        e3._drawHold = t3;
        he(e3);
        e3._drawHold = false;
      }
      function me(t3) {
        var n2 = t3.oClasses;
        var r2 = e2(t3.nTable);
        var a2 = e2("<div/>").insertBefore(r2);
        var o2 = t3.oFeatures;
        var s2 = e2("<div/>", { id: t3.sTableId + "_wrapper", class: n2.sWrapper + (t3.nTFoot ? "" : " " + n2.sNoFooter) });
        t3.nHolding = a2[0];
        t3.nTableWrapper = s2[0];
        t3.nTableReinsertBefore = t3.nTable.nextSibling;
        var u2 = t3.sDom.split("");
        var f2, l2, c2, d2, h3, v2;
        for (var m2 = 0; m2 < u2.length; m2++) {
          f2 = null;
          l2 = u2[m2];
          if (l2 == "<") {
            c2 = e2("<div/>")[0];
            d2 = u2[m2 + 1];
            if (d2 == "'" || d2 == '"') {
              h3 = "";
              v2 = 2;
              while (u2[m2 + v2] != d2) {
                h3 += u2[m2 + v2];
                v2++;
              }
              if (h3 == "H") {
                h3 = n2.sJUIHeader;
              } else if (h3 == "F") {
                h3 = n2.sJUIFooter;
              }
              if (h3.indexOf(".") != -1) {
                var p2 = h3.split(".");
                c2.id = p2[0].substr(1, p2[0].length - 1);
                c2.className = p2[1];
              } else if (h3.charAt(0) == "#") {
                c2.id = h3.substr(1, h3.length - 1);
              } else {
                c2.className = h3;
              }
              m2 += v2;
            }
            s2.append(c2);
            s2 = e2(c2);
          } else if (l2 == ">") {
            s2 = s2.parent();
          } else if (l2 == "l" && o2.bPaginate && o2.bLengthChange) {
            f2 = Ue(t3);
          } else if (l2 == "f" && o2.bFilter) {
            f2 = xe(t3);
          } else if (l2 == "r" && o2.bProcessing) {
            f2 = qe(t3);
          } else if (l2 == "t") {
            f2 = Be(t3);
          } else if (l2 == "i" && o2.bInfo) {
            f2 = Ie(t3);
          } else if (l2 == "p" && o2.bPaginate) {
            f2 = $e(t3);
          } else if (i.ext.feature.length !== 0) {
            var g2 = i.ext.feature;
            for (var b2 = 0, y2 = g2.length; b2 < y2; b2++) {
              if (l2 == g2[b2].cFeature) {
                f2 = g2[b2].fnInit(t3);
                break;
              }
            }
          }
          if (f2) {
            var w2 = t3.aanFeatures;
            if (!w2[l2]) {
              w2[l2] = [];
            }
            w2[l2].push(f2);
            s2.append(f2);
          }
        }
        a2.replaceWith(s2);
        t3.nHolding = null;
      }
      function pe(t3, n2) {
        var r2 = e2(n2).children("tr");
        var i2, a2;
        var o2, s2, u2, f2, l2, c2, d2, h3;
        var v2;
        var m2 = function(e3, t4, n3) {
          var r3 = e3[t4];
          while (r3[n3]) {
            n3++;
          }
          return n3;
        };
        t3.splice(0, t3.length);
        for (o2 = 0, f2 = r2.length; o2 < f2; o2++) {
          t3.push([]);
        }
        for (o2 = 0, f2 = r2.length; o2 < f2; o2++) {
          i2 = r2[o2];
          c2 = 0;
          a2 = i2.firstChild;
          while (a2) {
            if (a2.nodeName.toUpperCase() == "TD" || a2.nodeName.toUpperCase() == "TH") {
              d2 = a2.getAttribute("colspan") * 1;
              h3 = a2.getAttribute("rowspan") * 1;
              d2 = !d2 || d2 === 0 || d2 === 1 ? 1 : d2;
              h3 = !h3 || h3 === 0 || h3 === 1 ? 1 : h3;
              l2 = m2(t3, o2, c2);
              v2 = d2 === 1 ? true : false;
              for (u2 = 0; u2 < d2; u2++) {
                for (s2 = 0; s2 < h3; s2++) {
                  t3[o2 + s2][l2 + u2] = { cell: a2, unique: v2 };
                  t3[o2 + s2].nTr = i2;
                }
              }
            }
            a2 = a2.nextSibling;
          }
        }
      }
      function ge(e3, t3, n2) {
        var r2 = [];
        if (!n2) {
          n2 = e3.aoHeader;
          if (t3) {
            n2 = [];
            pe(n2, t3);
          }
        }
        for (var i2 = 0, a2 = n2.length; i2 < a2; i2++) {
          for (var o2 = 0, s2 = n2[i2].length; o2 < s2; o2++) {
            if (n2[i2][o2].unique && (!r2[o2] || !e3.bSortCellsTop)) {
              r2[o2] = n2[i2][o2].cell;
            }
          }
        }
        return r2;
      }
      function be(e3) {
        var t3 = Dt(e3) == "ssp";
        var n2 = e3.iInitDisplayStart;
        if (n2 !== r && n2 !== -1) {
          e3._iDisplayStart = t3 ? n2 : n2 >= e3.fnRecordsDisplay() ? 0 : n2;
          e3.iInitDisplayStart = -1;
        }
      }
      function ye(t3, n2, r2) {
        yt(t3, "aoServerParams", "serverParams", [n2]);
        if (n2 && Array.isArray(n2)) {
          var i2 = {};
          var a2 = /(.*?)\[\]$/;
          e2.each(n2, function(e3, t4) {
            var n3 = t4.name.match(a2);
            if (n3) {
              var r3 = n3[0];
              if (!i2[r3]) {
                i2[r3] = [];
              }
              i2[r3].push(t4.value);
            } else {
              i2[t4.name] = t4.value;
            }
          });
          n2 = i2;
        }
        var o2;
        var s2 = t3.ajax;
        var u2 = t3.oInstance;
        var f2 = function(e3) {
          var n3 = t3.jqXHR ? t3.jqXHR.status : null;
          if (e3 === null || typeof n3 === "number" && n3 == 204) {
            e3 = {};
            ke(t3, e3, []);
          }
          var i3 = e3.error || e3.sError;
          if (i3) {
            vt(t3, 0, i3);
          }
          t3.json = e3;
          yt(t3, null, "xhr", [t3, e3, t3.jqXHR]);
          r2(e3);
        };
        if (e2.isPlainObject(s2) && s2.data) {
          o2 = s2.data;
          var l2 = typeof o2 === "function" ? o2(n2, t3) : o2;
          n2 = typeof o2 === "function" && l2 ? l2 : e2.extend(true, n2, l2);
          delete s2.data;
        }
        var c2 = { data: n2, success: f2, dataType: "json", cache: false, type: t3.sServerMethod, error: function(n3, r3, i3) {
          var a3 = yt(t3, null, "xhr", [t3, null, t3.jqXHR]);
          if (e2.inArray(true, a3) === -1) {
            if (r3 == "parsererror") {
              vt(t3, 0, "Invalid JSON response", 1);
            } else if (n3.readyState === 4) {
              vt(t3, 0, "Ajax error", 7);
            }
          }
          ze(t3, false);
        } };
        t3.oAjaxData = n2;
        yt(t3, null, "preXhr", [t3, n2]);
        if (t3.fnServerData) {
          t3.fnServerData.call(u2, t3.sAjaxSource, e2.map(n2, function(e3, t4) {
            return { name: t4, value: e3 };
          }), f2, t3);
        } else if (t3.sAjaxSource || typeof s2 === "string") {
          t3.jqXHR = e2.ajax(e2.extend(c2, { url: s2 || t3.sAjaxSource }));
        } else if (typeof s2 === "function") {
          t3.jqXHR = s2.call(u2, n2, f2, t3);
        } else {
          t3.jqXHR = e2.ajax(e2.extend(c2, s2));
          s2.data = o2;
        }
      }
      function we(e3) {
        e3.iDraw++;
        ze(e3, true);
        ye(e3, Se(e3), function(t3) {
          De(e3, t3);
        });
      }
      function Se(t3) {
        var n2 = t3.aoColumns, r2 = n2.length, a2 = t3.oFeatures, o2 = t3.oPreviousSearch, s2 = t3.aoPreSearchCols, u2, f2 = [], l2, c2, d2, h3 = rt(t3), v2 = t3._iDisplayStart, m2 = a2.bPaginate !== false ? t3._iDisplayLength : -1;
        var p2 = function(e3, t4) {
          f2.push({ name: e3, value: t4 });
        };
        p2("sEcho", t3.iDraw);
        p2("iColumns", r2);
        p2("sColumns", S(n2, "sName").join(","));
        p2("iDisplayStart", v2);
        p2("iDisplayLength", m2);
        var g2 = { draw: t3.iDraw, columns: [], order: [], start: v2, length: m2, search: { value: o2.sSearch, regex: o2.bRegex } };
        for (u2 = 0; u2 < r2; u2++) {
          c2 = n2[u2];
          d2 = s2[u2];
          l2 = typeof c2.mData == "function" ? "function" : c2.mData;
          g2.columns.push({ data: l2, name: c2.sName, searchable: c2.bSearchable, orderable: c2.bSortable, search: { value: d2.sSearch, regex: d2.bRegex } });
          p2("mDataProp_" + u2, l2);
          if (a2.bFilter) {
            p2("sSearch_" + u2, d2.sSearch);
            p2("bRegex_" + u2, d2.bRegex);
            p2("bSearchable_" + u2, c2.bSearchable);
          }
          if (a2.bSort) {
            p2("bSortable_" + u2, c2.bSortable);
          }
        }
        if (a2.bFilter) {
          p2("sSearch", o2.sSearch);
          p2("bRegex", o2.bRegex);
        }
        if (a2.bSort) {
          e2.each(h3, function(e3, t4) {
            g2.order.push({ column: t4.col, dir: t4.dir });
            p2("iSortCol_" + e3, t4.col);
            p2("sSortDir_" + e3, t4.dir);
          });
          p2("iSortingCols", h3.length);
        }
        var b2 = i.ext.legacy.ajax;
        if (b2 === null) {
          return t3.sAjaxSource ? f2 : g2;
        }
        return b2 ? f2 : g2;
      }
      function De(e3, t3) {
        var n2 = function(e4, n3) {
          return t3[e4] !== r ? t3[e4] : t3[n3];
        };
        var i2 = ke(e3, t3);
        var a2 = n2("sEcho", "draw");
        var o2 = n2("iTotalRecords", "recordsTotal");
        var s2 = n2("iTotalDisplayRecords", "recordsFiltered");
        if (a2 !== r) {
          if (a2 * 1 < e3.iDraw) {
            return;
          }
          e3.iDraw = a2 * 1;
        }
        if (!i2) {
          i2 = [];
        }
        ae(e3);
        e3._iRecordsTotal = parseInt(o2, 10);
        e3._iRecordsDisplay = parseInt(s2, 10);
        for (var u2 = 0, f2 = i2.length; u2 < f2; u2++) {
          B(e3, i2[u2]);
        }
        e3.aiDisplay = e3.aiDisplayMaster.slice();
        he(e3, true);
        if (!e3._bInitComplete) {
          je(e3, t3);
        }
        ze(e3, false);
      }
      function ke(t3, n2, i2) {
        var a2 = e2.isPlainObject(t3.ajax) && t3.ajax.dataSrc !== r ? t3.ajax.dataSrc : t3.sAjaxDataProp;
        if (!i2) {
          if (a2 === "data") {
            return n2.aaData || n2[a2];
          }
          return a2 !== "" ? ne(a2)(n2) : n2;
        }
        re(a2)(n2, i2);
      }
      function xe(t3) {
        var r2 = t3.oClasses;
        var i2 = t3.sTableId;
        var a2 = t3.oLanguage;
        var o2 = t3.oPreviousSearch;
        var s2 = t3.aanFeatures;
        var u2 = '<input type="search" class="' + r2.sFilterInput + '"/>';
        var f2 = a2.sSearch;
        f2 = f2.match(/_INPUT_/) ? f2.replace("_INPUT_", u2) : f2 + u2;
        var l2 = e2("<div/>", { id: !s2.f ? i2 + "_filter" : null, class: r2.sFilter }).append(e2("<label/>").append(f2));
        var c2 = function(e3) {
          var n2 = !this.value ? "" : this.value;
          if (o2.return && e3.key !== "Enter") {
            return;
          }
          if (n2 != o2.sSearch) {
            _e(t3, { sSearch: n2, bRegex: o2.bRegex, bSmart: o2.bSmart, bCaseInsensitive: o2.bCaseInsensitive, return: o2.return });
            t3._iDisplayStart = 0;
            he(t3);
          }
        };
        var d2 = t3.searchDelay !== null ? t3.searchDelay : Dt(t3) === "ssp" ? 400 : 0;
        var h3 = e2("input", l2).val(o2.sSearch).attr("placeholder", a2.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", d2 ? Qe(c2, d2) : c2).on("mouseup", function(e3) {
          setTimeout(function() {
            c2.call(h3[0], e3);
          }, 10);
        }).on("keypress.DT", function(e3) {
          if (e3.keyCode == 13) {
            return false;
          }
        }).attr("aria-controls", i2);
        e2(t3.nTable).on("search.dt.DT", function(e3, r3) {
          if (t3 === r3) {
            try {
              if (h3[0] !== n.activeElement) {
                h3.val(o2.sSearch);
              }
            } catch (e4) {
            }
          }
        });
        return l2[0];
      }
      function _e(e3, t3, n2) {
        var i2 = e3.oPreviousSearch;
        var a2 = e3.aoPreSearchCols;
        var o2 = function(e4) {
          i2.sSearch = e4.sSearch;
          i2.bRegex = e4.bRegex;
          i2.bSmart = e4.bSmart;
          i2.bCaseInsensitive = e4.bCaseInsensitive;
          i2.return = e4.return;
        };
        var s2 = function(e4) {
          return e4.bEscapeRegex !== r ? !e4.bEscapeRegex : e4.bRegex;
        };
        q(e3);
        if (Dt(e3) != "ssp") {
          Ee(e3, t3.sSearch, n2, s2(t3), t3.bSmart, t3.bCaseInsensitive);
          o2(t3);
          for (var u2 = 0; u2 < a2.length; u2++) {
            Te(e3, a2[u2].sSearch, u2, s2(a2[u2]), a2[u2].bSmart, a2[u2].bCaseInsensitive);
          }
          Me(e3);
        } else {
          o2(t3);
        }
        e3.bFiltered = true;
        yt(e3, null, "search", [e3]);
      }
      function Me(t3) {
        var n2 = i.ext.search;
        var r2 = t3.aiDisplay;
        var a2, o2;
        for (var s2 = 0, u2 = n2.length; s2 < u2; s2++) {
          var f2 = [];
          for (var l2 = 0, c2 = r2.length; l2 < c2; l2++) {
            o2 = r2[l2];
            a2 = t3.aoData[o2];
            if (n2[s2](t3, a2._aFilterData, o2, a2._aData, l2)) {
              f2.push(o2);
            }
          }
          r2.length = 0;
          e2.merge(r2, f2);
        }
      }
      function Te(e3, t3, n2, r2, i2, a2) {
        if (t3 === "") {
          return;
        }
        var o2;
        var s2 = [];
        var u2 = e3.aiDisplay;
        var f2 = Fe(t3, r2, i2, a2);
        for (var l2 = 0; l2 < u2.length; l2++) {
          o2 = e3.aoData[u2[l2]]._aFilterData[n2];
          if (f2.test(o2)) {
            s2.push(u2[l2]);
          }
        }
        e3.aiDisplay = s2;
      }
      function Ee(e3, t3, n2, r2, a2, o2) {
        var s2 = Fe(t3, r2, a2, o2);
        var u2 = e3.oPreviousSearch.sSearch;
        var f2 = e3.aiDisplayMaster;
        var l2, c2, d2;
        var h3 = [];
        if (i.ext.search.length !== 0) {
          n2 = true;
        }
        c2 = Ne(e3);
        if (t3.length <= 0) {
          e3.aiDisplay = f2.slice();
        } else {
          if (c2 || n2 || r2 || u2.length > t3.length || t3.indexOf(u2) !== 0 || e3.bSorted) {
            e3.aiDisplay = f2.slice();
          }
          l2 = e3.aiDisplay;
          for (d2 = 0; d2 < l2.length; d2++) {
            if (s2.test(e3.aoData[l2[d2]]._sFilterRow)) {
              h3.push(l2[d2]);
            }
          }
          e3.aiDisplay = h3;
        }
      }
      function Fe(t3, n2, r2, i2) {
        t3 = n2 ? t3 : Ye(t3);
        if (r2) {
          var a2 = e2.map(t3.match(/"[^"]+"|[^ ]+/g) || [""], function(e3) {
            if (e3.charAt(0) === '"') {
              var t4 = e3.match(/^"(.*)"$/);
              e3 = t4 ? t4[1] : e3;
            }
            return e3.replace('"', "");
          });
          t3 = "^(?=.*?" + a2.join(")(?=.*?") + ").*$";
        }
        return new RegExp(t3, i2 ? "i" : "");
      }
      var Ye = i.util.escapeRegex;
      var Ae = e2("<div>")[0];
      var Oe = Ae.textContent !== r;
      function Ne(e3) {
        var t3 = e3.aoColumns;
        var n2;
        var r2, i2, a2, o2, s2, u2, f2;
        var l2 = false;
        for (r2 = 0, a2 = e3.aoData.length; r2 < a2; r2++) {
          f2 = e3.aoData[r2];
          if (!f2._aFilterData) {
            s2 = [];
            for (i2 = 0, o2 = t3.length; i2 < o2; i2++) {
              n2 = t3[i2];
              if (n2.bSearchable) {
                u2 = X(e3, r2, i2, "filter");
                if (u2 === null) {
                  u2 = "";
                }
                if (typeof u2 !== "string" && u2.toString) {
                  u2 = u2.toString();
                }
              } else {
                u2 = "";
              }
              if (u2.indexOf && u2.indexOf("&") !== -1) {
                Ae.innerHTML = u2;
                u2 = Oe ? Ae.textContent : Ae.innerText;
              }
              if (u2.replace) {
                u2 = u2.replace(/[\r\n\u2028]/g, "");
              }
              s2.push(u2);
            }
            f2._aFilterData = s2;
            f2._sFilterRow = s2.join("  ");
            l2 = true;
          }
        }
        return l2;
      }
      function Re(e3) {
        return { search: e3.sSearch, smart: e3.bSmart, regex: e3.bRegex, caseInsensitive: e3.bCaseInsensitive };
      }
      function Ce(e3) {
        return { sSearch: e3.search, bSmart: e3.smart, bRegex: e3.regex, bCaseInsensitive: e3.caseInsensitive };
      }
      function Ie(t3) {
        var n2 = t3.sTableId, r2 = t3.aanFeatures.i, i2 = e2("<div/>", { class: t3.oClasses.sInfo, id: !r2 ? n2 + "_info" : null });
        if (!r2) {
          t3.aoDrawCallback.push({ fn: Pe, sName: "information" });
          i2.attr("role", "status").attr("aria-live", "polite");
          e2(t3.nTable).attr("aria-describedby", n2 + "_info");
        }
        return i2[0];
      }
      function Pe(t3) {
        var n2 = t3.aanFeatures.i;
        if (n2.length === 0) {
          return;
        }
        var r2 = t3.oLanguage, i2 = t3._iDisplayStart + 1, a2 = t3.fnDisplayEnd(), o2 = t3.fnRecordsTotal(), s2 = t3.fnRecordsDisplay(), u2 = s2 ? r2.sInfo : r2.sInfoEmpty;
        if (s2 !== o2) {
          u2 += " " + r2.sInfoFiltered;
        }
        u2 += r2.sInfoPostFix;
        u2 = Le(t3, u2);
        var f2 = r2.fnInfoCallback;
        if (f2 !== null) {
          u2 = f2.call(t3.oInstance, t3, i2, a2, o2, s2, u2);
        }
        e2(n2).html(u2);
      }
      function Le(e3, t3) {
        var n2 = e3.fnFormatNumber, r2 = e3._iDisplayStart + 1, i2 = e3._iDisplayLength, a2 = e3.fnRecordsDisplay(), o2 = i2 === -1;
        return t3.replace(/_START_/g, n2.call(e3, r2)).replace(/_END_/g, n2.call(e3, e3.fnDisplayEnd())).replace(/_MAX_/g, n2.call(e3, e3.fnRecordsTotal())).replace(/_TOTAL_/g, n2.call(e3, a2)).replace(/_PAGE_/g, n2.call(e3, o2 ? 1 : Math.ceil(r2 / i2))).replace(/_PAGES_/g, n2.call(e3, o2 ? 1 : Math.ceil(a2 / i2)));
      }
      function We(e3) {
        var t3, n2, r2 = e3.iInitDisplayStart;
        var i2 = e3.aoColumns, a2;
        var o2 = e3.oFeatures;
        var s2 = e3.bDeferLoading;
        if (!e3.bInitialised) {
          setTimeout(function() {
            We(e3);
          }, 200);
          return;
        }
        me(e3);
        ce(e3);
        de(e3, e3.aoHeader);
        de(e3, e3.aoFooter);
        ze(e3, true);
        if (o2.bAutoWidth) {
          Xe(e3);
        }
        for (t3 = 0, n2 = i2.length; t3 < n2; t3++) {
          a2 = i2[t3];
          if (a2.sWidth) {
            a2.nTh.style.width = nt(a2.sWidth);
          }
        }
        yt(e3, null, "preInit", [e3]);
        ve(e3);
        var u2 = Dt(e3);
        if (u2 != "ssp" || s2) {
          if (u2 == "ajax") {
            ye(e3, [], function(n3) {
              var i3 = ke(e3, n3);
              for (t3 = 0; t3 < i3.length; t3++) {
                B(e3, i3[t3]);
              }
              e3.iInitDisplayStart = r2;
              ve(e3);
              ze(e3, false);
              je(e3, n3);
            });
          } else {
            ze(e3, false);
            je(e3);
          }
        }
      }
      function je(e3, t3) {
        e3._bInitComplete = true;
        if (t3 || e3.oInit.aaData) {
          j(e3);
        }
        yt(e3, null, "plugin-init", [e3, t3]);
        yt(e3, "aoInitComplete", "init", [e3, t3]);
      }
      function He(e3, t3) {
        var n2 = parseInt(t3, 10);
        e3._iDisplayLength = n2;
        wt(e3);
        yt(e3, null, "length", [e3, n2]);
      }
      function Ue(t3) {
        var n2 = t3.oClasses, r2 = t3.sTableId, i2 = t3.aLengthMenu, a2 = Array.isArray(i2[0]), o2 = a2 ? i2[0] : i2, s2 = a2 ? i2[1] : i2;
        var u2 = e2("<select/>", { name: r2 + "_length", "aria-controls": r2, class: n2.sLengthSelect });
        for (var f2 = 0, l2 = o2.length; f2 < l2; f2++) {
          u2[0][f2] = new Option(typeof s2[f2] === "number" ? t3.fnFormatNumber(s2[f2]) : s2[f2], o2[f2]);
        }
        var c2 = e2("<div><label/></div>").addClass(n2.sLength);
        if (!t3.aanFeatures.l) {
          c2[0].id = r2 + "_length";
        }
        c2.children().append(t3.oLanguage.sLengthMenu.replace("_MENU_", u2[0].outerHTML));
        e2("select", c2).val(t3._iDisplayLength).on("change.DT", function(n3) {
          He(t3, e2(this).val());
          he(t3);
        });
        e2(t3.nTable).on("length.dt.DT", function(n3, r3, i3) {
          if (t3 === r3) {
            e2("select", c2).val(i3);
          }
        });
        return c2[0];
      }
      function $e(t3) {
        var n2 = t3.sPaginationType, r2 = i.ext.pager[n2], a2 = typeof r2 === "function", o2 = function(e3) {
          he(e3);
        }, s2 = e2("<div/>").addClass(t3.oClasses.sPaging + n2)[0], u2 = t3.aanFeatures;
        if (!a2) {
          r2.fnInit(t3, s2, o2);
        }
        if (!u2.p) {
          s2.id = t3.sTableId + "_paginate";
          t3.aoDrawCallback.push({ fn: function(e3) {
            if (a2) {
              var t4 = e3._iDisplayStart, n3 = e3._iDisplayLength, i2 = e3.fnRecordsDisplay(), s3 = n3 === -1, f2 = s3 ? 0 : Math.ceil(t4 / n3), l2 = s3 ? 1 : Math.ceil(i2 / n3), c2 = r2(f2, l2), d2, h3;
              for (d2 = 0, h3 = u2.p.length; d2 < h3; d2++) {
                St(e3, "pageButton")(e3, u2.p[d2], d2, c2, f2, l2);
              }
            } else {
              r2.fnUpdate(e3, o2);
            }
          }, sName: "pagination" });
        }
        return s2;
      }
      function Ge(e3, t3, n2) {
        var r2 = e3._iDisplayStart, i2 = e3._iDisplayLength, a2 = e3.fnRecordsDisplay();
        if (a2 === 0 || i2 === -1) {
          r2 = 0;
        } else if (typeof t3 === "number") {
          r2 = t3 * i2;
          if (r2 > a2) {
            r2 = 0;
          }
        } else if (t3 == "first") {
          r2 = 0;
        } else if (t3 == "previous") {
          r2 = i2 >= 0 ? r2 - i2 : 0;
          if (r2 < 0) {
            r2 = 0;
          }
        } else if (t3 == "next") {
          if (r2 + i2 < a2) {
            r2 += i2;
          }
        } else if (t3 == "last") {
          r2 = Math.floor((a2 - 1) / i2) * i2;
        } else {
          vt(e3, 0, "Unknown paging action: " + t3, 5);
        }
        var o2 = e3._iDisplayStart !== r2;
        e3._iDisplayStart = r2;
        if (o2) {
          yt(e3, null, "page", [e3]);
          if (n2) {
            he(e3);
          }
        }
        return o2;
      }
      function qe(t3) {
        return e2("<div/>", { id: !t3.aanFeatures.r ? t3.sTableId + "_processing" : null, class: t3.oClasses.sProcessing }).html(t3.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(t3.nTable)[0];
      }
      function ze(t3, n2) {
        if (t3.oFeatures.bProcessing) {
          e2(t3.aanFeatures.r).css("display", n2 ? "block" : "none");
        }
        yt(t3, null, "processing", [t3, n2]);
      }
      function Be(t3) {
        var n2 = e2(t3.nTable);
        var r2 = t3.oScroll;
        if (r2.sX === "" && r2.sY === "") {
          return t3.nTable;
        }
        var i2 = r2.sX;
        var a2 = r2.sY;
        var o2 = t3.oClasses;
        var s2 = n2.children("caption");
        var u2 = s2.length ? s2[0]._captionSide : null;
        var f2 = e2(n2[0].cloneNode(false));
        var l2 = e2(n2[0].cloneNode(false));
        var c2 = n2.children("tfoot");
        var d2 = "<div/>";
        var h3 = function(e3) {
          return !e3 ? null : nt(e3);
        };
        if (!c2.length) {
          c2 = null;
        }
        var v2 = e2(d2, { class: o2.sScrollWrapper }).append(e2(d2, { class: o2.sScrollHead }).css({ overflow: "hidden", position: "relative", border: 0, width: i2 ? h3(i2) : "100%" }).append(e2(d2, { class: o2.sScrollHeadInner }).css({ "box-sizing": "content-box", width: r2.sXInner || "100%" }).append(f2.removeAttr("id").css("margin-left", 0).append(u2 === "top" ? s2 : null).append(n2.children("thead"))))).append(e2(d2, { class: o2.sScrollBody }).css({ position: "relative", overflow: "auto", width: h3(i2) }).append(n2));
        if (c2) {
          v2.append(e2(d2, { class: o2.sScrollFoot }).css({ overflow: "hidden", border: 0, width: i2 ? h3(i2) : "100%" }).append(e2(d2, { class: o2.sScrollFootInner }).append(l2.removeAttr("id").css("margin-left", 0).append(u2 === "bottom" ? s2 : null).append(n2.children("tfoot")))));
        }
        var m2 = v2.children();
        var p2 = m2[0];
        var g2 = m2[1];
        var b2 = c2 ? m2[2] : null;
        if (i2) {
          e2(g2).on("scroll.DT", function(e3) {
            var t4 = this.scrollLeft;
            p2.scrollLeft = t4;
            if (c2) {
              b2.scrollLeft = t4;
            }
          });
        }
        e2(g2).css("max-height", a2);
        if (!r2.bCollapse) {
          e2(g2).css("height", a2);
        }
        t3.nScrollHead = p2;
        t3.nScrollBody = g2;
        t3.nScrollFoot = b2;
        t3.aoDrawCallback.push({ fn: Ze, sName: "scrolling" });
        return v2[0];
      }
      function Ze(n2) {
        var i2 = n2.oScroll, a2 = i2.sX, o2 = i2.sXInner, s2 = i2.sY, u2 = i2.iBarWidth, f2 = e2(n2.nScrollHead), l2 = f2[0].style, c2 = f2.children("div"), d2 = c2[0].style, h3 = c2.children("table"), v2 = n2.nScrollBody, m2 = e2(v2), p2 = v2.style, g2 = e2(n2.nScrollFoot), b2 = g2.children("div"), y2 = b2.children("table"), w2 = e2(n2.nTHead), D2 = e2(n2.nTable), k2 = D2[0], x2 = k2.style, _2 = n2.nTFoot ? e2(n2.nTFoot) : null, M2 = n2.oBrowser, T2 = M2.bScrollOversize;
        S(n2.aoColumns, "nTh");
        var E2, F2, Y2, A2, O2, N2, R2 = [], C2 = [], I2 = [], P2 = [], L2, W2, U2, $2 = function(e3) {
          var t3 = e3.style;
          t3.paddingTop = "0";
          t3.paddingBottom = "0";
          t3.borderTopWidth = "0";
          t3.borderBottomWidth = "0";
          t3.height = 0;
        };
        var G2 = v2.scrollHeight > v2.clientHeight;
        if (n2.scrollBarVis !== G2 && n2.scrollBarVis !== r) {
          n2.scrollBarVis = G2;
          j(n2);
          return;
        } else {
          n2.scrollBarVis = G2;
        }
        D2.children("thead, tfoot").remove();
        if (_2) {
          N2 = _2.clone().prependTo(D2);
          F2 = _2.find("tr");
          A2 = N2.find("tr");
          N2.find("[id]").removeAttr("id");
        }
        O2 = w2.clone().prependTo(D2);
        E2 = w2.find("tr");
        Y2 = O2.find("tr");
        O2.find("th, td").removeAttr("tabindex");
        O2.find("[id]").removeAttr("id");
        if (!a2) {
          p2.width = "100%";
          f2[0].style.width = "100%";
        }
        e2.each(ge(n2, O2), function(e3, t3) {
          L2 = H(n2, e3);
          t3.style.width = n2.aoColumns[L2].sWidth;
        });
        if (_2) {
          Je(function(e3) {
            e3.style.width = "";
          }, A2);
        }
        U2 = D2.outerWidth();
        if (a2 === "") {
          x2.width = "100%";
          if (T2 && (D2.find("tbody").height() > v2.offsetHeight || m2.css("overflow-y") == "scroll")) {
            x2.width = nt(D2.outerWidth() - u2);
          }
          U2 = D2.outerWidth();
        } else if (o2 !== "") {
          x2.width = nt(o2);
          U2 = D2.outerWidth();
        }
        Je($2, Y2);
        Je(function(n3) {
          var r2 = t2.getComputedStyle ? t2.getComputedStyle(n3).width : nt(e2(n3).width());
          I2.push(n3.innerHTML);
          R2.push(r2);
        }, Y2);
        Je(function(e3, t3) {
          e3.style.width = R2[t3];
        }, E2);
        e2(Y2).css("height", 0);
        if (_2) {
          Je($2, A2);
          Je(function(t3) {
            P2.push(t3.innerHTML);
            C2.push(nt(e2(t3).css("width")));
          }, A2);
          Je(function(e3, t3) {
            e3.style.width = C2[t3];
          }, F2);
          e2(A2).height(0);
        }
        Je(function(e3, t3) {
          e3.innerHTML = '<div class="dataTables_sizing">' + I2[t3] + "</div>";
          e3.childNodes[0].style.height = "0";
          e3.childNodes[0].style.overflow = "hidden";
          e3.style.width = R2[t3];
        }, Y2);
        if (_2) {
          Je(function(e3, t3) {
            e3.innerHTML = '<div class="dataTables_sizing">' + P2[t3] + "</div>";
            e3.childNodes[0].style.height = "0";
            e3.childNodes[0].style.overflow = "hidden";
            e3.style.width = C2[t3];
          }, A2);
        }
        if (Math.round(D2.outerWidth()) < Math.round(U2)) {
          W2 = v2.scrollHeight > v2.offsetHeight || m2.css("overflow-y") == "scroll" ? U2 + u2 : U2;
          if (T2 && (v2.scrollHeight > v2.offsetHeight || m2.css("overflow-y") == "scroll")) {
            x2.width = nt(W2 - u2);
          }
          if (a2 === "" || o2 !== "") {
            vt(n2, 1, "Possible column misalignment", 6);
          }
        } else {
          W2 = "100%";
        }
        p2.width = nt(W2);
        l2.width = nt(W2);
        if (_2) {
          n2.nScrollFoot.style.width = nt(W2);
        }
        if (!s2) {
          if (T2) {
            p2.height = nt(k2.offsetHeight + u2);
          }
        }
        var q2 = D2.outerWidth();
        h3[0].style.width = nt(q2);
        d2.width = nt(q2);
        var z2 = D2.height() > v2.clientHeight || m2.css("overflow-y") == "scroll";
        var B2 = "padding" + (M2.bScrollbarLeft ? "Left" : "Right");
        d2[B2] = z2 ? u2 + "px" : "0px";
        if (_2) {
          y2[0].style.width = nt(q2);
          b2[0].style.width = nt(q2);
          b2[0].style[B2] = z2 ? u2 + "px" : "0px";
        }
        D2.children("colgroup").insertBefore(D2.children("thead"));
        m2.trigger("scroll");
        if ((n2.bSorted || n2.bFiltered) && !n2._drawHold) {
          v2.scrollTop = 0;
        }
      }
      function Je(e3, t3, n2) {
        var r2 = 0, i2 = 0, a2 = t3.length;
        var o2, s2;
        while (i2 < a2) {
          o2 = t3[i2].firstChild;
          s2 = n2 ? n2[i2].firstChild : null;
          while (o2) {
            if (o2.nodeType === 1) {
              if (n2) {
                e3(o2, s2, r2);
              } else {
                e3(o2, r2);
              }
              r2++;
            }
            o2 = o2.nextSibling;
            s2 = n2 ? s2.nextSibling : null;
          }
          i2++;
        }
      }
      var Ve = /<.*?>/g;
      function Xe(n2) {
        var r2 = n2.nTable, i2 = n2.aoColumns, a2 = n2.oScroll, o2 = a2.sY, s2 = a2.sX, u2 = a2.sXInner, f2 = i2.length, l2 = G(n2, "bVisible"), c2 = e2("th", n2.nTHead), d2 = r2.getAttribute("width"), h3 = r2.parentNode, v2 = false, m2, p2, g2, b2 = n2.oBrowser, y2 = b2.bScrollOversize;
        var w2 = r2.style.width;
        if (w2 && w2.indexOf("%") !== -1) {
          d2 = w2;
        }
        for (m2 = 0; m2 < l2.length; m2++) {
          p2 = i2[l2[m2]];
          if (p2.sWidth !== null) {
            p2.sWidth = Ke(p2.sWidthOrig, h3);
            v2 = true;
          }
        }
        if (y2 || !v2 && !s2 && !o2 && f2 == $(n2) && f2 == c2.length) {
          for (m2 = 0; m2 < f2; m2++) {
            var S2 = H(n2, m2);
            if (S2 !== null) {
              i2[S2].sWidth = nt(c2.eq(m2).width());
            }
          }
        } else {
          var D2 = e2(r2).clone().css("visibility", "hidden").removeAttr("id");
          D2.find("tbody tr").remove();
          var k2 = e2("<tr/>").appendTo(D2.find("tbody"));
          D2.find("thead, tfoot").remove();
          D2.append(e2(n2.nTHead).clone()).append(e2(n2.nTFoot).clone());
          D2.find("tfoot th, tfoot td").css("width", "");
          c2 = ge(n2, D2.find("thead")[0]);
          for (m2 = 0; m2 < l2.length; m2++) {
            p2 = i2[l2[m2]];
            c2[m2].style.width = p2.sWidthOrig !== null && p2.sWidthOrig !== "" ? nt(p2.sWidthOrig) : "";
            if (p2.sWidthOrig && s2) {
              e2(c2[m2]).append(e2("<div/>").css({ width: p2.sWidthOrig, margin: 0, padding: 0, border: 0, height: 1 }));
            }
          }
          if (n2.aoData.length) {
            for (m2 = 0; m2 < l2.length; m2++) {
              g2 = l2[m2];
              p2 = i2[g2];
              e2(et(n2, g2)).clone(false).append(p2.sContentPadding).appendTo(k2);
            }
          }
          e2("[name]", D2).removeAttr("name");
          var x2 = e2("<div/>").css(s2 || o2 ? { position: "absolute", top: 0, left: 0, height: 1, right: 0, overflow: "hidden" } : {}).append(D2).appendTo(h3);
          if (s2 && u2) {
            D2.width(u2);
          } else if (s2) {
            D2.css("width", "auto");
            D2.removeAttr("width");
            if (D2.width() < h3.clientWidth && d2) {
              D2.width(h3.clientWidth);
            }
          } else if (o2) {
            D2.width(h3.clientWidth);
          } else if (d2) {
            D2.width(d2);
          }
          var _2 = 0;
          for (m2 = 0; m2 < l2.length; m2++) {
            var M2 = e2(c2[m2]);
            var T2 = M2.outerWidth() - M2.width();
            var E2 = b2.bBounding ? Math.ceil(c2[m2].getBoundingClientRect().width) : M2.outerWidth();
            _2 += E2;
            i2[l2[m2]].sWidth = nt(E2 - T2);
          }
          r2.style.width = nt(_2);
          x2.remove();
        }
        if (d2) {
          r2.style.width = nt(d2);
        }
        if ((d2 || s2) && !n2._reszEvt) {
          var F2 = function() {
            e2(t2).on("resize.DT-" + n2.sInstance, Qe(function() {
              j(n2);
            }));
          };
          if (y2) {
            setTimeout(F2, 1e3);
          } else {
            F2();
          }
          n2._reszEvt = true;
        }
      }
      var Qe = i.util.throttle;
      function Ke(t3, r2) {
        if (!t3) {
          return 0;
        }
        var i2 = e2("<div/>").css("width", nt(t3)).appendTo(r2 || n.body);
        var a2 = i2[0].offsetWidth;
        i2.remove();
        return a2;
      }
      function et(t3, n2) {
        var r2 = tt(t3, n2);
        if (r2 < 0) {
          return null;
        }
        var i2 = t3.aoData[r2];
        return !i2.nTr ? e2("<td/>").html(X(t3, r2, n2, "display"))[0] : i2.anCells[n2];
      }
      function tt(e3, t3) {
        var n2, r2 = -1, i2 = -1;
        for (var a2 = 0, o2 = e3.aoData.length; a2 < o2; a2++) {
          n2 = X(e3, a2, t3, "display") + "";
          n2 = n2.replace(Ve, "");
          n2 = n2.replace(/&nbsp;/g, " ");
          if (n2.length > r2) {
            r2 = n2.length;
            i2 = a2;
          }
        }
        return i2;
      }
      function nt(e3) {
        if (e3 === null) {
          return "0px";
        }
        if (typeof e3 == "number") {
          return e3 < 0 ? "0px" : e3 + "px";
        }
        return e3.match(/\d$/) ? e3 + "px" : e3;
      }
      function rt(t3) {
        var n2, a2, o2, s2 = [], u2 = t3.aoColumns, f2, l2, c2, d2, h3 = t3.aaSortingFixed, v2 = e2.isPlainObject(h3), m2 = [], p2 = function(t4) {
          if (t4.length && !Array.isArray(t4[0])) {
            m2.push(t4);
          } else {
            e2.merge(m2, t4);
          }
        };
        if (Array.isArray(h3)) {
          p2(h3);
        }
        if (v2 && h3.pre) {
          p2(h3.pre);
        }
        p2(t3.aaSorting);
        if (v2 && h3.post) {
          p2(h3.post);
        }
        for (n2 = 0; n2 < m2.length; n2++) {
          d2 = m2[n2][0];
          f2 = u2[d2].aDataSort;
          for (a2 = 0, o2 = f2.length; a2 < o2; a2++) {
            l2 = f2[a2];
            c2 = u2[l2].sType || "string";
            if (m2[n2]._idx === r) {
              m2[n2]._idx = e2.inArray(m2[n2][1], u2[l2].asSorting);
            }
            s2.push({ src: d2, col: l2, dir: m2[n2][1], index: m2[n2]._idx, type: c2, formatter: i.ext.type.order[c2 + "-pre"] });
          }
        }
        return s2;
      }
      function it(e3) {
        var t3, n2, r2, a2 = [], o2 = i.ext.type.order, s2 = e3.aoData, u2 = 0, f2, l2 = e3.aiDisplayMaster, c2;
        q(e3);
        c2 = rt(e3);
        for (t3 = 0, n2 = c2.length; t3 < n2; t3++) {
          f2 = c2[t3];
          if (f2.formatter) {
            u2++;
          }
          ft(e3, f2.col);
        }
        if (Dt(e3) != "ssp" && c2.length !== 0) {
          for (t3 = 0, r2 = l2.length; t3 < r2; t3++) {
            a2[l2[t3]] = t3;
          }
          if (u2 === c2.length) {
            l2.sort(function(e4, t4) {
              var n3, r3, i2, o3, u3, f3 = c2.length, l3 = s2[e4]._aSortData, d2 = s2[t4]._aSortData;
              for (i2 = 0; i2 < f3; i2++) {
                u3 = c2[i2];
                n3 = l3[u3.col];
                r3 = d2[u3.col];
                o3 = n3 < r3 ? -1 : n3 > r3 ? 1 : 0;
                if (o3 !== 0) {
                  return u3.dir === "asc" ? o3 : -o3;
                }
              }
              n3 = a2[e4];
              r3 = a2[t4];
              return n3 < r3 ? -1 : n3 > r3 ? 1 : 0;
            });
          } else {
            l2.sort(function(e4, t4) {
              var n3, r3, i2, u3, f3, l3, d2 = c2.length, h3 = s2[e4]._aSortData, v2 = s2[t4]._aSortData;
              for (i2 = 0; i2 < d2; i2++) {
                f3 = c2[i2];
                n3 = h3[f3.col];
                r3 = v2[f3.col];
                l3 = o2[f3.type + "-" + f3.dir] || o2["string-" + f3.dir];
                u3 = l3(n3, r3);
                if (u3 !== 0) {
                  return u3;
                }
              }
              n3 = a2[e4];
              r3 = a2[t4];
              return n3 < r3 ? -1 : n3 > r3 ? 1 : 0;
            });
          }
        }
        e3.bSorted = true;
      }
      function at(e3) {
        var t3;
        var n2;
        var r2 = e3.aoColumns;
        var i2 = rt(e3);
        var a2 = e3.oLanguage.oAria;
        for (var o2 = 0, s2 = r2.length; o2 < s2; o2++) {
          var u2 = r2[o2];
          var f2 = u2.asSorting;
          var l2 = u2.ariaTitle || u2.sTitle.replace(/<.*?>/g, "");
          var c2 = u2.nTh;
          c2.removeAttribute("aria-sort");
          if (u2.bSortable) {
            if (i2.length > 0 && i2[0].col == o2) {
              c2.setAttribute("aria-sort", i2[0].dir == "asc" ? "ascending" : "descending");
              n2 = f2[i2[0].index + 1] || f2[0];
            } else {
              n2 = f2[0];
            }
            t3 = l2 + (n2 === "asc" ? a2.sSortAscending : a2.sSortDescending);
          } else {
            t3 = l2;
          }
          c2.setAttribute("aria-label", t3);
        }
      }
      function ot(t3, n2, i2, a2) {
        var o2 = t3.aoColumns[n2];
        var s2 = t3.aaSorting;
        var u2 = o2.asSorting;
        var f2;
        var l2 = function(t4, n3) {
          var i3 = t4._idx;
          if (i3 === r) {
            i3 = e2.inArray(t4[1], u2);
          }
          return i3 + 1 < u2.length ? i3 + 1 : n3 ? null : 0;
        };
        if (typeof s2[0] === "number") {
          s2 = t3.aaSorting = [s2];
        }
        if (i2 && t3.oFeatures.bSortMulti) {
          var c2 = e2.inArray(n2, S(s2, "0"));
          if (c2 !== -1) {
            f2 = l2(s2[c2], true);
            if (f2 === null && s2.length === 1) {
              f2 = 0;
            }
            if (f2 === null) {
              s2.splice(c2, 1);
            } else {
              s2[c2][1] = u2[f2];
              s2[c2]._idx = f2;
            }
          } else {
            s2.push([n2, u2[0], 0]);
            s2[s2.length - 1]._idx = 0;
          }
        } else if (s2.length && s2[0][0] == n2) {
          f2 = l2(s2[0]);
          s2.length = 1;
          s2[0][1] = u2[f2];
          s2[0]._idx = f2;
        } else {
          s2.length = 0;
          s2.push([n2, u2[0]]);
          s2[0]._idx = 0;
        }
        ve(t3);
        if (typeof a2 == "function") {
          a2(t3);
        }
      }
      function st(e3, t3, n2, r2) {
        var i2 = e3.aoColumns[n2];
        gt(t3, {}, function(t4) {
          if (i2.bSortable === false) {
            return;
          }
          if (e3.oFeatures.bProcessing) {
            ze(e3, true);
            setTimeout(function() {
              ot(e3, n2, t4.shiftKey, r2);
              if (Dt(e3) !== "ssp") {
                ze(e3, false);
              }
            }, 0);
          } else {
            ot(e3, n2, t4.shiftKey, r2);
          }
        });
      }
      function ut(t3) {
        var n2 = t3.aLastSort;
        var r2 = t3.oClasses.sSortColumn;
        var i2 = rt(t3);
        var a2 = t3.oFeatures;
        var o2, s2, u2;
        if (a2.bSort && a2.bSortClasses) {
          for (o2 = 0, s2 = n2.length; o2 < s2; o2++) {
            u2 = n2[o2].src;
            e2(S(t3.aoData, "anCells", u2)).removeClass(r2 + (o2 < 2 ? o2 + 1 : 3));
          }
          for (o2 = 0, s2 = i2.length; o2 < s2; o2++) {
            u2 = i2[o2].src;
            e2(S(t3.aoData, "anCells", u2)).addClass(r2 + (o2 < 2 ? o2 + 1 : 3));
          }
        }
        t3.aLastSort = i2;
      }
      function ft(e3, t3) {
        var n2 = e3.aoColumns[t3];
        var r2 = i.ext.order[n2.sSortDataType];
        var a2;
        if (r2) {
          a2 = r2.call(e3.oInstance, e3, t3, U(e3, t3));
        }
        var o2, s2;
        var u2 = i.ext.type.order[n2.sType + "-pre"];
        for (var f2 = 0, l2 = e3.aoData.length; f2 < l2; f2++) {
          o2 = e3.aoData[f2];
          if (!o2._aSortData) {
            o2._aSortData = [];
          }
          if (!o2._aSortData[t3] || r2) {
            s2 = r2 ? a2[f2] : X(e3, f2, t3, "sort");
            o2._aSortData[t3] = u2 ? u2(s2) : s2;
          }
        }
      }
      function lt(t3) {
        if (t3._bLoadingState) {
          return;
        }
        var n2 = { time: +/* @__PURE__ */ new Date(), start: t3._iDisplayStart, length: t3._iDisplayLength, order: e2.extend(true, [], t3.aaSorting), search: Re(t3.oPreviousSearch), columns: e2.map(t3.aoColumns, function(e3, n3) {
          return { visible: e3.bVisible, search: Re(t3.aoPreSearchCols[n3]) };
        }) };
        t3.oSavedState = n2;
        yt(t3, "aoStateSaveParams", "stateSaveParams", [t3, n2]);
        if (t3.oFeatures.bStateSave && !t3.bDestroying) {
          t3.fnStateSaveCallback.call(t3.oInstance, t3, n2);
        }
      }
      function ct(e3, t3, n2) {
        if (!e3.oFeatures.bStateSave) {
          n2();
          return;
        }
        var i2 = function(t4) {
          dt(e3, t4, n2);
        };
        var a2 = e3.fnStateLoadCallback.call(e3.oInstance, e3, i2);
        if (a2 !== r) {
          dt(e3, a2, n2);
        }
        return true;
      }
      function dt(t3, n2, a2) {
        var o2, s2;
        var u2 = t3.aoColumns;
        t3._bLoadingState = true;
        var f2 = t3._bInitComplete ? new i.Api(t3) : null;
        if (!n2 || !n2.time) {
          t3._bLoadingState = false;
          a2();
          return;
        }
        var l2 = yt(t3, "aoStateLoadParams", "stateLoadParams", [t3, n2]);
        if (e2.inArray(false, l2) !== -1) {
          t3._bLoadingState = false;
          a2();
          return;
        }
        var c2 = t3.iStateDuration;
        if (c2 > 0 && n2.time < +/* @__PURE__ */ new Date() - c2 * 1e3) {
          t3._bLoadingState = false;
          a2();
          return;
        }
        if (n2.columns && u2.length !== n2.columns.length) {
          t3._bLoadingState = false;
          a2();
          return;
        }
        t3.oLoadedState = e2.extend(true, {}, n2);
        if (n2.length !== r) {
          if (f2) {
            f2.page.len(n2.length);
          } else {
            t3._iDisplayLength = n2.length;
          }
        }
        if (n2.start !== r) {
          if (f2 === null) {
            t3._iDisplayStart = n2.start;
            t3.iInitDisplayStart = n2.start;
          } else {
            Ge(t3, n2.start / t3._iDisplayLength);
          }
        }
        if (n2.order !== r) {
          t3.aaSorting = [];
          e2.each(n2.order, function(e3, n3) {
            t3.aaSorting.push(n3[0] >= u2.length ? [0, n3[1]] : n3);
          });
        }
        if (n2.search !== r) {
          e2.extend(t3.oPreviousSearch, Ce(n2.search));
        }
        if (n2.columns) {
          for (o2 = 0, s2 = n2.columns.length; o2 < s2; o2++) {
            var d2 = n2.columns[o2];
            if (d2.visible !== r) {
              if (f2) {
                f2.column(o2).visible(d2.visible, false);
              } else {
                u2[o2].bVisible = d2.visible;
              }
            }
            if (d2.search !== r) {
              e2.extend(t3.aoPreSearchCols[o2], Ce(d2.search));
            }
          }
          if (f2) {
            f2.columns.adjust();
          }
        }
        t3._bLoadingState = false;
        yt(t3, "aoStateLoaded", "stateLoaded", [t3, n2]);
        a2();
      }
      function ht(t3) {
        var n2 = i.settings;
        var r2 = e2.inArray(t3, S(n2, "nTable"));
        return r2 !== -1 ? n2[r2] : null;
      }
      function vt(e3, n2, r2, a2) {
        r2 = "DataTables warning: " + (e3 ? "table id=" + e3.sTableId + " - " : "") + r2;
        if (a2) {
          r2 += ". For more information about this error, please see http://datatables.net/tn/" + a2;
        }
        if (!n2) {
          var o2 = i.ext;
          var s2 = o2.sErrMode || o2.errMode;
          if (e3) {
            yt(e3, null, "error", [e3, a2, r2]);
          }
          if (s2 == "alert") {
            alert(r2);
          } else if (s2 == "throw") {
            throw new Error(r2);
          } else if (typeof s2 == "function") {
            s2(e3, a2, r2);
          }
        } else if (t2.console && console.log) {
          console.log(r2);
        }
      }
      function mt(t3, n2, i2, a2) {
        if (Array.isArray(i2)) {
          e2.each(i2, function(e3, r2) {
            if (Array.isArray(r2)) {
              mt(t3, n2, r2[0], r2[1]);
            } else {
              mt(t3, n2, r2);
            }
          });
          return;
        }
        if (a2 === r) {
          a2 = i2;
        }
        if (n2[i2] !== r) {
          t3[a2] = n2[i2];
        }
      }
      function pt(t3, n2, r2) {
        var i2;
        for (var a2 in n2) {
          if (n2.hasOwnProperty(a2)) {
            i2 = n2[a2];
            if (e2.isPlainObject(i2)) {
              if (!e2.isPlainObject(t3[a2])) {
                t3[a2] = {};
              }
              e2.extend(true, t3[a2], i2);
            } else if (r2 && a2 !== "data" && a2 !== "aaData" && Array.isArray(i2)) {
              t3[a2] = i2.slice();
            } else {
              t3[a2] = i2;
            }
          }
        }
        return t3;
      }
      function gt(t3, n2, r2) {
        e2(t3).on("click.DT", n2, function(n3) {
          e2(t3).trigger("blur");
          r2(n3);
        }).on("keypress.DT", n2, function(e3) {
          if (e3.which === 13) {
            e3.preventDefault();
            r2(e3);
          }
        }).on("selectstart.DT", function() {
          return false;
        });
      }
      function bt(e3, t3, n2, r2) {
        if (n2) {
          e3[t3].push({ fn: n2, sName: r2 });
        }
      }
      function yt(t3, n2, r2, i2) {
        var a2 = [];
        if (n2) {
          a2 = e2.map(t3[n2].slice().reverse(), function(e3, n3) {
            return e3.fn.apply(t3.oInstance, i2);
          });
        }
        if (r2 !== null) {
          var o2 = e2.Event(r2 + ".dt");
          e2(t3.nTable).trigger(o2, i2);
          a2.push(o2.result);
        }
        return a2;
      }
      function wt(e3) {
        var t3 = e3._iDisplayStart, n2 = e3.fnDisplayEnd(), r2 = e3._iDisplayLength;
        if (t3 >= n2) {
          t3 = n2 - r2;
        }
        t3 -= t3 % r2;
        if (r2 === -1 || t3 < 0) {
          t3 = 0;
        }
        e3._iDisplayStart = t3;
      }
      function St(t3, n2) {
        var r2 = t3.renderer;
        var a2 = i.ext.renderer[n2];
        if (e2.isPlainObject(r2) && r2[n2]) {
          return a2[r2[n2]] || a2._;
        } else if (typeof r2 === "string") {
          return a2[r2] || a2._;
        }
        return a2._;
      }
      function Dt(e3) {
        if (e3.oFeatures.bServerSide) {
          return "ssp";
        } else if (e3.ajax || e3.sAjaxSource) {
          return "ajax";
        }
        return "dom";
      }
      var kt = [];
      var xt = Array.prototype;
      var _t = function(t3) {
        var n2, r2;
        var a2 = i.settings;
        var o2 = e2.map(a2, function(e3, t4) {
          return e3.nTable;
        });
        if (!t3) {
          return [];
        } else if (t3.nTable && t3.oApi) {
          return [t3];
        } else if (t3.nodeName && t3.nodeName.toLowerCase() === "table") {
          n2 = e2.inArray(t3, o2);
          return n2 !== -1 ? [a2[n2]] : null;
        } else if (t3 && typeof t3.settings === "function") {
          return t3.settings().toArray();
        } else if (typeof t3 === "string") {
          r2 = e2(t3);
        } else if (t3 instanceof e2) {
          r2 = t3;
        }
        if (r2) {
          return r2.map(function(t4) {
            n2 = e2.inArray(this, o2);
            return n2 !== -1 ? a2[n2] : null;
          }).toArray();
        }
      };
      o = function(t3, n2) {
        if (!(this instanceof o)) {
          return new o(t3, n2);
        }
        var r2 = [];
        var i2 = function(e3) {
          var t4 = _t(e3);
          if (t4) {
            r2.push.apply(r2, t4);
          }
        };
        if (Array.isArray(t3)) {
          for (var a2 = 0, s2 = t3.length; a2 < s2; a2++) {
            i2(t3[a2]);
          }
        } else {
          i2(t3);
        }
        this.context = T(r2);
        if (n2) {
          e2.merge(this, n2);
        }
        this.selector = { rows: null, cols: null, opts: null };
        o.extend(this, this, kt);
      };
      i.Api = o;
      e2.extend(o.prototype, { any: function() {
        return this.count() !== 0;
      }, concat: xt.concat, context: [], count: function() {
        return this.flatten().length;
      }, each: function(e3) {
        for (var t3 = 0, n2 = this.length; t3 < n2; t3++) {
          e3.call(this, this[t3], t3, this);
        }
        return this;
      }, eq: function(e3) {
        var t3 = this.context;
        return t3.length > e3 ? new o(t3[e3], this[e3]) : null;
      }, filter: function(e3) {
        var t3 = [];
        if (xt.filter) {
          t3 = xt.filter.call(this, e3, this);
        } else {
          for (var n2 = 0, r2 = this.length; n2 < r2; n2++) {
            if (e3.call(this, this[n2], n2, this)) {
              t3.push(this[n2]);
            }
          }
        }
        return new o(this.context, t3);
      }, flatten: function() {
        var e3 = [];
        return new o(this.context, e3.concat.apply(e3, this.toArray()));
      }, join: xt.join, indexOf: xt.indexOf || function(e3, t3) {
        for (var n2 = t3 || 0, r2 = this.length; n2 < r2; n2++) {
          if (this[n2] === e3) {
            return n2;
          }
        }
        return -1;
      }, iterator: function(e3, t3, n2, i2) {
        var a2 = [], s2, u2, f2, l2, c2, d2 = this.context, h3, v2, m2, p2 = this.selector;
        if (typeof e3 === "string") {
          i2 = n2;
          n2 = t3;
          t3 = e3;
          e3 = false;
        }
        for (u2 = 0, f2 = d2.length; u2 < f2; u2++) {
          var g2 = new o(d2[u2]);
          if (t3 === "table") {
            s2 = n2.call(g2, d2[u2], u2);
            if (s2 !== r) {
              a2.push(s2);
            }
          } else if (t3 === "columns" || t3 === "rows") {
            s2 = n2.call(g2, d2[u2], this[u2], u2);
            if (s2 !== r) {
              a2.push(s2);
            }
          } else if (t3 === "column" || t3 === "column-rows" || t3 === "row" || t3 === "cell") {
            v2 = this[u2];
            if (t3 === "column-rows") {
              h3 = At(d2[u2], p2.opts);
            }
            for (l2 = 0, c2 = v2.length; l2 < c2; l2++) {
              m2 = v2[l2];
              if (t3 === "cell") {
                s2 = n2.call(g2, d2[u2], m2.row, m2.column, u2, l2);
              } else {
                s2 = n2.call(g2, d2[u2], m2, u2, l2, h3);
              }
              if (s2 !== r) {
                a2.push(s2);
              }
            }
          }
        }
        if (a2.length || i2) {
          var b2 = new o(d2, e3 ? a2.concat.apply([], a2) : a2);
          var y2 = b2.selector;
          y2.rows = p2.rows;
          y2.cols = p2.cols;
          y2.opts = p2.opts;
          return b2;
        }
        return this;
      }, lastIndexOf: xt.lastIndexOf || function(e3, t3) {
        return this.indexOf.apply(this.toArray.reverse(), arguments);
      }, length: 0, map: function(e3) {
        var t3 = [];
        if (xt.map) {
          t3 = xt.map.call(this, e3, this);
        } else {
          for (var n2 = 0, r2 = this.length; n2 < r2; n2++) {
            t3.push(e3.call(this, this[n2], n2));
          }
        }
        return new o(this.context, t3);
      }, pluck: function(e3) {
        var t3 = i.util.get(e3);
        return this.map(function(e4) {
          return t3(e4);
        });
      }, pop: xt.pop, push: xt.push, reduce: xt.reduce || function(e3, t3) {
        return P(this, e3, t3, 0, this.length, 1);
      }, reduceRight: xt.reduceRight || function(e3, t3) {
        return P(this, e3, t3, this.length - 1, -1, -1);
      }, reverse: xt.reverse, selector: null, shift: xt.shift, slice: function() {
        return new o(this.context, this);
      }, sort: xt.sort, splice: xt.splice, toArray: function() {
        return xt.slice.call(this);
      }, to$: function() {
        return e2(this);
      }, toJQuery: function() {
        return e2(this);
      }, unique: function() {
        return new o(this.context, T(this));
      }, unshift: xt.unshift });
      o.extend = function(e3, t3, n2) {
        if (!n2.length || !t3 || !(t3 instanceof o) && !t3.__dt_wrapper) {
          return;
        }
        var r2, i2, a2, s2 = function(e4, t4, n3) {
          return function() {
            var r3 = t4.apply(e4, arguments);
            o.extend(r3, r3, n3.methodExt);
            return r3;
          };
        };
        for (r2 = 0, i2 = n2.length; r2 < i2; r2++) {
          a2 = n2[r2];
          t3[a2.name] = a2.type === "function" ? s2(e3, a2.val, a2) : a2.type === "object" ? {} : a2.val;
          t3[a2.name].__dt_wrapper = true;
          o.extend(e3, t3[a2.name], a2.propExt);
        }
      };
      o.register = s = function(t3, n2) {
        if (Array.isArray(t3)) {
          for (var r2 = 0, i2 = t3.length; r2 < i2; r2++) {
            o.register(t3[r2], n2);
          }
          return;
        }
        var a2, s2, u2 = t3.split("."), f2 = kt, l2, c2;
        var d2 = function(e3, t4) {
          for (var n3 = 0, r3 = e3.length; n3 < r3; n3++) {
            if (e3[n3].name === t4) {
              return e3[n3];
            }
          }
          return null;
        };
        for (a2 = 0, s2 = u2.length; a2 < s2; a2++) {
          c2 = u2[a2].indexOf("()") !== -1;
          l2 = c2 ? u2[a2].replace("()", "") : u2[a2];
          var h3 = d2(f2, l2);
          if (!h3) {
            h3 = { name: l2, val: {}, methodExt: [], propExt: [], type: "object" };
            f2.push(h3);
          }
          if (a2 === s2 - 1) {
            h3.val = n2;
            h3.type = typeof n2 === "function" ? "function" : e2.isPlainObject(n2) ? "object" : "other";
          } else {
            f2 = c2 ? h3.methodExt : h3.propExt;
          }
        }
      };
      o.registerPlural = u = function(e3, t3, n2) {
        o.register(e3, n2);
        o.register(t3, function() {
          var e4 = n2.apply(this, arguments);
          if (e4 === this) {
            return this;
          } else if (e4 instanceof o) {
            return e4.length ? Array.isArray(e4[0]) ? new o(e4.context, e4[0]) : e4[0] : r;
          }
          return e4;
        });
      };
      var Mt = function(t3, n2) {
        if (Array.isArray(t3)) {
          return e2.map(t3, function(e3) {
            return Mt(e3, n2);
          });
        }
        if (typeof t3 === "number") {
          return [n2[t3]];
        }
        var r2 = e2.map(n2, function(e3, t4) {
          return e3.nTable;
        });
        return e2(r2).filter(t3).map(function(t4) {
          var i2 = e2.inArray(this, r2);
          return n2[i2];
        }).toArray();
      };
      s("tables()", function(e3) {
        return e3 !== r && e3 !== null ? new o(Mt(e3, this.context)) : this;
      });
      s("table()", function(e3) {
        var t3 = this.tables(e3);
        var n2 = t3.context;
        return n2.length ? new o(n2[0]) : t3;
      });
      u("tables().nodes()", "table().node()", function() {
        return this.iterator("table", function(e3) {
          return e3.nTable;
        }, 1);
      });
      u("tables().body()", "table().body()", function() {
        return this.iterator("table", function(e3) {
          return e3.nTBody;
        }, 1);
      });
      u("tables().header()", "table().header()", function() {
        return this.iterator("table", function(e3) {
          return e3.nTHead;
        }, 1);
      });
      u("tables().footer()", "table().footer()", function() {
        return this.iterator("table", function(e3) {
          return e3.nTFoot;
        }, 1);
      });
      u("tables().containers()", "table().container()", function() {
        return this.iterator("table", function(e3) {
          return e3.nTableWrapper;
        }, 1);
      });
      s("draw()", function(e3) {
        return this.iterator("table", function(t3) {
          if (e3 === "page") {
            he(t3);
          } else {
            if (typeof e3 === "string") {
              e3 = e3 === "full-hold" ? false : true;
            }
            ve(t3, e3 === false);
          }
        });
      });
      s("page()", function(e3) {
        if (e3 === r) {
          return this.page.info().page;
        }
        return this.iterator("table", function(t3) {
          Ge(t3, e3);
        });
      });
      s("page.info()", function(e3) {
        if (this.context.length === 0) {
          return r;
        }
        var t3 = this.context[0], n2 = t3._iDisplayStart, i2 = t3.oFeatures.bPaginate ? t3._iDisplayLength : -1, a2 = t3.fnRecordsDisplay(), o2 = i2 === -1;
        return { page: o2 ? 0 : Math.floor(n2 / i2), pages: o2 ? 1 : Math.ceil(a2 / i2), start: n2, end: t3.fnDisplayEnd(), length: i2, recordsTotal: t3.fnRecordsTotal(), recordsDisplay: a2, serverSide: Dt(t3) === "ssp" };
      });
      s("page.len()", function(e3) {
        if (e3 === r) {
          return this.context.length !== 0 ? this.context[0]._iDisplayLength : r;
        }
        return this.iterator("table", function(t3) {
          He(t3, e3);
        });
      });
      var Tt = function(e3, t3, n2) {
        if (n2) {
          var r2 = new o(e3);
          r2.one("draw", function() {
            n2(r2.ajax.json());
          });
        }
        if (Dt(e3) == "ssp") {
          ve(e3, t3);
        } else {
          ze(e3, true);
          var i2 = e3.jqXHR;
          if (i2 && i2.readyState !== 4) {
            i2.abort();
          }
          ye(e3, [], function(n3) {
            ae(e3);
            var r3 = ke(e3, n3);
            for (var i3 = 0, a2 = r3.length; i3 < a2; i3++) {
              B(e3, r3[i3]);
            }
            ve(e3, t3);
            ze(e3, false);
          });
        }
      };
      s("ajax.json()", function() {
        var e3 = this.context;
        if (e3.length > 0) {
          return e3[0].json;
        }
      });
      s("ajax.params()", function() {
        var e3 = this.context;
        if (e3.length > 0) {
          return e3[0].oAjaxData;
        }
      });
      s("ajax.reload()", function(e3, t3) {
        return this.iterator("table", function(n2) {
          Tt(n2, t3 === false, e3);
        });
      });
      s("ajax.url()", function(t3) {
        var n2 = this.context;
        if (t3 === r) {
          if (n2.length === 0) {
            return r;
          }
          n2 = n2[0];
          return n2.ajax ? e2.isPlainObject(n2.ajax) ? n2.ajax.url : n2.ajax : n2.sAjaxSource;
        }
        return this.iterator("table", function(n3) {
          if (e2.isPlainObject(n3.ajax)) {
            n3.ajax.url = t3;
          } else {
            n3.ajax = t3;
          }
        });
      });
      s("ajax.url().load()", function(e3, t3) {
        return this.iterator("table", function(n2) {
          Tt(n2, t3 === false, e3);
        });
      });
      var Et = function(e3, t3, n2, i2, o2) {
        var s2 = [], u2, f2, l2, c2, d2, h3, v2 = typeof t3;
        if (!t3 || v2 === "string" || v2 === "function" || t3.length === r) {
          t3 = [t3];
        }
        for (l2 = 0, c2 = t3.length; l2 < c2; l2++) {
          f2 = t3[l2] && t3[l2].split && !t3[l2].match(/[\[\(:]/) ? t3[l2].split(",") : [t3[l2]];
          for (d2 = 0, h3 = f2.length; d2 < h3; d2++) {
            u2 = n2(typeof f2[d2] === "string" ? f2[d2].trim() : f2[d2]);
            if (u2 && u2.length) {
              s2 = s2.concat(u2);
            }
          }
        }
        var m2 = a.selector[e3];
        if (m2.length) {
          for (l2 = 0, c2 = m2.length; l2 < c2; l2++) {
            s2 = m2[l2](i2, o2, s2);
          }
        }
        return T(s2);
      };
      var Ft = function(t3) {
        if (!t3) {
          t3 = {};
        }
        if (t3.filter && t3.search === r) {
          t3.search = t3.filter;
        }
        return e2.extend({ search: "none", order: "current", page: "all" }, t3);
      };
      var Yt = function(e3) {
        for (var t3 = 0, n2 = e3.length; t3 < n2; t3++) {
          if (e3[t3].length > 0) {
            e3[0] = e3[t3];
            e3[0].length = 1;
            e3.length = 1;
            e3.context = [e3.context[t3]];
            return e3;
          }
        }
        e3.length = 0;
        return e3;
      };
      var At = function(t3, n2) {
        var r2, i2, a2, o2 = [], s2 = t3.aiDisplay, u2 = t3.aiDisplayMaster;
        var f2 = n2.search, l2 = n2.order, c2 = n2.page;
        if (Dt(t3) == "ssp") {
          return f2 === "removed" ? [] : k(0, u2.length);
        } else if (c2 == "current") {
          for (r2 = t3._iDisplayStart, i2 = t3.fnDisplayEnd(); r2 < i2; r2++) {
            o2.push(s2[r2]);
          }
        } else if (l2 == "current" || l2 == "applied") {
          if (f2 == "none") {
            o2 = u2.slice();
          } else if (f2 == "applied") {
            o2 = s2.slice();
          } else if (f2 == "removed") {
            var d2 = {};
            for (var r2 = 0, i2 = s2.length; r2 < i2; r2++) {
              d2[s2[r2]] = null;
            }
            o2 = e2.map(u2, function(e3) {
              return !d2.hasOwnProperty(e3) ? e3 : null;
            });
          }
        } else if (l2 == "index" || l2 == "original") {
          for (r2 = 0, i2 = t3.aoData.length; r2 < i2; r2++) {
            if (f2 == "none") {
              o2.push(r2);
            } else {
              a2 = e2.inArray(r2, s2);
              if (a2 === -1 && f2 == "removed" || a2 >= 0 && f2 == "applied") {
                o2.push(r2);
              }
            }
          }
        }
        return o2;
      };
      var Ot = function(t3, n2, i2) {
        var a2;
        var o2 = function(n3) {
          var o3 = p(n3);
          var s2 = t3.aoData;
          if (o3 !== null && !i2) {
            return [o3];
          }
          if (!a2) {
            a2 = At(t3, i2);
          }
          if (o3 !== null && e2.inArray(o3, a2) !== -1) {
            return [o3];
          } else if (n3 === null || n3 === r || n3 === "") {
            return a2;
          }
          if (typeof n3 === "function") {
            return e2.map(a2, function(e3) {
              var t4 = s2[e3];
              return n3(e3, t4._aData, t4.nTr) ? e3 : null;
            });
          }
          if (n3.nodeName) {
            var u2 = n3._DT_RowIndex;
            var f2 = n3._DT_CellIndex;
            if (u2 !== r) {
              return s2[u2] && s2[u2].nTr === n3 ? [u2] : [];
            } else if (f2) {
              return s2[f2.row] && s2[f2.row].nTr === n3.parentNode ? [f2.row] : [];
            } else {
              var l2 = e2(n3).closest("*[data-dt-row]");
              return l2.length ? [l2.data("dt-row")] : [];
            }
          }
          if (typeof n3 === "string" && n3.charAt(0) === "#") {
            var c2 = t3.aIds[n3.replace(/^#/, "")];
            if (c2 !== r) {
              return [c2.idx];
            }
          }
          var d2 = x(D(t3.aoData, a2, "nTr"));
          return e2(d2).filter(n3).map(function() {
            return this._DT_RowIndex;
          }).toArray();
        };
        return Et("row", n2, o2, t3, i2);
      };
      s("rows()", function(t3, n2) {
        if (t3 === r) {
          t3 = "";
        } else if (e2.isPlainObject(t3)) {
          n2 = t3;
          t3 = "";
        }
        n2 = Ft(n2);
        var i2 = this.iterator("table", function(e3) {
          return Ot(e3, t3, n2);
        }, 1);
        i2.selector.rows = t3;
        i2.selector.opts = n2;
        return i2;
      });
      s("rows().nodes()", function() {
        return this.iterator("row", function(e3, t3) {
          return e3.aoData[t3].nTr || r;
        }, 1);
      });
      s("rows().data()", function() {
        return this.iterator(true, "rows", function(e3, t3) {
          return D(e3.aoData, t3, "_aData");
        }, 1);
      });
      u("rows().cache()", "row().cache()", function(e3) {
        return this.iterator("row", function(t3, n2) {
          var r2 = t3.aoData[n2];
          return e3 === "search" ? r2._aFilterData : r2._aSortData;
        }, 1);
      });
      u("rows().invalidate()", "row().invalidate()", function(e3) {
        return this.iterator("row", function(t3, n2) {
          se(t3, n2, e3);
        });
      });
      u("rows().indexes()", "row().index()", function() {
        return this.iterator("row", function(e3, t3) {
          return t3;
        }, 1);
      });
      u("rows().ids()", "row().id()", function(e3) {
        var t3 = [];
        var n2 = this.context;
        for (var r2 = 0, i2 = n2.length; r2 < i2; r2++) {
          for (var a2 = 0, s2 = this[r2].length; a2 < s2; a2++) {
            var u2 = n2[r2].rowIdFn(n2[r2].aoData[this[r2][a2]]._aData);
            t3.push((e3 === true ? "#" : "") + u2);
          }
        }
        return new o(n2, t3);
      });
      u("rows().remove()", "row().remove()", function() {
        var e3 = this;
        this.iterator("row", function(t3, n2, i2) {
          var a2 = t3.aoData;
          var o2 = a2[n2];
          var s2, u2, f2, l2;
          var c2, d2;
          a2.splice(n2, 1);
          for (s2 = 0, u2 = a2.length; s2 < u2; s2++) {
            c2 = a2[s2];
            d2 = c2.anCells;
            if (c2.nTr !== null) {
              c2.nTr._DT_RowIndex = s2;
            }
            if (d2 !== null) {
              for (f2 = 0, l2 = d2.length; f2 < l2; f2++) {
                d2[f2]._DT_CellIndex.row = s2;
              }
            }
          }
          oe(t3.aiDisplayMaster, n2);
          oe(t3.aiDisplay, n2);
          oe(e3[i2], n2, false);
          if (t3._iRecordsDisplay > 0) {
            t3._iRecordsDisplay--;
          }
          wt(t3);
          var h3 = t3.rowIdFn(o2._aData);
          if (h3 !== r) {
            delete t3.aIds[h3];
          }
        });
        this.iterator("table", function(e4) {
          for (var t3 = 0, n2 = e4.aoData.length; t3 < n2; t3++) {
            e4.aoData[t3].idx = t3;
          }
        });
        return this;
      });
      s("rows.add()", function(t3) {
        var n2 = this.iterator("table", function(e3) {
          var n3, r3, i2;
          var a2 = [];
          for (r3 = 0, i2 = t3.length; r3 < i2; r3++) {
            n3 = t3[r3];
            if (n3.nodeName && n3.nodeName.toUpperCase() === "TR") {
              a2.push(Z(e3, n3)[0]);
            } else {
              a2.push(B(e3, n3));
            }
          }
          return a2;
        }, 1);
        var r2 = this.rows(-1);
        r2.pop();
        e2.merge(r2, n2);
        return r2;
      });
      s("row()", function(e3, t3) {
        return Yt(this.rows(e3, t3));
      });
      s("row().data()", function(e3) {
        var t3 = this.context;
        if (e3 === r) {
          return t3.length && this.length ? t3[0].aoData[this[0]]._aData : r;
        }
        var n2 = t3[0].aoData[this[0]];
        n2._aData = e3;
        if (Array.isArray(e3) && n2.nTr && n2.nTr.id) {
          re(t3[0].rowId)(e3, n2.nTr.id);
        }
        se(t3[0], this[0], "data");
        return this;
      });
      s("row().node()", function() {
        var e3 = this.context;
        return e3.length && this.length ? e3[0].aoData[this[0]].nTr || null : null;
      });
      s("row.add()", function(t3) {
        if (t3 instanceof e2 && t3.length) {
          t3 = t3[0];
        }
        var n2 = this.iterator("table", function(e3) {
          if (t3.nodeName && t3.nodeName.toUpperCase() === "TR") {
            return Z(e3, t3)[0];
          }
          return B(e3, t3);
        });
        return this.row(n2[0]);
      });
      e2(n).on("plugin-init.dt", function(t3, n2) {
        var r2 = new o(n2);
        r2.on("stateSaveParams", function(e3, t4, n3) {
          var r3 = t4.rowIdFn;
          var i3 = t4.aoData;
          var a2 = [];
          for (var o2 = 0; o2 < i3.length; o2++) {
            if (i3[o2]._detailsShow) {
              a2.push("#" + r3(i3[o2]._aData));
            }
          }
          n3.childRows = a2;
        });
        var i2 = r2.state.loaded();
        if (i2 && i2.childRows) {
          r2.rows(e2.map(i2.childRows, function(e3) {
            return e3.replace(/:/g, "\\:");
          })).every(function() {
            yt(n2, null, "requestChild", [this]);
          });
        }
      });
      var Nt = function(t3, n2, r2, i2) {
        var a2 = [];
        var o2 = function(n3, r3) {
          if (Array.isArray(n3) || n3 instanceof e2) {
            for (var i3 = 0, s2 = n3.length; i3 < s2; i3++) {
              o2(n3[i3], r3);
            }
            return;
          }
          if (n3.nodeName && n3.nodeName.toLowerCase() === "tr") {
            a2.push(n3);
          } else {
            var u2 = e2("<tr><td></td></tr>").addClass(r3);
            e2("td", u2).addClass(r3).html(n3)[0].colSpan = $(t3);
            a2.push(u2[0]);
          }
        };
        o2(r2, i2);
        if (n2._details) {
          n2._details.detach();
        }
        n2._details = e2(a2);
        if (n2._detailsShow) {
          n2._details.insertAfter(n2.nTr);
        }
      };
      var Rt = i.util.throttle(function(e3) {
        lt(e3[0]);
      }, 500);
      var Ct = function(t3, n2) {
        var i2 = t3.context;
        if (i2.length) {
          var a2 = i2[0].aoData[n2 !== r ? n2 : t3[0]];
          if (a2 && a2._details) {
            a2._details.remove();
            a2._detailsShow = r;
            a2._details = r;
            e2(a2.nTr).removeClass("dt-hasChild");
            Rt(i2);
          }
        }
      };
      var It = function(t3, n2) {
        var r2 = t3.context;
        if (r2.length && t3.length) {
          var i2 = r2[0].aoData[t3[0]];
          if (i2._details) {
            i2._detailsShow = n2;
            if (n2) {
              i2._details.insertAfter(i2.nTr);
              e2(i2.nTr).addClass("dt-hasChild");
            } else {
              i2._details.detach();
              e2(i2.nTr).removeClass("dt-hasChild");
            }
            yt(r2[0], null, "childRow", [n2, t3.row(t3[0])]);
            Pt(r2[0]);
            Rt(r2);
          }
        }
      };
      var Pt = function(e3) {
        var t3 = new o(e3);
        var n2 = ".dt.DT_details";
        var r2 = "draw" + n2;
        var i2 = "column-sizing" + n2;
        var a2 = "destroy" + n2;
        var s2 = e3.aoData;
        t3.off(r2 + " " + i2 + " " + a2);
        if (S(s2, "_details").length > 0) {
          t3.on(r2, function(n3, r3) {
            if (e3 !== r3) {
              return;
            }
            t3.rows({ page: "current" }).eq(0).each(function(e4) {
              var t4 = s2[e4];
              if (t4._detailsShow) {
                t4._details.insertAfter(t4.nTr);
              }
            });
          });
          t3.on(i2, function(t4, n3, r3, i3) {
            if (e3 !== n3) {
              return;
            }
            var a3, o2 = $(n3);
            for (var u2 = 0, f2 = s2.length; u2 < f2; u2++) {
              a3 = s2[u2];
              if (a3._details) {
                a3._details.children("td[colspan]").attr("colspan", o2);
              }
            }
          });
          t3.on(a2, function(n3, r3) {
            if (e3 !== r3) {
              return;
            }
            for (var i3 = 0, a3 = s2.length; i3 < a3; i3++) {
              if (s2[i3]._details) {
                Ct(t3, i3);
              }
            }
          });
        }
      };
      var Lt = "";
      var Wt = Lt + "row().child";
      var jt = Wt + "()";
      s(jt, function(e3, t3) {
        var n2 = this.context;
        if (e3 === r) {
          return n2.length && this.length ? n2[0].aoData[this[0]]._details : r;
        } else if (e3 === true) {
          this.child.show();
        } else if (e3 === false) {
          Ct(this);
        } else if (n2.length && this.length) {
          Nt(n2[0], n2[0].aoData[this[0]], e3, t3);
        }
        return this;
      });
      s([Wt + ".show()", jt + ".show()"], function(e3) {
        It(this, true);
        return this;
      });
      s([Wt + ".hide()", jt + ".hide()"], function() {
        It(this, false);
        return this;
      });
      s([Wt + ".remove()", jt + ".remove()"], function() {
        Ct(this);
        return this;
      });
      s(Wt + ".isShown()", function() {
        var e3 = this.context;
        if (e3.length && this.length) {
          return e3[0].aoData[this[0]]._detailsShow || false;
        }
        return false;
      });
      var Ht = /^([^:]+):(name|visIdx|visible)$/;
      var Ut = function(e3, t3, n2, r2, i2) {
        var a2 = [];
        for (var o2 = 0, s2 = i2.length; o2 < s2; o2++) {
          a2.push(X(e3, i2[o2], t3));
        }
        return a2;
      };
      var $t = function(t3, n2, r2) {
        var i2 = t3.aoColumns, a2 = S(i2, "sName"), o2 = S(i2, "nTh");
        var s2 = function(n3) {
          var s3 = p(n3);
          if (n3 === "") {
            return k(i2.length);
          }
          if (s3 !== null) {
            return [s3 >= 0 ? s3 : i2.length + s3];
          }
          if (typeof n3 === "function") {
            var u2 = At(t3, r2);
            return e2.map(i2, function(e3, r3) {
              return n3(r3, Ut(t3, r3, 0, 0, u2), o2[r3]) ? r3 : null;
            });
          }
          var f2 = typeof n3 === "string" ? n3.match(Ht) : "";
          if (f2) {
            switch (f2[2]) {
              case "visIdx":
              case "visible":
                var l2 = parseInt(f2[1], 10);
                if (l2 < 0) {
                  var c2 = e2.map(i2, function(e3, t4) {
                    return e3.bVisible ? t4 : null;
                  });
                  return [c2[c2.length + l2]];
                }
                return [H(t3, l2)];
              case "name":
                return e2.map(a2, function(e3, t4) {
                  return e3 === f2[1] ? t4 : null;
                });
              default:
                return [];
            }
          }
          if (n3.nodeName && n3._DT_CellIndex) {
            return [n3._DT_CellIndex.column];
          }
          var d2 = e2(o2).filter(n3).map(function() {
            return e2.inArray(this, o2);
          }).toArray();
          if (d2.length || !n3.nodeName) {
            return d2;
          }
          var h3 = e2(n3).closest("*[data-dt-column]");
          return h3.length ? [h3.data("dt-column")] : [];
        };
        return Et("column", n2, s2, t3, r2);
      };
      var Gt = function(t3, n2, i2) {
        var a2 = t3.aoColumns, o2 = a2[n2], s2 = t3.aoData, u2, f2, l2, c2;
        if (i2 === r) {
          return o2.bVisible;
        }
        if (o2.bVisible === i2) {
          return;
        }
        if (i2) {
          var d2 = e2.inArray(true, S(a2, "bVisible"), n2 + 1);
          for (f2 = 0, l2 = s2.length; f2 < l2; f2++) {
            c2 = s2[f2].nTr;
            u2 = s2[f2].anCells;
            if (c2) {
              c2.insertBefore(u2[n2], u2[d2] || null);
            }
          }
        } else {
          e2(S(t3.aoData, "anCells", n2)).detach();
        }
        o2.bVisible = i2;
      };
      s("columns()", function(t3, n2) {
        if (t3 === r) {
          t3 = "";
        } else if (e2.isPlainObject(t3)) {
          n2 = t3;
          t3 = "";
        }
        n2 = Ft(n2);
        var i2 = this.iterator("table", function(e3) {
          return $t(e3, t3, n2);
        }, 1);
        i2.selector.cols = t3;
        i2.selector.opts = n2;
        return i2;
      });
      u("columns().header()", "column().header()", function(e3, t3) {
        return this.iterator("column", function(e4, t4) {
          return e4.aoColumns[t4].nTh;
        }, 1);
      });
      u("columns().footer()", "column().footer()", function(e3, t3) {
        return this.iterator("column", function(e4, t4) {
          return e4.aoColumns[t4].nTf;
        }, 1);
      });
      u("columns().data()", "column().data()", function() {
        return this.iterator("column-rows", Ut, 1);
      });
      u("columns().dataSrc()", "column().dataSrc()", function() {
        return this.iterator("column", function(e3, t3) {
          return e3.aoColumns[t3].mData;
        }, 1);
      });
      u("columns().cache()", "column().cache()", function(e3) {
        return this.iterator("column-rows", function(t3, n2, r2, i2, a2) {
          return D(t3.aoData, a2, e3 === "search" ? "_aFilterData" : "_aSortData", n2);
        }, 1);
      });
      u("columns().nodes()", "column().nodes()", function() {
        return this.iterator("column-rows", function(e3, t3, n2, r2, i2) {
          return D(e3.aoData, i2, "anCells", t3);
        }, 1);
      });
      u("columns().visible()", "column().visible()", function(t3, n2) {
        var i2 = this;
        var a2 = this.iterator("column", function(e3, n3) {
          if (t3 === r) {
            return e3.aoColumns[n3].bVisible;
          }
          Gt(e3, n3, t3);
        });
        if (t3 !== r) {
          this.iterator("table", function(a3) {
            de(a3, a3.aoHeader);
            de(a3, a3.aoFooter);
            if (!a3.aiDisplay.length) {
              e2(a3.nTBody).find("td[colspan]").attr("colspan", $(a3));
            }
            lt(a3);
            i2.iterator("column", function(e3, r2) {
              yt(e3, null, "column-visibility", [e3, r2, t3, n2]);
            });
            if (n2 === r || n2) {
              i2.columns.adjust();
            }
          });
        }
        return a2;
      });
      u("columns().indexes()", "column().index()", function(e3) {
        return this.iterator("column", function(t3, n2) {
          return e3 === "visible" ? U(t3, n2) : n2;
        }, 1);
      });
      s("columns.adjust()", function() {
        return this.iterator("table", function(e3) {
          j(e3);
        }, 1);
      });
      s("column.index()", function(e3, t3) {
        if (this.context.length !== 0) {
          var n2 = this.context[0];
          if (e3 === "fromVisible" || e3 === "toData") {
            return H(n2, t3);
          } else if (e3 === "fromData" || e3 === "toVisible") {
            return U(n2, t3);
          }
        }
      });
      s("column()", function(e3, t3) {
        return Yt(this.columns(e3, t3));
      });
      var qt = function(t3, n2, i2) {
        var a2 = t3.aoData;
        var o2 = At(t3, i2);
        var s2 = x(D(a2, o2, "anCells"));
        var u2 = e2(E([], s2));
        var f2;
        var l2 = t3.aoColumns.length;
        var c2, d2, h3, v2, m2, p2;
        var g2 = function(n3) {
          var i3 = typeof n3 === "function";
          if (n3 === null || n3 === r || i3) {
            c2 = [];
            for (d2 = 0, h3 = o2.length; d2 < h3; d2++) {
              f2 = o2[d2];
              for (v2 = 0; v2 < l2; v2++) {
                m2 = { row: f2, column: v2 };
                if (i3) {
                  p2 = a2[f2];
                  if (n3(m2, X(t3, f2, v2), p2.anCells ? p2.anCells[v2] : null)) {
                    c2.push(m2);
                  }
                } else {
                  c2.push(m2);
                }
              }
            }
            return c2;
          }
          if (e2.isPlainObject(n3)) {
            return n3.column !== r && n3.row !== r && e2.inArray(n3.row, o2) !== -1 ? [n3] : [];
          }
          var s3 = u2.filter(n3).map(function(e3, t4) {
            return { row: t4._DT_CellIndex.row, column: t4._DT_CellIndex.column };
          }).toArray();
          if (s3.length || !n3.nodeName) {
            return s3;
          }
          p2 = e2(n3).closest("*[data-dt-row]");
          return p2.length ? [{ row: p2.data("dt-row"), column: p2.data("dt-column") }] : [];
        };
        return Et("cell", n2, g2, t3, i2);
      };
      s("cells()", function(t3, n2, i2) {
        if (e2.isPlainObject(t3)) {
          if (t3.row === r) {
            i2 = t3;
            t3 = null;
          } else {
            i2 = n2;
            n2 = null;
          }
        }
        if (e2.isPlainObject(n2)) {
          i2 = n2;
          n2 = null;
        }
        if (n2 === null || n2 === r) {
          return this.iterator("table", function(e3) {
            return qt(e3, t3, Ft(i2));
          });
        }
        var a2 = i2 ? { page: i2.page, order: i2.order, search: i2.search } : {};
        var o2 = this.columns(n2, a2);
        var s2 = this.rows(t3, a2);
        var u2, f2, l2, c2;
        var d2 = this.iterator("table", function(e3, t4) {
          var n3 = [];
          for (u2 = 0, f2 = s2[t4].length; u2 < f2; u2++) {
            for (l2 = 0, c2 = o2[t4].length; l2 < c2; l2++) {
              n3.push({ row: s2[t4][u2], column: o2[t4][l2] });
            }
          }
          return n3;
        }, 1);
        var h3 = i2 && i2.selected ? this.cells(d2, i2) : d2;
        e2.extend(h3.selector, { cols: n2, rows: t3, opts: i2 });
        return h3;
      });
      u("cells().nodes()", "cell().node()", function() {
        return this.iterator("cell", function(e3, t3, n2) {
          var i2 = e3.aoData[t3];
          return i2 && i2.anCells ? i2.anCells[n2] : r;
        }, 1);
      });
      s("cells().data()", function() {
        return this.iterator("cell", function(e3, t3, n2) {
          return X(e3, t3, n2);
        }, 1);
      });
      u("cells().cache()", "cell().cache()", function(e3) {
        e3 = e3 === "search" ? "_aFilterData" : "_aSortData";
        return this.iterator("cell", function(t3, n2, r2) {
          return t3.aoData[n2][e3][r2];
        }, 1);
      });
      u("cells().render()", "cell().render()", function(e3) {
        return this.iterator("cell", function(t3, n2, r2) {
          return X(t3, n2, r2, e3);
        }, 1);
      });
      u("cells().indexes()", "cell().index()", function() {
        return this.iterator("cell", function(e3, t3, n2) {
          return { row: t3, column: n2, columnVisible: U(e3, n2) };
        }, 1);
      });
      u("cells().invalidate()", "cell().invalidate()", function(e3) {
        return this.iterator("cell", function(t3, n2, r2) {
          se(t3, n2, e3, r2);
        });
      });
      s("cell()", function(e3, t3, n2) {
        return Yt(this.cells(e3, t3, n2));
      });
      s("cell().data()", function(e3) {
        var t3 = this.context;
        var n2 = this[0];
        if (e3 === r) {
          return t3.length && n2.length ? X(t3[0], n2[0].row, n2[0].column) : r;
        }
        Q(t3[0], n2[0].row, n2[0].column, e3);
        se(t3[0], n2[0].row, "data", n2[0].column);
        return this;
      });
      s("order()", function(e3, t3) {
        var n2 = this.context;
        if (e3 === r) {
          return n2.length !== 0 ? n2[0].aaSorting : r;
        }
        if (typeof e3 === "number") {
          e3 = [[e3, t3]];
        } else if (e3.length && !Array.isArray(e3[0])) {
          e3 = Array.prototype.slice.call(arguments);
        }
        return this.iterator("table", function(t4) {
          t4.aaSorting = e3.slice();
        });
      });
      s("order.listener()", function(e3, t3, n2) {
        return this.iterator("table", function(r2) {
          st(r2, e3, t3, n2);
        });
      });
      s("order.fixed()", function(t3) {
        if (!t3) {
          var n2 = this.context;
          var i2 = n2.length ? n2[0].aaSortingFixed : r;
          return Array.isArray(i2) ? { pre: i2 } : i2;
        }
        return this.iterator("table", function(n3) {
          n3.aaSortingFixed = e2.extend(true, {}, t3);
        });
      });
      s(["columns().order()", "column().order()"], function(t3) {
        var n2 = this;
        return this.iterator("table", function(r2, i2) {
          var a2 = [];
          e2.each(n2[i2], function(e3, n3) {
            a2.push([n3, t3]);
          });
          r2.aaSorting = a2;
        });
      });
      s("search()", function(t3, n2, i2, a2) {
        var o2 = this.context;
        if (t3 === r) {
          return o2.length !== 0 ? o2[0].oPreviousSearch.sSearch : r;
        }
        return this.iterator("table", function(r2) {
          if (!r2.oFeatures.bFilter) {
            return;
          }
          _e(r2, e2.extend({}, r2.oPreviousSearch, { sSearch: t3 + "", bRegex: n2 === null ? false : n2, bSmart: i2 === null ? true : i2, bCaseInsensitive: a2 === null ? true : a2 }), 1);
        });
      });
      u("columns().search()", "column().search()", function(t3, n2, i2, a2) {
        return this.iterator("column", function(o2, s2) {
          var u2 = o2.aoPreSearchCols;
          if (t3 === r) {
            return u2[s2].sSearch;
          }
          if (!o2.oFeatures.bFilter) {
            return;
          }
          e2.extend(u2[s2], { sSearch: t3 + "", bRegex: n2 === null ? false : n2, bSmart: i2 === null ? true : i2, bCaseInsensitive: a2 === null ? true : a2 });
          _e(o2, o2.oPreviousSearch, 1);
        });
      });
      s("state()", function() {
        return this.context.length ? this.context[0].oSavedState : null;
      });
      s("state.clear()", function() {
        return this.iterator("table", function(e3) {
          e3.fnStateSaveCallback.call(e3.oInstance, e3, {});
        });
      });
      s("state.loaded()", function() {
        return this.context.length ? this.context[0].oLoadedState : null;
      });
      s("state.save()", function() {
        return this.iterator("table", function(e3) {
          lt(e3);
        });
      });
      i.versionCheck = i.fnVersionCheck = function(e3) {
        var t3 = i.version.split(".");
        var n2 = e3.split(".");
        var r2, a2;
        for (var o2 = 0, s2 = n2.length; o2 < s2; o2++) {
          r2 = parseInt(t3[o2], 10) || 0;
          a2 = parseInt(n2[o2], 10) || 0;
          if (r2 === a2) {
            continue;
          }
          return r2 > a2;
        }
        return true;
      };
      i.isDataTable = i.fnIsDataTable = function(t3) {
        var n2 = e2(t3).get(0);
        var r2 = false;
        if (t3 instanceof i.Api) {
          return true;
        }
        e2.each(i.settings, function(t4, i2) {
          var a2 = i2.nScrollHead ? e2("table", i2.nScrollHead)[0] : null;
          var o2 = i2.nScrollFoot ? e2("table", i2.nScrollFoot)[0] : null;
          if (i2.nTable === n2 || a2 === n2 || o2 === n2) {
            r2 = true;
          }
        });
        return r2;
      };
      i.tables = i.fnTables = function(t3) {
        var n2 = false;
        if (e2.isPlainObject(t3)) {
          n2 = t3.api;
          t3 = t3.visible;
        }
        var r2 = e2.map(i.settings, function(n3) {
          if (!t3 || t3 && e2(n3.nTable).is(":visible")) {
            return n3.nTable;
          }
        });
        return n2 ? new o(r2) : r2;
      };
      i.camelToHungarian = A;
      s("$()", function(t3, n2) {
        var r2 = this.rows(n2).nodes(), i2 = e2(r2);
        return e2([].concat(i2.filter(t3).toArray(), i2.find(t3).toArray()));
      });
      e2.each(["on", "one", "off"], function(t3, n2) {
        s(n2 + "()", function() {
          var t4 = Array.prototype.slice.call(arguments);
          t4[0] = e2.map(t4[0].split(/\s/), function(e3) {
            return !e3.match(/\.dt\b/) ? e3 + ".dt" : e3;
          }).join(" ");
          var r2 = e2(this.tables().nodes());
          r2[n2].apply(r2, t4);
          return this;
        });
      });
      s("clear()", function() {
        return this.iterator("table", function(e3) {
          ae(e3);
        });
      });
      s("settings()", function() {
        return new o(this.context, this.context);
      });
      s("init()", function() {
        var e3 = this.context;
        return e3.length ? e3[0].oInit : null;
      });
      s("data()", function() {
        return this.iterator("table", function(e3) {
          return S(e3.aoData, "_aData");
        }).flatten();
      });
      s("destroy()", function(n2) {
        n2 = n2 || false;
        return this.iterator("table", function(r2) {
          var a2 = r2.oClasses;
          var s2 = r2.nTable;
          var u2 = r2.nTBody;
          var f2 = r2.nTHead;
          var l2 = r2.nTFoot;
          var c2 = e2(s2);
          var d2 = e2(u2);
          var h3 = e2(r2.nTableWrapper);
          var v2 = e2.map(r2.aoData, function(e3) {
            return e3.nTr;
          });
          var m2;
          r2.bDestroying = true;
          yt(r2, "aoDestroyCallback", "destroy", [r2]);
          if (!n2) {
            new o(r2).columns().visible(true);
          }
          h3.off(".DT").find(":not(tbody *)").off(".DT");
          e2(t2).off(".DT-" + r2.sInstance);
          if (s2 != f2.parentNode) {
            c2.children("thead").detach();
            c2.append(f2);
          }
          if (l2 && s2 != l2.parentNode) {
            c2.children("tfoot").detach();
            c2.append(l2);
          }
          r2.aaSorting = [];
          r2.aaSortingFixed = [];
          ut(r2);
          e2(v2).removeClass(r2.asStripeClasses.join(" "));
          e2("th, td", f2).removeClass(a2.sSortable + " " + a2.sSortableAsc + " " + a2.sSortableDesc + " " + a2.sSortableNone);
          d2.children().detach();
          d2.append(v2);
          var p2 = r2.nTableWrapper.parentNode;
          var g2 = n2 ? "remove" : "detach";
          c2[g2]();
          h3[g2]();
          if (!n2 && p2) {
            p2.insertBefore(s2, r2.nTableReinsertBefore);
            c2.css("width", r2.sDestroyWidth).removeClass(a2.sTable);
            m2 = r2.asDestroyStripes.length;
            if (m2) {
              d2.children().each(function(t3) {
                e2(this).addClass(r2.asDestroyStripes[t3 % m2]);
              });
            }
          }
          var b2 = e2.inArray(r2, i.settings);
          if (b2 !== -1) {
            i.settings.splice(b2, 1);
          }
        });
      });
      e2.each(["column", "row", "cell"], function(e3, t3) {
        s(t3 + "s().every()", function(e4) {
          var n2 = this.selector.opts;
          var i2 = this;
          return this.iterator(t3, function(a2, o2, s2, u2, f2) {
            e4.call(i2[t3](o2, t3 === "cell" ? s2 : n2, t3 === "cell" ? n2 : r), o2, s2, u2, f2);
          });
        });
      });
      s("i18n()", function(t3, n2, i2) {
        var a2 = this.context[0];
        var o2 = ne(t3)(a2.oLanguage);
        if (o2 === r) {
          o2 = n2;
        }
        if (i2 !== r && e2.isPlainObject(o2)) {
          o2 = o2[i2] !== r ? o2[i2] : o2._;
        }
        return o2.replace("%d", i2);
      });
      i.version = "1.12.1";
      i.settings = [];
      i.models = {};
      i.models.oSearch = { bCaseInsensitive: true, sSearch: "", bRegex: false, bSmart: true, return: false };
      i.models.oRow = { nTr: null, anCells: null, _aData: [], _aSortData: null, _aFilterData: null, _sFilterRow: null, _sRowStripe: "", src: null, idx: -1 };
      i.models.oColumn = { idx: null, aDataSort: null, asSorting: null, bSearchable: null, bSortable: null, bVisible: null, _sManualType: null, _bAttrSrc: false, fnCreatedCell: null, fnGetData: null, fnSetData: null, mData: null, mRender: null, nTh: null, nTf: null, sClass: null, sContentPadding: null, sDefaultContent: null, sName: null, sSortDataType: "std", sSortingClass: null, sSortingClassJUI: null, sTitle: null, sType: null, sWidth: null, sWidthOrig: null };
      i.defaults = { aaData: null, aaSorting: [[0, "asc"]], aaSortingFixed: [], ajax: null, aLengthMenu: [10, 25, 50, 100], aoColumns: null, aoColumnDefs: null, aoSearchCols: [], asStripeClasses: null, bAutoWidth: true, bDeferRender: false, bDestroy: false, bFilter: true, bInfo: true, bLengthChange: true, bPaginate: true, bProcessing: false, bRetrieve: false, bScrollCollapse: false, bServerSide: false, bSort: true, bSortMulti: true, bSortCellsTop: false, bSortClasses: true, bStateSave: false, fnCreatedRow: null, fnDrawCallback: null, fnFooterCallback: null, fnFormatNumber: function(e3) {
        return e3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands);
      }, fnHeaderCallback: null, fnInfoCallback: null, fnInitComplete: null, fnPreDrawCallback: null, fnRowCallback: null, fnServerData: null, fnServerParams: null, fnStateLoadCallback: function(e3) {
        try {
          return JSON.parse((e3.iStateDuration === -1 ? sessionStorage : localStorage).getItem("DataTables_" + e3.sInstance + "_" + location.pathname));
        } catch (e4) {
          return {};
        }
      }, fnStateLoadParams: null, fnStateLoaded: null, fnStateSaveCallback: function(e3, t3) {
        try {
          (e3.iStateDuration === -1 ? sessionStorage : localStorage).setItem("DataTables_" + e3.sInstance + "_" + location.pathname, JSON.stringify(t3));
        } catch (e4) {
        }
      }, fnStateSaveParams: null, iStateDuration: 7200, iDeferLoading: null, iDisplayLength: 10, iDisplayStart: 0, iTabIndex: 0, oClasses: {}, oLanguage: { oAria: { sSortAscending: ": activate to sort column ascending", sSortDescending: ": activate to sort column descending" }, oPaginate: { sFirst: "First", sLast: "Last", sNext: "Next", sPrevious: "Previous" }, sEmptyTable: "No data available in table", sInfo: "Showing _START_ to _END_ of _TOTAL_ entries", sInfoEmpty: "Showing 0 to 0 of 0 entries", sInfoFiltered: "(filtered from _MAX_ total entries)", sInfoPostFix: "", sDecimal: "", sThousands: ",", sLengthMenu: "Show _MENU_ entries", sLoadingRecords: "Loading...", sProcessing: "", sSearch: "Search:", sSearchPlaceholder: "", sUrl: "", sZeroRecords: "No matching records found" }, oSearch: e2.extend({}, i.models.oSearch), sAjaxDataProp: "data", sAjaxSource: null, sDom: "lfrtip", searchDelay: null, sPaginationType: "simple_numbers", sScrollX: "", sScrollXInner: "", sScrollY: "", sServerMethod: "GET", renderer: null, rowId: "DT_RowId" };
      Y(i.defaults);
      i.defaults.column = { aDataSort: null, iDataSort: -1, asSorting: ["asc", "desc"], bSearchable: true, bSortable: true, bVisible: true, fnCreatedCell: null, mData: null, mRender: null, sCellType: "td", sClass: "", sContentPadding: "", sDefaultContent: null, sName: "", sSortDataType: "std", sTitle: null, sType: null, sWidth: null };
      Y(i.defaults.column);
      i.models.oSettings = { oFeatures: { bAutoWidth: null, bDeferRender: null, bFilter: null, bInfo: null, bLengthChange: null, bPaginate: null, bProcessing: null, bServerSide: null, bSort: null, bSortMulti: null, bSortClasses: null, bStateSave: null }, oScroll: { bCollapse: null, iBarWidth: 0, sX: null, sXInner: null, sY: null }, oLanguage: { fnInfoCallback: null }, oBrowser: { bScrollOversize: false, bScrollbarLeft: false, bBounding: false, barWidth: 0 }, ajax: null, aanFeatures: [], aoData: [], aiDisplay: [], aiDisplayMaster: [], aIds: {}, aoColumns: [], aoHeader: [], aoFooter: [], oPreviousSearch: {}, aoPreSearchCols: [], aaSorting: null, aaSortingFixed: [], asStripeClasses: null, asDestroyStripes: [], sDestroyWidth: 0, aoRowCallback: [], aoHeaderCallback: [], aoFooterCallback: [], aoDrawCallback: [], aoRowCreatedCallback: [], aoPreDrawCallback: [], aoInitComplete: [], aoStateSaveParams: [], aoStateLoadParams: [], aoStateLoaded: [], sTableId: "", nTable: null, nTHead: null, nTFoot: null, nTBody: null, nTableWrapper: null, bDeferLoading: false, bInitialised: false, aoOpenRows: [], sDom: null, searchDelay: null, sPaginationType: "two_button", iStateDuration: 0, aoStateSave: [], aoStateLoad: [], oSavedState: null, oLoadedState: null, sAjaxSource: null, sAjaxDataProp: null, jqXHR: null, json: r, oAjaxData: r, fnServerData: null, aoServerParams: [], sServerMethod: null, fnFormatNumber: null, aLengthMenu: null, iDraw: 0, bDrawing: false, iDrawError: -1, _iDisplayLength: 10, _iDisplayStart: 0, _iRecordsTotal: 0, _iRecordsDisplay: 0, oClasses: {}, bFiltered: false, bSorted: false, bSortCellsTop: null, oInit: null, aoDestroyCallback: [], fnRecordsTotal: function() {
        return Dt(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
      }, fnRecordsDisplay: function() {
        return Dt(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
      }, fnDisplayEnd: function() {
        var e3 = this._iDisplayLength, t3 = this._iDisplayStart, n2 = t3 + e3, r2 = this.aiDisplay.length, i2 = this.oFeatures, a2 = i2.bPaginate;
        if (i2.bServerSide) {
          return a2 === false || e3 === -1 ? t3 + r2 : Math.min(t3 + e3, this._iRecordsDisplay);
        } else {
          return !a2 || n2 > r2 || e3 === -1 ? r2 : n2;
        }
      }, oInstance: null, sInstance: null, iTabIndex: 0, nScrollHead: null, nScrollFoot: null, aLastSort: [], oPlugins: {}, rowIdFn: null, rowId: null };
      i.ext = a = { buttons: {}, classes: {}, builder: "-source-", errMode: "alert", feature: [], search: [], selector: { cell: [], column: [], row: [] }, internal: {}, legacy: { ajax: null }, pager: {}, renderer: { pageButton: {}, header: {} }, order: {}, type: { detect: [], search: {}, order: {} }, _unique: 0, fnVersionCheck: i.fnVersionCheck, iApiIndex: 0, oJUIClasses: {}, sVersion: i.version };
      e2.extend(a, { afnFiltering: a.search, aTypes: a.type.detect, ofnSearch: a.type.search, oSort: a.type.order, afnSortData: a.order, aoFeatures: a.feature, oApi: a.internal, oStdClasses: a.classes, oPagination: a.pager });
      e2.extend(i.ext.classes, { sTable: "dataTable", sNoFooter: "no-footer", sPageButton: "paginate_button", sPageButtonActive: "current", sPageButtonDisabled: "disabled", sStripeOdd: "odd", sStripeEven: "even", sRowEmpty: "dataTables_empty", sWrapper: "dataTables_wrapper", sFilter: "dataTables_filter", sInfo: "dataTables_info", sPaging: "dataTables_paginate paging_", sLength: "dataTables_length", sProcessing: "dataTables_processing", sSortAsc: "sorting_asc", sSortDesc: "sorting_desc", sSortable: "sorting", sSortableAsc: "sorting_desc_disabled", sSortableDesc: "sorting_asc_disabled", sSortableNone: "sorting_disabled", sSortColumn: "sorting_", sFilterInput: "", sLengthSelect: "", sScrollWrapper: "dataTables_scroll", sScrollHead: "dataTables_scrollHead", sScrollHeadInner: "dataTables_scrollHeadInner", sScrollBody: "dataTables_scrollBody", sScrollFoot: "dataTables_scrollFoot", sScrollFootInner: "dataTables_scrollFootInner", sHeaderTH: "", sFooterTH: "", sSortJUIAsc: "", sSortJUIDesc: "", sSortJUI: "", sSortJUIAscAllowed: "", sSortJUIDescAllowed: "", sSortJUIWrapper: "", sSortIcon: "", sJUIHeader: "", sJUIFooter: "" });
      var zt = i.ext.pager;
      function Bt(e3, t3) {
        var n2 = [], r2 = zt.numbers_length, i2 = Math.floor(r2 / 2);
        if (t3 <= r2) {
          n2 = k(0, t3);
        } else if (e3 <= i2) {
          n2 = k(0, r2 - 2);
          n2.push("ellipsis");
          n2.push(t3 - 1);
        } else if (e3 >= t3 - 1 - i2) {
          n2 = k(t3 - (r2 - 2), t3);
          n2.splice(0, 0, "ellipsis");
          n2.splice(0, 0, 0);
        } else {
          n2 = k(e3 - i2 + 2, e3 + i2 - 1);
          n2.push("ellipsis");
          n2.push(t3 - 1);
          n2.splice(0, 0, "ellipsis");
          n2.splice(0, 0, 0);
        }
        n2.DT_el = "span";
        return n2;
      }
      e2.extend(zt, { simple: function(e3, t3) {
        return ["previous", "next"];
      }, full: function(e3, t3) {
        return ["first", "previous", "next", "last"];
      }, numbers: function(e3, t3) {
        return [Bt(e3, t3)];
      }, simple_numbers: function(e3, t3) {
        return ["previous", Bt(e3, t3), "next"];
      }, full_numbers: function(e3, t3) {
        return ["first", "previous", Bt(e3, t3), "next", "last"];
      }, first_last_numbers: function(e3, t3) {
        return ["first", Bt(e3, t3), "last"];
      }, _numbers: Bt, numbers_length: 7 });
      e2.extend(true, i.ext.renderer, { pageButton: { _: function(t3, i2, a2, o2, s2, u2) {
        var f2 = t3.oClasses;
        var l2 = t3.oLanguage.oPaginate;
        var c2 = t3.oLanguage.oAria.paginate || {};
        var d2, h3, v2 = 0;
        var m2 = function(n2, r2) {
          var i3, o3, p3, g2, b2;
          var y2 = f2.sPageButtonDisabled;
          var w2 = function(e3) {
            Ge(t3, e3.data.action, true);
          };
          for (i3 = 0, o3 = r2.length; i3 < o3; i3++) {
            g2 = r2[i3];
            if (Array.isArray(g2)) {
              var S2 = e2("<" + (g2.DT_el || "div") + "/>").appendTo(n2);
              m2(S2, g2);
            } else {
              d2 = null;
              h3 = g2;
              b2 = t3.iTabIndex;
              switch (g2) {
                case "ellipsis":
                  n2.append('<span class="ellipsis">&#x2026;</span>');
                  break;
                case "first":
                  d2 = l2.sFirst;
                  if (s2 === 0) {
                    b2 = -1;
                    h3 += " " + y2;
                  }
                  break;
                case "previous":
                  d2 = l2.sPrevious;
                  if (s2 === 0) {
                    b2 = -1;
                    h3 += " " + y2;
                  }
                  break;
                case "next":
                  d2 = l2.sNext;
                  if (u2 === 0 || s2 === u2 - 1) {
                    b2 = -1;
                    h3 += " " + y2;
                  }
                  break;
                case "last":
                  d2 = l2.sLast;
                  if (u2 === 0 || s2 === u2 - 1) {
                    b2 = -1;
                    h3 += " " + y2;
                  }
                  break;
                default:
                  d2 = t3.fnFormatNumber(g2 + 1);
                  h3 = s2 === g2 ? f2.sPageButtonActive : "";
                  break;
              }
              if (d2 !== null) {
                p3 = e2("<a>", { class: f2.sPageButton + " " + h3, "aria-controls": t3.sTableId, "aria-label": c2[g2], "data-dt-idx": v2, tabindex: b2, id: a2 === 0 && typeof g2 === "string" ? t3.sTableId + "_" + g2 : null }).html(d2).appendTo(n2);
                gt(p3, { action: g2 }, w2);
                v2++;
              }
            }
          }
        };
        var p2;
        try {
          p2 = e2(i2).find(n.activeElement).data("dt-idx");
        } catch (e3) {
        }
        m2(e2(i2).empty(), o2);
        if (p2 !== r) {
          e2(i2).find("[data-dt-idx=" + p2 + "]").trigger("focus");
        }
      } } });
      e2.extend(i.ext.type.detect, [function(e3, t3) {
        var n2 = t3.oLanguage.sDecimal;
        return b(e3, n2) ? "num" + n2 : null;
      }, function(e3, t3) {
        if (e3 && !(e3 instanceof Date) && !d.test(e3)) {
          return null;
        }
        var n2 = Date.parse(e3);
        return n2 !== null && !isNaN(n2) || m(e3) ? "date" : null;
      }, function(e3, t3) {
        var n2 = t3.oLanguage.sDecimal;
        return b(e3, n2, true) ? "num-fmt" + n2 : null;
      }, function(e3, t3) {
        var n2 = t3.oLanguage.sDecimal;
        return w(e3, n2) ? "html-num" + n2 : null;
      }, function(e3, t3) {
        var n2 = t3.oLanguage.sDecimal;
        return w(e3, n2, true) ? "html-num-fmt" + n2 : null;
      }, function(e3, t3) {
        return m(e3) || typeof e3 === "string" && e3.indexOf("<") !== -1 ? "html" : null;
      }]);
      e2.extend(i.ext.type.search, { html: function(e3) {
        return m(e3) ? e3 : typeof e3 === "string" ? e3.replace(l, " ").replace(c, "") : "";
      }, string: function(e3) {
        return m(e3) ? e3 : typeof e3 === "string" ? e3.replace(l, " ") : e3;
      } });
      var Zt = function(e3, t3, n2, r2) {
        if (e3 !== 0 && (!e3 || e3 === "-")) {
          return -Infinity;
        }
        if (t3) {
          e3 = g(e3, t3);
        }
        if (e3.replace) {
          if (n2) {
            e3 = e3.replace(n2, "");
          }
          if (r2) {
            e3 = e3.replace(r2, "");
          }
        }
        return e3 * 1;
      };
      function Jt(t3) {
        e2.each({ num: function(e3) {
          return Zt(e3, t3);
        }, "num-fmt": function(e3) {
          return Zt(e3, t3, v);
        }, "html-num": function(e3) {
          return Zt(e3, t3, c);
        }, "html-num-fmt": function(e3) {
          return Zt(e3, t3, c, v);
        } }, function(e3, n2) {
          a.type.order[e3 + t3 + "-pre"] = n2;
          if (e3.match(/^html\-/)) {
            a.type.search[e3 + t3] = a.type.search.html;
          }
        });
      }
      e2.extend(a.type.order, { "date-pre": function(e3) {
        var t3 = Date.parse(e3);
        return isNaN(t3) ? -Infinity : t3;
      }, "html-pre": function(e3) {
        return m(e3) ? "" : e3.replace ? e3.replace(/<.*?>/g, "").toLowerCase() : e3 + "";
      }, "string-pre": function(e3) {
        return m(e3) ? "" : typeof e3 === "string" ? e3.toLowerCase() : !e3.toString ? "" : e3.toString();
      }, "string-asc": function(e3, t3) {
        return e3 < t3 ? -1 : e3 > t3 ? 1 : 0;
      }, "string-desc": function(e3, t3) {
        return e3 < t3 ? 1 : e3 > t3 ? -1 : 0;
      } });
      Jt("");
      e2.extend(true, i.ext.renderer, { header: { _: function(t3, n2, r2, i2) {
        e2(t3.nTable).on("order.dt.DT", function(e3, a2, o2, s2) {
          if (t3 !== a2) {
            return;
          }
          var u2 = r2.idx;
          n2.removeClass(i2.sSortAsc + " " + i2.sSortDesc).addClass(s2[u2] == "asc" ? i2.sSortAsc : s2[u2] == "desc" ? i2.sSortDesc : r2.sSortingClass);
        });
      }, jqueryui: function(t3, n2, r2, i2) {
        e2("<div/>").addClass(i2.sSortJUIWrapper).append(n2.contents()).append(e2("<span/>").addClass(i2.sSortIcon + " " + r2.sSortingClassJUI)).appendTo(n2);
        e2(t3.nTable).on("order.dt.DT", function(e3, a2, o2, s2) {
          if (t3 !== a2) {
            return;
          }
          var u2 = r2.idx;
          n2.removeClass(i2.sSortAsc + " " + i2.sSortDesc).addClass(s2[u2] == "asc" ? i2.sSortAsc : s2[u2] == "desc" ? i2.sSortDesc : r2.sSortingClass);
          n2.find("span." + i2.sSortIcon).removeClass(i2.sSortJUIAsc + " " + i2.sSortJUIDesc + " " + i2.sSortJUI + " " + i2.sSortJUIAscAllowed + " " + i2.sSortJUIDescAllowed).addClass(s2[u2] == "asc" ? i2.sSortJUIAsc : s2[u2] == "desc" ? i2.sSortJUIDesc : r2.sSortingClassJUI);
        });
      } } });
      var Vt = function(e3) {
        if (Array.isArray(e3)) {
          e3 = e3.join(",");
        }
        return typeof e3 === "string" ? e3.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : e3;
      };
      function Xt(e3, n2, r2, i2, a2) {
        if (t2.moment) {
          return e3[n2](a2);
        } else if (t2.luxon) {
          return e3[r2](a2);
        }
        return i2 ? e3[i2](a2) : e3;
      }
      var Qt = false;
      function Kt(e3, n2, r2) {
        var i2;
        if (t2.moment) {
          i2 = t2.moment.utc(e3, n2, r2, true);
          if (!i2.isValid()) {
            return null;
          }
        } else if (t2.luxon) {
          i2 = n2 ? t2.luxon.DateTime.fromFormat(e3, n2) : t2.luxon.DateTime.fromISO(e3);
          if (!i2.isValid) {
            return null;
          }
          i2.setLocale(r2);
        } else if (!n2) {
          i2 = new Date(e3);
        } else {
          if (!Qt) {
            alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17");
          }
          Qt = true;
        }
        return i2;
      }
      function en(e3) {
        return function(t3, n2, a2, o2) {
          if (arguments.length === 0) {
            a2 = "en";
            n2 = null;
            t3 = null;
          } else if (arguments.length === 1) {
            a2 = "en";
            n2 = t3;
            t3 = null;
          } else if (arguments.length === 2) {
            a2 = n2;
            n2 = t3;
            t3 = null;
          }
          var s2 = "datetime-" + n2;
          if (!i.ext.type.order[s2]) {
            i.ext.type.detect.unshift(function(e4) {
              return e4 === s2 ? s2 : false;
            });
            i.ext.type.order[s2 + "-asc"] = function(e4, t4) {
              var n3 = e4.valueOf();
              var r2 = t4.valueOf();
              return n3 === r2 ? 0 : n3 < r2 ? -1 : 1;
            };
            i.ext.type.order[s2 + "-desc"] = function(e4, t4) {
              var n3 = e4.valueOf();
              var r2 = t4.valueOf();
              return n3 === r2 ? 0 : n3 > r2 ? -1 : 1;
            };
          }
          return function(i2, u2) {
            if (i2 === null || i2 === r) {
              if (o2 === "--now") {
                var f2 = /* @__PURE__ */ new Date();
                i2 = new Date(Date.UTC(f2.getFullYear(), f2.getMonth(), f2.getDate(), f2.getHours(), f2.getMinutes(), f2.getSeconds()));
              } else {
                i2 = "";
              }
            }
            if (u2 === "type") {
              return s2;
            }
            if (i2 === "") {
              return u2 !== "sort" ? "" : Kt("0000-01-01 00:00:00", null, a2);
            }
            if (n2 !== null && t3 === n2 && u2 !== "sort" && u2 !== "type" && !(i2 instanceof Date)) {
              return i2;
            }
            var l2 = Kt(i2, t3, a2);
            if (l2 === null) {
              return i2;
            }
            if (u2 === "sort") {
              return l2;
            }
            var c2 = n2 === null ? Xt(l2, "toDate", "toJSDate", "")[e3]() : Xt(l2, "format", "toFormat", "toISOString", n2);
            return u2 === "display" ? Vt(c2) : c2;
          };
        };
      }
      var tn = ",";
      var nn = ".";
      if (Intl) {
        try {
          var rn = new Intl.NumberFormat().formatToParts(100000.1);
          for (var an = 0; an < rn.length; an++) {
            if (rn[an].type === "group") {
              tn = rn[an].value;
            } else if (rn[an].type === "decimal") {
              nn = rn[an].value;
            }
          }
        } catch (e3) {
        }
      }
      i.datetime = function(e3, t3) {
        var n2 = "datetime-detect-" + e3;
        if (!t3) {
          t3 = "en";
        }
        if (!i.ext.type.order[n2]) {
          i.ext.type.detect.unshift(function(r2) {
            var i2 = Kt(r2, e3, t3);
            return r2 === "" || i2 ? n2 : false;
          });
          i.ext.type.order[n2 + "-pre"] = function(n3) {
            return Kt(n3, e3, t3) || 0;
          };
        }
      };
      i.render = { date: en("toLocaleDateString"), datetime: en("toLocaleString"), time: en("toLocaleTimeString"), number: function(e3, t3, n2, i2, a2) {
        if (e3 === null || e3 === r) {
          e3 = tn;
        }
        if (t3 === null || t3 === r) {
          t3 = nn;
        }
        return { display: function(r2) {
          if (typeof r2 !== "number" && typeof r2 !== "string") {
            return r2;
          }
          if (r2 === "" || r2 === null) {
            return r2;
          }
          var o2 = r2 < 0 ? "-" : "";
          var s2 = parseFloat(r2);
          if (isNaN(s2)) {
            return Vt(r2);
          }
          s2 = s2.toFixed(n2);
          r2 = Math.abs(s2);
          var u2 = parseInt(r2, 10);
          var f2 = n2 ? t3 + (r2 - u2).toFixed(n2).substring(2) : "";
          if (u2 === 0 && parseFloat(f2) === 0) {
            o2 = "";
          }
          return o2 + (i2 || "") + u2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, e3) + f2 + (a2 || "");
        } };
      }, text: function() {
        return { display: Vt, filter: Vt };
      } };
      function on(e3) {
        return function() {
          var t3 = [ht(this[i.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
          return i.ext.internal[e3].apply(this, t3);
        };
      }
      e2.extend(i.ext.internal, { _fnExternApiFunc: on, _fnBuildAjax: ye, _fnAjaxUpdate: we, _fnAjaxParameters: Se, _fnAjaxUpdateDraw: De, _fnAjaxDataSrc: ke, _fnAddColumn: L, _fnColumnOptions: W, _fnAdjustColumnSizing: j, _fnVisibleToColumnIndex: H, _fnColumnIndexToVisible: U, _fnVisbleColumns: $, _fnGetColumns: G, _fnColumnTypes: q, _fnApplyColumnDefs: z, _fnHungarianMap: Y, _fnCamelToHungarian: A, _fnLanguageCompat: O, _fnBrowserDetect: I, _fnAddData: B, _fnAddTr: Z, _fnNodeToDataIndex: J, _fnNodeToColumnIndex: V, _fnGetCellData: X, _fnSetCellData: Q, _fnSplitObjNotation: te, _fnGetObjectDataFn: ne, _fnSetObjectDataFn: re, _fnGetDataMaster: ie, _fnClearTable: ae, _fnDeleteIndex: oe, _fnInvalidate: se, _fnGetRowElements: ue, _fnCreateTr: fe, _fnBuildHead: ce, _fnDrawHead: de, _fnDraw: he, _fnReDraw: ve, _fnAddOptionsHtml: me, _fnDetectHeader: pe, _fnGetUniqueThs: ge, _fnFeatureHtmlFilter: xe, _fnFilterComplete: _e, _fnFilterCustom: Me, _fnFilterColumn: Te, _fnFilter: Ee, _fnFilterCreateSearch: Fe, _fnEscapeRegex: Ye, _fnFilterData: Ne, _fnFeatureHtmlInfo: Ie, _fnUpdateInfo: Pe, _fnInfoMacros: Le, _fnInitialise: We, _fnInitComplete: je, _fnLengthChange: He, _fnFeatureHtmlLength: Ue, _fnFeatureHtmlPaginate: $e, _fnPageChange: Ge, _fnFeatureHtmlProcessing: qe, _fnProcessingDisplay: ze, _fnFeatureHtmlTable: Be, _fnScrollDraw: Ze, _fnApplyToChildren: Je, _fnCalculateColumnWidths: Xe, _fnThrottle: Qe, _fnConvertToWidth: Ke, _fnGetWidestNode: et, _fnGetMaxLenString: tt, _fnStringToCss: nt, _fnSortFlatten: rt, _fnSort: it, _fnSortAria: at, _fnSortListener: ot, _fnSortAttachListener: st, _fnSortingClasses: ut, _fnSortData: ft, _fnSaveState: lt, _fnLoadState: ct, _fnImplementState: dt, _fnSettingsFromNode: ht, _fnLog: vt, _fnMap: mt, _fnBindAction: gt, _fnCallbackReg: bt, _fnCallbackFire: yt, _fnLengthOverflow: wt, _fnRenderer: St, _fnDataSource: Dt, _fnRowAttributes: le, _fnExtend: pt, _fnCalculateEnd: function() {
      } });
      e2.fn.dataTable = i;
      i.$ = e2;
      e2.fn.dataTableSettings = i.settings;
      e2.fn.dataTableExt = i.ext;
      e2.fn.DataTable = function(t3) {
        return e2(this).dataTable(t3).api();
      };
      e2.each(i, function(t3, n2) {
        e2.fn.DataTable[t3] = n2;
      });
      return i;
    });
  })(jquery_dataTables);
  return jquery_dataTables.exports;
}
var jquery_dataTablesExports = requireJquery_dataTables();
var DataTableModule = getDefaultExportFromCjs(jquery_dataTablesExports);
var portugues = { emptyTable: "Nenhum registro encontrado", info: "Mostrando de _START_ até _END_ de _TOTAL_ registros", infoFiltered: "(Filtrados de _MAX_ registros)", infoThousands: ".", loadingRecords: "Carregando...", zeroRecords: "Nenhum registro encontrado", search: "Pesquisar", paginate: { next: "Próximo", previous: "Anterior", first: "Primeiro", last: "Último" }, aria: { sortAscending: ": Ordenar colunas de forma ascendente", sortDescending: ": Ordenar colunas de forma descendente" }, select: { rows: { _: "Selecionado %d linhas", 1: "Selecionado 1 linha" }, cells: { 1: "1 célula selecionada", _: "%d células selecionadas" }, columns: { 1: "1 coluna selecionada", _: "%d colunas selecionadas" } }, buttons: { copySuccess: { 1: "Uma linha copiada com sucesso", _: "%d linhas copiadas com sucesso" }, collection: 'Coleção  <span class="ui-button-icon-primary ui-icon ui-icon-triangle-1-s"></span>', colvis: "Visibilidade da Coluna", colvisRestore: "Restaurar Visibilidade", copy: "Copiar", copyKeys: "Pressione ctrl ou u2318 + C para copiar os dados da tabela para a área de transferência do sistema. Para cancelar, clique nesta mensagem ou pressione Esc..", copyTitle: "Copiar para a Área de Transferência", csv: "CSV", excel: "Excel", pageLength: { "-1": "Mostrar todos os registros", _: "Mostrar %d registros" }, pdf: "PDF", print: "Imprimir", createState: "Criar estado", removeAllStates: "Remover todos os estados", removeState: "Remover", renameState: "Renomear", savedStates: "Estados salvos", stateRestore: "Estado %d", updateState: "Atualizar" }, autoFill: { cancel: "Cancelar", fill: "Preencher todas as células com", fillHorizontal: "Preencher células horizontalmente", fillVertical: "Preencher células verticalmente" }, lengthMenu: "Exibir _MENU_ resultados por página", searchBuilder: { add: "Adicionar Condição", button: { 0: "Construtor de Pesquisa", _: "Construtor de Pesquisa (%d)" }, clearAll: "Limpar Tudo", condition: "Condição", conditions: { date: { after: "Depois", before: "Antes", between: "Entre", empty: "Vazio", equals: "Igual", not: "Não", notBetween: "Não Entre", notEmpty: "Não Vazio" }, number: { between: "Entre", empty: "Vazio", equals: "Igual", gt: "Maior Que", gte: "Maior ou Igual a", lt: "Menor Que", lte: "Menor ou Igual a", not: "Não", notBetween: "Não Entre", notEmpty: "Não Vazio" }, string: { contains: "Contém", empty: "Vazio", endsWith: "Termina Com", equals: "Igual", not: "Não", notEmpty: "Não Vazio", startsWith: "Começa Com", notContains: "Não contém", notStartsWith: "Não começa com", notEndsWith: "Não termina com" }, array: { contains: "Contém", empty: "Vazio", equals: "Igual à", not: "Não", notEmpty: "Não vazio", without: "Não possui" } }, data: "Data", deleteTitle: "Excluir regra de filtragem", logicAnd: "E", logicOr: "Ou", title: { 0: "Construtor de Pesquisa", _: "Construtor de Pesquisa (%d)" }, value: "Valor", leftTitle: "Critérios Externos", rightTitle: "Critérios Internos" }, searchPanes: { clearMessage: "Limpar Tudo", collapse: { 0: "Painéis de Pesquisa", _: "Painéis de Pesquisa (%d)" }, count: "{total}", countFiltered: "{shown} ({total})", emptyPanes: "Nenhum Painel de Pesquisa", loadMessage: "Carregando Painéis de Pesquisa...", title: "Filtros Ativos", showMessage: "Mostrar todos", collapseMessage: "Fechar todos" }, thousands: ".", datetime: { previous: "Anterior", next: "Próximo", hours: "Hora", minutes: "Minuto", seconds: "Segundo", amPm: ["am", "pm"], unknown: "-", months: { 0: "Janeiro", 1: "Fevereiro", 10: "Novembro", 11: "Dezembro", 2: "Março", 3: "Abril", 4: "Maio", 5: "Junho", 6: "Julho", 7: "Agosto", 8: "Setembro", 9: "Outubro" }, weekdays: ["Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinte-feira", "Sexta-feira", "Sábado"] }, editor: { close: "Fechar", create: { button: "Novo", submit: "Criar", title: "Criar novo registro" }, edit: { button: "Editar", submit: "Atualizar", title: "Editar registro" }, error: { system: 'Ocorreu um erro no sistema (<a target="\\" rel="nofollow" href="\\">Mais informações</a>).' }, multi: { noMulti: "Essa entrada pode ser editada individualmente, mas não como parte do grupo", restore: "Desfazer alterações", title: "Multiplos valores", info: "Os itens selecionados contêm valores diferentes para esta entrada. Para editar e definir todos os itens para esta entrada com o mesmo valor, clique ou toque aqui, caso contrário, eles manterão seus valores individuais." }, remove: { button: "Remover", confirm: { _: "Tem certeza que quer deletar %d linhas?", 1: "Tem certeza que quer deletar 1 linha?" }, submit: "Remover", title: "Remover registro" } }, decimal: ",", stateRestore: { creationModal: { button: "Criar", columns: { search: "Busca de colunas", visible: "Visibilidade da coluna" }, name: "Nome:", order: "Ordernar", paging: "Paginação", scroller: "Posição da barra de rolagem", search: "Busca", searchBuilder: "Mecanismo de busca", select: "Selecionar", title: "Criar novo estado", toggleLabel: "Inclui:" }, emptyStates: "Nenhum estado salvo", removeConfirm: "Confirma remover %s?", removeJoiner: "e", removeSubmit: "Remover", removeTitle: "Remover estado", renameButton: "Renomear", renameLabel: "Novo nome para %s:", renameTitle: "Renomear estado", duplicateError: "Já existe um estado com esse nome!", emptyError: "Não pode ser vazio!", removeError: "Falha ao remover estado!" }, infoEmpty: "Mostrando 0 até 0 de 0 registro(s)", processing: "Carregando...", searchPlaceholder: "Buscar registros" };
var dataTables_select = { exports: {} };
var hasRequiredDataTables_select;
function requireDataTables_select() {
  if (hasRequiredDataTables_select) return dataTables_select.exports;
  hasRequiredDataTables_select = 1;
  (function(e, t) {
    (function(t2) {
      {
        e.exports = function(e2, n) {
          if (!e2) {
            e2 = window;
          }
          if (!n || !n.fn.dataTable) {
            n = requireJquery_dataTables()(e2, n).$;
          }
          return t2(n, e2, e2.document);
        };
      }
    })(function(e2, t2, n, r) {
      var i = e2.fn.dataTable;
      i.select = {};
      i.select.version = "1.4.0-dev";
      i.select.init = function(t3) {
        var n2 = t3.settings()[0];
        if (n2._select) {
          return;
        }
        var a2 = t3.state.loaded();
        var o2 = function(e3, n3, i2) {
          if (i2 === null || i2.select === r) {
            return;
          }
          if (t3.rows({ selected: true }).any()) {
            t3.rows().deselect();
          }
          if (i2.select.rows !== r) {
            t3.rows(i2.select.rows).select();
          }
          if (t3.columns({ selected: true }).any()) {
            t3.columns().deselect();
          }
          if (i2.select.columns !== r) {
            t3.columns(i2.select.columns).select();
          }
          if (t3.cells({ selected: true }).any()) {
            t3.cells().deselect();
          }
          if (i2.select.cells !== r) {
            for (var a3 = 0; a3 < i2.select.cells.length; a3++) {
              t3.cell(i2.select.cells[a3].row, i2.select.cells[a3].column).select();
            }
          }
          t3.state.save();
        };
        t3.one("init", function() {
          t3.on("stateSaveParams", function(e3, n3, r2) {
            r2.select = {};
            r2.select.rows = t3.rows({ selected: true }).ids(true).toArray();
            r2.select.columns = t3.columns({ selected: true })[0];
            r2.select.cells = t3.cells({ selected: true })[0].map(function(e4) {
              return { row: t3.row(e4.row).id(true), column: e4.column };
            });
          });
          o2(r, r, a2);
          t3.on("stateLoaded stateLoadParams", o2);
        });
        var s2 = n2.oInit.select;
        var u2 = i.defaults.select;
        var f2 = s2 === r ? u2 : s2;
        var l2 = "row";
        var c2 = "api";
        var d2 = false;
        var h3 = true;
        var v2 = true;
        var m2 = "td, th";
        var p2 = "selected";
        var g2 = false;
        n2._select = {};
        if (f2 === true) {
          c2 = "os";
          g2 = true;
        } else if (typeof f2 === "string") {
          c2 = f2;
          g2 = true;
        } else if (e2.isPlainObject(f2)) {
          if (f2.blurable !== r) {
            d2 = f2.blurable;
          }
          if (f2.toggleable !== r) {
            h3 = f2.toggleable;
          }
          if (f2.info !== r) {
            v2 = f2.info;
          }
          if (f2.items !== r) {
            l2 = f2.items;
          }
          if (f2.style !== r) {
            c2 = f2.style;
            g2 = true;
          } else {
            c2 = "os";
            g2 = true;
          }
          if (f2.selector !== r) {
            m2 = f2.selector;
          }
          if (f2.className !== r) {
            p2 = f2.className;
          }
        }
        t3.select.selector(m2);
        t3.select.items(l2);
        t3.select.style(c2);
        t3.select.blurable(d2);
        t3.select.toggleable(h3);
        t3.select.info(v2);
        n2._select.className = p2;
        e2.fn.dataTable.ext.order["select-checkbox"] = function(t4, n3) {
          return this.api().column(n3, { order: "index" }).nodes().map(function(n4) {
            if (t4._select.items === "row") {
              return e2(n4).parent().hasClass(t4._select.className);
            } else if (t4._select.items === "cell") {
              return e2(n4).hasClass(t4._select.className);
            }
            return false;
          });
        };
        if (!g2 && e2(t3.table().node()).hasClass("selectable")) {
          t3.select.style("os");
        }
      };
      function a(e3, t3, n2) {
        var r2;
        var i2;
        var a2;
        var o2 = function(t4, n3) {
          if (t4 > n3) {
            var r3 = n3;
            n3 = t4;
            t4 = r3;
          }
          var i3 = false;
          return e3.columns(":visible").indexes().filter(function(e4) {
            if (e4 === t4) {
              i3 = true;
            }
            if (e4 === n3) {
              i3 = false;
              return true;
            }
            return i3;
          });
        };
        var s2 = function(t4, n3) {
          var r3 = e3.rows({ search: "applied" }).indexes();
          if (r3.indexOf(t4) > r3.indexOf(n3)) {
            var i3 = n3;
            n3 = t4;
            t4 = i3;
          }
          var a3 = false;
          return r3.filter(function(e4) {
            if (e4 === t4) {
              a3 = true;
            }
            if (e4 === n3) {
              a3 = false;
              return true;
            }
            return a3;
          });
        };
        if (!e3.cells({ selected: true }).any() && !n2) {
          i2 = o2(0, t3.column);
          a2 = s2(0, t3.row);
        } else {
          i2 = o2(n2.column, t3.column);
          a2 = s2(n2.row, t3.row);
        }
        r2 = e3.cells(a2, i2).flatten();
        if (!e3.cells(t3, { selected: true }).any()) {
          e3.cells(r2).select();
        } else {
          e3.cells(r2).deselect();
        }
      }
      function o(t3) {
        var n2 = t3.settings()[0];
        var r2 = n2._select.selector;
        e2(t3.table().container()).off("mousedown.dtSelect", r2).off("mouseup.dtSelect", r2).off("click.dtSelect", r2);
        e2("body").off("click.dtSelect" + v(t3.table().node()));
      }
      function s(n2) {
        var r2 = e2(n2.table().container());
        var i2 = n2.settings()[0];
        var a2 = i2._select.selector;
        var o2;
        r2.on("mousedown.dtSelect", a2, function(e3) {
          if (e3.shiftKey || e3.metaKey || e3.ctrlKey) {
            r2.css("-moz-user-select", "none").one("selectstart.dtSelect", a2, function() {
              return false;
            });
          }
          if (t2.getSelection) {
            o2 = t2.getSelection();
          }
        }).on("mouseup.dtSelect", a2, function() {
          r2.css("-moz-user-select", "");
        }).on("click.dtSelect", a2, function(r3) {
          var i3 = n2.select.items();
          var a3;
          if (o2) {
            var s2 = t2.getSelection();
            if (!s2.anchorNode || e2(s2.anchorNode).closest("table")[0] === n2.table().node()) {
              if (s2 !== o2) {
                return;
              }
            }
          }
          var f2 = n2.settings()[0];
          var l2 = n2.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, ".");
          if (e2(r3.target).closest("div." + l2)[0] != n2.table().container()) {
            return;
          }
          var c2 = n2.cell(e2(r3.target).closest("td, th"));
          if (!c2.any()) {
            return;
          }
          var d2 = e2.Event("user-select.dt");
          u(n2, d2, [i3, c2, r3]);
          if (d2.isDefaultPrevented()) {
            return;
          }
          var v2 = c2.index();
          if (i3 === "row") {
            a3 = v2.row;
            h2(r3, n2, f2, "row", a3);
          } else if (i3 === "column") {
            a3 = c2.index().column;
            h2(r3, n2, f2, "column", a3);
          } else if (i3 === "cell") {
            a3 = c2.index();
            h2(r3, n2, f2, "cell", a3);
          }
          f2._select_lastCell = v2;
        });
        e2("body").on("click.dtSelect" + v(n2.table().node()), function(t3) {
          if (i2._select.blurable) {
            if (e2(t3.target).parents().filter(n2.table().container()).length) {
              return;
            }
            if (e2(t3.target).parents("html").length === 0) {
              return;
            }
            if (e2(t3.target).parents("div.DTE").length) {
              return;
            }
            var r3 = e2.Event("select-blur.dt");
            u(n2, r3, [t3.target, t3]);
            if (r3.isDefaultPrevented()) {
              return;
            }
            d(i2, true);
          }
        });
      }
      function u(t3, n2, r2, i2) {
        if (i2 && !t3.flatten().length) {
          return;
        }
        if (typeof n2 === "string") {
          n2 = n2 + ".dt";
        }
        r2.unshift(t3);
        e2(t3.table().node()).trigger(n2, r2);
      }
      function f(t3) {
        var n2 = t3.settings()[0];
        if (!n2._select.info || !n2.aanFeatures.i) {
          return;
        }
        if (t3.select.style() === "api") {
          return;
        }
        var r2 = t3.rows({ selected: true }).flatten().length;
        var i2 = t3.columns({ selected: true }).flatten().length;
        var a2 = t3.cells({ selected: true }).flatten().length;
        var o2 = function(n3, r3, i3) {
          n3.append(e2('<span class="select-item"/>').append(t3.i18n("select." + r3 + "s", { _: "%d " + r3 + "s selected", 0: "", 1: "1 " + r3 + " selected" }, i3)));
        };
        e2.each(n2.aanFeatures.i, function(t4, n3) {
          n3 = e2(n3);
          var s2 = e2('<span class="select-info"/>');
          o2(s2, "row", r2);
          o2(s2, "column", i2);
          o2(s2, "cell", a2);
          var u2 = n3.children("span.select-info");
          if (u2.length) {
            u2.remove();
          }
          if (s2.text() !== "") {
            n3.append(s2);
          }
        });
      }
      function l(t3) {
        var n2 = new i.Api(t3);
        t3._select_init = true;
        t3.aoRowCreatedCallback.push({ fn: function(n3, r2, i2) {
          var a2, o2;
          var s2 = t3.aoData[i2];
          if (s2._select_selected) {
            e2(n3).addClass(t3._select.className);
          }
          for (a2 = 0, o2 = t3.aoColumns.length; a2 < o2; a2++) {
            if (t3.aoColumns[a2]._select_selected || s2._selected_cells && s2._selected_cells[a2]) {
              e2(s2.anCells[a2]).addClass(t3._select.className);
            }
          }
        }, sName: "select-deferRender" });
        n2.on("preXhr.dt.dtSelect", function(e3, t4) {
          if (t4 !== n2.settings()[0]) {
            return;
          }
          var i2 = n2.rows({ selected: true }).ids(true).filter(function(e4) {
            return e4 !== r;
          });
          var a2 = n2.cells({ selected: true }).eq(0).map(function(e4) {
            var t5 = n2.row(e4.row).id(true);
            return t5 ? { row: t5, column: e4.column } : r;
          }).filter(function(e4) {
            return e4 !== r;
          });
          n2.one("draw.dt.dtSelect", function() {
            n2.rows(i2).select();
            if (a2.any()) {
              a2.each(function(e4) {
                n2.cells(e4.row, e4.column).select();
              });
            }
          });
        });
        n2.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt", function() {
          f(n2);
          n2.state.save();
        });
        n2.on("destroy.dtSelect", function() {
          n2.rows({ selected: true }).deselect();
          o(n2);
          n2.off(".dtSelect");
          e2("body").off(".dtSelect" + v(n2.table().node()));
        });
      }
      function c(t3, n2, r2, i2) {
        var a2 = t3[n2 + "s"]({ search: "applied" }).indexes();
        var o2 = e2.inArray(i2, a2);
        var s2 = e2.inArray(r2, a2);
        if (!t3[n2 + "s"]({ selected: true }).any() && o2 === -1) {
          a2.splice(e2.inArray(r2, a2) + 1, a2.length);
        } else {
          if (o2 > s2) {
            var u2 = s2;
            s2 = o2;
            o2 = u2;
          }
          a2.splice(s2 + 1, a2.length);
          a2.splice(0, o2);
        }
        if (!t3[n2](r2, { selected: true }).any()) {
          t3[n2 + "s"](a2).select();
        } else {
          a2.splice(e2.inArray(r2, a2), 1);
          t3[n2 + "s"](a2).deselect();
        }
      }
      function d(e3, t3) {
        if (t3 || e3._select.style === "single") {
          var n2 = new i.Api(e3);
          n2.rows({ selected: true }).deselect();
          n2.columns({ selected: true }).deselect();
          n2.cells({ selected: true }).deselect();
        }
      }
      function h2(e3, t3, n2, r2, i2) {
        var o2 = t3.select.style();
        var s2 = t3.select.toggleable();
        var u2 = t3[r2](i2, { selected: true }).any();
        if (u2 && !s2) {
          return;
        }
        if (o2 === "os") {
          if (e3.ctrlKey || e3.metaKey) {
            t3[r2](i2).select(!u2);
          } else if (e3.shiftKey) {
            if (r2 === "cell") {
              a(t3, i2, n2._select_lastCell || null);
            } else {
              c(t3, r2, i2, n2._select_lastCell ? n2._select_lastCell[r2] : null);
            }
          } else {
            var f2 = t3[r2 + "s"]({ selected: true });
            if (u2 && f2.flatten().length === 1) {
              t3[r2](i2).deselect();
            } else {
              f2.deselect();
              t3[r2](i2).select();
            }
          }
        } else if (o2 == "multi+shift") {
          if (e3.shiftKey) {
            if (r2 === "cell") {
              a(t3, i2, n2._select_lastCell || null);
            } else {
              c(t3, r2, i2, n2._select_lastCell ? n2._select_lastCell[r2] : null);
            }
          } else {
            t3[r2](i2).select(!u2);
          }
        } else {
          t3[r2](i2).select(!u2);
        }
      }
      function v(e3) {
        return e3.id.replace(/[^a-zA-Z0-9\-\_]/g, "-");
      }
      e2.each([{ type: "row", prop: "aoData" }, { type: "column", prop: "aoColumns" }], function(e3, t3) {
        i.ext.selector[t3.type].push(function(e4, n2, r2) {
          var i2 = n2.selected;
          var a2;
          var o2 = [];
          if (i2 !== true && i2 !== false) {
            return r2;
          }
          for (var s2 = 0, u2 = r2.length; s2 < u2; s2++) {
            a2 = e4[t3.prop][r2[s2]];
            if (i2 === true && a2._select_selected === true || i2 === false && !a2._select_selected) {
              o2.push(r2[s2]);
            }
          }
          return o2;
        });
      });
      i.ext.selector.cell.push(function(e3, t3, n2) {
        var i2 = t3.selected;
        var a2;
        var o2 = [];
        if (i2 === r) {
          return n2;
        }
        for (var s2 = 0, u2 = n2.length; s2 < u2; s2++) {
          a2 = e3.aoData[n2[s2].row];
          if (i2 === true && a2._selected_cells && a2._selected_cells[n2[s2].column] === true || i2 === false && (!a2._selected_cells || !a2._selected_cells[n2[s2].column])) {
            o2.push(n2[s2]);
          }
        }
        return o2;
      });
      var m = i.Api.register;
      var p = i.Api.registerPlural;
      m("select()", function() {
        return this.iterator("table", function(e3) {
          i.select.init(new i.Api(e3));
        });
      });
      m("select.blurable()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.blurable;
        }
        return this.iterator("table", function(t3) {
          t3._select.blurable = e3;
        });
      });
      m("select.toggleable()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.toggleable;
        }
        return this.iterator("table", function(t3) {
          t3._select.toggleable = e3;
        });
      });
      m("select.info()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.info;
        }
        return this.iterator("table", function(t3) {
          t3._select.info = e3;
        });
      });
      m("select.items()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.items;
        }
        return this.iterator("table", function(t3) {
          t3._select.items = e3;
          u(new i.Api(t3), "selectItems", [e3]);
        });
      });
      m("select.style()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.style;
        }
        return this.iterator("table", function(t3) {
          if (!t3._select) {
            i.select.init(new i.Api(t3));
          }
          if (!t3._select_init) {
            l(t3);
          }
          t3._select.style = e3;
          var n2 = new i.Api(t3);
          o(n2);
          if (e3 !== "api") {
            s(n2);
          }
          u(new i.Api(t3), "selectStyle", [e3]);
        });
      });
      m("select.selector()", function(e3) {
        if (e3 === r) {
          return this.context[0]._select.selector;
        }
        return this.iterator("table", function(t3) {
          o(new i.Api(t3));
          t3._select.selector = e3;
          if (t3._select.style !== "api") {
            s(new i.Api(t3));
          }
        });
      });
      p("rows().select()", "row().select()", function(t3) {
        var n2 = this;
        if (t3 === false) {
          return this.deselect();
        }
        this.iterator("row", function(t4, n3) {
          d(t4);
          t4.aoData[n3]._select_selected = true;
          e2(t4.aoData[n3].nTr).addClass(t4._select.className);
        });
        this.iterator("table", function(e3, t4) {
          u(n2, "select", ["row", n2[t4]], true);
        });
        return this;
      });
      m("row().selected()", function() {
        var e3 = this.context[0];
        if (e3 && this.length && e3.aoData[this[0]] && e3.aoData[this[0]]._select_selected) {
          return true;
        }
        return false;
      });
      p("columns().select()", "column().select()", function(t3) {
        var n2 = this;
        if (t3 === false) {
          return this.deselect();
        }
        this.iterator("column", function(t4, n3) {
          d(t4);
          t4.aoColumns[n3]._select_selected = true;
          var r2 = new i.Api(t4).column(n3);
          e2(r2.header()).addClass(t4._select.className);
          e2(r2.footer()).addClass(t4._select.className);
          r2.nodes().to$().addClass(t4._select.className);
        });
        this.iterator("table", function(e3, t4) {
          u(n2, "select", ["column", n2[t4]], true);
        });
        return this;
      });
      m("column().selected()", function() {
        var e3 = this.context[0];
        if (e3 && this.length && e3.aoColumns[this[0]] && e3.aoColumns[this[0]]._select_selected) {
          return true;
        }
        return false;
      });
      p("cells().select()", "cell().select()", function(t3) {
        var n2 = this;
        if (t3 === false) {
          return this.deselect();
        }
        this.iterator("cell", function(t4, n3, i2) {
          d(t4);
          var a2 = t4.aoData[n3];
          if (a2._selected_cells === r) {
            a2._selected_cells = [];
          }
          a2._selected_cells[i2] = true;
          if (a2.anCells) {
            e2(a2.anCells[i2]).addClass(t4._select.className);
          }
        });
        this.iterator("table", function(e3, t4) {
          u(n2, "select", ["cell", n2.cells(n2[t4]).indexes().toArray()], true);
        });
        return this;
      });
      m("cell().selected()", function() {
        var e3 = this.context[0];
        if (e3 && this.length) {
          var t3 = e3.aoData[this[0][0].row];
          if (t3 && t3._selected_cells && t3._selected_cells[this[0][0].column]) {
            return true;
          }
        }
        return false;
      });
      p("rows().deselect()", "row().deselect()", function() {
        var t3 = this;
        this.iterator("row", function(t4, n2) {
          t4.aoData[n2]._select_selected = false;
          t4._select_lastCell = null;
          e2(t4.aoData[n2].nTr).removeClass(t4._select.className);
        });
        this.iterator("table", function(e3, n2) {
          u(t3, "deselect", ["row", t3[n2]], true);
        });
        return this;
      });
      p("columns().deselect()", "column().deselect()", function() {
        var t3 = this;
        this.iterator("column", function(t4, n2) {
          t4.aoColumns[n2]._select_selected = false;
          var r2 = new i.Api(t4);
          var a2 = r2.column(n2);
          e2(a2.header()).removeClass(t4._select.className);
          e2(a2.footer()).removeClass(t4._select.className);
          r2.cells(null, n2).indexes().each(function(n3) {
            var r3 = t4.aoData[n3.row];
            var i2 = r3._selected_cells;
            if (r3.anCells && (!i2 || !i2[n3.column])) {
              e2(r3.anCells[n3.column]).removeClass(t4._select.className);
            }
          });
        });
        this.iterator("table", function(e3, n2) {
          u(t3, "deselect", ["column", t3[n2]], true);
        });
        return this;
      });
      p("cells().deselect()", "cell().deselect()", function() {
        var t3 = this;
        this.iterator("cell", function(t4, n2, i2) {
          var a2 = t4.aoData[n2];
          if (a2._selected_cells !== r) {
            a2._selected_cells[i2] = false;
          }
          if (a2.anCells && !t4.aoColumns[i2]._select_selected) {
            e2(a2.anCells[i2]).removeClass(t4._select.className);
          }
        });
        this.iterator("table", function(e3, n2) {
          u(t3, "deselect", ["cell", t3[n2]], true);
        });
        return this;
      });
      function g(e3, t3) {
        return function(n2) {
          return n2.i18n("buttons." + e3, t3);
        };
      }
      function b(e3) {
        var t3 = e3._eventNamespace;
        return "draw.dt.DT" + t3 + " select.dt.DT" + t3 + " deselect.dt.DT" + t3;
      }
      function y(t3, n2) {
        if (e2.inArray("rows", n2.limitTo) !== -1 && t3.rows({ selected: true }).any()) {
          return true;
        }
        if (e2.inArray("columns", n2.limitTo) !== -1 && t3.columns({ selected: true }).any()) {
          return true;
        }
        if (e2.inArray("cells", n2.limitTo) !== -1 && t3.cells({ selected: true }).any()) {
          return true;
        }
        return false;
      }
      var w = 0;
      e2.extend(i.ext.buttons, { selected: { text: g("selected", "Selected"), className: "buttons-selected", limitTo: ["rows", "columns", "cells"], init: function(e3, t3, n2) {
        var r2 = this;
        n2._eventNamespace = ".select" + w++;
        e3.on(b(n2), function() {
          r2.enable(y(e3, n2));
        });
        this.disable();
      }, destroy: function(e3, t3, n2) {
        e3.off(n2._eventNamespace);
      } }, selectedSingle: { text: g("selectedSingle", "Selected single"), className: "buttons-selected-single", init: function(e3, t3, n2) {
        var r2 = this;
        n2._eventNamespace = ".select" + w++;
        e3.on(b(n2), function() {
          var t4 = e3.rows({ selected: true }).flatten().length + e3.columns({ selected: true }).flatten().length + e3.cells({ selected: true }).flatten().length;
          r2.enable(t4 === 1);
        });
        this.disable();
      }, destroy: function(e3, t3, n2) {
        e3.off(n2._eventNamespace);
      } }, selectAll: { text: g("selectAll", "Select all"), className: "buttons-select-all", action: function() {
        var e3 = this.select.items();
        this[e3 + "s"]().select();
      } }, selectNone: { text: g("selectNone", "Deselect all"), className: "buttons-select-none", action: function() {
        d(this.settings()[0], true);
      }, init: function(e3, t3, n2) {
        var r2 = this;
        n2._eventNamespace = ".select" + w++;
        e3.on(b(n2), function() {
          var t4 = e3.rows({ selected: true }).flatten().length + e3.columns({ selected: true }).flatten().length + e3.cells({ selected: true }).flatten().length;
          r2.enable(t4 > 0);
        });
        this.disable();
      }, destroy: function(e3, t3, n2) {
        e3.off(n2._eventNamespace);
      } } });
      e2.each(["Row", "Column", "Cell"], function(e3, t3) {
        var n2 = t3.toLowerCase();
        i.ext.buttons["select" + t3 + "s"] = { text: g("select" + t3 + "s", "Select " + n2 + "s"), className: "buttons-select-" + n2 + "s", action: function() {
          this.select.items(n2);
        }, init: function(e4) {
          var t4 = this;
          e4.on("selectItems.dt.DT", function(e5, r2, i2) {
            t4.active(i2 === n2);
          });
        } };
      });
      e2(n).on("preInit.dt.dtSelect", function(e3, t3) {
        if (e3.namespace !== "dt") {
          return;
        }
        i.select.init(new i.Api(t3));
      });
      return i.select;
    });
  })(dataTables_select);
  return dataTables_select.exports;
}
var dataTables_selectExports = requireDataTables_select();
var Select = getDefaultExportFromCjs(dataTables_selectExports);
var hookCallback;
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(e) {
  hookCallback = e;
}
function isArray(e) {
  return e instanceof Array || Object.prototype.toString.call(e) === "[object Array]";
}
function isObject(e) {
  return e != null && Object.prototype.toString.call(e) === "[object Object]";
}
function hasOwnProp(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
function isObjectEmpty(e) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(e).length === 0;
  } else {
    var t;
    for (t in e) {
      if (hasOwnProp(e, t)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(e) {
  return e === void 0;
}
function isNumber(e) {
  return typeof e === "number" || Object.prototype.toString.call(e) === "[object Number]";
}
function isDate(e) {
  return e instanceof Date || Object.prototype.toString.call(e) === "[object Date]";
}
function map(e, t) {
  var n = [], r, i = e.length;
  for (r = 0; r < i; ++r) {
    n.push(t(e[r], r));
  }
  return n;
}
function extend(e, t) {
  for (var n in t) {
    if (hasOwnProp(t, n)) {
      e[n] = t[n];
    }
  }
  if (hasOwnProp(t, "toString")) {
    e.toString = t.toString;
  }
  if (hasOwnProp(t, "valueOf")) {
    e.valueOf = t.valueOf;
  }
  return e;
}
function createUTC(e, t, n, r) {
  return createLocalOrUTC(e, t, n, r, true).utc();
}
function defaultParsingFlags() {
  return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidEra: null, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false, parsedDateParts: [], era: null, meridiem: null, rfc2822: false, weekdayMismatch: false };
}
function getParsingFlags(e) {
  if (e._pf == null) {
    e._pf = defaultParsingFlags();
  }
  return e._pf;
}
var some;
if (Array.prototype.some) {
  some = Array.prototype.some;
} else {
  some = function(e) {
    var t = Object(this), n = t.length >>> 0, r;
    for (r = 0; r < n; r++) {
      if (r in t && e.call(this, t[r], r, t)) {
        return true;
      }
    }
    return false;
  };
}
function isValid(e) {
  if (e._isValid == null) {
    var t = getParsingFlags(e), n = some.call(t.parsedDateParts, function(e2) {
      return e2 != null;
    }), r = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && n);
    if (e._strict) {
      r = r && t.charsLeftOver === 0 && t.unusedTokens.length === 0 && t.bigHour === void 0;
    }
    if (Object.isFrozen == null || !Object.isFrozen(e)) {
      e._isValid = r;
    } else {
      return r;
    }
  }
  return e._isValid;
}
function createInvalid(e) {
  var t = createUTC(NaN);
  if (e != null) {
    extend(getParsingFlags(t), e);
  } else {
    getParsingFlags(t).userInvalidated = true;
  }
  return t;
}
var momentProperties = hooks.momentProperties = [];
var updateInProgress = false;
function copyConfig(e, t) {
  var n, r, i, a = momentProperties.length;
  if (!isUndefined(t._isAMomentObject)) {
    e._isAMomentObject = t._isAMomentObject;
  }
  if (!isUndefined(t._i)) {
    e._i = t._i;
  }
  if (!isUndefined(t._f)) {
    e._f = t._f;
  }
  if (!isUndefined(t._l)) {
    e._l = t._l;
  }
  if (!isUndefined(t._strict)) {
    e._strict = t._strict;
  }
  if (!isUndefined(t._tzm)) {
    e._tzm = t._tzm;
  }
  if (!isUndefined(t._isUTC)) {
    e._isUTC = t._isUTC;
  }
  if (!isUndefined(t._offset)) {
    e._offset = t._offset;
  }
  if (!isUndefined(t._pf)) {
    e._pf = getParsingFlags(t);
  }
  if (!isUndefined(t._locale)) {
    e._locale = t._locale;
  }
  if (a > 0) {
    for (n = 0; n < a; n++) {
      r = momentProperties[n];
      i = t[r];
      if (!isUndefined(i)) {
        e[r] = i;
      }
    }
  }
  return e;
}
function Moment(e) {
  copyConfig(this, e);
  this._d = new Date(e._d != null ? e._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = /* @__PURE__ */ new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment(e) {
  return e instanceof Moment || e != null && e._isAMomentObject != null;
}
function warn(e) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + e);
  }
}
function deprecate(e, t) {
  var n = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, e);
    }
    if (n) {
      var r = [], i, a, o, s = arguments.length;
      for (a = 0; a < s; a++) {
        i = "";
        if (typeof arguments[a] === "object") {
          i += "\n[" + a + "] ";
          for (o in arguments[0]) {
            if (hasOwnProp(arguments[0], o)) {
              i += o + ": " + arguments[0][o] + ", ";
            }
          }
          i = i.slice(0, -2);
        } else {
          i = arguments[a];
        }
        r.push(i);
      }
      warn(e + "\nArguments: " + Array.prototype.slice.call(r).join("") + "\n" + new Error().stack);
      n = false;
    }
    return t.apply(this, arguments);
  }, t);
}
var deprecations = {};
function deprecateSimple(e, t) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(e, t);
  }
  if (!deprecations[e]) {
    warn(t);
    deprecations[e] = true;
  }
}
hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;
function isFunction(e) {
  return typeof Function !== "undefined" && e instanceof Function || Object.prototype.toString.call(e) === "[object Function]";
}
function set(e) {
  var t, n;
  for (n in e) {
    if (hasOwnProp(e, n)) {
      t = e[n];
      if (isFunction(t)) {
        this[n] = t;
      } else {
        this["_" + n] = t;
      }
    }
  }
  this._config = e;
  this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
}
function mergeConfigs(e, t) {
  var n = extend({}, e), r;
  for (r in t) {
    if (hasOwnProp(t, r)) {
      if (isObject(e[r]) && isObject(t[r])) {
        n[r] = {};
        extend(n[r], e[r]);
        extend(n[r], t[r]);
      } else if (t[r] != null) {
        n[r] = t[r];
      } else {
        delete n[r];
      }
    }
  }
  for (r in e) {
    if (hasOwnProp(e, r) && !hasOwnProp(t, r) && isObject(e[r])) {
      n[r] = extend({}, n[r]);
    }
  }
  return n;
}
function Locale(e) {
  if (e != null) {
    this.set(e);
  }
}
var keys;
if (Object.keys) {
  keys = Object.keys;
} else {
  keys = function(e) {
    var t, n = [];
    for (t in e) {
      if (hasOwnProp(e, t)) {
        n.push(t);
      }
    }
    return n;
  };
}
var defaultCalendar = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" };
function calendar(e, t, n) {
  var r = this._calendar[e] || this._calendar["sameElse"];
  return isFunction(r) ? r.call(t, n) : r;
}
function zeroFill(e, t, n) {
  var r = "" + Math.abs(e), i = t - r.length, a = e >= 0;
  return (a ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, i)).toString().substr(1) + r;
}
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
var formatFunctions = {};
var formatTokenFunctions = {};
function addFormatToken(e, t, n, r) {
  var i = r;
  if (typeof r === "string") {
    i = function() {
      return this[r]();
    };
  }
  if (e) {
    formatTokenFunctions[e] = i;
  }
  if (t) {
    formatTokenFunctions[t[0]] = function() {
      return zeroFill(i.apply(this, arguments), t[1], t[2]);
    };
  }
  if (n) {
    formatTokenFunctions[n] = function() {
      return this.localeData().ordinal(i.apply(this, arguments), e);
    };
  }
}
function removeFormattingTokens(e) {
  if (e.match(/\[[\s\S]/)) {
    return e.replace(/^\[|\]$/g, "");
  }
  return e.replace(/\\/g, "");
}
function makeFormatFunction(e) {
  var t = e.match(formattingTokens), n, r;
  for (n = 0, r = t.length; n < r; n++) {
    if (formatTokenFunctions[t[n]]) {
      t[n] = formatTokenFunctions[t[n]];
    } else {
      t[n] = removeFormattingTokens(t[n]);
    }
  }
  return function(n2) {
    var i = "", a;
    for (a = 0; a < r; a++) {
      i += isFunction(t[a]) ? t[a].call(n2, e) : t[a];
    }
    return i;
  };
}
function formatMoment(e, t) {
  if (!e.isValid()) {
    return e.localeData().invalidDate();
  }
  t = expandFormat(t, e.localeData());
  formatFunctions[t] = formatFunctions[t] || makeFormatFunction(t);
  return formatFunctions[t](e);
}
function expandFormat(e, t) {
  var n = 5;
  function r(e2) {
    return t.longDateFormat(e2) || e2;
  }
  localFormattingTokens.lastIndex = 0;
  while (n >= 0 && localFormattingTokens.test(e)) {
    e = e.replace(localFormattingTokens, r);
    localFormattingTokens.lastIndex = 0;
    n -= 1;
  }
  return e;
}
var defaultLongDateFormat = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
function longDateFormat(e) {
  var t = this._longDateFormat[e], n = this._longDateFormat[e.toUpperCase()];
  if (t || !n) {
    return t;
  }
  this._longDateFormat[e] = n.match(formattingTokens).map(function(e2) {
    if (e2 === "MMMM" || e2 === "MM" || e2 === "DD" || e2 === "dddd") {
      return e2.slice(1);
    }
    return e2;
  }).join("");
  return this._longDateFormat[e];
}
var defaultInvalidDate = "Invalid date";
function invalidDate() {
  return this._invalidDate;
}
var defaultOrdinal = "%d";
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
function ordinal(e) {
  return this._ordinal.replace("%d", e);
}
var defaultRelativeTime = { future: "in %s", past: "%s ago", s: "a few seconds", ss: "%d seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", w: "a week", ww: "%d weeks", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
function relativeTime(e, t, n, r) {
  var i = this._relativeTime[n];
  return isFunction(i) ? i(e, t, n, r) : i.replace(/%d/i, e);
}
function pastFuture(e, t) {
  var n = this._relativeTime[e > 0 ? "future" : "past"];
  return isFunction(n) ? n(t) : n.replace(/%s/i, t);
}
var aliases = {};
function addUnitAlias(e, t) {
  var n = e.toLowerCase();
  aliases[n] = aliases[n + "s"] = aliases[t] = e;
}
function normalizeUnits(e) {
  return typeof e === "string" ? aliases[e] || aliases[e.toLowerCase()] : void 0;
}
function normalizeObjectUnits(e) {
  var t = {}, n, r;
  for (r in e) {
    if (hasOwnProp(e, r)) {
      n = normalizeUnits(r);
      if (n) {
        t[n] = e[r];
      }
    }
  }
  return t;
}
var priorities = {};
function addUnitPriority(e, t) {
  priorities[e] = t;
}
function getPrioritizedUnits(e) {
  var t = [], n;
  for (n in e) {
    if (hasOwnProp(e, n)) {
      t.push({ unit: n, priority: priorities[n] });
    }
  }
  t.sort(function(e2, t2) {
    return e2.priority - t2.priority;
  });
  return t;
}
function isLeapYear(e) {
  return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0;
}
function absFloor(e) {
  if (e < 0) {
    return Math.ceil(e) || 0;
  } else {
    return Math.floor(e);
  }
}
function toInt(e) {
  var t = +e, n = 0;
  if (t !== 0 && isFinite(t)) {
    n = absFloor(t);
  }
  return n;
}
function makeGetSet(e, t) {
  return function(n) {
    if (n != null) {
      set$1(this, e, n);
      hooks.updateOffset(this, t);
      return this;
    } else {
      return get(this, e);
    }
  };
}
function get(e, t) {
  return e.isValid() ? e._d["get" + (e._isUTC ? "UTC" : "") + t]() : NaN;
}
function set$1(e, t, n) {
  if (e.isValid() && !isNaN(n)) {
    if (t === "FullYear" && isLeapYear(e.year()) && e.month() === 1 && e.date() === 29) {
      n = toInt(n);
      e._d["set" + (e._isUTC ? "UTC" : "") + t](n, e.month(), daysInMonth(n, e.month()));
    } else {
      e._d["set" + (e._isUTC ? "UTC" : "") + t](n);
    }
  }
}
function stringGet(e) {
  e = normalizeUnits(e);
  if (isFunction(this[e])) {
    return this[e]();
  }
  return this;
}
function stringSet(e, t) {
  if (typeof e === "object") {
    e = normalizeObjectUnits(e);
    var n = getPrioritizedUnits(e), r, i = n.length;
    for (r = 0; r < i; r++) {
      this[n[r].unit](e[n[r].unit]);
    }
  } else {
    e = normalizeUnits(e);
    if (isFunction(this[e])) {
      return this[e](t);
    }
  }
  return this;
}
var match1 = /\d/;
var match2 = /\d\d/;
var match3 = /\d{3}/;
var match4 = /\d{4}/;
var match6 = /[+-]?\d{6}/;
var match1to2 = /\d\d?/;
var match3to4 = /\d\d\d\d?/;
var match5to6 = /\d\d\d\d\d\d?/;
var match1to3 = /\d{1,3}/;
var match1to4 = /\d{1,4}/;
var match1to6 = /[+-]?\d{1,6}/;
var matchUnsigned = /\d+/;
var matchSigned = /[+-]?\d+/;
var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
var regexes;
regexes = {};
function addRegexToken(e, t, n) {
  regexes[e] = isFunction(t) ? t : function(e2, r) {
    return e2 && n ? n : t;
  };
}
function getParseRegexForToken(e, t) {
  if (!hasOwnProp(regexes, e)) {
    return new RegExp(unescapeFormat(e));
  }
  return regexes[e](t._strict, t._locale);
}
function unescapeFormat(e) {
  return regexEscape(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e2, t, n, r, i) {
    return t || n || r || i;
  }));
}
function regexEscape(e) {
  return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
var tokens = {};
function addParseToken(e, t) {
  var n, r = t, i;
  if (typeof e === "string") {
    e = [e];
  }
  if (isNumber(t)) {
    r = function(e2, n2) {
      n2[t] = toInt(e2);
    };
  }
  i = e.length;
  for (n = 0; n < i; n++) {
    tokens[e[n]] = r;
  }
}
function addWeekParseToken(e, t) {
  addParseToken(e, function(e2, n, r, i) {
    r._w = r._w || {};
    t(e2, r._w, r, i);
  });
}
function addTimeToArrayFromToken(e, t, n) {
  if (t != null && hasOwnProp(tokens, e)) {
    tokens[e](t, n._a, n, e);
  }
}
var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;
function mod(e, t) {
  return (e % t + t) % t;
}
var indexOf;
if (Array.prototype.indexOf) {
  indexOf = Array.prototype.indexOf;
} else {
  indexOf = function(e) {
    var t;
    for (t = 0; t < this.length; ++t) {
      if (this[t] === e) {
        return t;
      }
    }
    return -1;
  };
}
function daysInMonth(e, t) {
  if (isNaN(e) || isNaN(t)) {
    return NaN;
  }
  var n = mod(t, 12);
  e += (t - n) / 12;
  return n === 1 ? isLeapYear(e) ? 29 : 28 : 31 - n % 7 % 2;
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(e) {
  return this.localeData().monthsShort(this, e);
});
addFormatToken("MMMM", 0, 0, function(e) {
  return this.localeData().months(this, e);
});
addUnitAlias("month", "M");
addUnitPriority("month", 8);
addRegexToken("M", match1to2);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(e, t) {
  return t.monthsShortRegex(e);
});
addRegexToken("MMMM", function(e, t) {
  return t.monthsRegex(e);
});
addParseToken(["M", "MM"], function(e, t) {
  t[MONTH] = toInt(e) - 1;
});
addParseToken(["MMM", "MMMM"], function(e, t, n, r) {
  var i = n._locale.monthsParse(e, r, n._strict);
  if (i != null) {
    t[MONTH] = i;
  } else {
    getParsingFlags(n).invalidMonth = e;
  }
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultMonthsShortRegex = matchWord;
var defaultMonthsRegex = matchWord;
function localeMonths(e, t) {
  if (!e) {
    return isArray(this._months) ? this._months : this._months["standalone"];
  }
  return isArray(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(t) ? "format" : "standalone"][e.month()];
}
function localeMonthsShort(e, t) {
  if (!e) {
    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(t) ? "format" : "standalone"][e.month()];
}
function handleStrictParse(e, t, n) {
  var r, i, a, o = e.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (r = 0; r < 12; ++r) {
      a = createUTC([2e3, r]);
      this._shortMonthsParse[r] = this.monthsShort(a, "").toLocaleLowerCase();
      this._longMonthsParse[r] = this.months(a, "").toLocaleLowerCase();
    }
  }
  if (n) {
    if (t === "MMM") {
      i = indexOf.call(this._shortMonthsParse, o);
      return i !== -1 ? i : null;
    } else {
      i = indexOf.call(this._longMonthsParse, o);
      return i !== -1 ? i : null;
    }
  } else {
    if (t === "MMM") {
      i = indexOf.call(this._shortMonthsParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._longMonthsParse, o);
      return i !== -1 ? i : null;
    } else {
      i = indexOf.call(this._longMonthsParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._shortMonthsParse, o);
      return i !== -1 ? i : null;
    }
  }
}
function localeMonthsParse(e, t, n) {
  var r, i, a;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, e, t, n);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (r = 0; r < 12; r++) {
    i = createUTC([2e3, r]);
    if (n && !this._longMonthsParse[r]) {
      this._longMonthsParse[r] = new RegExp("^" + this.months(i, "").replace(".", "") + "$", "i");
      this._shortMonthsParse[r] = new RegExp("^" + this.monthsShort(i, "").replace(".", "") + "$", "i");
    }
    if (!n && !this._monthsParse[r]) {
      a = "^" + this.months(i, "") + "|^" + this.monthsShort(i, "");
      this._monthsParse[r] = new RegExp(a.replace(".", ""), "i");
    }
    if (n && t === "MMMM" && this._longMonthsParse[r].test(e)) {
      return r;
    } else if (n && t === "MMM" && this._shortMonthsParse[r].test(e)) {
      return r;
    } else if (!n && this._monthsParse[r].test(e)) {
      return r;
    }
  }
}
function setMonth(e, t) {
  var n;
  if (!e.isValid()) {
    return e;
  }
  if (typeof t === "string") {
    if (/^\d+$/.test(t)) {
      t = toInt(t);
    } else {
      t = e.localeData().monthsParse(t);
      if (!isNumber(t)) {
        return e;
      }
    }
  }
  n = Math.min(e.date(), daysInMonth(e.year(), t));
  e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, n);
  return e;
}
function getSetMonth(e) {
  if (e != null) {
    setMonth(this, e);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(e) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (e) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(e) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (e) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function e(e2, t2) {
    return t2.length - e2.length;
  }
  var t = [], n = [], r = [], i, a;
  for (i = 0; i < 12; i++) {
    a = createUTC([2e3, i]);
    t.push(this.monthsShort(a, ""));
    n.push(this.months(a, ""));
    r.push(this.months(a, ""));
    r.push(this.monthsShort(a, ""));
  }
  t.sort(e);
  n.sort(e);
  r.sort(e);
  for (i = 0; i < 12; i++) {
    t[i] = regexEscape(t[i]);
    n[i] = regexEscape(n[i]);
  }
  for (i = 0; i < 24; i++) {
    r[i] = regexEscape(r[i]);
  }
  this._monthsRegex = new RegExp("^(" + r.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp("^(" + n.join("|") + ")", "i");
  this._monthsShortStrictRegex = new RegExp("^(" + t.join("|") + ")", "i");
}
addFormatToken("Y", 0, 0, function() {
  var e = this.year();
  return e <= 9999 ? zeroFill(e, 4) : "+" + e;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
addUnitAlias("year", "y");
addUnitPriority("year", 1);
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(e, t) {
  t[YEAR] = e.length === 2 ? hooks.parseTwoDigitYear(e) : toInt(e);
});
addParseToken("YY", function(e, t) {
  t[YEAR] = hooks.parseTwoDigitYear(e);
});
addParseToken("Y", function(e, t) {
  t[YEAR] = parseInt(e, 10);
});
function daysInYear(e) {
  return isLeapYear(e) ? 366 : 365;
}
hooks.parseTwoDigitYear = function(e) {
  return toInt(e) + (toInt(e) > 68 ? 1900 : 2e3);
};
var getSetYear = makeGetSet("FullYear", true);
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function createDate(e, t, n, r, i, a, o) {
  var s;
  if (e < 100 && e >= 0) {
    s = new Date(e + 400, t, n, r, i, a, o);
    if (isFinite(s.getFullYear())) {
      s.setFullYear(e);
    }
  } else {
    s = new Date(e, t, n, r, i, a, o);
  }
  return s;
}
function createUTCDate(e) {
  var t, n;
  if (e < 100 && e >= 0) {
    n = Array.prototype.slice.call(arguments);
    n[0] = e + 400;
    t = new Date(Date.UTC.apply(null, n));
    if (isFinite(t.getUTCFullYear())) {
      t.setUTCFullYear(e);
    }
  } else {
    t = new Date(Date.UTC.apply(null, arguments));
  }
  return t;
}
function firstWeekOffset(e, t, n) {
  var r = 7 + t - n, i = (7 + createUTCDate(e, 0, r).getUTCDay() - t) % 7;
  return -i + r - 1;
}
function dayOfYearFromWeeks(e, t, n, r, i) {
  var a = (7 + n - r) % 7, o = firstWeekOffset(e, r, i), s = 1 + 7 * (t - 1) + a + o, u, f;
  if (s <= 0) {
    u = e - 1;
    f = daysInYear(u) + s;
  } else if (s > daysInYear(e)) {
    u = e + 1;
    f = s - daysInYear(e);
  } else {
    u = e;
    f = s;
  }
  return { year: u, dayOfYear: f };
}
function weekOfYear(e, t, n) {
  var r = firstWeekOffset(e.year(), t, n), i = Math.floor((e.dayOfYear() - r - 1) / 7) + 1, a, o;
  if (i < 1) {
    o = e.year() - 1;
    a = i + weeksInYear(o, t, n);
  } else if (i > weeksInYear(e.year(), t, n)) {
    a = i - weeksInYear(e.year(), t, n);
    o = e.year() + 1;
  } else {
    o = e.year();
    a = i;
  }
  return { week: a, year: o };
}
function weeksInYear(e, t, n) {
  var r = firstWeekOffset(e, t, n), i = firstWeekOffset(e + 1, t, n);
  return (daysInYear(e) - r + i) / 7;
}
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addUnitAlias("week", "w");
addUnitAlias("isoWeek", "W");
addUnitPriority("week", 5);
addUnitPriority("isoWeek", 5);
addRegexToken("w", match1to2);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(["w", "ww", "W", "WW"], function(e, t, n, r) {
  t[r.substr(0, 1)] = toInt(e);
});
function localeWeek(e) {
  return weekOfYear(e, this._week.dow, this._week.doy).week;
}
var defaultLocaleWeek = { dow: 0, doy: 6 };
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(e) {
  var t = this.localeData().week(this);
  return e == null ? t : this.add((e - t) * 7, "d");
}
function getSetISOWeek(e) {
  var t = weekOfYear(this, 1, 4).week;
  return e == null ? t : this.add((e - t) * 7, "d");
}
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(e) {
  return this.localeData().weekdaysMin(this, e);
});
addFormatToken("ddd", 0, 0, function(e) {
  return this.localeData().weekdaysShort(this, e);
});
addFormatToken("dddd", 0, 0, function(e) {
  return this.localeData().weekdays(this, e);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addUnitAlias("day", "d");
addUnitAlias("weekday", "e");
addUnitAlias("isoWeekday", "E");
addUnitPriority("day", 11);
addUnitPriority("weekday", 11);
addUnitPriority("isoWeekday", 11);
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(e, t) {
  return t.weekdaysMinRegex(e);
});
addRegexToken("ddd", function(e, t) {
  return t.weekdaysShortRegex(e);
});
addRegexToken("dddd", function(e, t) {
  return t.weekdaysRegex(e);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(e, t, n, r) {
  var i = n._locale.weekdaysParse(e, r, n._strict);
  if (i != null) {
    t.d = i;
  } else {
    getParsingFlags(n).invalidWeekday = e;
  }
});
addWeekParseToken(["d", "e", "E"], function(e, t, n, r) {
  t[r] = toInt(e);
});
function parseWeekday(e, t) {
  if (typeof e !== "string") {
    return e;
  }
  if (!isNaN(e)) {
    return parseInt(e, 10);
  }
  e = t.weekdaysParse(e);
  if (typeof e === "number") {
    return e;
  }
  return null;
}
function parseIsoWeekday(e, t) {
  if (typeof e === "string") {
    return t.weekdaysParse(e) % 7 || 7;
  }
  return isNaN(e) ? null : e;
}
function shiftWeekdays(e, t) {
  return e.slice(t, 7).concat(e.slice(0, t));
}
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
var defaultWeekdaysRegex = matchWord;
var defaultWeekdaysShortRegex = matchWord;
var defaultWeekdaysMinRegex = matchWord;
function localeWeekdays(e, t) {
  var n = isArray(this._weekdays) ? this._weekdays : this._weekdays[e && e !== true && this._weekdays.isFormat.test(t) ? "format" : "standalone"];
  return e === true ? shiftWeekdays(n, this._week.dow) : e ? n[e.day()] : n;
}
function localeWeekdaysShort(e) {
  return e === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(e) {
  return e === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin;
}
function handleStrictParse$1(e, t, n) {
  var r, i, a, o = e.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (r = 0; r < 7; ++r) {
      a = createUTC([2e3, 1]).day(r);
      this._minWeekdaysParse[r] = this.weekdaysMin(a, "").toLocaleLowerCase();
      this._shortWeekdaysParse[r] = this.weekdaysShort(a, "").toLocaleLowerCase();
      this._weekdaysParse[r] = this.weekdays(a, "").toLocaleLowerCase();
    }
  }
  if (n) {
    if (t === "dddd") {
      i = indexOf.call(this._weekdaysParse, o);
      return i !== -1 ? i : null;
    } else if (t === "ddd") {
      i = indexOf.call(this._shortWeekdaysParse, o);
      return i !== -1 ? i : null;
    } else {
      i = indexOf.call(this._minWeekdaysParse, o);
      return i !== -1 ? i : null;
    }
  } else {
    if (t === "dddd") {
      i = indexOf.call(this._weekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._shortWeekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._minWeekdaysParse, o);
      return i !== -1 ? i : null;
    } else if (t === "ddd") {
      i = indexOf.call(this._shortWeekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._weekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._minWeekdaysParse, o);
      return i !== -1 ? i : null;
    } else {
      i = indexOf.call(this._minWeekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._weekdaysParse, o);
      if (i !== -1) {
        return i;
      }
      i = indexOf.call(this._shortWeekdaysParse, o);
      return i !== -1 ? i : null;
    }
  }
}
function localeWeekdaysParse(e, t, n) {
  var r, i, a;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, e, t, n);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (r = 0; r < 7; r++) {
    i = createUTC([2e3, 1]).day(r);
    if (n && !this._fullWeekdaysParse[r]) {
      this._fullWeekdaysParse[r] = new RegExp("^" + this.weekdays(i, "").replace(".", "\\.?") + "$", "i");
      this._shortWeekdaysParse[r] = new RegExp("^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$", "i");
      this._minWeekdaysParse[r] = new RegExp("^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$", "i");
    }
    if (!this._weekdaysParse[r]) {
      a = "^" + this.weekdays(i, "") + "|^" + this.weekdaysShort(i, "") + "|^" + this.weekdaysMin(i, "");
      this._weekdaysParse[r] = new RegExp(a.replace(".", ""), "i");
    }
    if (n && t === "dddd" && this._fullWeekdaysParse[r].test(e)) {
      return r;
    } else if (n && t === "ddd" && this._shortWeekdaysParse[r].test(e)) {
      return r;
    } else if (n && t === "dd" && this._minWeekdaysParse[r].test(e)) {
      return r;
    } else if (!n && this._weekdaysParse[r].test(e)) {
      return r;
    }
  }
}
function getSetDayOfWeek(e) {
  if (!this.isValid()) {
    return e != null ? this : NaN;
  }
  var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
  if (e != null) {
    e = parseWeekday(e, this.localeData());
    return this.add(e - t, "d");
  } else {
    return t;
  }
}
function getSetLocaleDayOfWeek(e) {
  if (!this.isValid()) {
    return e != null ? this : NaN;
  }
  var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return e == null ? t : this.add(e - t, "d");
}
function getSetISODayOfWeek(e) {
  if (!this.isValid()) {
    return e != null ? this : NaN;
  }
  if (e != null) {
    var t = parseIsoWeekday(e, this.localeData());
    return this.day(this.day() % 7 ? t : t - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(e) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (e) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(e) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (e) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(e) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (e) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function e(e2, t2) {
    return t2.length - e2.length;
  }
  var t = [], n = [], r = [], i = [], a, o, s, u, f;
  for (a = 0; a < 7; a++) {
    o = createUTC([2e3, 1]).day(a);
    s = regexEscape(this.weekdaysMin(o, ""));
    u = regexEscape(this.weekdaysShort(o, ""));
    f = regexEscape(this.weekdays(o, ""));
    t.push(s);
    n.push(u);
    r.push(f);
    i.push(s);
    i.push(u);
    i.push(f);
  }
  t.sort(e);
  n.sort(e);
  r.sort(e);
  i.sort(e);
  this._weekdaysRegex = new RegExp("^(" + i.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp("^(" + r.join("|") + ")", "i");
  this._weekdaysShortStrictRegex = new RegExp("^(" + n.join("|") + ")", "i");
  this._weekdaysMinStrictRegex = new RegExp("^(" + t.join("|") + ")", "i");
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
function meridiem(e, t) {
  addFormatToken(e, 0, 0, function() {
    return this.localeData().meridiem(this.hours(), this.minutes(), t);
  });
}
meridiem("a", true);
meridiem("A", false);
addUnitAlias("hour", "h");
addUnitPriority("hour", 13);
function matchMeridiem(e, t) {
  return t._meridiemParse;
}
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2);
addRegexToken("h", match1to2);
addRegexToken("k", match1to2);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(e, t, n) {
  var r = toInt(e);
  t[HOUR] = r === 24 ? 0 : r;
});
addParseToken(["a", "A"], function(e, t, n) {
  n._isPm = n._locale.isPM(e);
  n._meridiem = e;
});
addParseToken(["h", "hh"], function(e, t, n) {
  t[HOUR] = toInt(e);
  getParsingFlags(n).bigHour = true;
});
addParseToken("hmm", function(e, t, n) {
  var r = e.length - 2;
  t[HOUR] = toInt(e.substr(0, r));
  t[MINUTE] = toInt(e.substr(r));
  getParsingFlags(n).bigHour = true;
});
addParseToken("hmmss", function(e, t, n) {
  var r = e.length - 4, i = e.length - 2;
  t[HOUR] = toInt(e.substr(0, r));
  t[MINUTE] = toInt(e.substr(r, 2));
  t[SECOND] = toInt(e.substr(i));
  getParsingFlags(n).bigHour = true;
});
addParseToken("Hmm", function(e, t, n) {
  var r = e.length - 2;
  t[HOUR] = toInt(e.substr(0, r));
  t[MINUTE] = toInt(e.substr(r));
});
addParseToken("Hmmss", function(e, t, n) {
  var r = e.length - 4, i = e.length - 2;
  t[HOUR] = toInt(e.substr(0, r));
  t[MINUTE] = toInt(e.substr(r, 2));
  t[SECOND] = toInt(e.substr(i));
});
function localeIsPM(e) {
  return (e + "").toLowerCase().charAt(0) === "p";
}
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
var getSetHour = makeGetSet("Hours", true);
function localeMeridiem(e, t, n) {
  if (e > 11) {
    return n ? "pm" : "PM";
  } else {
    return n ? "am" : "AM";
  }
}
var baseConfig = { calendar: defaultCalendar, longDateFormat: defaultLongDateFormat, invalidDate: defaultInvalidDate, ordinal: defaultOrdinal, dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse, relativeTime: defaultRelativeTime, months: defaultLocaleMonths, monthsShort: defaultLocaleMonthsShort, week: defaultLocaleWeek, weekdays: defaultLocaleWeekdays, weekdaysMin: defaultLocaleWeekdaysMin, weekdaysShort: defaultLocaleWeekdaysShort, meridiemParse: defaultLocaleMeridiemParse };
var locales = {};
var localeFamilies = {};
var globalLocale;
function commonPrefix(e, t) {
  var n, r = Math.min(e.length, t.length);
  for (n = 0; n < r; n += 1) {
    if (e[n] !== t[n]) {
      return n;
    }
  }
  return r;
}
function normalizeLocale(e) {
  return e ? e.toLowerCase().replace("_", "-") : e;
}
function chooseLocale(e) {
  var t = 0, n, r, i, a;
  while (t < e.length) {
    a = normalizeLocale(e[t]).split("-");
    n = a.length;
    r = normalizeLocale(e[t + 1]);
    r = r ? r.split("-") : null;
    while (n > 0) {
      i = loadLocale(a.slice(0, n).join("-"));
      if (i) {
        return i;
      }
      if (r && r.length >= n && commonPrefix(a, r) >= n - 1) {
        break;
      }
      n--;
    }
    t++;
  }
  return globalLocale;
}
function isLocaleNameSane(e) {
  return e.match("^[^/\\\\]*$") != null;
}
function loadLocale(e) {
  var t = null, n;
  if (locales[e] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(e)) {
    try {
      t = globalLocale._abbr;
      n = __require;
      n("./locale/" + e);
      getSetGlobalLocale(t);
    } catch (t2) {
      locales[e] = null;
    }
  }
  return locales[e];
}
function getSetGlobalLocale(e, t) {
  var n;
  if (e) {
    if (isUndefined(t)) {
      n = getLocale(e);
    } else {
      n = defineLocale(e, t);
    }
    if (n) {
      globalLocale = n;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn("Locale " + e + " not found. Did you forget to load it?");
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(e, t) {
  if (t !== null) {
    var n, r = baseConfig;
    t.abbr = e;
    if (locales[e] != null) {
      deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
      r = locales[e]._config;
    } else if (t.parentLocale != null) {
      if (locales[t.parentLocale] != null) {
        r = locales[t.parentLocale]._config;
      } else {
        n = loadLocale(t.parentLocale);
        if (n != null) {
          r = n._config;
        } else {
          if (!localeFamilies[t.parentLocale]) {
            localeFamilies[t.parentLocale] = [];
          }
          localeFamilies[t.parentLocale].push({ name: e, config: t });
          return null;
        }
      }
    }
    locales[e] = new Locale(mergeConfigs(r, t));
    if (localeFamilies[e]) {
      localeFamilies[e].forEach(function(e2) {
        defineLocale(e2.name, e2.config);
      });
    }
    getSetGlobalLocale(e);
    return locales[e];
  } else {
    delete locales[e];
    return null;
  }
}
function updateLocale(e, t) {
  if (t != null) {
    var n, r, i = baseConfig;
    if (locales[e] != null && locales[e].parentLocale != null) {
      locales[e].set(mergeConfigs(locales[e]._config, t));
    } else {
      r = loadLocale(e);
      if (r != null) {
        i = r._config;
      }
      t = mergeConfigs(i, t);
      if (r == null) {
        t.abbr = e;
      }
      n = new Locale(t);
      n.parentLocale = locales[e];
      locales[e] = n;
    }
    getSetGlobalLocale(e);
  } else {
    if (locales[e] != null) {
      if (locales[e].parentLocale != null) {
        locales[e] = locales[e].parentLocale;
        if (e === getSetGlobalLocale()) {
          getSetGlobalLocale(e);
        }
      } else if (locales[e] != null) {
        delete locales[e];
      }
    }
  }
  return locales[e];
}
function getLocale(e) {
  var t;
  if (e && e._locale && e._locale._abbr) {
    e = e._locale._abbr;
  }
  if (!e) {
    return globalLocale;
  }
  if (!isArray(e)) {
    t = loadLocale(e);
    if (t) {
      return t;
    }
    e = [e];
  }
  return chooseLocale(e);
}
function listLocales() {
  return keys(locales);
}
function checkOverflow(e) {
  var t, n = e._a;
  if (n && getParsingFlags(e).overflow === -2) {
    t = n[MONTH] < 0 || n[MONTH] > 11 ? MONTH : n[DATE] < 1 || n[DATE] > daysInMonth(n[YEAR], n[MONTH]) ? DATE : n[HOUR] < 0 || n[HOUR] > 24 || n[HOUR] === 24 && (n[MINUTE] !== 0 || n[SECOND] !== 0 || n[MILLISECOND] !== 0) ? HOUR : n[MINUTE] < 0 || n[MINUTE] > 59 ? MINUTE : n[SECOND] < 0 || n[SECOND] > 59 ? SECOND : n[MILLISECOND] < 0 || n[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(e)._overflowDayOfYear && (t < YEAR || t > DATE)) {
      t = DATE;
    }
    if (getParsingFlags(e)._overflowWeeks && t === -1) {
      t = WEEK;
    }
    if (getParsingFlags(e)._overflowWeekday && t === -1) {
      t = WEEKDAY;
    }
    getParsingFlags(e).overflow = t;
  }
  return e;
}
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
var isoDates = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, false], ["YYYY", /\d{4}/, false]];
var isoTimes = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]];
var aspNetJsonRegex = /^\/?Date\((-?\d+)/i;
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
var obsOffsets = { UT: 0, GMT: 0, EDT: -4 * 60, EST: -5 * 60, CDT: -5 * 60, CST: -6 * 60, MDT: -6 * 60, MST: -7 * 60, PDT: -7 * 60, PST: -8 * 60 };
function configFromISO(e) {
  var t, n, r = e._i, i = extendedIsoRegex.exec(r) || basicIsoRegex.exec(r), a, o, s, u, f = isoDates.length, l = isoTimes.length;
  if (i) {
    getParsingFlags(e).iso = true;
    for (t = 0, n = f; t < n; t++) {
      if (isoDates[t][1].exec(i[1])) {
        o = isoDates[t][0];
        a = isoDates[t][2] !== false;
        break;
      }
    }
    if (o == null) {
      e._isValid = false;
      return;
    }
    if (i[3]) {
      for (t = 0, n = l; t < n; t++) {
        if (isoTimes[t][1].exec(i[3])) {
          s = (i[2] || " ") + isoTimes[t][0];
          break;
        }
      }
      if (s == null) {
        e._isValid = false;
        return;
      }
    }
    if (!a && s != null) {
      e._isValid = false;
      return;
    }
    if (i[4]) {
      if (tzRegex.exec(i[4])) {
        u = "Z";
      } else {
        e._isValid = false;
        return;
      }
    }
    e._f = o + (s || "") + (u || "");
    configFromStringAndFormat(e);
  } else {
    e._isValid = false;
  }
}
function extractFromRFC2822Strings(e, t, n, r, i, a) {
  var o = [untruncateYear(e), defaultLocaleMonthsShort.indexOf(t), parseInt(n, 10), parseInt(r, 10), parseInt(i, 10)];
  if (a) {
    o.push(parseInt(a, 10));
  }
  return o;
}
function untruncateYear(e) {
  var t = parseInt(e, 10);
  if (t <= 49) {
    return 2e3 + t;
  } else if (t <= 999) {
    return 1900 + t;
  }
  return t;
}
function preprocessRFC2822(e) {
  return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(e, t, n) {
  if (e) {
    var r = defaultLocaleWeekdaysShort.indexOf(e), i = new Date(t[0], t[1], t[2]).getDay();
    if (r !== i) {
      getParsingFlags(n).weekdayMismatch = true;
      n._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(e, t, n) {
  if (e) {
    return obsOffsets[e];
  } else if (t) {
    return 0;
  } else {
    var r = parseInt(n, 10), i = r % 100, a = (r - i) / 100;
    return a * 60 + i;
  }
}
function configFromRFC2822(e) {
  var t = rfc2822.exec(preprocessRFC2822(e._i)), n;
  if (t) {
    n = extractFromRFC2822Strings(t[4], t[3], t[2], t[5], t[6], t[7]);
    if (!checkWeekday(t[1], n, e)) {
      return;
    }
    e._a = n;
    e._tzm = calculateOffset(t[8], t[9], t[10]);
    e._d = createUTCDate.apply(null, e._a);
    e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm);
    getParsingFlags(e).rfc2822 = true;
  } else {
    e._isValid = false;
  }
}
function configFromString(e) {
  var t = aspNetJsonRegex.exec(e._i);
  if (t !== null) {
    e._d = /* @__PURE__ */ new Date(+t[1]);
    return;
  }
  configFromISO(e);
  if (e._isValid === false) {
    delete e._isValid;
  } else {
    return;
  }
  configFromRFC2822(e);
  if (e._isValid === false) {
    delete e._isValid;
  } else {
    return;
  }
  if (e._strict) {
    e._isValid = false;
  } else {
    hooks.createFromInputFallback(e);
  }
}
hooks.createFromInputFallback = deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e) {
  e._d = /* @__PURE__ */ new Date(e._i + (e._useUTC ? " UTC" : ""));
});
function defaults(e, t, n) {
  if (e != null) {
    return e;
  }
  if (t != null) {
    return t;
  }
  return n;
}
function currentDateArray(e) {
  var t = new Date(hooks.now());
  if (e._useUTC) {
    return [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()];
  }
  return [t.getFullYear(), t.getMonth(), t.getDate()];
}
function configFromArray(e) {
  var t, n, r = [], i, a, o;
  if (e._d) {
    return;
  }
  i = currentDateArray(e);
  if (e._w && e._a[DATE] == null && e._a[MONTH] == null) {
    dayOfYearFromWeekInfo(e);
  }
  if (e._dayOfYear != null) {
    o = defaults(e._a[YEAR], i[YEAR]);
    if (e._dayOfYear > daysInYear(o) || e._dayOfYear === 0) {
      getParsingFlags(e)._overflowDayOfYear = true;
    }
    n = createUTCDate(o, 0, e._dayOfYear);
    e._a[MONTH] = n.getUTCMonth();
    e._a[DATE] = n.getUTCDate();
  }
  for (t = 0; t < 3 && e._a[t] == null; ++t) {
    e._a[t] = r[t] = i[t];
  }
  for (; t < 7; t++) {
    e._a[t] = r[t] = e._a[t] == null ? t === 2 ? 1 : 0 : e._a[t];
  }
  if (e._a[HOUR] === 24 && e._a[MINUTE] === 0 && e._a[SECOND] === 0 && e._a[MILLISECOND] === 0) {
    e._nextDay = true;
    e._a[HOUR] = 0;
  }
  e._d = (e._useUTC ? createUTCDate : createDate).apply(null, r);
  a = e._useUTC ? e._d.getUTCDay() : e._d.getDay();
  if (e._tzm != null) {
    e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm);
  }
  if (e._nextDay) {
    e._a[HOUR] = 24;
  }
  if (e._w && typeof e._w.d !== "undefined" && e._w.d !== a) {
    getParsingFlags(e).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(e) {
  var t, n, r, i, a, o, s, u, f;
  t = e._w;
  if (t.GG != null || t.W != null || t.E != null) {
    a = 1;
    o = 4;
    n = defaults(t.GG, e._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
    r = defaults(t.W, 1);
    i = defaults(t.E, 1);
    if (i < 1 || i > 7) {
      u = true;
    }
  } else {
    a = e._locale._week.dow;
    o = e._locale._week.doy;
    f = weekOfYear(createLocal(), a, o);
    n = defaults(t.gg, e._a[YEAR], f.year);
    r = defaults(t.w, f.week);
    if (t.d != null) {
      i = t.d;
      if (i < 0 || i > 6) {
        u = true;
      }
    } else if (t.e != null) {
      i = t.e + a;
      if (t.e < 0 || t.e > 6) {
        u = true;
      }
    } else {
      i = a;
    }
  }
  if (r < 1 || r > weeksInYear(n, a, o)) {
    getParsingFlags(e)._overflowWeeks = true;
  } else if (u != null) {
    getParsingFlags(e)._overflowWeekday = true;
  } else {
    s = dayOfYearFromWeeks(n, r, i, a, o);
    e._a[YEAR] = s.year;
    e._dayOfYear = s.dayOfYear;
  }
}
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
function configFromStringAndFormat(e) {
  if (e._f === hooks.ISO_8601) {
    configFromISO(e);
    return;
  }
  if (e._f === hooks.RFC_2822) {
    configFromRFC2822(e);
    return;
  }
  e._a = [];
  getParsingFlags(e).empty = true;
  var t = "" + e._i, n, r, i, a, o, s = t.length, u = 0, f, l;
  i = expandFormat(e._f, e._locale).match(formattingTokens) || [];
  l = i.length;
  for (n = 0; n < l; n++) {
    a = i[n];
    r = (t.match(getParseRegexForToken(a, e)) || [])[0];
    if (r) {
      o = t.substr(0, t.indexOf(r));
      if (o.length > 0) {
        getParsingFlags(e).unusedInput.push(o);
      }
      t = t.slice(t.indexOf(r) + r.length);
      u += r.length;
    }
    if (formatTokenFunctions[a]) {
      if (r) {
        getParsingFlags(e).empty = false;
      } else {
        getParsingFlags(e).unusedTokens.push(a);
      }
      addTimeToArrayFromToken(a, r, e);
    } else if (e._strict && !r) {
      getParsingFlags(e).unusedTokens.push(a);
    }
  }
  getParsingFlags(e).charsLeftOver = s - u;
  if (t.length > 0) {
    getParsingFlags(e).unusedInput.push(t);
  }
  if (e._a[HOUR] <= 12 && getParsingFlags(e).bigHour === true && e._a[HOUR] > 0) {
    getParsingFlags(e).bigHour = void 0;
  }
  getParsingFlags(e).parsedDateParts = e._a.slice(0);
  getParsingFlags(e).meridiem = e._meridiem;
  e._a[HOUR] = meridiemFixWrap(e._locale, e._a[HOUR], e._meridiem);
  f = getParsingFlags(e).era;
  if (f !== null) {
    e._a[YEAR] = e._locale.erasConvertYear(f, e._a[YEAR]);
  }
  configFromArray(e);
  checkOverflow(e);
}
function meridiemFixWrap(e, t, n) {
  var r;
  if (n == null) {
    return t;
  }
  if (e.meridiemHour != null) {
    return e.meridiemHour(t, n);
  } else if (e.isPM != null) {
    r = e.isPM(n);
    if (r && t < 12) {
      t += 12;
    }
    if (!r && t === 12) {
      t = 0;
    }
    return t;
  } else {
    return t;
  }
}
function configFromStringAndArray(e) {
  var t, n, r, i, a, o, s = false, u = e._f.length;
  if (u === 0) {
    getParsingFlags(e).invalidFormat = true;
    e._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (i = 0; i < u; i++) {
    a = 0;
    o = false;
    t = copyConfig({}, e);
    if (e._useUTC != null) {
      t._useUTC = e._useUTC;
    }
    t._f = e._f[i];
    configFromStringAndFormat(t);
    if (isValid(t)) {
      o = true;
    }
    a += getParsingFlags(t).charsLeftOver;
    a += getParsingFlags(t).unusedTokens.length * 10;
    getParsingFlags(t).score = a;
    if (!s) {
      if (r == null || a < r || o) {
        r = a;
        n = t;
        if (o) {
          s = true;
        }
      }
    } else {
      if (a < r) {
        r = a;
        n = t;
      }
    }
  }
  extend(e, n || t);
}
function configFromObject(e) {
  if (e._d) {
    return;
  }
  var t = normalizeObjectUnits(e._i), n = t.day === void 0 ? t.date : t.day;
  e._a = map([t.year, t.month, n, t.hour, t.minute, t.second, t.millisecond], function(e2) {
    return e2 && parseInt(e2, 10);
  });
  configFromArray(e);
}
function createFromConfig(e) {
  var t = new Moment(checkOverflow(prepareConfig(e)));
  if (t._nextDay) {
    t.add(1, "d");
    t._nextDay = void 0;
  }
  return t;
}
function prepareConfig(e) {
  var t = e._i, n = e._f;
  e._locale = e._locale || getLocale(e._l);
  if (t === null || n === void 0 && t === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof t === "string") {
    e._i = t = e._locale.preparse(t);
  }
  if (isMoment(t)) {
    return new Moment(checkOverflow(t));
  } else if (isDate(t)) {
    e._d = t;
  } else if (isArray(n)) {
    configFromStringAndArray(e);
  } else if (n) {
    configFromStringAndFormat(e);
  } else {
    configFromInput(e);
  }
  if (!isValid(e)) {
    e._d = null;
  }
  return e;
}
function configFromInput(e) {
  var t = e._i;
  if (isUndefined(t)) {
    e._d = new Date(hooks.now());
  } else if (isDate(t)) {
    e._d = new Date(t.valueOf());
  } else if (typeof t === "string") {
    configFromString(e);
  } else if (isArray(t)) {
    e._a = map(t.slice(0), function(e2) {
      return parseInt(e2, 10);
    });
    configFromArray(e);
  } else if (isObject(t)) {
    configFromObject(e);
  } else if (isNumber(t)) {
    e._d = new Date(t);
  } else {
    hooks.createFromInputFallback(e);
  }
}
function createLocalOrUTC(e, t, n, r, i) {
  var a = {};
  if (t === true || t === false) {
    r = t;
    t = void 0;
  }
  if (n === true || n === false) {
    r = n;
    n = void 0;
  }
  if (isObject(e) && isObjectEmpty(e) || isArray(e) && e.length === 0) {
    e = void 0;
  }
  a._isAMomentObject = true;
  a._useUTC = a._isUTC = i;
  a._l = n;
  a._i = e;
  a._f = t;
  a._strict = r;
  return createFromConfig(a);
}
function createLocal(e, t, n, r) {
  return createLocalOrUTC(e, t, n, r, false);
}
var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
  var e = createLocal.apply(null, arguments);
  if (this.isValid() && e.isValid()) {
    return e < this ? this : e;
  } else {
    return createInvalid();
  }
});
var prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
  var e = createLocal.apply(null, arguments);
  if (this.isValid() && e.isValid()) {
    return e > this ? this : e;
  } else {
    return createInvalid();
  }
});
function pickBy(e, t) {
  var n, r;
  if (t.length === 1 && isArray(t[0])) {
    t = t[0];
  }
  if (!t.length) {
    return createLocal();
  }
  n = t[0];
  for (r = 1; r < t.length; ++r) {
    if (!t[r].isValid() || t[r][e](n)) {
      n = t[r];
    }
  }
  return n;
}
function min() {
  var e = [].slice.call(arguments, 0);
  return pickBy("isBefore", e);
}
function max() {
  var e = [].slice.call(arguments, 0);
  return pickBy("isAfter", e);
}
var now = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
};
var ordering = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
function isDurationValid(e) {
  var t, n = false, r, i = ordering.length;
  for (t in e) {
    if (hasOwnProp(e, t) && !(indexOf.call(ordering, t) !== -1 && (e[t] == null || !isNaN(e[t])))) {
      return false;
    }
  }
  for (r = 0; r < i; ++r) {
    if (e[ordering[r]]) {
      if (n) {
        return false;
      }
      if (parseFloat(e[ordering[r]]) !== toInt(e[ordering[r]])) {
        n = true;
      }
    }
  }
  return true;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(e) {
  var t = normalizeObjectUnits(e), n = t.year || 0, r = t.quarter || 0, i = t.month || 0, a = t.week || t.isoWeek || 0, o = t.day || 0, s = t.hour || 0, u = t.minute || 0, f = t.second || 0, l = t.millisecond || 0;
  this._isValid = isDurationValid(t);
  this._milliseconds = +l + f * 1e3 + u * 6e4 + s * 1e3 * 60 * 60;
  this._days = +o + a * 7;
  this._months = +i + r * 3 + n * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
}
function isDuration(e) {
  return e instanceof Duration;
}
function absRound(e) {
  if (e < 0) {
    return Math.round(-1 * e) * -1;
  } else {
    return Math.round(e);
  }
}
function compareArrays(e, t, n) {
  var r = Math.min(e.length, t.length), i = Math.abs(e.length - t.length), a = 0, o;
  for (o = 0; o < r; o++) {
    if (toInt(e[o]) !== toInt(t[o])) {
      a++;
    }
  }
  return a + i;
}
function offset(e, t) {
  addFormatToken(e, 0, 0, function() {
    var e2 = this.utcOffset(), n = "+";
    if (e2 < 0) {
      e2 = -e2;
      n = "-";
    }
    return n + zeroFill(~~(e2 / 60), 2) + t + zeroFill(~~e2 % 60, 2);
  });
}
offset("Z", ":");
offset("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(e, t, n) {
  n._useUTC = true;
  n._tzm = offsetFromString(matchShortOffset, e);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
function offsetFromString(e, t) {
  var n = (t || "").match(e), r, i, a;
  if (n === null) {
    return null;
  }
  r = n[n.length - 1] || [];
  i = (r + "").match(chunkOffset) || ["-", 0, 0];
  a = +(i[1] * 60) + toInt(i[2]);
  return a === 0 ? 0 : i[0] === "+" ? a : -a;
}
function cloneWithOffset(e, t) {
  var n, r;
  if (t._isUTC) {
    n = t.clone();
    r = (isMoment(e) || isDate(e) ? e.valueOf() : createLocal(e).valueOf()) - n.valueOf();
    n._d.setTime(n._d.valueOf() + r);
    hooks.updateOffset(n, false);
    return n;
  } else {
    return createLocal(e).local();
  }
}
function getDateOffset(e) {
  return -Math.round(e._d.getTimezoneOffset());
}
hooks.updateOffset = function() {
};
function getSetOffset(e, t, n) {
  var r = this._offset || 0, i;
  if (!this.isValid()) {
    return e != null ? this : NaN;
  }
  if (e != null) {
    if (typeof e === "string") {
      e = offsetFromString(matchShortOffset, e);
      if (e === null) {
        return this;
      }
    } else if (Math.abs(e) < 16 && !n) {
      e = e * 60;
    }
    if (!this._isUTC && t) {
      i = getDateOffset(this);
    }
    this._offset = e;
    this._isUTC = true;
    if (i != null) {
      this.add(i, "m");
    }
    if (r !== e) {
      if (!t || this._changeInProgress) {
        addSubtract(this, createDuration(e - r, "m"), 1, false);
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? r : getDateOffset(this);
  }
}
function getSetZone(e, t) {
  if (e != null) {
    if (typeof e !== "string") {
      e = -e;
    }
    this.utcOffset(e, t);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(e) {
  return this.utcOffset(0, e);
}
function setOffsetToLocal(e) {
  if (this._isUTC) {
    this.utcOffset(0, e);
    this._isUTC = false;
    if (e) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var e = offsetFromString(matchOffset, this._i);
    if (e != null) {
      this.utcOffset(e);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(e) {
  if (!this.isValid()) {
    return false;
  }
  e = e ? createLocal(e).utcOffset() : 0;
  return (this.utcOffset() - e) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var e = {}, t;
  copyConfig(e, this);
  e = prepareConfig(e);
  if (e._a) {
    t = e._isUTC ? createUTC(e._a) : createLocal(e._a);
    this._isDSTShifted = this.isValid() && compareArrays(e._a, t.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/;
var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(e, t) {
  var n = e, r = null, i, a, o;
  if (isDuration(e)) {
    n = { ms: e._milliseconds, d: e._days, M: e._months };
  } else if (isNumber(e) || !isNaN(+e)) {
    n = {};
    if (t) {
      n[t] = +e;
    } else {
      n.milliseconds = +e;
    }
  } else if (r = aspNetRegex.exec(e)) {
    i = r[1] === "-" ? -1 : 1;
    n = { y: 0, d: toInt(r[DATE]) * i, h: toInt(r[HOUR]) * i, m: toInt(r[MINUTE]) * i, s: toInt(r[SECOND]) * i, ms: toInt(absRound(r[MILLISECOND] * 1e3)) * i };
  } else if (r = isoRegex.exec(e)) {
    i = r[1] === "-" ? -1 : 1;
    n = { y: parseIso(r[2], i), M: parseIso(r[3], i), w: parseIso(r[4], i), d: parseIso(r[5], i), h: parseIso(r[6], i), m: parseIso(r[7], i), s: parseIso(r[8], i) };
  } else if (n == null) {
    n = {};
  } else if (typeof n === "object" && ("from" in n || "to" in n)) {
    o = momentsDifference(createLocal(n.from), createLocal(n.to));
    n = {};
    n.ms = o.milliseconds;
    n.M = o.months;
  }
  a = new Duration(n);
  if (isDuration(e) && hasOwnProp(e, "_locale")) {
    a._locale = e._locale;
  }
  if (isDuration(e) && hasOwnProp(e, "_isValid")) {
    a._isValid = e._isValid;
  }
  return a;
}
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
function parseIso(e, t) {
  var n = e && parseFloat(e.replace(",", "."));
  return (isNaN(n) ? 0 : n) * t;
}
function positiveMomentsDifference(e, t) {
  var n = {};
  n.months = t.month() - e.month() + (t.year() - e.year()) * 12;
  if (e.clone().add(n.months, "M").isAfter(t)) {
    --n.months;
  }
  n.milliseconds = +t - +e.clone().add(n.months, "M");
  return n;
}
function momentsDifference(e, t) {
  var n;
  if (!(e.isValid() && t.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  t = cloneWithOffset(t, e);
  if (e.isBefore(t)) {
    n = positiveMomentsDifference(e, t);
  } else {
    n = positiveMomentsDifference(t, e);
    n.milliseconds = -n.milliseconds;
    n.months = -n.months;
  }
  return n;
}
function createAdder(e, t) {
  return function(n, r) {
    var i, a;
    if (r !== null && !isNaN(+r)) {
      deprecateSimple(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
      a = n;
      n = r;
      r = a;
    }
    i = createDuration(n, r);
    addSubtract(this, i, e);
    return this;
  };
}
function addSubtract(e, t, n, r) {
  var i = t._milliseconds, a = absRound(t._days), o = absRound(t._months);
  if (!e.isValid()) {
    return;
  }
  r = r == null ? true : r;
  if (o) {
    setMonth(e, get(e, "Month") + o * n);
  }
  if (a) {
    set$1(e, "Date", get(e, "Date") + a * n);
  }
  if (i) {
    e._d.setTime(e._d.valueOf() + i * n);
  }
  if (r) {
    hooks.updateOffset(e, a || o);
  }
}
var add = createAdder(1, "add");
var subtract = createAdder(-1, "subtract");
function isString(e) {
  return typeof e === "string" || e instanceof String;
}
function isMomentInput(e) {
  return isMoment(e) || isDate(e) || isString(e) || isNumber(e) || isNumberOrStringArray(e) || isMomentInputObject(e) || e === null || e === void 0;
}
function isMomentInputObject(e) {
  var t = isObject(e) && !isObjectEmpty(e), n = false, r = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"], i, a, o = r.length;
  for (i = 0; i < o; i += 1) {
    a = r[i];
    n = n || hasOwnProp(e, a);
  }
  return t && n;
}
function isNumberOrStringArray(e) {
  var t = isArray(e), n = false;
  if (t) {
    n = e.filter(function(t2) {
      return !isNumber(t2) && isString(e);
    }).length === 0;
  }
  return t && n;
}
function isCalendarSpec(e) {
  var t = isObject(e) && !isObjectEmpty(e), n = false, r = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"], i, a;
  for (i = 0; i < r.length; i += 1) {
    a = r[i];
    n = n || hasOwnProp(e, a);
  }
  return t && n;
}
function getCalendarFormat(e, t) {
  var n = e.diff(t, "days", true);
  return n < -6 ? "sameElse" : n < -1 ? "lastWeek" : n < 0 ? "lastDay" : n < 1 ? "sameDay" : n < 2 ? "nextDay" : n < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(e, t) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      e = void 0;
      t = void 0;
    } else if (isMomentInput(arguments[0])) {
      e = arguments[0];
      t = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      t = arguments[0];
      e = void 0;
    }
  }
  var n = e || createLocal(), r = cloneWithOffset(n, this).startOf("day"), i = hooks.calendarFormat(this, r) || "sameElse", a = t && (isFunction(t[i]) ? t[i].call(this, n) : t[i]);
  return this.format(a || this.localeData().calendar(i, this, createLocal(n)));
}
function clone() {
  return new Moment(this);
}
function isAfter(e, t) {
  var n = isMoment(e) ? e : createLocal(e);
  if (!(this.isValid() && n.isValid())) {
    return false;
  }
  t = normalizeUnits(t) || "millisecond";
  if (t === "millisecond") {
    return this.valueOf() > n.valueOf();
  } else {
    return n.valueOf() < this.clone().startOf(t).valueOf();
  }
}
function isBefore(e, t) {
  var n = isMoment(e) ? e : createLocal(e);
  if (!(this.isValid() && n.isValid())) {
    return false;
  }
  t = normalizeUnits(t) || "millisecond";
  if (t === "millisecond") {
    return this.valueOf() < n.valueOf();
  } else {
    return this.clone().endOf(t).valueOf() < n.valueOf();
  }
}
function isBetween(e, t, n, r) {
  var i = isMoment(e) ? e : createLocal(e), a = isMoment(t) ? t : createLocal(t);
  if (!(this.isValid() && i.isValid() && a.isValid())) {
    return false;
  }
  r = r || "()";
  return (r[0] === "(" ? this.isAfter(i, n) : !this.isBefore(i, n)) && (r[1] === ")" ? this.isBefore(a, n) : !this.isAfter(a, n));
}
function isSame(e, t) {
  var n = isMoment(e) ? e : createLocal(e), r;
  if (!(this.isValid() && n.isValid())) {
    return false;
  }
  t = normalizeUnits(t) || "millisecond";
  if (t === "millisecond") {
    return this.valueOf() === n.valueOf();
  } else {
    r = n.valueOf();
    return this.clone().startOf(t).valueOf() <= r && r <= this.clone().endOf(t).valueOf();
  }
}
function isSameOrAfter(e, t) {
  return this.isSame(e, t) || this.isAfter(e, t);
}
function isSameOrBefore(e, t) {
  return this.isSame(e, t) || this.isBefore(e, t);
}
function diff(e, t, n) {
  var r, i, a;
  if (!this.isValid()) {
    return NaN;
  }
  r = cloneWithOffset(e, this);
  if (!r.isValid()) {
    return NaN;
  }
  i = (r.utcOffset() - this.utcOffset()) * 6e4;
  t = normalizeUnits(t);
  switch (t) {
    case "year":
      a = monthDiff(this, r) / 12;
      break;
    case "month":
      a = monthDiff(this, r);
      break;
    case "quarter":
      a = monthDiff(this, r) / 3;
      break;
    case "second":
      a = (this - r) / 1e3;
      break;
    case "minute":
      a = (this - r) / 6e4;
      break;
    case "hour":
      a = (this - r) / 36e5;
      break;
    case "day":
      a = (this - r - i) / 864e5;
      break;
    case "week":
      a = (this - r - i) / 6048e5;
      break;
    default:
      a = this - r;
  }
  return n ? a : absFloor(a);
}
function monthDiff(e, t) {
  if (e.date() < t.date()) {
    return -monthDiff(t, e);
  }
  var n = (t.year() - e.year()) * 12 + (t.month() - e.month()), r = e.clone().add(n, "months"), i, a;
  if (t - r < 0) {
    i = e.clone().add(n - 1, "months");
    a = (t - r) / (r - i);
  } else {
    i = e.clone().add(n + 1, "months");
    a = (t - r) / (i - r);
  }
  return -(n + a) || 0;
}
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function toString() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(e) {
  if (!this.isValid()) {
    return null;
  }
  var t = e !== true, n = t ? this.clone().utc() : this;
  if (n.year() < 0 || n.year() > 9999) {
    return formatMoment(n, t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
  }
  if (isFunction(Date.prototype.toISOString)) {
    if (t) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(n, "Z"));
    }
  }
  return formatMoment(n, t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var e = "moment", t = "", n, r, i, a;
  if (!this.isLocal()) {
    e = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    t = "Z";
  }
  n = "[" + e + '("]';
  r = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  i = "-MM-DD[T]HH:mm:ss.SSS";
  a = t + '[")]';
  return this.format(n + r + i + a);
}
function format(e) {
  if (!e) {
    e = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var t = formatMoment(this, e);
  return this.localeData().postformat(t);
}
function from(e, t) {
  if (this.isValid() && (isMoment(e) && e.isValid() || createLocal(e).isValid())) {
    return createDuration({ to: this, from: e }).locale(this.locale()).humanize(!t);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(e) {
  return this.from(createLocal(), e);
}
function to(e, t) {
  if (this.isValid() && (isMoment(e) && e.isValid() || createLocal(e).isValid())) {
    return createDuration({ from: this, to: e }).locale(this.locale()).humanize(!t);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(e) {
  return this.to(createLocal(), e);
}
function locale(e) {
  var t;
  if (e === void 0) {
    return this._locale._abbr;
  } else {
    t = getLocale(e);
    if (t != null) {
      this._locale = t;
    }
    return this;
  }
}
var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e) {
  if (e === void 0) {
    return this.localeData();
  } else {
    return this.locale(e);
  }
});
function localeData() {
  return this._locale;
}
var MS_PER_SECOND = 1e3;
var MS_PER_MINUTE = 60 * MS_PER_SECOND;
var MS_PER_HOUR = 60 * MS_PER_MINUTE;
var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
function mod$1(e, t) {
  return (e % t + t) % t;
}
function localStartOfDate(e, t, n) {
  if (e < 100 && e >= 0) {
    return new Date(e + 400, t, n) - MS_PER_400_YEARS;
  } else {
    return new Date(e, t, n).valueOf();
  }
}
function utcStartOfDate(e, t, n) {
  if (e < 100 && e >= 0) {
    return Date.UTC(e + 400, t, n) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(e, t, n);
  }
}
function startOf(e) {
  var t, n;
  e = normalizeUnits(e);
  if (e === void 0 || e === "millisecond" || !this.isValid()) {
    return this;
  }
  n = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (e) {
    case "year":
      t = n(this.year(), 0, 1);
      break;
    case "quarter":
      t = n(this.year(), this.month() - this.month() % 3, 1);
      break;
    case "month":
      t = n(this.year(), this.month(), 1);
      break;
    case "week":
      t = n(this.year(), this.month(), this.date() - this.weekday());
      break;
    case "isoWeek":
      t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
      break;
    case "day":
    case "date":
      t = n(this.year(), this.month(), this.date());
      break;
    case "hour":
      t = this._d.valueOf();
      t -= mod$1(t + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
      break;
    case "minute":
      t = this._d.valueOf();
      t -= mod$1(t, MS_PER_MINUTE);
      break;
    case "second":
      t = this._d.valueOf();
      t -= mod$1(t, MS_PER_SECOND);
      break;
  }
  this._d.setTime(t);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(e) {
  var t, n;
  e = normalizeUnits(e);
  if (e === void 0 || e === "millisecond" || !this.isValid()) {
    return this;
  }
  n = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (e) {
    case "year":
      t = n(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      t = n(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
      break;
    case "month":
      t = n(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      t = n(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
      break;
    case "isoWeek":
      t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
      break;
    case "day":
    case "date":
      t = n(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      t = this._d.valueOf();
      t += MS_PER_HOUR - mod$1(t + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
      break;
    case "minute":
      t = this._d.valueOf();
      t += MS_PER_MINUTE - mod$1(t, MS_PER_MINUTE) - 1;
      break;
    case "second":
      t = this._d.valueOf();
      t += MS_PER_SECOND - mod$1(t, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(t);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray() {
  var e = this;
  return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()];
}
function toObject() {
  var e = this;
  return { years: e.year(), months: e.month(), date: e.date(), hours: e.hours(), minutes: e.minutes(), seconds: e.seconds(), milliseconds: e.milliseconds() };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };
}
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(["N", "NN", "NNN", "NNNN", "NNNNN"], function(e, t, n, r) {
  var i = n._locale.erasParse(e, r, n._strict);
  if (i) {
    getParsingFlags(n).era = i;
  } else {
    getParsingFlags(n).invalidEra = e;
  }
});
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(e, t, n, r) {
  var i;
  if (n._locale._eraYearOrdinalRegex) {
    i = e.match(n._locale._eraYearOrdinalRegex);
  }
  if (n._locale.eraYearOrdinalParse) {
    t[YEAR] = n._locale.eraYearOrdinalParse(e, i);
  } else {
    t[YEAR] = parseInt(e, 10);
  }
});
function localeEras(e, t) {
  var n, r, i, a = this._eras || getLocale("en")._eras;
  for (n = 0, r = a.length; n < r; ++n) {
    switch (typeof a[n].since) {
      case "string":
        i = hooks(a[n].since).startOf("day");
        a[n].since = i.valueOf();
        break;
    }
    switch (typeof a[n].until) {
      case "undefined":
        a[n].until = Infinity;
        break;
      case "string":
        i = hooks(a[n].until).startOf("day").valueOf();
        a[n].until = i.valueOf();
        break;
    }
  }
  return a;
}
function localeErasParse(e, t, n) {
  var r, i, a = this.eras(), o, s, u;
  e = e.toUpperCase();
  for (r = 0, i = a.length; r < i; ++r) {
    o = a[r].name.toUpperCase();
    s = a[r].abbr.toUpperCase();
    u = a[r].narrow.toUpperCase();
    if (n) {
      switch (t) {
        case "N":
        case "NN":
        case "NNN":
          if (s === e) {
            return a[r];
          }
          break;
        case "NNNN":
          if (o === e) {
            return a[r];
          }
          break;
        case "NNNNN":
          if (u === e) {
            return a[r];
          }
          break;
      }
    } else if ([o, s, u].indexOf(e) >= 0) {
      return a[r];
    }
  }
}
function localeErasConvertYear(e, t) {
  var n = e.since <= e.until ? 1 : -1;
  if (t === void 0) {
    return hooks(e.since).year();
  } else {
    return hooks(e.since).year() + (t - e.offset) * n;
  }
}
function getEraName() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e) {
    n = this.clone().startOf("day").valueOf();
    if (r[e].since <= n && n <= r[e].until) {
      return r[e].name;
    }
    if (r[e].until <= n && n <= r[e].since) {
      return r[e].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e) {
    n = this.clone().startOf("day").valueOf();
    if (r[e].since <= n && n <= r[e].until) {
      return r[e].narrow;
    }
    if (r[e].until <= n && n <= r[e].since) {
      return r[e].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e) {
    n = this.clone().startOf("day").valueOf();
    if (r[e].since <= n && n <= r[e].until) {
      return r[e].abbr;
    }
    if (r[e].until <= n && n <= r[e].since) {
      return r[e].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var e, t, n, r, i = this.localeData().eras();
  for (e = 0, t = i.length; e < t; ++e) {
    n = i[e].since <= i[e].until ? 1 : -1;
    r = this.clone().startOf("day").valueOf();
    if (i[e].since <= r && r <= i[e].until || i[e].until <= r && r <= i[e].since) {
      return (this.year() - hooks(i[e].since).year()) * n + i[e].offset;
    }
  }
  return this.year();
}
function erasNameRegex(e) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return e ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(e) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return e ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(e) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return e ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(e, t) {
  return t.erasAbbrRegex(e);
}
function matchEraName(e, t) {
  return t.erasNameRegex(e);
}
function matchEraNarrow(e, t) {
  return t.erasNarrowRegex(e);
}
function matchEraYearOrdinal(e, t) {
  return t._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var e = [], t = [], n = [], r = [], i, a, o = this.eras();
  for (i = 0, a = o.length; i < a; ++i) {
    t.push(regexEscape(o[i].name));
    e.push(regexEscape(o[i].abbr));
    n.push(regexEscape(o[i].narrow));
    r.push(regexEscape(o[i].name));
    r.push(regexEscape(o[i].abbr));
    r.push(regexEscape(o[i].narrow));
  }
  this._erasRegex = new RegExp("^(" + r.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + t.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + e.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp("^(" + n.join("|") + ")", "i");
}
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function addWeekYearFormatToken(e, t) {
  addFormatToken(0, [e, e.length], 0, t);
}
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addUnitAlias("weekYear", "gg");
addUnitAlias("isoWeekYear", "GG");
addUnitPriority("weekYear", 1);
addUnitPriority("isoWeekYear", 1);
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(e, t, n, r) {
  t[r.substr(0, 2)] = toInt(e);
});
addWeekParseToken(["gg", "GG"], function(e, t, n, r) {
  t[r] = hooks.parseTwoDigitYear(e);
});
function getSetWeekYear(e) {
  return getSetWeekYearHelper.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
}
function getSetISOWeekYear(e) {
  return getSetWeekYearHelper.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4);
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var e = this.localeData()._week;
  return weeksInYear(this.year(), e.dow, e.doy);
}
function getWeeksInWeekYear() {
  var e = this.localeData()._week;
  return weeksInYear(this.weekYear(), e.dow, e.doy);
}
function getSetWeekYearHelper(e, t, n, r, i) {
  var a;
  if (e == null) {
    return weekOfYear(this, r, i).year;
  } else {
    a = weeksInYear(e, r, i);
    if (t > a) {
      t = a;
    }
    return setWeekAll.call(this, e, t, n, r, i);
  }
}
function setWeekAll(e, t, n, r, i) {
  var a = dayOfYearFromWeeks(e, t, n, r, i), o = createUTCDate(a.year, 0, a.dayOfYear);
  this.year(o.getUTCFullYear());
  this.month(o.getUTCMonth());
  this.date(o.getUTCDate());
  return this;
}
addFormatToken("Q", 0, "Qo", "quarter");
addUnitAlias("quarter", "Q");
addUnitPriority("quarter", 7);
addRegexToken("Q", match1);
addParseToken("Q", function(e, t) {
  t[MONTH] = (toInt(e) - 1) * 3;
});
function getSetQuarter(e) {
  return e == null ? Math.ceil((this.month() + 1) / 3) : this.month((e - 1) * 3 + this.month() % 3);
}
addFormatToken("D", ["DD", 2], "Do", "date");
addUnitAlias("date", "D");
addUnitPriority("date", 9);
addRegexToken("D", match1to2);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(e, t) {
  return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(e, t) {
  t[DATE] = toInt(e.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", true);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addUnitAlias("dayOfYear", "DDD");
addUnitPriority("dayOfYear", 4);
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(e, t, n) {
  n._dayOfYear = toInt(e);
});
function getSetDayOfYear(e) {
  var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
  return e == null ? t : this.add(e - t, "d");
}
addFormatToken("m", ["mm", 2], 0, "minute");
addUnitAlias("minute", "m");
addUnitPriority("minute", 14);
addRegexToken("m", match1to2);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", false);
addFormatToken("s", ["ss", 2], 0, "second");
addUnitAlias("second", "s");
addUnitPriority("second", 15);
addRegexToken("s", match1to2);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", false);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addUnitAlias("millisecond", "ms");
addUnitPriority("millisecond", 16);
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token;
var getSetMillisecond;
for (token = "SSSS"; token.length <= 9; token += "S") {
  addRegexToken(token, matchUnsigned);
}
function parseMs(e, t) {
  t[MILLISECOND] = toInt(("0." + e) * 1e3);
}
for (token = "S"; token.length <= 9; token += "S") {
  addParseToken(token, parseMs);
}
getSetMillisecond = makeGetSet("Milliseconds", false);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var proto = Moment.prototype;
proto.add = add;
proto.calendar = calendar$1;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
if (typeof Symbol !== "undefined" && Symbol.for != null) {
  proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
    return "Moment<" + this.format() + ">";
  };
}
proto.toJSON = toJSON;
proto.toString = toString;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);
function createUnix(e) {
  return createLocal(e * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(e) {
  return e;
}
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
function get$1(e, t, n, r) {
  var i = getLocale(), a = createUTC().set(r, t);
  return i[n](a, e);
}
function listMonthsImpl(e, t, n) {
  if (isNumber(e)) {
    t = e;
    e = void 0;
  }
  e = e || "";
  if (t != null) {
    return get$1(e, t, n, "month");
  }
  var r, i = [];
  for (r = 0; r < 12; r++) {
    i[r] = get$1(e, r, n, "month");
  }
  return i;
}
function listWeekdaysImpl(e, t, n, r) {
  if (typeof e === "boolean") {
    if (isNumber(t)) {
      n = t;
      t = void 0;
    }
    t = t || "";
  } else {
    t = e;
    n = t;
    e = false;
    if (isNumber(t)) {
      n = t;
      t = void 0;
    }
    t = t || "";
  }
  var i = getLocale(), a = e ? i._week.dow : 0, o, s = [];
  if (n != null) {
    return get$1(t, (n + a) % 7, r, "day");
  }
  for (o = 0; o < 7; o++) {
    s[o] = get$1(t, (o + a) % 7, r, "day");
  }
  return s;
}
function listMonths(e, t) {
  return listMonthsImpl(e, t, "months");
}
function listMonthsShort(e, t) {
  return listMonthsImpl(e, t, "monthsShort");
}
function listWeekdays(e, t, n) {
  return listWeekdaysImpl(e, t, n, "weekdays");
}
function listWeekdaysShort(e, t, n) {
  return listWeekdaysImpl(e, t, n, "weekdaysShort");
}
function listWeekdaysMin(e, t, n) {
  return listWeekdaysImpl(e, t, n, "weekdaysMin");
}
getSetGlobalLocale("en", { eras: [{ since: "0001-01-01", until: Infinity, offset: 1, name: "Anno Domini", narrow: "AD", abbr: "AD" }, { since: "0000-12-31", until: -Infinity, offset: 1, name: "Before Christ", narrow: "BC", abbr: "BC" }], dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function(e) {
  var t = e % 10, n = toInt(e % 100 / 10) === 1 ? "th" : t === 1 ? "st" : t === 2 ? "nd" : t === 3 ? "rd" : "th";
  return e + n;
} });
hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
var mathAbs = Math.abs;
function abs() {
  var e = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  e.milliseconds = mathAbs(e.milliseconds);
  e.seconds = mathAbs(e.seconds);
  e.minutes = mathAbs(e.minutes);
  e.hours = mathAbs(e.hours);
  e.months = mathAbs(e.months);
  e.years = mathAbs(e.years);
  return this;
}
function addSubtract$1(e, t, n, r) {
  var i = createDuration(t, n);
  e._milliseconds += r * i._milliseconds;
  e._days += r * i._days;
  e._months += r * i._months;
  return e._bubble();
}
function add$1(e, t) {
  return addSubtract$1(this, e, t, 1);
}
function subtract$1(e, t) {
  return addSubtract$1(this, e, t, -1);
}
function absCeil(e) {
  if (e < 0) {
    return Math.floor(e);
  } else {
    return Math.ceil(e);
  }
}
function bubble() {
  var e = this._milliseconds, t = this._days, n = this._months, r = this._data, i, a, o, s, u;
  if (!(e >= 0 && t >= 0 && n >= 0 || e <= 0 && t <= 0 && n <= 0)) {
    e += absCeil(monthsToDays(n) + t) * 864e5;
    t = 0;
    n = 0;
  }
  r.milliseconds = e % 1e3;
  i = absFloor(e / 1e3);
  r.seconds = i % 60;
  a = absFloor(i / 60);
  r.minutes = a % 60;
  o = absFloor(a / 60);
  r.hours = o % 24;
  t += absFloor(o / 24);
  u = absFloor(daysToMonths(t));
  n += u;
  t -= absCeil(monthsToDays(u));
  s = absFloor(n / 12);
  n %= 12;
  r.days = t;
  r.months = n;
  r.years = s;
  return this;
}
function daysToMonths(e) {
  return e * 4800 / 146097;
}
function monthsToDays(e) {
  return e * 146097 / 4800;
}
function as(e) {
  if (!this.isValid()) {
    return NaN;
  }
  var t, n, r = this._milliseconds;
  e = normalizeUnits(e);
  if (e === "month" || e === "quarter" || e === "year") {
    t = this._days + r / 864e5;
    n = this._months + daysToMonths(t);
    switch (e) {
      case "month":
        return n;
      case "quarter":
        return n / 3;
      case "year":
        return n / 12;
    }
  } else {
    t = this._days + Math.round(monthsToDays(this._months));
    switch (e) {
      case "week":
        return t / 7 + r / 6048e5;
      case "day":
        return t + r / 864e5;
      case "hour":
        return t * 24 + r / 36e5;
      case "minute":
        return t * 1440 + r / 6e4;
      case "second":
        return t * 86400 + r / 1e3;
      case "millisecond":
        return Math.floor(t * 864e5) + r;
      default:
        throw new Error("Unknown unit " + e);
    }
  }
}
function valueOf$1() {
  if (!this.isValid()) {
    return NaN;
  }
  return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
}
function makeAs(e) {
  return function() {
    return this.as(e);
  };
}
var asMilliseconds = makeAs("ms");
var asSeconds = makeAs("s");
var asMinutes = makeAs("m");
var asHours = makeAs("h");
var asDays = makeAs("d");
var asWeeks = makeAs("w");
var asMonths = makeAs("M");
var asQuarters = makeAs("Q");
var asYears = makeAs("y");
function clone$1() {
  return createDuration(this);
}
function get$2(e) {
  e = normalizeUnits(e);
  return this.isValid() ? this[e + "s"]() : NaN;
}
function makeGetter(e) {
  return function() {
    return this.isValid() ? this._data[e] : NaN;
  };
}
var milliseconds = makeGetter("milliseconds");
var seconds = makeGetter("seconds");
var minutes = makeGetter("minutes");
var hours = makeGetter("hours");
var days = makeGetter("days");
var months = makeGetter("months");
var years = makeGetter("years");
function weeks() {
  return absFloor(this.days() / 7);
}
var round = Math.round;
var thresholds = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
function substituteTimeAgo(e, t, n, r, i) {
  return i.relativeTime(t || 1, !!n, e, r);
}
function relativeTime$1(e, t, n, r) {
  var i = createDuration(e).abs(), a = round(i.as("s")), o = round(i.as("m")), s = round(i.as("h")), u = round(i.as("d")), f = round(i.as("M")), l = round(i.as("w")), c = round(i.as("y")), d = a <= n.ss && ["s", a] || a < n.s && ["ss", a] || o <= 1 && ["m"] || o < n.m && ["mm", o] || s <= 1 && ["h"] || s < n.h && ["hh", s] || u <= 1 && ["d"] || u < n.d && ["dd", u];
  if (n.w != null) {
    d = d || l <= 1 && ["w"] || l < n.w && ["ww", l];
  }
  d = d || f <= 1 && ["M"] || f < n.M && ["MM", f] || c <= 1 && ["y"] || ["yy", c];
  d[2] = t;
  d[3] = +e > 0;
  d[4] = r;
  return substituteTimeAgo.apply(null, d);
}
function getSetRelativeTimeRounding(e) {
  if (e === void 0) {
    return round;
  }
  if (typeof e === "function") {
    round = e;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(e, t) {
  if (thresholds[e] === void 0) {
    return false;
  }
  if (t === void 0) {
    return thresholds[e];
  }
  thresholds[e] = t;
  if (e === "s") {
    thresholds.ss = t - 1;
  }
  return true;
}
function humanize(e, t) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var n = false, r = thresholds, i, a;
  if (typeof e === "object") {
    t = e;
    e = false;
  }
  if (typeof e === "boolean") {
    n = e;
  }
  if (typeof t === "object") {
    r = Object.assign({}, thresholds, t);
    if (t.s != null && t.ss == null) {
      r.ss = t.s - 1;
    }
  }
  i = this.localeData();
  a = relativeTime$1(this, !n, r, i);
  if (n) {
    a = i.pastFuture(+this, a);
  }
  return i.postformat(a);
}
var abs$1 = Math.abs;
function sign(e) {
  return (e > 0) - (e < 0) || +e;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var e = abs$1(this._milliseconds) / 1e3, t = abs$1(this._days), n = abs$1(this._months), r, i, a, o, s = this.asSeconds(), u, f, l, c;
  if (!s) {
    return "P0D";
  }
  r = absFloor(e / 60);
  i = absFloor(r / 60);
  e %= 60;
  r %= 60;
  a = absFloor(n / 12);
  n %= 12;
  o = e ? e.toFixed(3).replace(/\.?0+$/, "") : "";
  u = s < 0 ? "-" : "";
  f = sign(this._months) !== sign(s) ? "-" : "";
  l = sign(this._days) !== sign(s) ? "-" : "";
  c = sign(this._milliseconds) !== sign(s) ? "-" : "";
  return u + "P" + (a ? f + a + "Y" : "") + (n ? f + n + "M" : "") + (t ? l + t + "D" : "") + (i || r || e ? "T" : "") + (i ? c + i + "H" : "") + (r ? c + r + "M" : "") + (e ? c + o + "S" : "");
}
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(e, t, n) {
  n._d = new Date(parseFloat(e) * 1e3);
});
addParseToken("x", function(e, t, n) {
  n._d = new Date(toInt(e));
});
hooks.version = "2.29.4";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = { DATETIME_LOCAL: "YYYY-MM-DDTHH:mm", DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss", DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS", DATE: "YYYY-MM-DD", TIME: "HH:mm", TIME_SECONDS: "HH:mm:ss", TIME_MS: "HH:mm:ss.SSS", WEEK: "GGGG-[W]WW", MONTH: "YYYY-MM" };
function commonjsRequire(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var ptBr$1 = { exports: {} };
var moment$1 = { exports: {} };
var moment = moment$1.exports;
var hasRequiredMoment;
function requireMoment() {
  if (hasRequiredMoment) return moment$1.exports;
  hasRequiredMoment = 1;
  (function(e, t) {
    (function(t2, n) {
      e.exports = n();
    })(moment, function() {
      var t2;
      function n() {
        return t2.apply(null, arguments);
      }
      function r(e2) {
        t2 = e2;
      }
      function i(e2) {
        return e2 instanceof Array || Object.prototype.toString.call(e2) === "[object Array]";
      }
      function a(e2) {
        return e2 != null && Object.prototype.toString.call(e2) === "[object Object]";
      }
      function o(e2, t3) {
        return Object.prototype.hasOwnProperty.call(e2, t3);
      }
      function s(e2) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(e2).length === 0;
        } else {
          var t3;
          for (t3 in e2) {
            if (o(e2, t3)) {
              return false;
            }
          }
          return true;
        }
      }
      function u(e2) {
        return e2 === void 0;
      }
      function f(e2) {
        return typeof e2 === "number" || Object.prototype.toString.call(e2) === "[object Number]";
      }
      function l(e2) {
        return e2 instanceof Date || Object.prototype.toString.call(e2) === "[object Date]";
      }
      function c(e2, t3) {
        var n2 = [], r2, i2 = e2.length;
        for (r2 = 0; r2 < i2; ++r2) {
          n2.push(t3(e2[r2], r2));
        }
        return n2;
      }
      function d(e2, t3) {
        for (var n2 in t3) {
          if (o(t3, n2)) {
            e2[n2] = t3[n2];
          }
        }
        if (o(t3, "toString")) {
          e2.toString = t3.toString;
        }
        if (o(t3, "valueOf")) {
          e2.valueOf = t3.valueOf;
        }
        return e2;
      }
      function h2(e2, t3, n2, r2) {
        return Zn(e2, t3, n2, r2, true).utc();
      }
      function v() {
        return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidEra: null, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false, parsedDateParts: [], era: null, meridiem: null, rfc2822: false, weekdayMismatch: false };
      }
      function m(e2) {
        if (e2._pf == null) {
          e2._pf = v();
        }
        return e2._pf;
      }
      var p;
      if (Array.prototype.some) {
        p = Array.prototype.some;
      } else {
        p = function(e2) {
          var t3 = Object(this), n2 = t3.length >>> 0, r2;
          for (r2 = 0; r2 < n2; r2++) {
            if (r2 in t3 && e2.call(this, t3[r2], r2, t3)) {
              return true;
            }
          }
          return false;
        };
      }
      function g(e2) {
        if (e2._isValid == null) {
          var t3 = m(e2), n2 = p.call(t3.parsedDateParts, function(e3) {
            return e3 != null;
          }), r2 = !isNaN(e2._d.getTime()) && t3.overflow < 0 && !t3.empty && !t3.invalidEra && !t3.invalidMonth && !t3.invalidWeekday && !t3.weekdayMismatch && !t3.nullInput && !t3.invalidFormat && !t3.userInvalidated && (!t3.meridiem || t3.meridiem && n2);
          if (e2._strict) {
            r2 = r2 && t3.charsLeftOver === 0 && t3.unusedTokens.length === 0 && t3.bigHour === void 0;
          }
          if (Object.isFrozen == null || !Object.isFrozen(e2)) {
            e2._isValid = r2;
          } else {
            return r2;
          }
        }
        return e2._isValid;
      }
      function b(e2) {
        var t3 = h2(NaN);
        if (e2 != null) {
          d(m(t3), e2);
        } else {
          m(t3).userInvalidated = true;
        }
        return t3;
      }
      var y = n.momentProperties = [], w = false;
      function S(e2, t3) {
        var n2, r2, i2, a2 = y.length;
        if (!u(t3._isAMomentObject)) {
          e2._isAMomentObject = t3._isAMomentObject;
        }
        if (!u(t3._i)) {
          e2._i = t3._i;
        }
        if (!u(t3._f)) {
          e2._f = t3._f;
        }
        if (!u(t3._l)) {
          e2._l = t3._l;
        }
        if (!u(t3._strict)) {
          e2._strict = t3._strict;
        }
        if (!u(t3._tzm)) {
          e2._tzm = t3._tzm;
        }
        if (!u(t3._isUTC)) {
          e2._isUTC = t3._isUTC;
        }
        if (!u(t3._offset)) {
          e2._offset = t3._offset;
        }
        if (!u(t3._pf)) {
          e2._pf = m(t3);
        }
        if (!u(t3._locale)) {
          e2._locale = t3._locale;
        }
        if (a2 > 0) {
          for (n2 = 0; n2 < a2; n2++) {
            r2 = y[n2];
            i2 = t3[r2];
            if (!u(i2)) {
              e2[r2] = i2;
            }
          }
        }
        return e2;
      }
      function D(e2) {
        S(this, e2);
        this._d = new Date(e2._d != null ? e2._d.getTime() : NaN);
        if (!this.isValid()) {
          this._d = /* @__PURE__ */ new Date(NaN);
        }
        if (w === false) {
          w = true;
          n.updateOffset(this);
          w = false;
        }
      }
      function k(e2) {
        return e2 instanceof D || e2 != null && e2._isAMomentObject != null;
      }
      function x(e2) {
        if (n.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
          console.warn("Deprecation warning: " + e2);
        }
      }
      function _(e2, t3) {
        var r2 = true;
        return d(function() {
          if (n.deprecationHandler != null) {
            n.deprecationHandler(null, e2);
          }
          if (r2) {
            var i2 = [], a2, s2, u2, f2 = arguments.length;
            for (s2 = 0; s2 < f2; s2++) {
              a2 = "";
              if (typeof arguments[s2] === "object") {
                a2 += "\n[" + s2 + "] ";
                for (u2 in arguments[0]) {
                  if (o(arguments[0], u2)) {
                    a2 += u2 + ": " + arguments[0][u2] + ", ";
                  }
                }
                a2 = a2.slice(0, -2);
              } else {
                a2 = arguments[s2];
              }
              i2.push(a2);
            }
            x(e2 + "\nArguments: " + Array.prototype.slice.call(i2).join("") + "\n" + new Error().stack);
            r2 = false;
          }
          return t3.apply(this, arguments);
        }, t3);
      }
      var M = {};
      function T(e2, t3) {
        if (n.deprecationHandler != null) {
          n.deprecationHandler(e2, t3);
        }
        if (!M[e2]) {
          x(t3);
          M[e2] = true;
        }
      }
      n.suppressDeprecationWarnings = false;
      n.deprecationHandler = null;
      function E(e2) {
        return typeof Function !== "undefined" && e2 instanceof Function || Object.prototype.toString.call(e2) === "[object Function]";
      }
      function F(e2) {
        var t3, n2;
        for (n2 in e2) {
          if (o(e2, n2)) {
            t3 = e2[n2];
            if (E(t3)) {
              this[n2] = t3;
            } else {
              this["_" + n2] = t3;
            }
          }
        }
        this._config = e2;
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
      }
      function Y(e2, t3) {
        var n2 = d({}, e2), r2;
        for (r2 in t3) {
          if (o(t3, r2)) {
            if (a(e2[r2]) && a(t3[r2])) {
              n2[r2] = {};
              d(n2[r2], e2[r2]);
              d(n2[r2], t3[r2]);
            } else if (t3[r2] != null) {
              n2[r2] = t3[r2];
            } else {
              delete n2[r2];
            }
          }
        }
        for (r2 in e2) {
          if (o(e2, r2) && !o(t3, r2) && a(e2[r2])) {
            n2[r2] = d({}, n2[r2]);
          }
        }
        return n2;
      }
      function A(e2) {
        if (e2 != null) {
          this.set(e2);
        }
      }
      var O;
      if (Object.keys) {
        O = Object.keys;
      } else {
        O = function(e2) {
          var t3, n2 = [];
          for (t3 in e2) {
            if (o(e2, t3)) {
              n2.push(t3);
            }
          }
          return n2;
        };
      }
      var N = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" };
      function R(e2, t3, n2) {
        var r2 = this._calendar[e2] || this._calendar["sameElse"];
        return E(r2) ? r2.call(t3, n2) : r2;
      }
      function C(e2, t3, n2) {
        var r2 = "" + Math.abs(e2), i2 = t3 - r2.length, a2 = e2 >= 0;
        return (a2 ? n2 ? "+" : "" : "-") + Math.pow(10, Math.max(0, i2)).toString().substr(1) + r2;
      }
      var I = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, P = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, L = {}, W = {};
      function j(e2, t3, n2, r2) {
        var i2 = r2;
        if (typeof r2 === "string") {
          i2 = function() {
            return this[r2]();
          };
        }
        if (e2) {
          W[e2] = i2;
        }
        if (t3) {
          W[t3[0]] = function() {
            return C(i2.apply(this, arguments), t3[1], t3[2]);
          };
        }
        if (n2) {
          W[n2] = function() {
            return this.localeData().ordinal(i2.apply(this, arguments), e2);
          };
        }
      }
      function H(e2) {
        if (e2.match(/\[[\s\S]/)) {
          return e2.replace(/^\[|\]$/g, "");
        }
        return e2.replace(/\\/g, "");
      }
      function U(e2) {
        var t3 = e2.match(I), n2, r2;
        for (n2 = 0, r2 = t3.length; n2 < r2; n2++) {
          if (W[t3[n2]]) {
            t3[n2] = W[t3[n2]];
          } else {
            t3[n2] = H(t3[n2]);
          }
        }
        return function(n3) {
          var i2 = "", a2;
          for (a2 = 0; a2 < r2; a2++) {
            i2 += E(t3[a2]) ? t3[a2].call(n3, e2) : t3[a2];
          }
          return i2;
        };
      }
      function $(e2, t3) {
        if (!e2.isValid()) {
          return e2.localeData().invalidDate();
        }
        t3 = G(t3, e2.localeData());
        L[t3] = L[t3] || U(t3);
        return L[t3](e2);
      }
      function G(e2, t3) {
        var n2 = 5;
        function r2(e3) {
          return t3.longDateFormat(e3) || e3;
        }
        P.lastIndex = 0;
        while (n2 >= 0 && P.test(e2)) {
          e2 = e2.replace(P, r2);
          P.lastIndex = 0;
          n2 -= 1;
        }
        return e2;
      }
      var q = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
      function z(e2) {
        var t3 = this._longDateFormat[e2], n2 = this._longDateFormat[e2.toUpperCase()];
        if (t3 || !n2) {
          return t3;
        }
        this._longDateFormat[e2] = n2.match(I).map(function(e3) {
          if (e3 === "MMMM" || e3 === "MM" || e3 === "DD" || e3 === "dddd") {
            return e3.slice(1);
          }
          return e3;
        }).join("");
        return this._longDateFormat[e2];
      }
      var B = "Invalid date";
      function Z() {
        return this._invalidDate;
      }
      var J = "%d", V = /\d{1,2}/;
      function X(e2) {
        return this._ordinal.replace("%d", e2);
      }
      var Q = { future: "in %s", past: "%s ago", s: "a few seconds", ss: "%d seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", w: "a week", ww: "%d weeks", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
      function K(e2, t3, n2, r2) {
        var i2 = this._relativeTime[n2];
        return E(i2) ? i2(e2, t3, n2, r2) : i2.replace(/%d/i, e2);
      }
      function ee(e2, t3) {
        var n2 = this._relativeTime[e2 > 0 ? "future" : "past"];
        return E(n2) ? n2(t3) : n2.replace(/%s/i, t3);
      }
      var te = {};
      function ne(e2, t3) {
        var n2 = e2.toLowerCase();
        te[n2] = te[n2 + "s"] = te[t3] = e2;
      }
      function re(e2) {
        return typeof e2 === "string" ? te[e2] || te[e2.toLowerCase()] : void 0;
      }
      function ie(e2) {
        var t3 = {}, n2, r2;
        for (r2 in e2) {
          if (o(e2, r2)) {
            n2 = re(r2);
            if (n2) {
              t3[n2] = e2[r2];
            }
          }
        }
        return t3;
      }
      var ae = {};
      function oe(e2, t3) {
        ae[e2] = t3;
      }
      function se(e2) {
        var t3 = [], n2;
        for (n2 in e2) {
          if (o(e2, n2)) {
            t3.push({ unit: n2, priority: ae[n2] });
          }
        }
        t3.sort(function(e3, t4) {
          return e3.priority - t4.priority;
        });
        return t3;
      }
      function ue(e2) {
        return e2 % 4 === 0 && e2 % 100 !== 0 || e2 % 400 === 0;
      }
      function fe(e2) {
        if (e2 < 0) {
          return Math.ceil(e2) || 0;
        } else {
          return Math.floor(e2);
        }
      }
      function le(e2) {
        var t3 = +e2, n2 = 0;
        if (t3 !== 0 && isFinite(t3)) {
          n2 = fe(t3);
        }
        return n2;
      }
      function ce(e2, t3) {
        return function(r2) {
          if (r2 != null) {
            he(this, e2, r2);
            n.updateOffset(this, t3);
            return this;
          } else {
            return de(this, e2);
          }
        };
      }
      function de(e2, t3) {
        return e2.isValid() ? e2._d["get" + (e2._isUTC ? "UTC" : "") + t3]() : NaN;
      }
      function he(e2, t3, n2) {
        if (e2.isValid() && !isNaN(n2)) {
          if (t3 === "FullYear" && ue(e2.year()) && e2.month() === 1 && e2.date() === 29) {
            n2 = le(n2);
            e2._d["set" + (e2._isUTC ? "UTC" : "") + t3](n2, e2.month(), Ke(n2, e2.month()));
          } else {
            e2._d["set" + (e2._isUTC ? "UTC" : "") + t3](n2);
          }
        }
      }
      function ve(e2) {
        e2 = re(e2);
        if (E(this[e2])) {
          return this[e2]();
        }
        return this;
      }
      function me(e2, t3) {
        if (typeof e2 === "object") {
          e2 = ie(e2);
          var n2 = se(e2), r2, i2 = n2.length;
          for (r2 = 0; r2 < i2; r2++) {
            this[n2[r2].unit](e2[n2[r2].unit]);
          }
        } else {
          e2 = re(e2);
          if (E(this[e2])) {
            return this[e2](t3);
          }
        }
        return this;
      }
      var pe = /\d/, ge = /\d\d/, be = /\d{3}/, ye = /\d{4}/, we = /[+-]?\d{6}/, Se = /\d\d?/, De = /\d\d\d\d?/, ke = /\d\d\d\d\d\d?/, xe = /\d{1,3}/, _e = /\d{1,4}/, Me = /[+-]?\d{1,6}/, Te = /\d+/, Ee = /[+-]?\d+/, Fe = /Z|[+-]\d\d:?\d\d/gi, Ye = /Z|[+-]\d\d(?::?\d\d)?/gi, Ae = /[+-]?\d+(\.\d{1,3})?/, Oe = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, Ne;
      Ne = {};
      function Re(e2, t3, n2) {
        Ne[e2] = E(t3) ? t3 : function(e3, r2) {
          return e3 && n2 ? n2 : t3;
        };
      }
      function Ce(e2, t3) {
        if (!o(Ne, e2)) {
          return new RegExp(Ie(e2));
        }
        return Ne[e2](t3._strict, t3._locale);
      }
      function Ie(e2) {
        return Pe(e2.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e3, t3, n2, r2, i2) {
          return t3 || n2 || r2 || i2;
        }));
      }
      function Pe(e2) {
        return e2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
      }
      var Le = {};
      function We(e2, t3) {
        var n2, r2 = t3, i2;
        if (typeof e2 === "string") {
          e2 = [e2];
        }
        if (f(t3)) {
          r2 = function(e3, n3) {
            n3[t3] = le(e3);
          };
        }
        i2 = e2.length;
        for (n2 = 0; n2 < i2; n2++) {
          Le[e2[n2]] = r2;
        }
      }
      function je(e2, t3) {
        We(e2, function(e3, n2, r2, i2) {
          r2._w = r2._w || {};
          t3(e3, r2._w, r2, i2);
        });
      }
      function He(e2, t3, n2) {
        if (t3 != null && o(Le, e2)) {
          Le[e2](t3, n2._a, n2, e2);
        }
      }
      var Ue = 0, $e = 1, Ge = 2, qe = 3, ze = 4, Be = 5, Ze = 6, Je = 7, Ve = 8;
      function Xe(e2, t3) {
        return (e2 % t3 + t3) % t3;
      }
      var Qe;
      if (Array.prototype.indexOf) {
        Qe = Array.prototype.indexOf;
      } else {
        Qe = function(e2) {
          var t3;
          for (t3 = 0; t3 < this.length; ++t3) {
            if (this[t3] === e2) {
              return t3;
            }
          }
          return -1;
        };
      }
      function Ke(e2, t3) {
        if (isNaN(e2) || isNaN(t3)) {
          return NaN;
        }
        var n2 = Xe(t3, 12);
        e2 += (t3 - n2) / 12;
        return n2 === 1 ? ue(e2) ? 29 : 28 : 31 - n2 % 7 % 2;
      }
      j("M", ["MM", 2], "Mo", function() {
        return this.month() + 1;
      });
      j("MMM", 0, 0, function(e2) {
        return this.localeData().monthsShort(this, e2);
      });
      j("MMMM", 0, 0, function(e2) {
        return this.localeData().months(this, e2);
      });
      ne("month", "M");
      oe("month", 8);
      Re("M", Se);
      Re("MM", Se, ge);
      Re("MMM", function(e2, t3) {
        return t3.monthsShortRegex(e2);
      });
      Re("MMMM", function(e2, t3) {
        return t3.monthsRegex(e2);
      });
      We(["M", "MM"], function(e2, t3) {
        t3[$e] = le(e2) - 1;
      });
      We(["MMM", "MMMM"], function(e2, t3, n2, r2) {
        var i2 = n2._locale.monthsParse(e2, r2, n2._strict);
        if (i2 != null) {
          t3[$e] = i2;
        } else {
          m(n2).invalidMonth = e2;
        }
      });
      var et = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), tt = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), nt = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, rt = Oe, it = Oe;
      function at(e2, t3) {
        if (!e2) {
          return i(this._months) ? this._months : this._months["standalone"];
        }
        return i(this._months) ? this._months[e2.month()] : this._months[(this._months.isFormat || nt).test(t3) ? "format" : "standalone"][e2.month()];
      }
      function ot(e2, t3) {
        if (!e2) {
          return i(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
        }
        return i(this._monthsShort) ? this._monthsShort[e2.month()] : this._monthsShort[nt.test(t3) ? "format" : "standalone"][e2.month()];
      }
      function st(e2, t3, n2) {
        var r2, i2, a2, o2 = e2.toLocaleLowerCase();
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
          for (r2 = 0; r2 < 12; ++r2) {
            a2 = h2([2e3, r2]);
            this._shortMonthsParse[r2] = this.monthsShort(a2, "").toLocaleLowerCase();
            this._longMonthsParse[r2] = this.months(a2, "").toLocaleLowerCase();
          }
        }
        if (n2) {
          if (t3 === "MMM") {
            i2 = Qe.call(this._shortMonthsParse, o2);
            return i2 !== -1 ? i2 : null;
          } else {
            i2 = Qe.call(this._longMonthsParse, o2);
            return i2 !== -1 ? i2 : null;
          }
        } else {
          if (t3 === "MMM") {
            i2 = Qe.call(this._shortMonthsParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._longMonthsParse, o2);
            return i2 !== -1 ? i2 : null;
          } else {
            i2 = Qe.call(this._longMonthsParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._shortMonthsParse, o2);
            return i2 !== -1 ? i2 : null;
          }
        }
      }
      function ut(e2, t3, n2) {
        var r2, i2, a2;
        if (this._monthsParseExact) {
          return st.call(this, e2, t3, n2);
        }
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        }
        for (r2 = 0; r2 < 12; r2++) {
          i2 = h2([2e3, r2]);
          if (n2 && !this._longMonthsParse[r2]) {
            this._longMonthsParse[r2] = new RegExp("^" + this.months(i2, "").replace(".", "") + "$", "i");
            this._shortMonthsParse[r2] = new RegExp("^" + this.monthsShort(i2, "").replace(".", "") + "$", "i");
          }
          if (!n2 && !this._monthsParse[r2]) {
            a2 = "^" + this.months(i2, "") + "|^" + this.monthsShort(i2, "");
            this._monthsParse[r2] = new RegExp(a2.replace(".", ""), "i");
          }
          if (n2 && t3 === "MMMM" && this._longMonthsParse[r2].test(e2)) {
            return r2;
          } else if (n2 && t3 === "MMM" && this._shortMonthsParse[r2].test(e2)) {
            return r2;
          } else if (!n2 && this._monthsParse[r2].test(e2)) {
            return r2;
          }
        }
      }
      function ft(e2, t3) {
        var n2;
        if (!e2.isValid()) {
          return e2;
        }
        if (typeof t3 === "string") {
          if (/^\d+$/.test(t3)) {
            t3 = le(t3);
          } else {
            t3 = e2.localeData().monthsParse(t3);
            if (!f(t3)) {
              return e2;
            }
          }
        }
        n2 = Math.min(e2.date(), Ke(e2.year(), t3));
        e2._d["set" + (e2._isUTC ? "UTC" : "") + "Month"](t3, n2);
        return e2;
      }
      function lt(e2) {
        if (e2 != null) {
          ft(this, e2);
          n.updateOffset(this, true);
          return this;
        } else {
          return de(this, "Month");
        }
      }
      function ct() {
        return Ke(this.year(), this.month());
      }
      function dt(e2) {
        if (this._monthsParseExact) {
          if (!o(this, "_monthsRegex")) {
            vt.call(this);
          }
          if (e2) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!o(this, "_monthsShortRegex")) {
            this._monthsShortRegex = rt;
          }
          return this._monthsShortStrictRegex && e2 ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }
      function ht(e2) {
        if (this._monthsParseExact) {
          if (!o(this, "_monthsRegex")) {
            vt.call(this);
          }
          if (e2) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!o(this, "_monthsRegex")) {
            this._monthsRegex = it;
          }
          return this._monthsStrictRegex && e2 ? this._monthsStrictRegex : this._monthsRegex;
        }
      }
      function vt() {
        function e2(e3, t4) {
          return t4.length - e3.length;
        }
        var t3 = [], n2 = [], r2 = [], i2, a2;
        for (i2 = 0; i2 < 12; i2++) {
          a2 = h2([2e3, i2]);
          t3.push(this.monthsShort(a2, ""));
          n2.push(this.months(a2, ""));
          r2.push(this.months(a2, ""));
          r2.push(this.monthsShort(a2, ""));
        }
        t3.sort(e2);
        n2.sort(e2);
        r2.sort(e2);
        for (i2 = 0; i2 < 12; i2++) {
          t3[i2] = Pe(t3[i2]);
          n2[i2] = Pe(n2[i2]);
        }
        for (i2 = 0; i2 < 24; i2++) {
          r2[i2] = Pe(r2[i2]);
        }
        this._monthsRegex = new RegExp("^(" + r2.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + n2.join("|") + ")", "i");
        this._monthsShortStrictRegex = new RegExp("^(" + t3.join("|") + ")", "i");
      }
      j("Y", 0, 0, function() {
        var e2 = this.year();
        return e2 <= 9999 ? C(e2, 4) : "+" + e2;
      });
      j(0, ["YY", 2], 0, function() {
        return this.year() % 100;
      });
      j(0, ["YYYY", 4], 0, "year");
      j(0, ["YYYYY", 5], 0, "year");
      j(0, ["YYYYYY", 6, true], 0, "year");
      ne("year", "y");
      oe("year", 1);
      Re("Y", Ee);
      Re("YY", Se, ge);
      Re("YYYY", _e, ye);
      Re("YYYYY", Me, we);
      Re("YYYYYY", Me, we);
      We(["YYYYY", "YYYYYY"], Ue);
      We("YYYY", function(e2, t3) {
        t3[Ue] = e2.length === 2 ? n.parseTwoDigitYear(e2) : le(e2);
      });
      We("YY", function(e2, t3) {
        t3[Ue] = n.parseTwoDigitYear(e2);
      });
      We("Y", function(e2, t3) {
        t3[Ue] = parseInt(e2, 10);
      });
      function mt(e2) {
        return ue(e2) ? 366 : 365;
      }
      n.parseTwoDigitYear = function(e2) {
        return le(e2) + (le(e2) > 68 ? 1900 : 2e3);
      };
      var pt = ce("FullYear", true);
      function gt() {
        return ue(this.year());
      }
      function bt(e2, t3, n2, r2, i2, a2, o2) {
        var s2;
        if (e2 < 100 && e2 >= 0) {
          s2 = new Date(e2 + 400, t3, n2, r2, i2, a2, o2);
          if (isFinite(s2.getFullYear())) {
            s2.setFullYear(e2);
          }
        } else {
          s2 = new Date(e2, t3, n2, r2, i2, a2, o2);
        }
        return s2;
      }
      function yt(e2) {
        var t3, n2;
        if (e2 < 100 && e2 >= 0) {
          n2 = Array.prototype.slice.call(arguments);
          n2[0] = e2 + 400;
          t3 = new Date(Date.UTC.apply(null, n2));
          if (isFinite(t3.getUTCFullYear())) {
            t3.setUTCFullYear(e2);
          }
        } else {
          t3 = new Date(Date.UTC.apply(null, arguments));
        }
        return t3;
      }
      function wt(e2, t3, n2) {
        var r2 = 7 + t3 - n2, i2 = (7 + yt(e2, 0, r2).getUTCDay() - t3) % 7;
        return -i2 + r2 - 1;
      }
      function St(e2, t3, n2, r2, i2) {
        var a2 = (7 + n2 - r2) % 7, o2 = wt(e2, r2, i2), s2 = 1 + 7 * (t3 - 1) + a2 + o2, u2, f2;
        if (s2 <= 0) {
          u2 = e2 - 1;
          f2 = mt(u2) + s2;
        } else if (s2 > mt(e2)) {
          u2 = e2 + 1;
          f2 = s2 - mt(e2);
        } else {
          u2 = e2;
          f2 = s2;
        }
        return { year: u2, dayOfYear: f2 };
      }
      function Dt(e2, t3, n2) {
        var r2 = wt(e2.year(), t3, n2), i2 = Math.floor((e2.dayOfYear() - r2 - 1) / 7) + 1, a2, o2;
        if (i2 < 1) {
          o2 = e2.year() - 1;
          a2 = i2 + kt(o2, t3, n2);
        } else if (i2 > kt(e2.year(), t3, n2)) {
          a2 = i2 - kt(e2.year(), t3, n2);
          o2 = e2.year() + 1;
        } else {
          o2 = e2.year();
          a2 = i2;
        }
        return { week: a2, year: o2 };
      }
      function kt(e2, t3, n2) {
        var r2 = wt(e2, t3, n2), i2 = wt(e2 + 1, t3, n2);
        return (mt(e2) - r2 + i2) / 7;
      }
      j("w", ["ww", 2], "wo", "week");
      j("W", ["WW", 2], "Wo", "isoWeek");
      ne("week", "w");
      ne("isoWeek", "W");
      oe("week", 5);
      oe("isoWeek", 5);
      Re("w", Se);
      Re("ww", Se, ge);
      Re("W", Se);
      Re("WW", Se, ge);
      je(["w", "ww", "W", "WW"], function(e2, t3, n2, r2) {
        t3[r2.substr(0, 1)] = le(e2);
      });
      function xt(e2) {
        return Dt(e2, this._week.dow, this._week.doy).week;
      }
      var _t = { dow: 0, doy: 6 };
      function Mt() {
        return this._week.dow;
      }
      function Tt() {
        return this._week.doy;
      }
      function Et(e2) {
        var t3 = this.localeData().week(this);
        return e2 == null ? t3 : this.add((e2 - t3) * 7, "d");
      }
      function Ft(e2) {
        var t3 = Dt(this, 1, 4).week;
        return e2 == null ? t3 : this.add((e2 - t3) * 7, "d");
      }
      j("d", 0, "do", "day");
      j("dd", 0, 0, function(e2) {
        return this.localeData().weekdaysMin(this, e2);
      });
      j("ddd", 0, 0, function(e2) {
        return this.localeData().weekdaysShort(this, e2);
      });
      j("dddd", 0, 0, function(e2) {
        return this.localeData().weekdays(this, e2);
      });
      j("e", 0, 0, "weekday");
      j("E", 0, 0, "isoWeekday");
      ne("day", "d");
      ne("weekday", "e");
      ne("isoWeekday", "E");
      oe("day", 11);
      oe("weekday", 11);
      oe("isoWeekday", 11);
      Re("d", Se);
      Re("e", Se);
      Re("E", Se);
      Re("dd", function(e2, t3) {
        return t3.weekdaysMinRegex(e2);
      });
      Re("ddd", function(e2, t3) {
        return t3.weekdaysShortRegex(e2);
      });
      Re("dddd", function(e2, t3) {
        return t3.weekdaysRegex(e2);
      });
      je(["dd", "ddd", "dddd"], function(e2, t3, n2, r2) {
        var i2 = n2._locale.weekdaysParse(e2, r2, n2._strict);
        if (i2 != null) {
          t3.d = i2;
        } else {
          m(n2).invalidWeekday = e2;
        }
      });
      je(["d", "e", "E"], function(e2, t3, n2, r2) {
        t3[r2] = le(e2);
      });
      function Yt(e2, t3) {
        if (typeof e2 !== "string") {
          return e2;
        }
        if (!isNaN(e2)) {
          return parseInt(e2, 10);
        }
        e2 = t3.weekdaysParse(e2);
        if (typeof e2 === "number") {
          return e2;
        }
        return null;
      }
      function At(e2, t3) {
        if (typeof e2 === "string") {
          return t3.weekdaysParse(e2) % 7 || 7;
        }
        return isNaN(e2) ? null : e2;
      }
      function Ot(e2, t3) {
        return e2.slice(t3, 7).concat(e2.slice(0, t3));
      }
      var Nt = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Rt = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), Ct = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), It = Oe, Pt = Oe, Lt = Oe;
      function Wt(e2, t3) {
        var n2 = i(this._weekdays) ? this._weekdays : this._weekdays[e2 && e2 !== true && this._weekdays.isFormat.test(t3) ? "format" : "standalone"];
        return e2 === true ? Ot(n2, this._week.dow) : e2 ? n2[e2.day()] : n2;
      }
      function jt(e2) {
        return e2 === true ? Ot(this._weekdaysShort, this._week.dow) : e2 ? this._weekdaysShort[e2.day()] : this._weekdaysShort;
      }
      function Ht(e2) {
        return e2 === true ? Ot(this._weekdaysMin, this._week.dow) : e2 ? this._weekdaysMin[e2.day()] : this._weekdaysMin;
      }
      function Ut(e2, t3, n2) {
        var r2, i2, a2, o2 = e2.toLocaleLowerCase();
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];
          for (r2 = 0; r2 < 7; ++r2) {
            a2 = h2([2e3, 1]).day(r2);
            this._minWeekdaysParse[r2] = this.weekdaysMin(a2, "").toLocaleLowerCase();
            this._shortWeekdaysParse[r2] = this.weekdaysShort(a2, "").toLocaleLowerCase();
            this._weekdaysParse[r2] = this.weekdays(a2, "").toLocaleLowerCase();
          }
        }
        if (n2) {
          if (t3 === "dddd") {
            i2 = Qe.call(this._weekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          } else if (t3 === "ddd") {
            i2 = Qe.call(this._shortWeekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          } else {
            i2 = Qe.call(this._minWeekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          }
        } else {
          if (t3 === "dddd") {
            i2 = Qe.call(this._weekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._shortWeekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._minWeekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          } else if (t3 === "ddd") {
            i2 = Qe.call(this._shortWeekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._weekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._minWeekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          } else {
            i2 = Qe.call(this._minWeekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._weekdaysParse, o2);
            if (i2 !== -1) {
              return i2;
            }
            i2 = Qe.call(this._shortWeekdaysParse, o2);
            return i2 !== -1 ? i2 : null;
          }
        }
      }
      function $t(e2, t3, n2) {
        var r2, i2, a2;
        if (this._weekdaysParseExact) {
          return Ut.call(this, e2, t3, n2);
        }
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }
        for (r2 = 0; r2 < 7; r2++) {
          i2 = h2([2e3, 1]).day(r2);
          if (n2 && !this._fullWeekdaysParse[r2]) {
            this._fullWeekdaysParse[r2] = new RegExp("^" + this.weekdays(i2, "").replace(".", "\\.?") + "$", "i");
            this._shortWeekdaysParse[r2] = new RegExp("^" + this.weekdaysShort(i2, "").replace(".", "\\.?") + "$", "i");
            this._minWeekdaysParse[r2] = new RegExp("^" + this.weekdaysMin(i2, "").replace(".", "\\.?") + "$", "i");
          }
          if (!this._weekdaysParse[r2]) {
            a2 = "^" + this.weekdays(i2, "") + "|^" + this.weekdaysShort(i2, "") + "|^" + this.weekdaysMin(i2, "");
            this._weekdaysParse[r2] = new RegExp(a2.replace(".", ""), "i");
          }
          if (n2 && t3 === "dddd" && this._fullWeekdaysParse[r2].test(e2)) {
            return r2;
          } else if (n2 && t3 === "ddd" && this._shortWeekdaysParse[r2].test(e2)) {
            return r2;
          } else if (n2 && t3 === "dd" && this._minWeekdaysParse[r2].test(e2)) {
            return r2;
          } else if (!n2 && this._weekdaysParse[r2].test(e2)) {
            return r2;
          }
        }
      }
      function Gt(e2) {
        if (!this.isValid()) {
          return e2 != null ? this : NaN;
        }
        var t3 = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (e2 != null) {
          e2 = Yt(e2, this.localeData());
          return this.add(e2 - t3, "d");
        } else {
          return t3;
        }
      }
      function qt(e2) {
        if (!this.isValid()) {
          return e2 != null ? this : NaN;
        }
        var t3 = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return e2 == null ? t3 : this.add(e2 - t3, "d");
      }
      function zt(e2) {
        if (!this.isValid()) {
          return e2 != null ? this : NaN;
        }
        if (e2 != null) {
          var t3 = At(e2, this.localeData());
          return this.day(this.day() % 7 ? t3 : t3 - 7);
        } else {
          return this.day() || 7;
        }
      }
      function Bt(e2) {
        if (this._weekdaysParseExact) {
          if (!o(this, "_weekdaysRegex")) {
            Vt.call(this);
          }
          if (e2) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!o(this, "_weekdaysRegex")) {
            this._weekdaysRegex = It;
          }
          return this._weekdaysStrictRegex && e2 ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }
      function Zt(e2) {
        if (this._weekdaysParseExact) {
          if (!o(this, "_weekdaysRegex")) {
            Vt.call(this);
          }
          if (e2) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!o(this, "_weekdaysShortRegex")) {
            this._weekdaysShortRegex = Pt;
          }
          return this._weekdaysShortStrictRegex && e2 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }
      function Jt(e2) {
        if (this._weekdaysParseExact) {
          if (!o(this, "_weekdaysRegex")) {
            Vt.call(this);
          }
          if (e2) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!o(this, "_weekdaysMinRegex")) {
            this._weekdaysMinRegex = Lt;
          }
          return this._weekdaysMinStrictRegex && e2 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }
      function Vt() {
        function e2(e3, t4) {
          return t4.length - e3.length;
        }
        var t3 = [], n2 = [], r2 = [], i2 = [], a2, o2, s2, u2, f2;
        for (a2 = 0; a2 < 7; a2++) {
          o2 = h2([2e3, 1]).day(a2);
          s2 = Pe(this.weekdaysMin(o2, ""));
          u2 = Pe(this.weekdaysShort(o2, ""));
          f2 = Pe(this.weekdays(o2, ""));
          t3.push(s2);
          n2.push(u2);
          r2.push(f2);
          i2.push(s2);
          i2.push(u2);
          i2.push(f2);
        }
        t3.sort(e2);
        n2.sort(e2);
        r2.sort(e2);
        i2.sort(e2);
        this._weekdaysRegex = new RegExp("^(" + i2.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + r2.join("|") + ")", "i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + n2.join("|") + ")", "i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + t3.join("|") + ")", "i");
      }
      function Xt() {
        return this.hours() % 12 || 12;
      }
      function Qt() {
        return this.hours() || 24;
      }
      j("H", ["HH", 2], 0, "hour");
      j("h", ["hh", 2], 0, Xt);
      j("k", ["kk", 2], 0, Qt);
      j("hmm", 0, 0, function() {
        return "" + Xt.apply(this) + C(this.minutes(), 2);
      });
      j("hmmss", 0, 0, function() {
        return "" + Xt.apply(this) + C(this.minutes(), 2) + C(this.seconds(), 2);
      });
      j("Hmm", 0, 0, function() {
        return "" + this.hours() + C(this.minutes(), 2);
      });
      j("Hmmss", 0, 0, function() {
        return "" + this.hours() + C(this.minutes(), 2) + C(this.seconds(), 2);
      });
      function Kt(e2, t3) {
        j(e2, 0, 0, function() {
          return this.localeData().meridiem(this.hours(), this.minutes(), t3);
        });
      }
      Kt("a", true);
      Kt("A", false);
      ne("hour", "h");
      oe("hour", 13);
      function en(e2, t3) {
        return t3._meridiemParse;
      }
      Re("a", en);
      Re("A", en);
      Re("H", Se);
      Re("h", Se);
      Re("k", Se);
      Re("HH", Se, ge);
      Re("hh", Se, ge);
      Re("kk", Se, ge);
      Re("hmm", De);
      Re("hmmss", ke);
      Re("Hmm", De);
      Re("Hmmss", ke);
      We(["H", "HH"], qe);
      We(["k", "kk"], function(e2, t3, n2) {
        var r2 = le(e2);
        t3[qe] = r2 === 24 ? 0 : r2;
      });
      We(["a", "A"], function(e2, t3, n2) {
        n2._isPm = n2._locale.isPM(e2);
        n2._meridiem = e2;
      });
      We(["h", "hh"], function(e2, t3, n2) {
        t3[qe] = le(e2);
        m(n2).bigHour = true;
      });
      We("hmm", function(e2, t3, n2) {
        var r2 = e2.length - 2;
        t3[qe] = le(e2.substr(0, r2));
        t3[ze] = le(e2.substr(r2));
        m(n2).bigHour = true;
      });
      We("hmmss", function(e2, t3, n2) {
        var r2 = e2.length - 4, i2 = e2.length - 2;
        t3[qe] = le(e2.substr(0, r2));
        t3[ze] = le(e2.substr(r2, 2));
        t3[Be] = le(e2.substr(i2));
        m(n2).bigHour = true;
      });
      We("Hmm", function(e2, t3, n2) {
        var r2 = e2.length - 2;
        t3[qe] = le(e2.substr(0, r2));
        t3[ze] = le(e2.substr(r2));
      });
      We("Hmmss", function(e2, t3, n2) {
        var r2 = e2.length - 4, i2 = e2.length - 2;
        t3[qe] = le(e2.substr(0, r2));
        t3[ze] = le(e2.substr(r2, 2));
        t3[Be] = le(e2.substr(i2));
      });
      function tn(e2) {
        return (e2 + "").toLowerCase().charAt(0) === "p";
      }
      var nn = /[ap]\.?m?\.?/i, rn = ce("Hours", true);
      function an(e2, t3, n2) {
        if (e2 > 11) {
          return n2 ? "pm" : "PM";
        } else {
          return n2 ? "am" : "AM";
        }
      }
      var on = { calendar: N, longDateFormat: q, invalidDate: B, ordinal: J, dayOfMonthOrdinalParse: V, relativeTime: Q, months: et, monthsShort: tt, week: _t, weekdays: Nt, weekdaysMin: Ct, weekdaysShort: Rt, meridiemParse: nn };
      var sn = {}, un = {}, fn;
      function ln(e2, t3) {
        var n2, r2 = Math.min(e2.length, t3.length);
        for (n2 = 0; n2 < r2; n2 += 1) {
          if (e2[n2] !== t3[n2]) {
            return n2;
          }
        }
        return r2;
      }
      function cn(e2) {
        return e2 ? e2.toLowerCase().replace("_", "-") : e2;
      }
      function dn(e2) {
        var t3 = 0, n2, r2, i2, a2;
        while (t3 < e2.length) {
          a2 = cn(e2[t3]).split("-");
          n2 = a2.length;
          r2 = cn(e2[t3 + 1]);
          r2 = r2 ? r2.split("-") : null;
          while (n2 > 0) {
            i2 = vn(a2.slice(0, n2).join("-"));
            if (i2) {
              return i2;
            }
            if (r2 && r2.length >= n2 && ln(a2, r2) >= n2 - 1) {
              break;
            }
            n2--;
          }
          t3++;
        }
        return fn;
      }
      function hn(e2) {
        return e2.match("^[^/\\\\]*$") != null;
      }
      function vn(t3) {
        var n2 = null, r2;
        if (sn[t3] === void 0 && true && e && e.exports && hn(t3)) {
          try {
            n2 = fn._abbr;
            r2 = commonjsRequire;
            r2("./locale/" + t3);
            mn(n2);
          } catch (e2) {
            sn[t3] = null;
          }
        }
        return sn[t3];
      }
      function mn(e2, t3) {
        var n2;
        if (e2) {
          if (u(t3)) {
            n2 = bn(e2);
          } else {
            n2 = pn(e2, t3);
          }
          if (n2) {
            fn = n2;
          } else {
            if (typeof console !== "undefined" && console.warn) {
              console.warn("Locale " + e2 + " not found. Did you forget to load it?");
            }
          }
        }
        return fn._abbr;
      }
      function pn(e2, t3) {
        if (t3 !== null) {
          var n2, r2 = on;
          t3.abbr = e2;
          if (sn[e2] != null) {
            T("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
            r2 = sn[e2]._config;
          } else if (t3.parentLocale != null) {
            if (sn[t3.parentLocale] != null) {
              r2 = sn[t3.parentLocale]._config;
            } else {
              n2 = vn(t3.parentLocale);
              if (n2 != null) {
                r2 = n2._config;
              } else {
                if (!un[t3.parentLocale]) {
                  un[t3.parentLocale] = [];
                }
                un[t3.parentLocale].push({ name: e2, config: t3 });
                return null;
              }
            }
          }
          sn[e2] = new A(Y(r2, t3));
          if (un[e2]) {
            un[e2].forEach(function(e3) {
              pn(e3.name, e3.config);
            });
          }
          mn(e2);
          return sn[e2];
        } else {
          delete sn[e2];
          return null;
        }
      }
      function gn(e2, t3) {
        if (t3 != null) {
          var n2, r2, i2 = on;
          if (sn[e2] != null && sn[e2].parentLocale != null) {
            sn[e2].set(Y(sn[e2]._config, t3));
          } else {
            r2 = vn(e2);
            if (r2 != null) {
              i2 = r2._config;
            }
            t3 = Y(i2, t3);
            if (r2 == null) {
              t3.abbr = e2;
            }
            n2 = new A(t3);
            n2.parentLocale = sn[e2];
            sn[e2] = n2;
          }
          mn(e2);
        } else {
          if (sn[e2] != null) {
            if (sn[e2].parentLocale != null) {
              sn[e2] = sn[e2].parentLocale;
              if (e2 === mn()) {
                mn(e2);
              }
            } else if (sn[e2] != null) {
              delete sn[e2];
            }
          }
        }
        return sn[e2];
      }
      function bn(e2) {
        var t3;
        if (e2 && e2._locale && e2._locale._abbr) {
          e2 = e2._locale._abbr;
        }
        if (!e2) {
          return fn;
        }
        if (!i(e2)) {
          t3 = vn(e2);
          if (t3) {
            return t3;
          }
          e2 = [e2];
        }
        return dn(e2);
      }
      function yn() {
        return O(sn);
      }
      function wn(e2) {
        var t3, n2 = e2._a;
        if (n2 && m(e2).overflow === -2) {
          t3 = n2[$e] < 0 || n2[$e] > 11 ? $e : n2[Ge] < 1 || n2[Ge] > Ke(n2[Ue], n2[$e]) ? Ge : n2[qe] < 0 || n2[qe] > 24 || n2[qe] === 24 && (n2[ze] !== 0 || n2[Be] !== 0 || n2[Ze] !== 0) ? qe : n2[ze] < 0 || n2[ze] > 59 ? ze : n2[Be] < 0 || n2[Be] > 59 ? Be : n2[Ze] < 0 || n2[Ze] > 999 ? Ze : -1;
          if (m(e2)._overflowDayOfYear && (t3 < Ue || t3 > Ge)) {
            t3 = Ge;
          }
          if (m(e2)._overflowWeeks && t3 === -1) {
            t3 = Je;
          }
          if (m(e2)._overflowWeekday && t3 === -1) {
            t3 = Ve;
          }
          m(e2).overflow = t3;
        }
        return e2;
      }
      var Sn = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Dn = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, kn = /Z|[+-]\d\d(?::?\d\d)?/, xn = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, false], ["YYYY", /\d{4}/, false]], _n = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]], Mn = /^\/?Date\((-?\d+)/i, Tn = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, En = { UT: 0, GMT: 0, EDT: -4 * 60, EST: -5 * 60, CDT: -5 * 60, CST: -6 * 60, MDT: -6 * 60, MST: -7 * 60, PDT: -7 * 60, PST: -8 * 60 };
      function Fn(e2) {
        var t3, n2, r2 = e2._i, i2 = Sn.exec(r2) || Dn.exec(r2), a2, o2, s2, u2, f2 = xn.length, l2 = _n.length;
        if (i2) {
          m(e2).iso = true;
          for (t3 = 0, n2 = f2; t3 < n2; t3++) {
            if (xn[t3][1].exec(i2[1])) {
              o2 = xn[t3][0];
              a2 = xn[t3][2] !== false;
              break;
            }
          }
          if (o2 == null) {
            e2._isValid = false;
            return;
          }
          if (i2[3]) {
            for (t3 = 0, n2 = l2; t3 < n2; t3++) {
              if (_n[t3][1].exec(i2[3])) {
                s2 = (i2[2] || " ") + _n[t3][0];
                break;
              }
            }
            if (s2 == null) {
              e2._isValid = false;
              return;
            }
          }
          if (!a2 && s2 != null) {
            e2._isValid = false;
            return;
          }
          if (i2[4]) {
            if (kn.exec(i2[4])) {
              u2 = "Z";
            } else {
              e2._isValid = false;
              return;
            }
          }
          e2._f = o2 + (s2 || "") + (u2 || "");
          Hn(e2);
        } else {
          e2._isValid = false;
        }
      }
      function Yn(e2, t3, n2, r2, i2, a2) {
        var o2 = [An(e2), tt.indexOf(t3), parseInt(n2, 10), parseInt(r2, 10), parseInt(i2, 10)];
        if (a2) {
          o2.push(parseInt(a2, 10));
        }
        return o2;
      }
      function An(e2) {
        var t3 = parseInt(e2, 10);
        if (t3 <= 49) {
          return 2e3 + t3;
        } else if (t3 <= 999) {
          return 1900 + t3;
        }
        return t3;
      }
      function On(e2) {
        return e2.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
      }
      function Nn(e2, t3, n2) {
        if (e2) {
          var r2 = Rt.indexOf(e2), i2 = new Date(t3[0], t3[1], t3[2]).getDay();
          if (r2 !== i2) {
            m(n2).weekdayMismatch = true;
            n2._isValid = false;
            return false;
          }
        }
        return true;
      }
      function Rn(e2, t3, n2) {
        if (e2) {
          return En[e2];
        } else if (t3) {
          return 0;
        } else {
          var r2 = parseInt(n2, 10), i2 = r2 % 100, a2 = (r2 - i2) / 100;
          return a2 * 60 + i2;
        }
      }
      function Cn(e2) {
        var t3 = Tn.exec(On(e2._i)), n2;
        if (t3) {
          n2 = Yn(t3[4], t3[3], t3[2], t3[5], t3[6], t3[7]);
          if (!Nn(t3[1], n2, e2)) {
            return;
          }
          e2._a = n2;
          e2._tzm = Rn(t3[8], t3[9], t3[10]);
          e2._d = yt.apply(null, e2._a);
          e2._d.setUTCMinutes(e2._d.getUTCMinutes() - e2._tzm);
          m(e2).rfc2822 = true;
        } else {
          e2._isValid = false;
        }
      }
      function In(e2) {
        var t3 = Mn.exec(e2._i);
        if (t3 !== null) {
          e2._d = /* @__PURE__ */ new Date(+t3[1]);
          return;
        }
        Fn(e2);
        if (e2._isValid === false) {
          delete e2._isValid;
        } else {
          return;
        }
        Cn(e2);
        if (e2._isValid === false) {
          delete e2._isValid;
        } else {
          return;
        }
        if (e2._strict) {
          e2._isValid = false;
        } else {
          n.createFromInputFallback(e2);
        }
      }
      n.createFromInputFallback = _("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e2) {
        e2._d = /* @__PURE__ */ new Date(e2._i + (e2._useUTC ? " UTC" : ""));
      });
      function Pn(e2, t3, n2) {
        if (e2 != null) {
          return e2;
        }
        if (t3 != null) {
          return t3;
        }
        return n2;
      }
      function Ln(e2) {
        var t3 = new Date(n.now());
        if (e2._useUTC) {
          return [t3.getUTCFullYear(), t3.getUTCMonth(), t3.getUTCDate()];
        }
        return [t3.getFullYear(), t3.getMonth(), t3.getDate()];
      }
      function Wn(e2) {
        var t3, n2, r2 = [], i2, a2, o2;
        if (e2._d) {
          return;
        }
        i2 = Ln(e2);
        if (e2._w && e2._a[Ge] == null && e2._a[$e] == null) {
          jn(e2);
        }
        if (e2._dayOfYear != null) {
          o2 = Pn(e2._a[Ue], i2[Ue]);
          if (e2._dayOfYear > mt(o2) || e2._dayOfYear === 0) {
            m(e2)._overflowDayOfYear = true;
          }
          n2 = yt(o2, 0, e2._dayOfYear);
          e2._a[$e] = n2.getUTCMonth();
          e2._a[Ge] = n2.getUTCDate();
        }
        for (t3 = 0; t3 < 3 && e2._a[t3] == null; ++t3) {
          e2._a[t3] = r2[t3] = i2[t3];
        }
        for (; t3 < 7; t3++) {
          e2._a[t3] = r2[t3] = e2._a[t3] == null ? t3 === 2 ? 1 : 0 : e2._a[t3];
        }
        if (e2._a[qe] === 24 && e2._a[ze] === 0 && e2._a[Be] === 0 && e2._a[Ze] === 0) {
          e2._nextDay = true;
          e2._a[qe] = 0;
        }
        e2._d = (e2._useUTC ? yt : bt).apply(null, r2);
        a2 = e2._useUTC ? e2._d.getUTCDay() : e2._d.getDay();
        if (e2._tzm != null) {
          e2._d.setUTCMinutes(e2._d.getUTCMinutes() - e2._tzm);
        }
        if (e2._nextDay) {
          e2._a[qe] = 24;
        }
        if (e2._w && typeof e2._w.d !== "undefined" && e2._w.d !== a2) {
          m(e2).weekdayMismatch = true;
        }
      }
      function jn(e2) {
        var t3, n2, r2, i2, a2, o2, s2, u2, f2;
        t3 = e2._w;
        if (t3.GG != null || t3.W != null || t3.E != null) {
          a2 = 1;
          o2 = 4;
          n2 = Pn(t3.GG, e2._a[Ue], Dt(Jn(), 1, 4).year);
          r2 = Pn(t3.W, 1);
          i2 = Pn(t3.E, 1);
          if (i2 < 1 || i2 > 7) {
            u2 = true;
          }
        } else {
          a2 = e2._locale._week.dow;
          o2 = e2._locale._week.doy;
          f2 = Dt(Jn(), a2, o2);
          n2 = Pn(t3.gg, e2._a[Ue], f2.year);
          r2 = Pn(t3.w, f2.week);
          if (t3.d != null) {
            i2 = t3.d;
            if (i2 < 0 || i2 > 6) {
              u2 = true;
            }
          } else if (t3.e != null) {
            i2 = t3.e + a2;
            if (t3.e < 0 || t3.e > 6) {
              u2 = true;
            }
          } else {
            i2 = a2;
          }
        }
        if (r2 < 1 || r2 > kt(n2, a2, o2)) {
          m(e2)._overflowWeeks = true;
        } else if (u2 != null) {
          m(e2)._overflowWeekday = true;
        } else {
          s2 = St(n2, r2, i2, a2, o2);
          e2._a[Ue] = s2.year;
          e2._dayOfYear = s2.dayOfYear;
        }
      }
      n.ISO_8601 = function() {
      };
      n.RFC_2822 = function() {
      };
      function Hn(e2) {
        if (e2._f === n.ISO_8601) {
          Fn(e2);
          return;
        }
        if (e2._f === n.RFC_2822) {
          Cn(e2);
          return;
        }
        e2._a = [];
        m(e2).empty = true;
        var t3 = "" + e2._i, r2, i2, a2, o2, s2, u2 = t3.length, f2 = 0, l2, c2;
        a2 = G(e2._f, e2._locale).match(I) || [];
        c2 = a2.length;
        for (r2 = 0; r2 < c2; r2++) {
          o2 = a2[r2];
          i2 = (t3.match(Ce(o2, e2)) || [])[0];
          if (i2) {
            s2 = t3.substr(0, t3.indexOf(i2));
            if (s2.length > 0) {
              m(e2).unusedInput.push(s2);
            }
            t3 = t3.slice(t3.indexOf(i2) + i2.length);
            f2 += i2.length;
          }
          if (W[o2]) {
            if (i2) {
              m(e2).empty = false;
            } else {
              m(e2).unusedTokens.push(o2);
            }
            He(o2, i2, e2);
          } else if (e2._strict && !i2) {
            m(e2).unusedTokens.push(o2);
          }
        }
        m(e2).charsLeftOver = u2 - f2;
        if (t3.length > 0) {
          m(e2).unusedInput.push(t3);
        }
        if (e2._a[qe] <= 12 && m(e2).bigHour === true && e2._a[qe] > 0) {
          m(e2).bigHour = void 0;
        }
        m(e2).parsedDateParts = e2._a.slice(0);
        m(e2).meridiem = e2._meridiem;
        e2._a[qe] = Un(e2._locale, e2._a[qe], e2._meridiem);
        l2 = m(e2).era;
        if (l2 !== null) {
          e2._a[Ue] = e2._locale.erasConvertYear(l2, e2._a[Ue]);
        }
        Wn(e2);
        wn(e2);
      }
      function Un(e2, t3, n2) {
        var r2;
        if (n2 == null) {
          return t3;
        }
        if (e2.meridiemHour != null) {
          return e2.meridiemHour(t3, n2);
        } else if (e2.isPM != null) {
          r2 = e2.isPM(n2);
          if (r2 && t3 < 12) {
            t3 += 12;
          }
          if (!r2 && t3 === 12) {
            t3 = 0;
          }
          return t3;
        } else {
          return t3;
        }
      }
      function $n(e2) {
        var t3, n2, r2, i2, a2, o2, s2 = false, u2 = e2._f.length;
        if (u2 === 0) {
          m(e2).invalidFormat = true;
          e2._d = /* @__PURE__ */ new Date(NaN);
          return;
        }
        for (i2 = 0; i2 < u2; i2++) {
          a2 = 0;
          o2 = false;
          t3 = S({}, e2);
          if (e2._useUTC != null) {
            t3._useUTC = e2._useUTC;
          }
          t3._f = e2._f[i2];
          Hn(t3);
          if (g(t3)) {
            o2 = true;
          }
          a2 += m(t3).charsLeftOver;
          a2 += m(t3).unusedTokens.length * 10;
          m(t3).score = a2;
          if (!s2) {
            if (r2 == null || a2 < r2 || o2) {
              r2 = a2;
              n2 = t3;
              if (o2) {
                s2 = true;
              }
            }
          } else {
            if (a2 < r2) {
              r2 = a2;
              n2 = t3;
            }
          }
        }
        d(e2, n2 || t3);
      }
      function Gn(e2) {
        if (e2._d) {
          return;
        }
        var t3 = ie(e2._i), n2 = t3.day === void 0 ? t3.date : t3.day;
        e2._a = c([t3.year, t3.month, n2, t3.hour, t3.minute, t3.second, t3.millisecond], function(e3) {
          return e3 && parseInt(e3, 10);
        });
        Wn(e2);
      }
      function qn(e2) {
        var t3 = new D(wn(zn(e2)));
        if (t3._nextDay) {
          t3.add(1, "d");
          t3._nextDay = void 0;
        }
        return t3;
      }
      function zn(e2) {
        var t3 = e2._i, n2 = e2._f;
        e2._locale = e2._locale || bn(e2._l);
        if (t3 === null || n2 === void 0 && t3 === "") {
          return b({ nullInput: true });
        }
        if (typeof t3 === "string") {
          e2._i = t3 = e2._locale.preparse(t3);
        }
        if (k(t3)) {
          return new D(wn(t3));
        } else if (l(t3)) {
          e2._d = t3;
        } else if (i(n2)) {
          $n(e2);
        } else if (n2) {
          Hn(e2);
        } else {
          Bn(e2);
        }
        if (!g(e2)) {
          e2._d = null;
        }
        return e2;
      }
      function Bn(e2) {
        var t3 = e2._i;
        if (u(t3)) {
          e2._d = new Date(n.now());
        } else if (l(t3)) {
          e2._d = new Date(t3.valueOf());
        } else if (typeof t3 === "string") {
          In(e2);
        } else if (i(t3)) {
          e2._a = c(t3.slice(0), function(e3) {
            return parseInt(e3, 10);
          });
          Wn(e2);
        } else if (a(t3)) {
          Gn(e2);
        } else if (f(t3)) {
          e2._d = new Date(t3);
        } else {
          n.createFromInputFallback(e2);
        }
      }
      function Zn(e2, t3, n2, r2, o2) {
        var u2 = {};
        if (t3 === true || t3 === false) {
          r2 = t3;
          t3 = void 0;
        }
        if (n2 === true || n2 === false) {
          r2 = n2;
          n2 = void 0;
        }
        if (a(e2) && s(e2) || i(e2) && e2.length === 0) {
          e2 = void 0;
        }
        u2._isAMomentObject = true;
        u2._useUTC = u2._isUTC = o2;
        u2._l = n2;
        u2._i = e2;
        u2._f = t3;
        u2._strict = r2;
        return qn(u2);
      }
      function Jn(e2, t3, n2, r2) {
        return Zn(e2, t3, n2, r2, false);
      }
      var Vn = _("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e2 = Jn.apply(null, arguments);
        if (this.isValid() && e2.isValid()) {
          return e2 < this ? this : e2;
        } else {
          return b();
        }
      }), Xn = _("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e2 = Jn.apply(null, arguments);
        if (this.isValid() && e2.isValid()) {
          return e2 > this ? this : e2;
        } else {
          return b();
        }
      });
      function Qn(e2, t3) {
        var n2, r2;
        if (t3.length === 1 && i(t3[0])) {
          t3 = t3[0];
        }
        if (!t3.length) {
          return Jn();
        }
        n2 = t3[0];
        for (r2 = 1; r2 < t3.length; ++r2) {
          if (!t3[r2].isValid() || t3[r2][e2](n2)) {
            n2 = t3[r2];
          }
        }
        return n2;
      }
      function Kn() {
        var e2 = [].slice.call(arguments, 0);
        return Qn("isBefore", e2);
      }
      function er() {
        var e2 = [].slice.call(arguments, 0);
        return Qn("isAfter", e2);
      }
      var tr = function() {
        return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
      };
      var nr = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
      function rr(e2) {
        var t3, n2 = false, r2, i2 = nr.length;
        for (t3 in e2) {
          if (o(e2, t3) && !(Qe.call(nr, t3) !== -1 && (e2[t3] == null || !isNaN(e2[t3])))) {
            return false;
          }
        }
        for (r2 = 0; r2 < i2; ++r2) {
          if (e2[nr[r2]]) {
            if (n2) {
              return false;
            }
            if (parseFloat(e2[nr[r2]]) !== le(e2[nr[r2]])) {
              n2 = true;
            }
          }
        }
        return true;
      }
      function ir() {
        return this._isValid;
      }
      function ar() {
        return Er(NaN);
      }
      function or(e2) {
        var t3 = ie(e2), n2 = t3.year || 0, r2 = t3.quarter || 0, i2 = t3.month || 0, a2 = t3.week || t3.isoWeek || 0, o2 = t3.day || 0, s2 = t3.hour || 0, u2 = t3.minute || 0, f2 = t3.second || 0, l2 = t3.millisecond || 0;
        this._isValid = rr(t3);
        this._milliseconds = +l2 + f2 * 1e3 + u2 * 6e4 + s2 * 1e3 * 60 * 60;
        this._days = +o2 + a2 * 7;
        this._months = +i2 + r2 * 3 + n2 * 12;
        this._data = {};
        this._locale = bn();
        this._bubble();
      }
      function sr(e2) {
        return e2 instanceof or;
      }
      function ur(e2) {
        if (e2 < 0) {
          return Math.round(-1 * e2) * -1;
        } else {
          return Math.round(e2);
        }
      }
      function fr(e2, t3, n2) {
        var r2 = Math.min(e2.length, t3.length), i2 = Math.abs(e2.length - t3.length), a2 = 0, o2;
        for (o2 = 0; o2 < r2; o2++) {
          if (le(e2[o2]) !== le(t3[o2])) {
            a2++;
          }
        }
        return a2 + i2;
      }
      function lr(e2, t3) {
        j(e2, 0, 0, function() {
          var e3 = this.utcOffset(), n2 = "+";
          if (e3 < 0) {
            e3 = -e3;
            n2 = "-";
          }
          return n2 + C(~~(e3 / 60), 2) + t3 + C(~~e3 % 60, 2);
        });
      }
      lr("Z", ":");
      lr("ZZ", "");
      Re("Z", Ye);
      Re("ZZ", Ye);
      We(["Z", "ZZ"], function(e2, t3, n2) {
        n2._useUTC = true;
        n2._tzm = dr(Ye, e2);
      });
      var cr = /([\+\-]|\d\d)/gi;
      function dr(e2, t3) {
        var n2 = (t3 || "").match(e2), r2, i2, a2;
        if (n2 === null) {
          return null;
        }
        r2 = n2[n2.length - 1] || [];
        i2 = (r2 + "").match(cr) || ["-", 0, 0];
        a2 = +(i2[1] * 60) + le(i2[2]);
        return a2 === 0 ? 0 : i2[0] === "+" ? a2 : -a2;
      }
      function hr(e2, t3) {
        var r2, i2;
        if (t3._isUTC) {
          r2 = t3.clone();
          i2 = (k(e2) || l(e2) ? e2.valueOf() : Jn(e2).valueOf()) - r2.valueOf();
          r2._d.setTime(r2._d.valueOf() + i2);
          n.updateOffset(r2, false);
          return r2;
        } else {
          return Jn(e2).local();
        }
      }
      function vr(e2) {
        return -Math.round(e2._d.getTimezoneOffset());
      }
      n.updateOffset = function() {
      };
      function mr(e2, t3, r2) {
        var i2 = this._offset || 0, a2;
        if (!this.isValid()) {
          return e2 != null ? this : NaN;
        }
        if (e2 != null) {
          if (typeof e2 === "string") {
            e2 = dr(Ye, e2);
            if (e2 === null) {
              return this;
            }
          } else if (Math.abs(e2) < 16 && !r2) {
            e2 = e2 * 60;
          }
          if (!this._isUTC && t3) {
            a2 = vr(this);
          }
          this._offset = e2;
          this._isUTC = true;
          if (a2 != null) {
            this.add(a2, "m");
          }
          if (i2 !== e2) {
            if (!t3 || this._changeInProgress) {
              Nr(this, Er(e2 - i2, "m"), 1, false);
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              n.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }
          return this;
        } else {
          return this._isUTC ? i2 : vr(this);
        }
      }
      function pr(e2, t3) {
        if (e2 != null) {
          if (typeof e2 !== "string") {
            e2 = -e2;
          }
          this.utcOffset(e2, t3);
          return this;
        } else {
          return -this.utcOffset();
        }
      }
      function gr(e2) {
        return this.utcOffset(0, e2);
      }
      function br(e2) {
        if (this._isUTC) {
          this.utcOffset(0, e2);
          this._isUTC = false;
          if (e2) {
            this.subtract(vr(this), "m");
          }
        }
        return this;
      }
      function yr() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === "string") {
          var e2 = dr(Fe, this._i);
          if (e2 != null) {
            this.utcOffset(e2);
          } else {
            this.utcOffset(0, true);
          }
        }
        return this;
      }
      function wr(e2) {
        if (!this.isValid()) {
          return false;
        }
        e2 = e2 ? Jn(e2).utcOffset() : 0;
        return (this.utcOffset() - e2) % 60 === 0;
      }
      function Sr() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }
      function Dr() {
        if (!u(this._isDSTShifted)) {
          return this._isDSTShifted;
        }
        var e2 = {}, t3;
        S(e2, this);
        e2 = zn(e2);
        if (e2._a) {
          t3 = e2._isUTC ? h2(e2._a) : Jn(e2._a);
          this._isDSTShifted = this.isValid() && fr(e2._a, t3.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }
        return this._isDSTShifted;
      }
      function kr() {
        return this.isValid() ? !this._isUTC : false;
      }
      function xr() {
        return this.isValid() ? this._isUTC : false;
      }
      function _r() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      }
      var Mr = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, Tr = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
      function Er(e2, t3) {
        var n2 = e2, r2 = null, i2, a2, s2;
        if (sr(e2)) {
          n2 = { ms: e2._milliseconds, d: e2._days, M: e2._months };
        } else if (f(e2) || !isNaN(+e2)) {
          n2 = {};
          if (t3) {
            n2[t3] = +e2;
          } else {
            n2.milliseconds = +e2;
          }
        } else if (r2 = Mr.exec(e2)) {
          i2 = r2[1] === "-" ? -1 : 1;
          n2 = { y: 0, d: le(r2[Ge]) * i2, h: le(r2[qe]) * i2, m: le(r2[ze]) * i2, s: le(r2[Be]) * i2, ms: le(ur(r2[Ze] * 1e3)) * i2 };
        } else if (r2 = Tr.exec(e2)) {
          i2 = r2[1] === "-" ? -1 : 1;
          n2 = { y: Fr(r2[2], i2), M: Fr(r2[3], i2), w: Fr(r2[4], i2), d: Fr(r2[5], i2), h: Fr(r2[6], i2), m: Fr(r2[7], i2), s: Fr(r2[8], i2) };
        } else if (n2 == null) {
          n2 = {};
        } else if (typeof n2 === "object" && ("from" in n2 || "to" in n2)) {
          s2 = Ar(Jn(n2.from), Jn(n2.to));
          n2 = {};
          n2.ms = s2.milliseconds;
          n2.M = s2.months;
        }
        a2 = new or(n2);
        if (sr(e2) && o(e2, "_locale")) {
          a2._locale = e2._locale;
        }
        if (sr(e2) && o(e2, "_isValid")) {
          a2._isValid = e2._isValid;
        }
        return a2;
      }
      Er.fn = or.prototype;
      Er.invalid = ar;
      function Fr(e2, t3) {
        var n2 = e2 && parseFloat(e2.replace(",", "."));
        return (isNaN(n2) ? 0 : n2) * t3;
      }
      function Yr(e2, t3) {
        var n2 = {};
        n2.months = t3.month() - e2.month() + (t3.year() - e2.year()) * 12;
        if (e2.clone().add(n2.months, "M").isAfter(t3)) {
          --n2.months;
        }
        n2.milliseconds = +t3 - +e2.clone().add(n2.months, "M");
        return n2;
      }
      function Ar(e2, t3) {
        var n2;
        if (!(e2.isValid() && t3.isValid())) {
          return { milliseconds: 0, months: 0 };
        }
        t3 = hr(t3, e2);
        if (e2.isBefore(t3)) {
          n2 = Yr(e2, t3);
        } else {
          n2 = Yr(t3, e2);
          n2.milliseconds = -n2.milliseconds;
          n2.months = -n2.months;
        }
        return n2;
      }
      function Or(e2, t3) {
        return function(n2, r2) {
          var i2, a2;
          if (r2 !== null && !isNaN(+r2)) {
            T(t3, "moment()." + t3 + "(period, number) is deprecated. Please use moment()." + t3 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
            a2 = n2;
            n2 = r2;
            r2 = a2;
          }
          i2 = Er(n2, r2);
          Nr(this, i2, e2);
          return this;
        };
      }
      function Nr(e2, t3, r2, i2) {
        var a2 = t3._milliseconds, o2 = ur(t3._days), s2 = ur(t3._months);
        if (!e2.isValid()) {
          return;
        }
        i2 = i2 == null ? true : i2;
        if (s2) {
          ft(e2, de(e2, "Month") + s2 * r2);
        }
        if (o2) {
          he(e2, "Date", de(e2, "Date") + o2 * r2);
        }
        if (a2) {
          e2._d.setTime(e2._d.valueOf() + a2 * r2);
        }
        if (i2) {
          n.updateOffset(e2, o2 || s2);
        }
      }
      var Rr = Or(1, "add"), Cr = Or(-1, "subtract");
      function Ir(e2) {
        return typeof e2 === "string" || e2 instanceof String;
      }
      function Pr(e2) {
        return k(e2) || l(e2) || Ir(e2) || f(e2) || Wr(e2) || Lr(e2) || e2 === null || e2 === void 0;
      }
      function Lr(e2) {
        var t3 = a(e2) && !s(e2), n2 = false, r2 = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"], i2, u2, f2 = r2.length;
        for (i2 = 0; i2 < f2; i2 += 1) {
          u2 = r2[i2];
          n2 = n2 || o(e2, u2);
        }
        return t3 && n2;
      }
      function Wr(e2) {
        var t3 = i(e2), n2 = false;
        if (t3) {
          n2 = e2.filter(function(t4) {
            return !f(t4) && Ir(e2);
          }).length === 0;
        }
        return t3 && n2;
      }
      function jr(e2) {
        var t3 = a(e2) && !s(e2), n2 = false, r2 = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"], i2, u2;
        for (i2 = 0; i2 < r2.length; i2 += 1) {
          u2 = r2[i2];
          n2 = n2 || o(e2, u2);
        }
        return t3 && n2;
      }
      function Hr(e2, t3) {
        var n2 = e2.diff(t3, "days", true);
        return n2 < -6 ? "sameElse" : n2 < -1 ? "lastWeek" : n2 < 0 ? "lastDay" : n2 < 1 ? "sameDay" : n2 < 2 ? "nextDay" : n2 < 7 ? "nextWeek" : "sameElse";
      }
      function Ur(e2, t3) {
        if (arguments.length === 1) {
          if (!arguments[0]) {
            e2 = void 0;
            t3 = void 0;
          } else if (Pr(arguments[0])) {
            e2 = arguments[0];
            t3 = void 0;
          } else if (jr(arguments[0])) {
            t3 = arguments[0];
            e2 = void 0;
          }
        }
        var r2 = e2 || Jn(), i2 = hr(r2, this).startOf("day"), a2 = n.calendarFormat(this, i2) || "sameElse", o2 = t3 && (E(t3[a2]) ? t3[a2].call(this, r2) : t3[a2]);
        return this.format(o2 || this.localeData().calendar(a2, this, Jn(r2)));
      }
      function $r() {
        return new D(this);
      }
      function Gr(e2, t3) {
        var n2 = k(e2) ? e2 : Jn(e2);
        if (!(this.isValid() && n2.isValid())) {
          return false;
        }
        t3 = re(t3) || "millisecond";
        if (t3 === "millisecond") {
          return this.valueOf() > n2.valueOf();
        } else {
          return n2.valueOf() < this.clone().startOf(t3).valueOf();
        }
      }
      function qr(e2, t3) {
        var n2 = k(e2) ? e2 : Jn(e2);
        if (!(this.isValid() && n2.isValid())) {
          return false;
        }
        t3 = re(t3) || "millisecond";
        if (t3 === "millisecond") {
          return this.valueOf() < n2.valueOf();
        } else {
          return this.clone().endOf(t3).valueOf() < n2.valueOf();
        }
      }
      function zr(e2, t3, n2, r2) {
        var i2 = k(e2) ? e2 : Jn(e2), a2 = k(t3) ? t3 : Jn(t3);
        if (!(this.isValid() && i2.isValid() && a2.isValid())) {
          return false;
        }
        r2 = r2 || "()";
        return (r2[0] === "(" ? this.isAfter(i2, n2) : !this.isBefore(i2, n2)) && (r2[1] === ")" ? this.isBefore(a2, n2) : !this.isAfter(a2, n2));
      }
      function Br(e2, t3) {
        var n2 = k(e2) ? e2 : Jn(e2), r2;
        if (!(this.isValid() && n2.isValid())) {
          return false;
        }
        t3 = re(t3) || "millisecond";
        if (t3 === "millisecond") {
          return this.valueOf() === n2.valueOf();
        } else {
          r2 = n2.valueOf();
          return this.clone().startOf(t3).valueOf() <= r2 && r2 <= this.clone().endOf(t3).valueOf();
        }
      }
      function Zr(e2, t3) {
        return this.isSame(e2, t3) || this.isAfter(e2, t3);
      }
      function Jr(e2, t3) {
        return this.isSame(e2, t3) || this.isBefore(e2, t3);
      }
      function Vr(e2, t3, n2) {
        var r2, i2, a2;
        if (!this.isValid()) {
          return NaN;
        }
        r2 = hr(e2, this);
        if (!r2.isValid()) {
          return NaN;
        }
        i2 = (r2.utcOffset() - this.utcOffset()) * 6e4;
        t3 = re(t3);
        switch (t3) {
          case "year":
            a2 = Xr(this, r2) / 12;
            break;
          case "month":
            a2 = Xr(this, r2);
            break;
          case "quarter":
            a2 = Xr(this, r2) / 3;
            break;
          case "second":
            a2 = (this - r2) / 1e3;
            break;
          case "minute":
            a2 = (this - r2) / 6e4;
            break;
          case "hour":
            a2 = (this - r2) / 36e5;
            break;
          case "day":
            a2 = (this - r2 - i2) / 864e5;
            break;
          case "week":
            a2 = (this - r2 - i2) / 6048e5;
            break;
          default:
            a2 = this - r2;
        }
        return n2 ? a2 : fe(a2);
      }
      function Xr(e2, t3) {
        if (e2.date() < t3.date()) {
          return -Xr(t3, e2);
        }
        var n2 = (t3.year() - e2.year()) * 12 + (t3.month() - e2.month()), r2 = e2.clone().add(n2, "months"), i2, a2;
        if (t3 - r2 < 0) {
          i2 = e2.clone().add(n2 - 1, "months");
          a2 = (t3 - r2) / (r2 - i2);
        } else {
          i2 = e2.clone().add(n2 + 1, "months");
          a2 = (t3 - r2) / (i2 - r2);
        }
        return -(n2 + a2) || 0;
      }
      n.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
      n.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
      function Qr() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
      }
      function Kr(e2) {
        if (!this.isValid()) {
          return null;
        }
        var t3 = e2 !== true, n2 = t3 ? this.clone().utc() : this;
        if (n2.year() < 0 || n2.year() > 9999) {
          return $(n2, t3 ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }
        if (E(Date.prototype.toISOString)) {
          if (t3) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", $(n2, "Z"));
          }
        }
        return $(n2, t3 ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
      }
      function ei() {
        if (!this.isValid()) {
          return "moment.invalid(/* " + this._i + " */)";
        }
        var e2 = "moment", t3 = "", n2, r2, i2, a2;
        if (!this.isLocal()) {
          e2 = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
          t3 = "Z";
        }
        n2 = "[" + e2 + '("]';
        r2 = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
        i2 = "-MM-DD[T]HH:mm:ss.SSS";
        a2 = t3 + '[")]';
        return this.format(n2 + r2 + i2 + a2);
      }
      function ti(e2) {
        if (!e2) {
          e2 = this.isUtc() ? n.defaultFormatUtc : n.defaultFormat;
        }
        var t3 = $(this, e2);
        return this.localeData().postformat(t3);
      }
      function ni(e2, t3) {
        if (this.isValid() && (k(e2) && e2.isValid() || Jn(e2).isValid())) {
          return Er({ to: this, from: e2 }).locale(this.locale()).humanize(!t3);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function ri(e2) {
        return this.from(Jn(), e2);
      }
      function ii(e2, t3) {
        if (this.isValid() && (k(e2) && e2.isValid() || Jn(e2).isValid())) {
          return Er({ from: this, to: e2 }).locale(this.locale()).humanize(!t3);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function ai(e2) {
        return this.to(Jn(), e2);
      }
      function oi(e2) {
        var t3;
        if (e2 === void 0) {
          return this._locale._abbr;
        } else {
          t3 = bn(e2);
          if (t3 != null) {
            this._locale = t3;
          }
          return this;
        }
      }
      var si = _("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e2) {
        if (e2 === void 0) {
          return this.localeData();
        } else {
          return this.locale(e2);
        }
      });
      function ui() {
        return this._locale;
      }
      var fi = 1e3, li = 60 * fi, ci = 60 * li, di = (365 * 400 + 97) * 24 * ci;
      function hi(e2, t3) {
        return (e2 % t3 + t3) % t3;
      }
      function vi(e2, t3, n2) {
        if (e2 < 100 && e2 >= 0) {
          return new Date(e2 + 400, t3, n2) - di;
        } else {
          return new Date(e2, t3, n2).valueOf();
        }
      }
      function mi(e2, t3, n2) {
        if (e2 < 100 && e2 >= 0) {
          return Date.UTC(e2 + 400, t3, n2) - di;
        } else {
          return Date.UTC(e2, t3, n2);
        }
      }
      function pi(e2) {
        var t3, r2;
        e2 = re(e2);
        if (e2 === void 0 || e2 === "millisecond" || !this.isValid()) {
          return this;
        }
        r2 = this._isUTC ? mi : vi;
        switch (e2) {
          case "year":
            t3 = r2(this.year(), 0, 1);
            break;
          case "quarter":
            t3 = r2(this.year(), this.month() - this.month() % 3, 1);
            break;
          case "month":
            t3 = r2(this.year(), this.month(), 1);
            break;
          case "week":
            t3 = r2(this.year(), this.month(), this.date() - this.weekday());
            break;
          case "isoWeek":
            t3 = r2(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;
          case "day":
          case "date":
            t3 = r2(this.year(), this.month(), this.date());
            break;
          case "hour":
            t3 = this._d.valueOf();
            t3 -= hi(t3 + (this._isUTC ? 0 : this.utcOffset() * li), ci);
            break;
          case "minute":
            t3 = this._d.valueOf();
            t3 -= hi(t3, li);
            break;
          case "second":
            t3 = this._d.valueOf();
            t3 -= hi(t3, fi);
            break;
        }
        this._d.setTime(t3);
        n.updateOffset(this, true);
        return this;
      }
      function gi(e2) {
        var t3, r2;
        e2 = re(e2);
        if (e2 === void 0 || e2 === "millisecond" || !this.isValid()) {
          return this;
        }
        r2 = this._isUTC ? mi : vi;
        switch (e2) {
          case "year":
            t3 = r2(this.year() + 1, 0, 1) - 1;
            break;
          case "quarter":
            t3 = r2(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;
          case "month":
            t3 = r2(this.year(), this.month() + 1, 1) - 1;
            break;
          case "week":
            t3 = r2(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;
          case "isoWeek":
            t3 = r2(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;
          case "day":
          case "date":
            t3 = r2(this.year(), this.month(), this.date() + 1) - 1;
            break;
          case "hour":
            t3 = this._d.valueOf();
            t3 += ci - hi(t3 + (this._isUTC ? 0 : this.utcOffset() * li), ci) - 1;
            break;
          case "minute":
            t3 = this._d.valueOf();
            t3 += li - hi(t3, li) - 1;
            break;
          case "second":
            t3 = this._d.valueOf();
            t3 += fi - hi(t3, fi) - 1;
            break;
        }
        this._d.setTime(t3);
        n.updateOffset(this, true);
        return this;
      }
      function bi() {
        return this._d.valueOf() - (this._offset || 0) * 6e4;
      }
      function yi() {
        return Math.floor(this.valueOf() / 1e3);
      }
      function wi() {
        return new Date(this.valueOf());
      }
      function Si() {
        var e2 = this;
        return [e2.year(), e2.month(), e2.date(), e2.hour(), e2.minute(), e2.second(), e2.millisecond()];
      }
      function Di() {
        var e2 = this;
        return { years: e2.year(), months: e2.month(), date: e2.date(), hours: e2.hours(), minutes: e2.minutes(), seconds: e2.seconds(), milliseconds: e2.milliseconds() };
      }
      function ki() {
        return this.isValid() ? this.toISOString() : null;
      }
      function xi() {
        return g(this);
      }
      function _i() {
        return d({}, m(this));
      }
      function Mi() {
        return m(this).overflow;
      }
      function Ti() {
        return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };
      }
      j("N", 0, 0, "eraAbbr");
      j("NN", 0, 0, "eraAbbr");
      j("NNN", 0, 0, "eraAbbr");
      j("NNNN", 0, 0, "eraName");
      j("NNNNN", 0, 0, "eraNarrow");
      j("y", ["y", 1], "yo", "eraYear");
      j("y", ["yy", 2], 0, "eraYear");
      j("y", ["yyy", 3], 0, "eraYear");
      j("y", ["yyyy", 4], 0, "eraYear");
      Re("N", Li);
      Re("NN", Li);
      Re("NNN", Li);
      Re("NNNN", Wi);
      Re("NNNNN", ji);
      We(["N", "NN", "NNN", "NNNN", "NNNNN"], function(e2, t3, n2, r2) {
        var i2 = n2._locale.erasParse(e2, r2, n2._strict);
        if (i2) {
          m(n2).era = i2;
        } else {
          m(n2).invalidEra = e2;
        }
      });
      Re("y", Te);
      Re("yy", Te);
      Re("yyy", Te);
      Re("yyyy", Te);
      Re("yo", Hi);
      We(["y", "yy", "yyy", "yyyy"], Ue);
      We(["yo"], function(e2, t3, n2, r2) {
        var i2;
        if (n2._locale._eraYearOrdinalRegex) {
          i2 = e2.match(n2._locale._eraYearOrdinalRegex);
        }
        if (n2._locale.eraYearOrdinalParse) {
          t3[Ue] = n2._locale.eraYearOrdinalParse(e2, i2);
        } else {
          t3[Ue] = parseInt(e2, 10);
        }
      });
      function Ei(e2, t3) {
        var r2, i2, a2, o2 = this._eras || bn("en")._eras;
        for (r2 = 0, i2 = o2.length; r2 < i2; ++r2) {
          switch (typeof o2[r2].since) {
            case "string":
              a2 = n(o2[r2].since).startOf("day");
              o2[r2].since = a2.valueOf();
              break;
          }
          switch (typeof o2[r2].until) {
            case "undefined":
              o2[r2].until = Infinity;
              break;
            case "string":
              a2 = n(o2[r2].until).startOf("day").valueOf();
              o2[r2].until = a2.valueOf();
              break;
          }
        }
        return o2;
      }
      function Fi(e2, t3, n2) {
        var r2, i2, a2 = this.eras(), o2, s2, u2;
        e2 = e2.toUpperCase();
        for (r2 = 0, i2 = a2.length; r2 < i2; ++r2) {
          o2 = a2[r2].name.toUpperCase();
          s2 = a2[r2].abbr.toUpperCase();
          u2 = a2[r2].narrow.toUpperCase();
          if (n2) {
            switch (t3) {
              case "N":
              case "NN":
              case "NNN":
                if (s2 === e2) {
                  return a2[r2];
                }
                break;
              case "NNNN":
                if (o2 === e2) {
                  return a2[r2];
                }
                break;
              case "NNNNN":
                if (u2 === e2) {
                  return a2[r2];
                }
                break;
            }
          } else if ([o2, s2, u2].indexOf(e2) >= 0) {
            return a2[r2];
          }
        }
      }
      function Yi(e2, t3) {
        var r2 = e2.since <= e2.until ? 1 : -1;
        if (t3 === void 0) {
          return n(e2.since).year();
        } else {
          return n(e2.since).year() + (t3 - e2.offset) * r2;
        }
      }
      function Ai() {
        var e2, t3, n2, r2 = this.localeData().eras();
        for (e2 = 0, t3 = r2.length; e2 < t3; ++e2) {
          n2 = this.clone().startOf("day").valueOf();
          if (r2[e2].since <= n2 && n2 <= r2[e2].until) {
            return r2[e2].name;
          }
          if (r2[e2].until <= n2 && n2 <= r2[e2].since) {
            return r2[e2].name;
          }
        }
        return "";
      }
      function Oi() {
        var e2, t3, n2, r2 = this.localeData().eras();
        for (e2 = 0, t3 = r2.length; e2 < t3; ++e2) {
          n2 = this.clone().startOf("day").valueOf();
          if (r2[e2].since <= n2 && n2 <= r2[e2].until) {
            return r2[e2].narrow;
          }
          if (r2[e2].until <= n2 && n2 <= r2[e2].since) {
            return r2[e2].narrow;
          }
        }
        return "";
      }
      function Ni() {
        var e2, t3, n2, r2 = this.localeData().eras();
        for (e2 = 0, t3 = r2.length; e2 < t3; ++e2) {
          n2 = this.clone().startOf("day").valueOf();
          if (r2[e2].since <= n2 && n2 <= r2[e2].until) {
            return r2[e2].abbr;
          }
          if (r2[e2].until <= n2 && n2 <= r2[e2].since) {
            return r2[e2].abbr;
          }
        }
        return "";
      }
      function Ri() {
        var e2, t3, r2, i2, a2 = this.localeData().eras();
        for (e2 = 0, t3 = a2.length; e2 < t3; ++e2) {
          r2 = a2[e2].since <= a2[e2].until ? 1 : -1;
          i2 = this.clone().startOf("day").valueOf();
          if (a2[e2].since <= i2 && i2 <= a2[e2].until || a2[e2].until <= i2 && i2 <= a2[e2].since) {
            return (this.year() - n(a2[e2].since).year()) * r2 + a2[e2].offset;
          }
        }
        return this.year();
      }
      function Ci(e2) {
        if (!o(this, "_erasNameRegex")) {
          Ui.call(this);
        }
        return e2 ? this._erasNameRegex : this._erasRegex;
      }
      function Ii(e2) {
        if (!o(this, "_erasAbbrRegex")) {
          Ui.call(this);
        }
        return e2 ? this._erasAbbrRegex : this._erasRegex;
      }
      function Pi(e2) {
        if (!o(this, "_erasNarrowRegex")) {
          Ui.call(this);
        }
        return e2 ? this._erasNarrowRegex : this._erasRegex;
      }
      function Li(e2, t3) {
        return t3.erasAbbrRegex(e2);
      }
      function Wi(e2, t3) {
        return t3.erasNameRegex(e2);
      }
      function ji(e2, t3) {
        return t3.erasNarrowRegex(e2);
      }
      function Hi(e2, t3) {
        return t3._eraYearOrdinalRegex || Te;
      }
      function Ui() {
        var e2 = [], t3 = [], n2 = [], r2 = [], i2, a2, o2 = this.eras();
        for (i2 = 0, a2 = o2.length; i2 < a2; ++i2) {
          t3.push(Pe(o2[i2].name));
          e2.push(Pe(o2[i2].abbr));
          n2.push(Pe(o2[i2].narrow));
          r2.push(Pe(o2[i2].name));
          r2.push(Pe(o2[i2].abbr));
          r2.push(Pe(o2[i2].narrow));
        }
        this._erasRegex = new RegExp("^(" + r2.join("|") + ")", "i");
        this._erasNameRegex = new RegExp("^(" + t3.join("|") + ")", "i");
        this._erasAbbrRegex = new RegExp("^(" + e2.join("|") + ")", "i");
        this._erasNarrowRegex = new RegExp("^(" + n2.join("|") + ")", "i");
      }
      j(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100;
      });
      j(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100;
      });
      function $i(e2, t3) {
        j(0, [e2, e2.length], 0, t3);
      }
      $i("gggg", "weekYear");
      $i("ggggg", "weekYear");
      $i("GGGG", "isoWeekYear");
      $i("GGGGG", "isoWeekYear");
      ne("weekYear", "gg");
      ne("isoWeekYear", "GG");
      oe("weekYear", 1);
      oe("isoWeekYear", 1);
      Re("G", Ee);
      Re("g", Ee);
      Re("GG", Se, ge);
      Re("gg", Se, ge);
      Re("GGGG", _e, ye);
      Re("gggg", _e, ye);
      Re("GGGGG", Me, we);
      Re("ggggg", Me, we);
      je(["gggg", "ggggg", "GGGG", "GGGGG"], function(e2, t3, n2, r2) {
        t3[r2.substr(0, 2)] = le(e2);
      });
      je(["gg", "GG"], function(e2, t3, r2, i2) {
        t3[i2] = n.parseTwoDigitYear(e2);
      });
      function Gi(e2) {
        return Vi.call(this, e2, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
      }
      function qi(e2) {
        return Vi.call(this, e2, this.isoWeek(), this.isoWeekday(), 1, 4);
      }
      function zi() {
        return kt(this.year(), 1, 4);
      }
      function Bi() {
        return kt(this.isoWeekYear(), 1, 4);
      }
      function Zi() {
        var e2 = this.localeData()._week;
        return kt(this.year(), e2.dow, e2.doy);
      }
      function Ji() {
        var e2 = this.localeData()._week;
        return kt(this.weekYear(), e2.dow, e2.doy);
      }
      function Vi(e2, t3, n2, r2, i2) {
        var a2;
        if (e2 == null) {
          return Dt(this, r2, i2).year;
        } else {
          a2 = kt(e2, r2, i2);
          if (t3 > a2) {
            t3 = a2;
          }
          return Xi.call(this, e2, t3, n2, r2, i2);
        }
      }
      function Xi(e2, t3, n2, r2, i2) {
        var a2 = St(e2, t3, n2, r2, i2), o2 = yt(a2.year, 0, a2.dayOfYear);
        this.year(o2.getUTCFullYear());
        this.month(o2.getUTCMonth());
        this.date(o2.getUTCDate());
        return this;
      }
      j("Q", 0, "Qo", "quarter");
      ne("quarter", "Q");
      oe("quarter", 7);
      Re("Q", pe);
      We("Q", function(e2, t3) {
        t3[$e] = (le(e2) - 1) * 3;
      });
      function Qi(e2) {
        return e2 == null ? Math.ceil((this.month() + 1) / 3) : this.month((e2 - 1) * 3 + this.month() % 3);
      }
      j("D", ["DD", 2], "Do", "date");
      ne("date", "D");
      oe("date", 9);
      Re("D", Se);
      Re("DD", Se, ge);
      Re("Do", function(e2, t3) {
        return e2 ? t3._dayOfMonthOrdinalParse || t3._ordinalParse : t3._dayOfMonthOrdinalParseLenient;
      });
      We(["D", "DD"], Ge);
      We("Do", function(e2, t3) {
        t3[Ge] = le(e2.match(Se)[0]);
      });
      var Ki = ce("Date", true);
      j("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
      ne("dayOfYear", "DDD");
      oe("dayOfYear", 4);
      Re("DDD", xe);
      Re("DDDD", be);
      We(["DDD", "DDDD"], function(e2, t3, n2) {
        n2._dayOfYear = le(e2);
      });
      function ea(e2) {
        var t3 = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return e2 == null ? t3 : this.add(e2 - t3, "d");
      }
      j("m", ["mm", 2], 0, "minute");
      ne("minute", "m");
      oe("minute", 14);
      Re("m", Se);
      Re("mm", Se, ge);
      We(["m", "mm"], ze);
      var ta = ce("Minutes", false);
      j("s", ["ss", 2], 0, "second");
      ne("second", "s");
      oe("second", 15);
      Re("s", Se);
      Re("ss", Se, ge);
      We(["s", "ss"], Be);
      var na = ce("Seconds", false);
      j("S", 0, 0, function() {
        return ~~(this.millisecond() / 100);
      });
      j(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10);
      });
      j(0, ["SSS", 3], 0, "millisecond");
      j(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10;
      });
      j(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100;
      });
      j(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1e3;
      });
      j(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 1e4;
      });
      j(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 1e5;
      });
      j(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1e6;
      });
      ne("millisecond", "ms");
      oe("millisecond", 16);
      Re("S", xe, pe);
      Re("SS", xe, ge);
      Re("SSS", xe, be);
      var ra, ia;
      for (ra = "SSSS"; ra.length <= 9; ra += "S") {
        Re(ra, Te);
      }
      function aa(e2, t3) {
        t3[Ze] = le(("0." + e2) * 1e3);
      }
      for (ra = "S"; ra.length <= 9; ra += "S") {
        We(ra, aa);
      }
      ia = ce("Milliseconds", false);
      j("z", 0, 0, "zoneAbbr");
      j("zz", 0, 0, "zoneName");
      function oa() {
        return this._isUTC ? "UTC" : "";
      }
      function sa() {
        return this._isUTC ? "Coordinated Universal Time" : "";
      }
      var ua = D.prototype;
      ua.add = Rr;
      ua.calendar = Ur;
      ua.clone = $r;
      ua.diff = Vr;
      ua.endOf = gi;
      ua.format = ti;
      ua.from = ni;
      ua.fromNow = ri;
      ua.to = ii;
      ua.toNow = ai;
      ua.get = ve;
      ua.invalidAt = Mi;
      ua.isAfter = Gr;
      ua.isBefore = qr;
      ua.isBetween = zr;
      ua.isSame = Br;
      ua.isSameOrAfter = Zr;
      ua.isSameOrBefore = Jr;
      ua.isValid = xi;
      ua.lang = si;
      ua.locale = oi;
      ua.localeData = ui;
      ua.max = Xn;
      ua.min = Vn;
      ua.parsingFlags = _i;
      ua.set = me;
      ua.startOf = pi;
      ua.subtract = Cr;
      ua.toArray = Si;
      ua.toObject = Di;
      ua.toDate = wi;
      ua.toISOString = Kr;
      ua.inspect = ei;
      if (typeof Symbol !== "undefined" && Symbol.for != null) {
        ua[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        };
      }
      ua.toJSON = ki;
      ua.toString = Qr;
      ua.unix = yi;
      ua.valueOf = bi;
      ua.creationData = Ti;
      ua.eraName = Ai;
      ua.eraNarrow = Oi;
      ua.eraAbbr = Ni;
      ua.eraYear = Ri;
      ua.year = pt;
      ua.isLeapYear = gt;
      ua.weekYear = Gi;
      ua.isoWeekYear = qi;
      ua.quarter = ua.quarters = Qi;
      ua.month = lt;
      ua.daysInMonth = ct;
      ua.week = ua.weeks = Et;
      ua.isoWeek = ua.isoWeeks = Ft;
      ua.weeksInYear = Zi;
      ua.weeksInWeekYear = Ji;
      ua.isoWeeksInYear = zi;
      ua.isoWeeksInISOWeekYear = Bi;
      ua.date = Ki;
      ua.day = ua.days = Gt;
      ua.weekday = qt;
      ua.isoWeekday = zt;
      ua.dayOfYear = ea;
      ua.hour = ua.hours = rn;
      ua.minute = ua.minutes = ta;
      ua.second = ua.seconds = na;
      ua.millisecond = ua.milliseconds = ia;
      ua.utcOffset = mr;
      ua.utc = gr;
      ua.local = br;
      ua.parseZone = yr;
      ua.hasAlignedHourOffset = wr;
      ua.isDST = Sr;
      ua.isLocal = kr;
      ua.isUtcOffset = xr;
      ua.isUtc = _r;
      ua.isUTC = _r;
      ua.zoneAbbr = oa;
      ua.zoneName = sa;
      ua.dates = _("dates accessor is deprecated. Use date instead.", Ki);
      ua.months = _("months accessor is deprecated. Use month instead", lt);
      ua.years = _("years accessor is deprecated. Use year instead", pt);
      ua.zone = _("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", pr);
      ua.isDSTShifted = _("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Dr);
      function fa(e2) {
        return Jn(e2 * 1e3);
      }
      function la() {
        return Jn.apply(null, arguments).parseZone();
      }
      function ca(e2) {
        return e2;
      }
      var da = A.prototype;
      da.calendar = R;
      da.longDateFormat = z;
      da.invalidDate = Z;
      da.ordinal = X;
      da.preparse = ca;
      da.postformat = ca;
      da.relativeTime = K;
      da.pastFuture = ee;
      da.set = F;
      da.eras = Ei;
      da.erasParse = Fi;
      da.erasConvertYear = Yi;
      da.erasAbbrRegex = Ii;
      da.erasNameRegex = Ci;
      da.erasNarrowRegex = Pi;
      da.months = at;
      da.monthsShort = ot;
      da.monthsParse = ut;
      da.monthsRegex = ht;
      da.monthsShortRegex = dt;
      da.week = xt;
      da.firstDayOfYear = Tt;
      da.firstDayOfWeek = Mt;
      da.weekdays = Wt;
      da.weekdaysMin = Ht;
      da.weekdaysShort = jt;
      da.weekdaysParse = $t;
      da.weekdaysRegex = Bt;
      da.weekdaysShortRegex = Zt;
      da.weekdaysMinRegex = Jt;
      da.isPM = tn;
      da.meridiem = an;
      function ha(e2, t3, n2, r2) {
        var i2 = bn(), a2 = h2().set(r2, t3);
        return i2[n2](a2, e2);
      }
      function va(e2, t3, n2) {
        if (f(e2)) {
          t3 = e2;
          e2 = void 0;
        }
        e2 = e2 || "";
        if (t3 != null) {
          return ha(e2, t3, n2, "month");
        }
        var r2, i2 = [];
        for (r2 = 0; r2 < 12; r2++) {
          i2[r2] = ha(e2, r2, n2, "month");
        }
        return i2;
      }
      function ma(e2, t3, n2, r2) {
        if (typeof e2 === "boolean") {
          if (f(t3)) {
            n2 = t3;
            t3 = void 0;
          }
          t3 = t3 || "";
        } else {
          t3 = e2;
          n2 = t3;
          e2 = false;
          if (f(t3)) {
            n2 = t3;
            t3 = void 0;
          }
          t3 = t3 || "";
        }
        var i2 = bn(), a2 = e2 ? i2._week.dow : 0, o2, s2 = [];
        if (n2 != null) {
          return ha(t3, (n2 + a2) % 7, r2, "day");
        }
        for (o2 = 0; o2 < 7; o2++) {
          s2[o2] = ha(t3, (o2 + a2) % 7, r2, "day");
        }
        return s2;
      }
      function pa(e2, t3) {
        return va(e2, t3, "months");
      }
      function ga(e2, t3) {
        return va(e2, t3, "monthsShort");
      }
      function ba(e2, t3, n2) {
        return ma(e2, t3, n2, "weekdays");
      }
      function ya(e2, t3, n2) {
        return ma(e2, t3, n2, "weekdaysShort");
      }
      function wa(e2, t3, n2) {
        return ma(e2, t3, n2, "weekdaysMin");
      }
      mn("en", { eras: [{ since: "0001-01-01", until: Infinity, offset: 1, name: "Anno Domini", narrow: "AD", abbr: "AD" }, { since: "0000-12-31", until: -Infinity, offset: 1, name: "Before Christ", narrow: "BC", abbr: "BC" }], dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function(e2) {
        var t3 = e2 % 10, n2 = le(e2 % 100 / 10) === 1 ? "th" : t3 === 1 ? "st" : t3 === 2 ? "nd" : t3 === 3 ? "rd" : "th";
        return e2 + n2;
      } });
      n.lang = _("moment.lang is deprecated. Use moment.locale instead.", mn);
      n.langData = _("moment.langData is deprecated. Use moment.localeData instead.", bn);
      var Sa = Math.abs;
      function Da() {
        var e2 = this._data;
        this._milliseconds = Sa(this._milliseconds);
        this._days = Sa(this._days);
        this._months = Sa(this._months);
        e2.milliseconds = Sa(e2.milliseconds);
        e2.seconds = Sa(e2.seconds);
        e2.minutes = Sa(e2.minutes);
        e2.hours = Sa(e2.hours);
        e2.months = Sa(e2.months);
        e2.years = Sa(e2.years);
        return this;
      }
      function ka(e2, t3, n2, r2) {
        var i2 = Er(t3, n2);
        e2._milliseconds += r2 * i2._milliseconds;
        e2._days += r2 * i2._days;
        e2._months += r2 * i2._months;
        return e2._bubble();
      }
      function xa(e2, t3) {
        return ka(this, e2, t3, 1);
      }
      function _a(e2, t3) {
        return ka(this, e2, t3, -1);
      }
      function Ma(e2) {
        if (e2 < 0) {
          return Math.floor(e2);
        } else {
          return Math.ceil(e2);
        }
      }
      function Ta() {
        var e2 = this._milliseconds, t3 = this._days, n2 = this._months, r2 = this._data, i2, a2, o2, s2, u2;
        if (!(e2 >= 0 && t3 >= 0 && n2 >= 0 || e2 <= 0 && t3 <= 0 && n2 <= 0)) {
          e2 += Ma(Fa(n2) + t3) * 864e5;
          t3 = 0;
          n2 = 0;
        }
        r2.milliseconds = e2 % 1e3;
        i2 = fe(e2 / 1e3);
        r2.seconds = i2 % 60;
        a2 = fe(i2 / 60);
        r2.minutes = a2 % 60;
        o2 = fe(a2 / 60);
        r2.hours = o2 % 24;
        t3 += fe(o2 / 24);
        u2 = fe(Ea(t3));
        n2 += u2;
        t3 -= Ma(Fa(u2));
        s2 = fe(n2 / 12);
        n2 %= 12;
        r2.days = t3;
        r2.months = n2;
        r2.years = s2;
        return this;
      }
      function Ea(e2) {
        return e2 * 4800 / 146097;
      }
      function Fa(e2) {
        return e2 * 146097 / 4800;
      }
      function Ya(e2) {
        if (!this.isValid()) {
          return NaN;
        }
        var t3, n2, r2 = this._milliseconds;
        e2 = re(e2);
        if (e2 === "month" || e2 === "quarter" || e2 === "year") {
          t3 = this._days + r2 / 864e5;
          n2 = this._months + Ea(t3);
          switch (e2) {
            case "month":
              return n2;
            case "quarter":
              return n2 / 3;
            case "year":
              return n2 / 12;
          }
        } else {
          t3 = this._days + Math.round(Fa(this._months));
          switch (e2) {
            case "week":
              return t3 / 7 + r2 / 6048e5;
            case "day":
              return t3 + r2 / 864e5;
            case "hour":
              return t3 * 24 + r2 / 36e5;
            case "minute":
              return t3 * 1440 + r2 / 6e4;
            case "second":
              return t3 * 86400 + r2 / 1e3;
            case "millisecond":
              return Math.floor(t3 * 864e5) + r2;
            default:
              throw new Error("Unknown unit " + e2);
          }
        }
      }
      function Aa() {
        if (!this.isValid()) {
          return NaN;
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + le(this._months / 12) * 31536e6;
      }
      function Oa(e2) {
        return function() {
          return this.as(e2);
        };
      }
      var Na = Oa("ms"), Ra = Oa("s"), Ca = Oa("m"), Ia = Oa("h"), Pa = Oa("d"), La = Oa("w"), Wa = Oa("M"), ja = Oa("Q"), Ha = Oa("y");
      function Ua() {
        return Er(this);
      }
      function $a(e2) {
        e2 = re(e2);
        return this.isValid() ? this[e2 + "s"]() : NaN;
      }
      function Ga(e2) {
        return function() {
          return this.isValid() ? this._data[e2] : NaN;
        };
      }
      var qa = Ga("milliseconds"), za = Ga("seconds"), Ba = Ga("minutes"), Za = Ga("hours"), Ja = Ga("days"), Va = Ga("months"), Xa = Ga("years");
      function Qa() {
        return fe(this.days() / 7);
      }
      var Ka = Math.round, eo = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
      function to2(e2, t3, n2, r2, i2) {
        return i2.relativeTime(t3 || 1, !!n2, e2, r2);
      }
      function no(e2, t3, n2, r2) {
        var i2 = Er(e2).abs(), a2 = Ka(i2.as("s")), o2 = Ka(i2.as("m")), s2 = Ka(i2.as("h")), u2 = Ka(i2.as("d")), f2 = Ka(i2.as("M")), l2 = Ka(i2.as("w")), c2 = Ka(i2.as("y")), d2 = a2 <= n2.ss && ["s", a2] || a2 < n2.s && ["ss", a2] || o2 <= 1 && ["m"] || o2 < n2.m && ["mm", o2] || s2 <= 1 && ["h"] || s2 < n2.h && ["hh", s2] || u2 <= 1 && ["d"] || u2 < n2.d && ["dd", u2];
        if (n2.w != null) {
          d2 = d2 || l2 <= 1 && ["w"] || l2 < n2.w && ["ww", l2];
        }
        d2 = d2 || f2 <= 1 && ["M"] || f2 < n2.M && ["MM", f2] || c2 <= 1 && ["y"] || ["yy", c2];
        d2[2] = t3;
        d2[3] = +e2 > 0;
        d2[4] = r2;
        return to2.apply(null, d2);
      }
      function ro(e2) {
        if (e2 === void 0) {
          return Ka;
        }
        if (typeof e2 === "function") {
          Ka = e2;
          return true;
        }
        return false;
      }
      function io(e2, t3) {
        if (eo[e2] === void 0) {
          return false;
        }
        if (t3 === void 0) {
          return eo[e2];
        }
        eo[e2] = t3;
        if (e2 === "s") {
          eo.ss = t3 - 1;
        }
        return true;
      }
      function ao(e2, t3) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var n2 = false, r2 = eo, i2, a2;
        if (typeof e2 === "object") {
          t3 = e2;
          e2 = false;
        }
        if (typeof e2 === "boolean") {
          n2 = e2;
        }
        if (typeof t3 === "object") {
          r2 = Object.assign({}, eo, t3);
          if (t3.s != null && t3.ss == null) {
            r2.ss = t3.s - 1;
          }
        }
        i2 = this.localeData();
        a2 = no(this, !n2, r2, i2);
        if (n2) {
          a2 = i2.pastFuture(+this, a2);
        }
        return i2.postformat(a2);
      }
      var oo = Math.abs;
      function so(e2) {
        return (e2 > 0) - (e2 < 0) || +e2;
      }
      function uo() {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var e2 = oo(this._milliseconds) / 1e3, t3 = oo(this._days), n2 = oo(this._months), r2, i2, a2, o2, s2 = this.asSeconds(), u2, f2, l2, c2;
        if (!s2) {
          return "P0D";
        }
        r2 = fe(e2 / 60);
        i2 = fe(r2 / 60);
        e2 %= 60;
        r2 %= 60;
        a2 = fe(n2 / 12);
        n2 %= 12;
        o2 = e2 ? e2.toFixed(3).replace(/\.?0+$/, "") : "";
        u2 = s2 < 0 ? "-" : "";
        f2 = so(this._months) !== so(s2) ? "-" : "";
        l2 = so(this._days) !== so(s2) ? "-" : "";
        c2 = so(this._milliseconds) !== so(s2) ? "-" : "";
        return u2 + "P" + (a2 ? f2 + a2 + "Y" : "") + (n2 ? f2 + n2 + "M" : "") + (t3 ? l2 + t3 + "D" : "") + (i2 || r2 || e2 ? "T" : "") + (i2 ? c2 + i2 + "H" : "") + (r2 ? c2 + r2 + "M" : "") + (e2 ? c2 + o2 + "S" : "");
      }
      var fo = or.prototype;
      fo.isValid = ir;
      fo.abs = Da;
      fo.add = xa;
      fo.subtract = _a;
      fo.as = Ya;
      fo.asMilliseconds = Na;
      fo.asSeconds = Ra;
      fo.asMinutes = Ca;
      fo.asHours = Ia;
      fo.asDays = Pa;
      fo.asWeeks = La;
      fo.asMonths = Wa;
      fo.asQuarters = ja;
      fo.asYears = Ha;
      fo.valueOf = Aa;
      fo._bubble = Ta;
      fo.clone = Ua;
      fo.get = $a;
      fo.milliseconds = qa;
      fo.seconds = za;
      fo.minutes = Ba;
      fo.hours = Za;
      fo.days = Ja;
      fo.weeks = Qa;
      fo.months = Va;
      fo.years = Xa;
      fo.humanize = ao;
      fo.toISOString = uo;
      fo.toString = uo;
      fo.toJSON = uo;
      fo.locale = oi;
      fo.localeData = ui;
      fo.toIsoString = _("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", uo);
      fo.lang = si;
      j("X", 0, 0, "unix");
      j("x", 0, 0, "valueOf");
      Re("x", Ee);
      Re("X", Ae);
      We("X", function(e2, t3, n2) {
        n2._d = new Date(parseFloat(e2) * 1e3);
      });
      We("x", function(e2, t3, n2) {
        n2._d = new Date(le(e2));
      });
      n.version = "2.29.4";
      r(Jn);
      n.fn = ua;
      n.min = Kn;
      n.max = er;
      n.now = tr;
      n.utc = h2;
      n.unix = fa;
      n.months = pa;
      n.isDate = l;
      n.locale = mn;
      n.invalid = b;
      n.duration = Er;
      n.isMoment = k;
      n.weekdays = ba;
      n.parseZone = la;
      n.localeData = bn;
      n.isDuration = sr;
      n.monthsShort = ga;
      n.weekdaysMin = wa;
      n.defineLocale = pn;
      n.updateLocale = gn;
      n.locales = yn;
      n.weekdaysShort = ya;
      n.normalizeUnits = re;
      n.relativeTimeRounding = ro;
      n.relativeTimeThreshold = io;
      n.calendarFormat = Hr;
      n.prototype = ua;
      n.HTML5_FMT = { DATETIME_LOCAL: "YYYY-MM-DDTHH:mm", DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss", DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS", DATE: "YYYY-MM-DD", TIME: "HH:mm", TIME_SECONDS: "HH:mm:ss", TIME_MS: "HH:mm:ss.SSS", WEEK: "GGGG-[W]WW", MONTH: "YYYY-MM" };
      return n;
    });
  })(moment$1);
  return moment$1.exports;
}
var ptBr = ptBr$1.exports;
var hasRequiredPtBr;
function requirePtBr() {
  if (hasRequiredPtBr) return ptBr$1.exports;
  hasRequiredPtBr = 1;
  (function(e, t) {
    (function(e2, t2) {
      typeof commonjsRequire === "function" ? t2(requireMoment()) : t2(e2.moment);
    })(ptBr, function(e2) {
      var t2 = e2.defineLocale("pt-br", { months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"), monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"), weekdays: "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"), weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"), weekdaysMin: "do_2ª_3ª_4ª_5ª_6ª_sá".split("_"), weekdaysParseExact: true, longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D [de] MMMM [de] YYYY", LLL: "D [de] MMMM [de] YYYY [às] HH:mm", LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm" }, calendar: { sameDay: "[Hoje às] LT", nextDay: "[Amanhã às] LT", nextWeek: "dddd [às] LT", lastDay: "[Ontem às] LT", lastWeek: function() {
        return this.day() === 0 || this.day() === 6 ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT";
      }, sameElse: "L" }, relativeTime: { future: "em %s", past: "há %s", s: "poucos segundos", ss: "%d segundos", m: "um minuto", mm: "%d minutos", h: "uma hora", hh: "%d horas", d: "um dia", dd: "%d dias", M: "um mês", MM: "%d meses", y: "um ano", yy: "%d anos" }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: "%dº", invalidDate: "Data inválida" });
      return t2;
    });
  })();
  return ptBr$1.exports;
}
requirePtBr();
var diacriticsMap = [{ base: "a", letters: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { base: "b", letters: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { base: "c", letters: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { base: "d", letters: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { base: "e", letters: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { base: "f", letters: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { base: "g", letters: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { base: "h", letters: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { base: "i", letters: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { base: "j", letters: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { base: "k", letters: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { base: "l", letters: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { base: "m", letters: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { base: "n", letters: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { base: "o", letters: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { base: "p", letters: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { base: "q", letters: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { base: "r", letters: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { base: "s", letters: /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { base: "t", letters: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { base: "u", letters: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { base: "v", letters: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { base: "w", letters: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { base: "x", letters: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { base: "y", letters: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { base: "z", letters: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];
function removeDiacritics(e) {
  var t = e.toLowerCase();
  for (var n = 0, r = diacriticsMap.length; n < r; n++) {
    t = t.replace(diacriticsMap[n].letters, diacriticsMap[n].base);
  }
  return t;
}
var alcDatatableBaseCss = ".alc-table{width:100%}.alc-table__header-row{display:none}.alc-table__row{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;border:1px solid #999}.alc-table__cell{border-bottom:1px dotted #999}.alc-table__cell:last-of-type{border-bottom:none}.alc-table__inline-header{display:block;font-weight:bold}";
var themeAlcDatatableCss = '[data-alc-theme="light"] alc-datatable{--color-header:#dfe1e2;--color-header-sorting:#c9c9c9;--color-header-hover:#adadad;--color-row-odd:#f3f3f3;--color-row-odd-sorting:#e6e6e6;--color-row-even:#ffffff;--color-row-even-sorting:#f0f0f0;--color-row-hover:#e6e6e6;--color-header-border:#919191;--color-body-border:#c9c9c9}[data-alc-theme="dark"] alc-datatable{--color-header:#2e2e2e;--color-header-sorting:#0F1113;--color-header-hover:#454545;--color-row-odd:#000000;--color-row-odd-sorting:#2e2e2e;--color-row-even:transparent;--color-row-even-sorting:#454545;--color-row-hover:#5c5c5c;--color-header-border:#454545;--color-body-border:#454545}alc-datatable{position:relative;display:block}.dataTables_wrapper{--shadow-color:#adadad;position:relative;margin-top:0.5rem}.alc-datatable__wrapper{overflow:auto;overflow-x:auto;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transition-property:-webkit-box-shadow;transition-property:-webkit-box-shadow;transition-property:box-shadow;transition-property:box-shadow, -webkit-box-shadow;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-duration:150ms;transition-duration:150ms}.alc-datatable__wrapper.has-scroll-end:after{display:block;--tw-content:"\\200C";content:var(--tw-content);position:absolute;top:0px;right:0px;z-index:10;height:100%;width:0.75rem;-webkit-box-shadow:inset -8px 0px 8px -8px var(--shadow-color);box-shadow:inset -8px 0px 8px -8px var(--shadow-color)}.alc-datatable__wrapper.has-scroll-start:before{display:block;--tw-content:"\\200C";content:var(--tw-content);position:absolute;top:0px;left:0px;z-index:10;height:100%;width:0.75rem;-webkit-box-shadow:inset 8px 0px 8px -8px var(--shadow-color);box-shadow:inset 8px 0px 8px -8px var(--shadow-color)}.alc-table{width:100%}.alc-table tbody:before{display:block;line-height:.75rem;--tw-content:"\\200C";content:var(--tw-content)}.alc-table__header-row{background-color:var(--color-header);text-align:left}.alc-table__header-cell{border-right-width:1px;border-color:var(--color-header-border);padding:0.75rem;font-size:1rem;line-height:1.5rem}.alc-table__header-cell:last-child{border-style:none}.alc-table__header-cell{position:relative;padding-right:1.75rem;vertical-align:top}.alc-table__header-cell.sorting{cursor:pointer}.alc-table__header-cell.sorting:hover{background-color:var(--color-header-hover)}.sorting_asc.alc-table__header-cell,.sorting_desc.alc-table__header-cell{background-color:var(--color-header-sorting)}.sorting_asc.alc-table__header-cell:hover,.sorting_desc.alc-table__header-cell:hover{background-color:var(--color-header-hover)}.alc-datatable__sort-icon{position:absolute;top:0.75rem;right:0.375rem}.alc-table__row.odd{background-color:var(--color-row-odd)}.alc-table__row.even{background-color:var(--color-row-even)}.alc-table__row.odd .alc-table__cell.sorting_1{background-color:var(--color-row-odd-sorting)}.alc-table__row.even .alc-table__cell.sorting_1{background-color:var(--color-row-even-sorting)}.alc-table__row:hover,.alc-table__row:hover .alc-table__cell.sorting_1{background-color:var(--color-row-hover)}.alc-table__cell{border-right-width:1px;border-color:var(--color-body-border);padding:0.75rem}.alc-table__cell:last-child{border-style:none}.alc-field__input.alc-datatable__select-length{margin-left:0.5rem;margin-right:0.5rem;display:inline-block;width:auto}.alc-table__pagination{margin-top:0.5rem;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;gap:0.5rem;}@media (min-width: 576px){.alc-table__pagination{-ms-flex-pack:justify;justify-content:space-between}}.alc-datatable__controls{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;gap:0.5rem}@media (min-width: 576px){.alc-datatable__controls{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:end;align-items:flex-end;-ms-flex-pack:justify;justify-content:space-between}}.alc-datatable__controls-order{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:0.5rem}.alc-datatable__controls-search{width:100%}@media (min-width: 576px){.alc-datatable__controls-search{width:auto}}.alc-datatable__controls-search alc-field{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width: 576px){.alc-datatable__controls-search alc-field{-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center}}.alc-datatable__processing{pointer-events:none;position:absolute;inset:0px;z-index:50}.alc-datatable__processing .alc-loading__overlay-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:transparent}.alc-datatable__processing .alc-loading__card-container{border-width:1px;border-style:solid;border-color:var(--alc-color-border);--tw-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}';
var __decorate = function(e, t, n, r) {
  var i = arguments.length, a = i < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") a = Reflect.decorate(e, t, n, r);
  else for (var s = e.length - 1; s >= 0; s--) if (o = e[s]) a = (i < 3 ? o(a) : i > 3 ? o(t, n, a) : o(t, n)) || a;
  return i > 3 && a && Object.defineProperty(t, n, a), a;
};
var dtEvents = [];
function OriginalEvent(e) {
  if (e === void 0) {
    e = { name: "", cancelable: true, detail: [] };
  }
  return function(t, n) {
    dtEvents.push(Object.assign(Object.assign({}, e), { emitterName: n }));
  };
}
var AlcDatatable = function() {
  function e(e2) {
    var t = this;
    registerInstance(this, e2);
    this.childRow = createEvent(this, "alc-child-row", 6);
    this.columnSizing = createEvent(this, "alc-column-sizing", 6);
    this.columnVisibility = createEvent(this, "alc-column-visibility", 6);
    this.destroy = createEvent(this, "alc-destroy", 6);
    this.draw = createEvent(this, "alc-draw", 6);
    this.error = createEvent(this, "alc-error", 6);
    this.init = createEvent(this, "alc-init", 6);
    this.length = createEvent(this, "alc-length", 6);
    this.order = createEvent(this, "alc-order", 6);
    this.page = createEvent(this, "alc-page", 6);
    this.preDraw = createEvent(this, "alc-pre-draw", 7);
    this.preInit = createEvent(this, "alc-pre-init", 6);
    this.preXhr = createEvent(this, "alc-pre-xhr", 6);
    this.processing = createEvent(this, "alc-processing", 6);
    this.requestChild = createEvent(this, "alc-request-child", 6);
    this.search = createEvent(this, "alc-search", 6);
    this.stateLoadParams = createEvent(this, "alc-state-load-params", 6);
    this.stateLoaded = createEvent(this, "alc-state-loaded", 6);
    this.stateSaveParams = createEvent(this, "alc-state-save-params", 6);
    this.xhr = createEvent(this, "alc-xhr", 6);
    this.deselect = createEvent(this, "alc-deselect", 6);
    this.select = createEvent(this, "alc-select", 6);
    this.selectBlur = createEvent(this, "alc-select-blur", 7);
    this.selectItems = createEvent(this, "alc-select-items", 6);
    this.selectStyle = createEvent(this, "alc-select-style", 6);
    this.userSelect = createEvent(this, "alc-user-select", 7);
    this.columns = Array();
    this.processedOptions = {};
    this.alertVisibility = false;
    this.started = false;
    this.firstLoadingWithProcessing = true;
    this.showProcessing = false;
    this.shouldShowLoader = function() {
      return t.firstLoadingWithProcessing || t.showProcessing;
    };
    this.extensionsDefaults = { orderIntl: true };
    this.currentPage = 1;
    this.initCompleted = false;
    this.searchText = "";
    this.pageLength = "10";
    this.isProcessing = false;
    this.isLoadingActive = false;
    this.deferStart = false;
    this.prepareStack = function(e3) {
      setCssClasses(e3);
    };
    this.renderPageLength = function() {
      var e3 = null;
      var n = t.dataTable.init();
      if (n.lengthChange === false || n.paging === false) {
        return null;
      }
      var r = n.lengthMenu;
      if (Array.isArray(r[0])) {
        e3 = r[0].map(function(e4, n2) {
          return h("option", { value: e4, selected: t.pageLength == e4 }, r[1][n2]);
        });
      } else {
        e3 = r.map(function(e4) {
          return h("option", { value: e4, selected: t.pageLength == e4 }, e4);
        });
      }
      var i = h("alc-field", Object.assign({}, testAttributes()), h("label", null, "Exibir", h("select", { value: t.pageLength, class: "alc-datatable__select-length", onChange: function(e4) {
        t.dataTable.page.len(e4.target.value).draw();
      } }, e3), "por página."));
      return h("div", null, i);
    };
    this.renderPagination = function() {
      var e3 = t.dataTable.page.info();
      logger.debug("renderPagination", e3.length, e3.recordsTotal, e3.recordsDisplay);
      if (e3.length === -1 || e3.recordsTotal <= e3.length || e3.recordsDisplay === 0) {
        return null;
      }
      return h("alc-pagination", { ref: function(e4) {
        return t.paginationElement = e4;
      }, totalPages: e3.pages, currentPage: t.currentPage, "onAlc-change": t.changePage });
    };
    this.renderPageInfo = function() {
      var e3 = t.dataTable.page.info();
      if (e3.recordsDisplay === 0) {
        return null;
      }
      if (e3.recordsTotal === 1) {
        return h("div", null, "1 item listado.");
      }
      if (e3.pages === 1) {
        if (e3.recordsDisplay === e3.recordsTotal) {
          return h("div", null, e3.recordsTotal, " itens listados.");
        }
        return h("div", null, e3.recordsDisplay, " itens - de um total de ", e3.recordsTotal, " itens.");
      }
      var n = e3.start + 1;
      var r = n === e3.end ? e3.end : "De ".concat(n, " até ").concat(e3.end);
      var i = e3.recordsDisplay !== e3.recordsTotal ? " - de um total de ".concat(e3.recordsTotal, " itens") : "";
      return h("div", null, r, " de ", e3.recordsDisplay, " itens", i, ".");
    };
    this.isColumnOrderable = function(e3) {
      return e3.classList.contains("sorting");
    };
    this.renderOrderControls = function(e3) {
      logger.debug("renderOrderControls", t.dataTable.order());
      var n = e3.map(function(e4, n2) {
        var r = [n2, "asc"];
        var i = [n2, "desc"];
        var a = t.dataTable.columns().header()[n2];
        if (t.isColumnOrderable(a)) {
          logger.log("renderOrderControls", t.dataTable.order()[0].toString());
          return [h("alc-menu-item", { value: r, type: "radio", checked: t.dataTable.order()[0].toString() === r.toString() ? true : null }, e4, h("alc-sort-indicator", { sorting: "asc", "aria-label": "ascendente", class: "ml-1" })), h("alc-menu-item", { value: i, type: "radio", checked: t.dataTable.order()[0].toString() === i.toString() ? true : null }, e4, h("alc-sort-indicator", { sorting: "desc", "aria-label": "descendente", class: "ml-1" }))];
        }
        return;
      });
      return h("alc-dropdown", Object.assign({}, testAttributes()), h("button", { slot: "trigger", class: "alc-button alc-button--secondary" }, h("alc-sort-indicator", { sorting: "none", class: "mr-1" }), "Ordenação ", h("alc-icon", { name: "chevron-down", label: "" })), h("alc-menu", { "onAlc-select": t.changeOrder }, n));
    };
    this.renderShowColumnsControls = function(e3) {
      var n = e3.map(function(e4, n2) {
        return h("alc-menu-item", { value: "".concat(n2), type: "checkbox", checked: t.dataTable.column(n2).visible() ? true : null }, e4);
      });
      return h("alc-dropdown", Object.assign({}, testAttributes()), h("button", { slot: "trigger", class: "alc-button alc-button--secondary" }, h("alc-icon", { name: "table", label: "", class: "mr-1 -rotate-90" }), "Colunas ", h("alc-icon", { name: "chevron-down", label: "" })), h("alc-menu", { "onAlc-select": t.changeVisibility }, n));
    };
    this.renderSearchControl = function() {
      return h("div", { class: "alc-datatable__controls-search" }, h("alc-field", Object.assign({ label: "Pesquisar por:" }, testAttributes()), h("input", Object.assign({ type: "search", onInput: t.onSearch, value: t.searchText }, testAttributes()))));
    };
    this.renderProcessing = function() {
      return h("div", { class: "alc-datatable__processing" }, h("alc-loading", { active: t.isLoadingActive, variant: "container", label: portugues.processing }));
    };
    this.changePage = function(e3) {
      var n = e3.detail.to - 1;
      t.currentPage = e3.detail.to;
      t.dataTable.page(n).draw(false);
      forceUpdate(t.el);
    };
    this.changeOrder = function(e3) {
      logger.debug(e3.target.value);
      var n = e3.target.value;
      if (t.currentPage > 1) {
        t.alertVisibility = true;
      }
      t.dataTable.order(n).draw();
      logger.debug(t.dataTable.order());
      forceUpdate(t.el);
    };
    this.changeVisibility = function(e3) {
      var n = parseInt(e3.target.value);
      t.dataTable.column(n).visible(!t.dataTable.column(n).visible());
      t.dataTable.columns.adjust().draw(false);
      forceUpdate(t.el);
      t.handleScrollEvent();
    };
    this.onSearch = function(e3) {
      var n = e3.target;
      if (t.currentPage > 1) {
        var r = t.dataTable.page.info();
        t.currentPage = 1;
        t.paginationElement.totalPages = r.pages;
        t.paginationElement.currentPage = t.currentPage;
        t.alertVisibility = true;
      }
      t.dataTable.search(n.value).draw();
      forceUpdate(t.el);
    };
  }
  e.prototype.ensureJson = function(e2) {
    return typeof e2 === "object" ? e2 : JSON.parse(e2);
  };
  e.prototype.watchIsProcessing = function() {
    var e2 = this;
    if (this.isProcessing) {
      setTimeout(function() {
        e2.isLoadingActive = e2.isProcessing;
      }, 500);
    } else {
      this.isLoadingActive = false;
    }
  };
  e.prototype.dataWatcher = function(e2) {
    if (this.currentPage > 1) {
      this.alertVisibility = true;
    }
    this.jsonData = this.ensureJson(e2);
    this.dataTable.clear();
    this.dataTable.rows.add(this.jsonData);
    this.dataTable.draw();
  };
  e.prototype.DataTableSetup = function() {
    if (!this.dataTableModule) {
      this.dataTableModule = DataTableModule();
      Select();
    }
  };
  e.prototype.getDataTable = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(e2) {
        return [2, this.dataTableModule.$.fn.dataTable];
      });
    });
  };
  e.prototype.getApi = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(e2) {
        switch (e2.label) {
          case 0:
            if (this.deferStart && !this.started) {
              logger.warn('DataTable ainda não foi inicializado. Execute o método "start()" antes de chamar "getApi()".');
              return [2];
            }
            return [4, this.start()];
          case 1:
            e2.sent();
            return [2, this.dataTable];
        }
      });
    });
  };
  e.prototype.componentWillLoad = function() {
    this.DataTableSetup();
    if (!this.deferStart) {
      this.start();
    }
  };
  e.prototype.start = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2, t, n, r, i, a, o;
      var s = this;
      return __generator(this, function(u) {
        switch (u.label) {
          case 0:
            if (this.started) {
              return [2, false];
            }
            this.started = true;
            e2 = this.dataTableModule;
            hooks.locale("pt-br");
            t = getAllDateFormats();
            e2.$.fn.dataTable.ext.type.detect.unshift(function(e3) {
              if (e3 === "") {
                return "br-data";
              }
              if (hooks(e3, t, true).isValid()) {
                return "br-data";
              }
              return null;
            });
            e2.$.fn.dataTable.ext.type.order["br-data-pre"] = function(e3) {
              if (hooks(e3, t, true).isValid()) {
                return parseInt(hooks(e3, t, true).format("x"), 10);
              }
              return e3;
            };
            n = this.el.querySelector("table");
            !n && this.reportEmptyTableProps();
            r = this;
            i = this.options ? this.ensureJson(this.options) : {};
            a = { ordering: true, paging: true, select: false, columnDefs: [{ orderable: true, targets: [] }], searching: true, lengthChange: true, lengthMenu: [10, 25, 50, 100], pageLength: 10 };
            this.processedOptions = Object.assign(Object.assign({}, a), i);
            o = this.processedOptions;
            this.showProcessing = !!o.processing;
            this.pageLength = o.pageLength;
            return [4, this.resolveExtensions()];
          case 1:
            u.sent();
            return [2, new Promise(function(t2) {
              var i2 = Object.assign(Object.assign({}, o), { dom: '<"alc-datatable__wrapper"tr>', autoWidth: false, language: portugues, initComplete: function() {
                logger.debug("initComplete", this.api());
                var e3 = this.api();
                e3.columns().header().each(function(t3, n2) {
                  r.columns.push({ textContent: t3.textContent, th: t3 });
                  r.renderHeader(t3, n2, e3);
                });
                r.prepareStack(this[0]);
                r.configureTableWrapper();
                r.initCompleted = true;
                t2(true);
              } });
              logger.debug(i2);
              if (!n) {
                n = document.createElement("table");
                s.tableId && n.setAttribute("id", s.tableId);
                s.el.insertAdjacentElement("beforeend", n);
              }
              if (s.data) {
                s.jsonData = s.ensureJson(s.data);
                i2.data = s.jsonData;
              }
              if (!n.id) {
                n.setAttribute("id", getUniqueId());
              }
              e2.$("#".concat(n.id)).on("draw.dt", function(e3) {
                logger.debug("draw", e3.currentTarget);
                s.prepareStack(e3.currentTarget);
                if (s.dataTable) {
                  s.currentPage = s.dataTable.page() + 1;
                }
              }).on("select.dt", function(e3, t3, n2, r2) {
                logger.debug("select", e3);
                logger.debug("Linha selecionada", r2[0]);
              }).on("order.dt", function(e3, t3, n2) {
                r.columns.forEach(function(e4, t4) {
                  var i3 = e4.th;
                  var a2 = i3.querySelector("alc-sort-indicator");
                  if (a2) {
                    var o2 = n2[0], s2 = o2.col, u2 = o2.dir;
                    var f = r.getSorting(s2, t4, u2);
                    a2.setAttribute("sorting", f);
                  }
                });
                forceUpdate(r);
              }).on("search.dt", function() {
                if (s.dataTable) {
                  s.searchText = s.dataTable.search();
                }
              }).on("length.dt", function(e3, t3, n2) {
                s.pageLength = n2.toString();
              }).on("stateLoaded.dt", function(e3, t3, n2) {
                logger.debug("stateLoaded event", n2);
                var i3 = n2.search, a2 = n2.length, o2 = n2.start;
                r.pageLength = a2;
                r.searchText = (i3 === null || i3 === void 0 ? void 0 : i3.search) || "";
                r.currentPage = o2 / a2 + 1;
              }).on("processing.dt", function(e3, t3, n2) {
                logger.debug("Setup ", t3);
                var r2 = t3.oInit.processing;
                if (!s.shouldShowLoader()) return;
                if (s.isProcessing === n2) return;
                s.isProcessing = n2;
                s.prepareStack(e3.currentTarget);
                var i3 = s.el.querySelector(".dataTables_processing");
                if (!i3) {
                  i3 = document.createElement("div");
                  i3.className = "dataTables_processing";
                  i3.style.display = "none";
                  s.el.appendChild(i3);
                }
                i3.style.display = "block";
                i3.style.textAlign = "center";
                if (s.firstLoadingWithProcessing) {
                  var a2 = s.el.querySelector(".alc-datatable__wrapper");
                  if (r2) {
                    a2.style.height = "6rem";
                  } else {
                    a2.style.removeProperty("height");
                  }
                  var o2 = i3.querySelector("alc-loading");
                  if (!o2) {
                    i3.innerHTML = "";
                    o2 = document.createElement("alc-loading");
                    o2.setAttribute("variant", "inline");
                    o2.setAttribute("label", portugues.processing);
                    i3.appendChild(o2);
                  }
                  o2.setAttribute("active", String(n2));
                  if (s.firstLoadingWithProcessing && !n2) {
                    s.firstLoadingWithProcessing = false;
                    a2.style.removeProperty("height");
                  }
                  logger.debug("isProcessing:", n2);
                }
              });
              s.addOriginalEventsListeners(e2, n, r);
              s.dataTable = new e2("#".concat(n.id), i2);
            })];
        }
      });
    });
  };
  e.prototype.addOriginalEventsListeners = function(e2, t, n) {
    dtEvents.forEach(function(r) {
      e2.$(t).on("".concat(r.name, ".dt"), function() {
        var e3 = [];
        for (var t2 = 0; t2 < arguments.length; t2++) {
          e3[t2] = arguments[t2];
        }
        var i;
        var a = r.emitterName;
        var o = {};
        r.detail.forEach(function(t3, n2) {
          o[t3] = e3[n2];
        });
        var s = n[a].emit(o).defaultPrevented;
        if (s && r.cancelable) {
          (i = e3[0]) === null || i === void 0 ? void 0 : i.preventDefault();
        }
      });
    });
  };
  e.prototype.configureTableWrapper = function() {
    var e2 = this;
    this.tableWrapper = this.el.querySelector(".alc-datatable__wrapper");
    this.tableWrapper.addEventListener("scroll", function() {
      return e2.handleScrollEvent();
    });
    this.tableWrapper.classList.toggle("has-scroll-end", this.tableWrapper.scrollWidth > this.tableWrapper.clientWidth);
  };
  e.prototype.disconnectedCallback = function() {
    this.tableWrapper.removeEventListener("scroll", this.handleScrollEvent);
  };
  e.prototype.handleResize = function() {
    if (this.tableWrapper.scrollWidth > this.tableWrapper.clientWidth) {
      this.tableWrapper.classList.add("has-scroll-end");
    } else {
      this.tableWrapper.classList.remove("has-scroll-start");
      this.tableWrapper.classList.remove("has-scroll-end");
    }
  };
  e.prototype.handleScrollEvent = function() {
    this.tableWrapper.classList.toggle("has-scroll-start", this.tableWrapper.scrollLeft > 0);
    this.tableWrapper.classList.toggle("has-scroll-end", Math.ceil(this.tableWrapper.offsetWidth + this.tableWrapper.scrollLeft) < this.tableWrapper.scrollWidth);
  };
  e.prototype.getSorting = function(e2, t, n) {
    var r = "none";
    if (e2 === t) {
      r = n;
    }
    return r;
  };
  e.prototype.resolveExtensions = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2, t, n;
      return __generator(this, function(r) {
        switch (r.label) {
          case 0:
            return [4, this.getDataTable()];
          case 1:
            e2 = r.sent();
            t = this.extensions ? this.ensureJson(this.extensions) : {};
            n = Object.assign(Object.assign({}, this.extensionsDefaults), t);
            e2.ext.type.search.string = function(e3) {
              return e3 + " " + removeDiacritics(e3);
            };
            if (n.orderIntl) {
              e2.ext.order.intl = function(t2, n2) {
                if (window.Intl) {
                  var r2 = new window.Intl.Collator(t2, n2);
                  var i = e2.ext.type;
                  delete i.order["string-pre"];
                  i.order["string-asc"] = r2.compare;
                  i.order["string-desc"] = function(e3, t3) {
                    return r2.compare(e3, t3) * -1;
                  };
                }
              };
              e2.ext.order.intl("pt-BR", { sensitivity: "base" });
            }
            return [2];
        }
      });
    });
  };
  e.prototype.renderHeader = function(e2, t, n) {
    if (!this.isColumnOrderable(e2)) {
      return;
    }
    var r = n.order()[0][0];
    var i = n.order()[0][1];
    var a = document.createElement("alc-sort-indicator");
    a.classList.add("alc-datatable__sort-icon");
    a.setAttribute("sorting", this.getSorting(r, t, i));
    e2.appendChild(a);
    return e2;
  };
  e.prototype.reportEmptyTableProps = function() {
    if (!this.data) {
      logger.report("data", this.el.tagName.toLowerCase(), this.el);
    }
    if (!this.options) {
      logger.report("options", this.el.tagName.toLowerCase(), this.el);
    }
  };
  e.prototype.render = function() {
    if (!this.initCompleted) {
      return;
    }
    return this.renderTable();
  };
  e.prototype.renderTable = function() {
    var e2 = this;
    logger.debug("alc - renderTable");
    var t = this.processedOptions, n = t.ordering, r = t.paging, i = t.searching;
    return h(Host, null, h("alc-alert", { type: "warning", visible: this.alertVisibility, "onAlc-hide": function() {
      return e2.alertVisibility = false;
    } }, "Tabela reposicionada na primeira página"), h("div", { class: "alc-datatable__controls" }, h("div", { class: "alc-datatable__controls-order" }, !!n ? this.renderOrderControls(this.columns.map(function(e3) {
      return e3.textContent;
    })) : null, this.renderShowColumnsControls(this.columns.map(function(e3) {
      return e3.textContent;
    })), this.renderPageLength()), !!i ? this.renderSearchControl() : null), this.shouldShowLoader() ? this.renderProcessing() : null, h("slot", null), r ? h("div", { class: "alc-table__pagination" }, this.renderPageInfo(), this.renderPagination()) : null);
  };
  Object.defineProperty(e.prototype, "el", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  Object.defineProperty(e, "watchers", { get: function() {
    return { isProcessing: ["watchIsProcessing"], data: ["dataWatcher"] };
  }, enumerable: false, configurable: true });
  return e;
}();
__decorate([OriginalEvent({ name: "childRow", cancelable: false, detail: ["e", "show", "row"] })], AlcDatatable.prototype, "childRow", void 0);
__decorate([OriginalEvent({ name: "column-sizing", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "columnSizing", void 0);
__decorate([OriginalEvent({ name: "column-visibility", cancelable: false, detail: ["e", "settings", "column", "state", "recalc"] })], AlcDatatable.prototype, "columnVisibility", void 0);
__decorate([OriginalEvent({ name: "destroy", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "destroy", void 0);
__decorate([OriginalEvent({ name: "draw", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "draw", void 0);
__decorate([OriginalEvent({ name: "error", cancelable: false, detail: ["e", "settings", "techNote", "message"] })], AlcDatatable.prototype, "error", void 0);
__decorate([OriginalEvent({ name: "init", cancelable: false, detail: ["e", "settings", "json"] })], AlcDatatable.prototype, "init", void 0);
__decorate([OriginalEvent({ name: "length", cancelable: false, detail: ["e", "settings", "len"] })], AlcDatatable.prototype, "length", void 0);
__decorate([OriginalEvent({ name: "order", cancelable: false, detail: ["e", "settings", "ordArr"] })], AlcDatatable.prototype, "order", void 0);
__decorate([OriginalEvent({ name: "page", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "page", void 0);
__decorate([OriginalEvent({ name: "preDraw", cancelable: true, detail: ["e", "settings"] })], AlcDatatable.prototype, "preDraw", void 0);
__decorate([OriginalEvent({ name: "preInit", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "preInit", void 0);
__decorate([OriginalEvent({ name: "preXhr", cancelable: false, detail: ["e", "settings", "data"] })], AlcDatatable.prototype, "preXhr", void 0);
__decorate([OriginalEvent({ name: "processing", cancelable: false, detail: ["e", "settings", "processing"] })], AlcDatatable.prototype, "processing", void 0);
__decorate([OriginalEvent({ name: "requestChild", cancelable: false, detail: ["e", "row"] })], AlcDatatable.prototype, "requestChild", void 0);
__decorate([OriginalEvent({ name: "search", cancelable: false, detail: ["e", "settings"] })], AlcDatatable.prototype, "search", void 0);
__decorate([OriginalEvent({ name: "stateLoadParams", cancelable: false, detail: ["e", "settings", "data"] })], AlcDatatable.prototype, "stateLoadParams", void 0);
__decorate([OriginalEvent({ name: "stateLoaded", cancelable: false, detail: ["e", "settings", "data"] })], AlcDatatable.prototype, "stateLoaded", void 0);
__decorate([OriginalEvent({ name: "stateSaveParams", cancelable: false, detail: ["e", "settings", "data"] })], AlcDatatable.prototype, "stateSaveParams", void 0);
__decorate([OriginalEvent({ name: "xhr", cancelable: false, detail: ["e", "settings", "json", "xhr"] })], AlcDatatable.prototype, "xhr", void 0);
__decorate([OriginalEvent({ name: "deselect", cancelable: false, detail: ["e", "dt", "type", "indexes"] })], AlcDatatable.prototype, "deselect", void 0);
__decorate([OriginalEvent({ name: "select", cancelable: false, detail: ["e", "dt", "type", "indexes"] })], AlcDatatable.prototype, "select", void 0);
__decorate([OriginalEvent({ name: "select-blur", cancelable: true, detail: ["e", "dt", "target", "originalEvent"] })], AlcDatatable.prototype, "selectBlur", void 0);
__decorate([OriginalEvent({ name: "selectItems", cancelable: false, detail: ["e", "dt", "items"] })], AlcDatatable.prototype, "selectItems", void 0);
__decorate([OriginalEvent({ name: "selectStyle", cancelable: false, detail: ["e", "dt", "style"] })], AlcDatatable.prototype, "selectStyle", void 0);
__decorate([OriginalEvent({ name: "user-select", cancelable: true, detail: ["e", "dt", "type", "cell", "originalEvent"] })], AlcDatatable.prototype, "userSelect", void 0);
var getAllDateFormats = function() {
  var e = ["DD/MM/YYYY", "DD/MM/YY", "D/M/YYYY", "D/M/YY", "DD/M/YYYY", "DD/M/YY", "D/MM/YYYY", "D/MM/YY"];
  var t = e.reduce(function(e2, t2) {
    return __spreadArray(__spreadArray([], e2, true), ["".concat(t2, " HH:mm:ss"), "".concat(t2, " HH:mm"), "".concat(t2, " HH:mm:ss.S"), "".concat(t2, " HH:mm:ss.SS"), "".concat(t2, " HH:mm:ss.SSS")], false);
  }, []);
  return __spreadArray(__spreadArray([], e, true), t, true);
};
AlcDatatable.style = { base: alcDatatableBaseCss, theme: themeAlcDatatableCss };
export {
  AlcDatatable as alc_datatable
};
/*! Bundled license information:

alcance/dist/esm-es5/alc-datatable.entry.js:
  (*!
   * jQuery JavaScript Library v3.7.1
   * https://jquery.com/
   *
   * Copyright OpenJS Foundation and other contributors
   * Released under the MIT license
   * https://jquery.org/license
   *
   * Date: 2023-08-28T13:37Z
   *)
  (*! DataTables 1.12.1
   * ©2008-2022 SpryMedia Ltd - datatables.net/license
   *)
  (*! Select for DataTables 1.4.0-dev
   * 2015-2021 SpryMedia Ltd - datatables.net/license/mit
   *)
  (*! moment.js *)
  (*! version : 2.29.4 *)
  (*! authors : Tim Wood, Iskren Chernev, Moment.js contributors *)
  (*! license : MIT *)
  (*! momentjs.com *)
  (*! moment.js locale configuration *)
*/
//# sourceMappingURL=alc-datatable.entry-7RY2OCMX.js.map
