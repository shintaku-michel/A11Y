import {
  lockBodyScroll,
  unlockBodyScroll
} from "./chunk-LJRJFVT3.js";
import {
  focusFirstElement,
  getFocusableElements,
  handleKeyDown
} from "./chunk-WGMPJW27.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  Host,
  createEvent,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-drawer.entry.js
var __awaiter = function(e, t, r, a) {
  function i(e2) {
    return e2 instanceof r ? e2 : new r(function(t2) {
      t2(e2);
    });
  }
  return new (r || (r = Promise))(function(r2, n) {
    function s(e2) {
      try {
        c(a.next(e2));
      } catch (e3) {
        n(e3);
      }
    }
    function o(e2) {
      try {
        c(a["throw"](e2));
      } catch (e3) {
        n(e3);
      }
    }
    function c(e2) {
      e2.done ? r2(e2.value) : i(e2.value).then(s, o);
    }
    c((a = a.apply(e, t || [])).next());
  });
};
var __generator = function(e, t) {
  var r = { label: 0, sent: function() {
    if (n[0] & 1) throw n[1];
    return n[1];
  }, trys: [], ops: [] }, a, i, n, s;
  return s = { next: o(0), throw: o(1), return: o(2) }, typeof Symbol === "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function o(e2) {
    return function(t2) {
      return c([e2, t2]);
    };
  }
  function c(o2) {
    if (a) throw new TypeError("Generator is already executing.");
    while (s && (s = 0, o2[0] && (r = 0)), r) try {
      if (a = 1, i && (n = o2[0] & 2 ? i["return"] : o2[0] ? i["throw"] || ((n = i["return"]) && n.call(i), 0) : i.next) && !(n = n.call(i, o2[1])).done) return n;
      if (i = 0, n) o2 = [o2[0] & 2, n.value];
      switch (o2[0]) {
        case 0:
        case 1:
          n = o2;
          break;
        case 4:
          r.label++;
          return { value: o2[1], done: false };
        case 5:
          r.label++;
          i = o2[1];
          o2 = [0];
          continue;
        case 7:
          o2 = r.ops.pop();
          r.trys.pop();
          continue;
        default:
          if (!(n = r.trys, n = n.length > 0 && n[n.length - 1]) && (o2[0] === 6 || o2[0] === 2)) {
            r = 0;
            continue;
          }
          if (o2[0] === 3 && (!n || o2[1] > n[0] && o2[1] < n[3])) {
            r.label = o2[1];
            break;
          }
          if (o2[0] === 6 && r.label < n[1]) {
            r.label = n[1];
            n = o2;
            break;
          }
          if (n && r.label < n[2]) {
            r.label = n[2];
            r.ops.push(o2);
            break;
          }
          if (n[2]) r.ops.pop();
          r.trys.pop();
          continue;
      }
      o2 = t.call(e, r);
    } catch (e2) {
      o2 = [6, e2];
      i = 0;
    } finally {
      a = n = 0;
    }
    if (o2[0] & 5) throw o2[1];
    return { value: o2[0] ? o2[1] : void 0, done: true };
  }
};
var alcDrawerBaseCss = ".alc-modal__overlay{position:fixed;inset:0px;z-index:10;display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:end;justify-content:flex-end}.alc-drawer__content{position:relative;height:100%;width:100%;max-width:28rem;overflow-y:auto}.alc-drawer__header{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;padding:1rem}";
var themeAlcDrawerCss = ".alc-drawer__overlay{position:fixed;inset:0px;z-index:30;display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:end;justify-content:flex-end;background-color:rgb(45 46 47 / var(--tw-bg-opacity));--tw-bg-opacity:0.4}.alc-drawer__content{position:relative;height:100%;width:100%;max-width:28rem;overflow-y:auto;background-color:var(--alc-color-surface-primary);--tw-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.alc-drawer__header{position:absolute;right:0px;display:block;padding-right:var(--alc-spacing-04);padding-top:var(--alc-spacing-04)}";
var AlcDrawer = function() {
  function e(e2) {
    var t = this;
    registerInstance(this, e2);
    this.alcShow = createEvent(this, "alc-show", 7);
    this.alcAfterShow = createEvent(this, "alc-after-show", 6);
    this.alcHide = createEvent(this, "alc-hide", 7);
    this.alcAfterHide = createEvent(this, "alc-after-hide", 6);
    this.triggerElement = null;
    this.elementToFocus = null;
    this.isVisible = false;
    this.getDrawerRef = function(e3) {
      return t.drawerRef = e3;
    };
    this.handleFocusWhenCloseDrawer = function() {
      if (!!t.elementToFocus) {
        var e3 = t.elementToFocus;
        if (typeof e3 === "string") {
          e3 = document.getElementById(e3);
        }
        return !!e3 ? e3.focus() : null;
      }
      var r = ["BODY", "DOCUMENT"];
      var a = !!t.triggerElement && document.body.contains(t.triggerElement);
      if (a && !r.includes(t.triggerElement.tagName)) {
        t.triggerElement.focus();
        return;
      }
      return;
    };
  }
  e.prototype.watchIsVisible = function(e2) {
    if (e2) {
      lockBodyScroll();
      this.triggerElement = document.activeElement;
      this.show();
      return e2;
    }
    unlockBodyScroll();
    this.hide();
    return e2;
  };
  e.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2;
      return __generator(this, function(t) {
        if (this.isVisible) {
          return [2, false];
        }
        e2 = this.alcShow.emit().defaultPrevented;
        if (e2) {
          return [2, false];
        }
        this.isVisible = true;
        this.alcAfterShow.emit();
        return [2, true];
      });
    });
  };
  e.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      var e2;
      return __generator(this, function(t) {
        if (!this.isVisible) {
          return [2, false];
        }
        e2 = this.alcHide.emit().defaultPrevented;
        if (e2) {
          return [2, false];
        }
        this.isVisible = false;
        this.alcAfterHide.emit();
        this.handleFocusWhenCloseDrawer();
        return [2, true];
      });
    });
  };
  e.prototype.handleKeyDown = function(e2) {
    if (!this.isVisible) {
      return;
    }
    if (e2.defaultPrevented) {
      return;
    }
    if (e2.key === "Escape") {
      e2.preventDefault();
      this.hide();
      return;
    }
    if (e2.key !== "Tab") return;
    var t = getFocusableElements(this.drawerRef);
    handleKeyDown(e2, t);
  };
  e.prototype.componentDidRender = function() {
    var e2 = getFocusableElements(this.drawerRef);
    if (this.isVisible) {
      focusFirstElement(e2);
    }
  };
  e.prototype.connectedCallback = function() {
    if (this.isVisible) {
      lockBodyScroll();
    }
  };
  e.prototype.disconnectedCallback = function() {
    if (this.isVisible) {
      unlockBodyScroll();
    }
  };
  e.prototype.render = function() {
    var e2 = this;
    return h(Host, { key: "ca2677c0cd1d14c67bafa67fce53f5b424f4685e", style: { display: this.isVisible ? "block" : "none" } }, h("div", { key: "8acd999442e9acf8a2e809cfa7815da89eee94cb", class: "alc-drawer__overlay" }, h("div", { key: "fb8f0c024488670e1b8d2ecdb127bf3932b12571", class: "alc-drawer__content bg-white dark:bg-black", role: "dialog", "aria-modal": "true", ref: this.getDrawerRef }, h("div", { key: "849e2ea5ff524e1d38e56f9d8927dfccf7f0a4d9", class: "alc-drawer__header" }, h("button", Object.assign({ key: "4c1cb2eeb3873269d1e22c2562aca16194483c0f", class: "alc-button alc-button-rounded", onClick: function() {
      return e2.hide();
    } }, testAttributes()), h("alc-icon", Object.assign({ key: "3d49c3ad15ddaa614ff1c247de746248e94c498b", name: "x-lg", label: "Fechar Drawer" }, testAttributes())))), h("div", { key: "ece60e72f6084d1a481561acb9978f769e4178d3" }, h("slot", { key: "8c460fb7b5dcc59fe786028b1a7557e0308f5b7c" })))));
  };
  Object.defineProperty(e, "watchers", { get: function() {
    return { isVisible: ["watchIsVisible"] };
  }, enumerable: false, configurable: true });
  return e;
}();
AlcDrawer.style = { base: alcDrawerBaseCss, theme: themeAlcDrawerCss };
export {
  AlcDrawer as alc_drawer
};
