import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  getUniqueId
} from "./chunk-6E7TTPYM.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-loading_3.entry.js
var __awaiter = function(i, e, t, n) {
  function a(i2) {
    return i2 instanceof t ? i2 : new t(function(e2) {
      e2(i2);
    });
  }
  return new (t || (t = Promise))(function(t2, r) {
    function o(i2) {
      try {
        s(n.next(i2));
      } catch (i3) {
        r(i3);
      }
    }
    function l(i2) {
      try {
        s(n["throw"](i2));
      } catch (i3) {
        r(i3);
      }
    }
    function s(i2) {
      i2.done ? t2(i2.value) : a(i2.value).then(o, l);
    }
    s((n = n.apply(i, e || [])).next());
  });
};
var __generator = function(i, e) {
  var t = { label: 0, sent: function() {
    if (r[0] & 1) throw r[1];
    return r[1];
  }, trys: [], ops: [] }, n, a, r, o;
  return o = { next: l(0), throw: l(1), return: l(2) }, typeof Symbol === "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function l(i2) {
    return function(e2) {
      return s([i2, e2]);
    };
  }
  function s(l2) {
    if (n) throw new TypeError("Generator is already executing.");
    while (o && (o = 0, l2[0] && (t = 0)), t) try {
      if (n = 1, a && (r = l2[0] & 2 ? a["return"] : l2[0] ? a["throw"] || ((r = a["return"]) && r.call(a), 0) : a.next) && !(r = r.call(a, l2[1])).done) return r;
      if (a = 0, r) l2 = [l2[0] & 2, r.value];
      switch (l2[0]) {
        case 0:
        case 1:
          r = l2;
          break;
        case 4:
          t.label++;
          return { value: l2[1], done: false };
        case 5:
          t.label++;
          a = l2[1];
          l2 = [0];
          continue;
        case 7:
          l2 = t.ops.pop();
          t.trys.pop();
          continue;
        default:
          if (!(r = t.trys, r = r.length > 0 && r[r.length - 1]) && (l2[0] === 6 || l2[0] === 2)) {
            t = 0;
            continue;
          }
          if (l2[0] === 3 && (!r || l2[1] > r[0] && l2[1] < r[3])) {
            t.label = l2[1];
            break;
          }
          if (l2[0] === 6 && t.label < r[1]) {
            t.label = r[1];
            r = l2;
            break;
          }
          if (r && t.label < r[2]) {
            t.label = r[2];
            t.ops.push(l2);
            break;
          }
          if (r[2]) t.ops.pop();
          t.trys.pop();
          continue;
      }
      l2 = e.call(i, t);
    } catch (i2) {
      l2 = [6, i2];
      a = 0;
    } finally {
      n = r = 0;
    }
    if (l2[0] & 5) throw l2[1];
    return { value: l2[0] ? l2[1] : void 0, done: true };
  }
};
var __spreadArray = function(i, e, t) {
  if (t || arguments.length === 2) for (var n = 0, a = e.length, r; n < a; n++) {
    if (r || !(n in e)) {
      if (!r) r = Array.prototype.slice.call(e, 0, n);
      r[n] = e[n];
    }
  }
  return i.concat(r || Array.prototype.slice.call(e));
};
var alcLoadingCss = '[data-alc-theme="light"] alc-loading{--bg-color-overlay:#2d2e2f66;--border-color-loading-default:#dfe1e2;--border-color-loading:var(--alc-color-action-60)}[data-alc-theme="dark"] alc-loading{--bg-color-overlay:#565c6566;--border-color-loading-default:#2d2e2f;--border-color-loading:var(--alc-color-action-40)}alc-loading{--bg-color-card:var(--alc-color-surface)}.alc-loading__overlay{position:fixed;top:0px;left:0px;z-index:1090;height:100%;width:100%;background-color:var(--bg-color-overlay);display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;gap:0.5rem}.alc-loading__card{min-width:12rem;border-radius:var(--alc-radius-default);background-color:var(--bg-color-card);padding:1rem;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;text-wrap:nowrap;text-align:center}.alc-loading__card::before{display:block;--tw-content:"\\200C";content:var(--tw-content);margin-bottom:var(--alc-spacing-03);height:3rem;width:3rem}@-webkit-keyframes spin{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.alc-loading__card::before{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite;border-radius:9999px;border-width:6px;border-style:solid;border-color:var(--border-color-loading);border-right-color:var(--border-color-loading-default)}.alc-loading__container{position:relative}.alc-loading__card-container{margin-bottom:0.5rem;margin-top:0.5rem;min-width:12rem;border-radius:var(--alc-radius-default);background-color:var(--bg-color-card);padding:1rem;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;text-wrap:nowrap;text-align:center}.alc-loading__overlay-container{position:absolute;inset:0px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--bg-color-overlay);z-index:50}.alc-loading__spinner-container{height:2.5rem;width:2.5rem}@keyframes spin{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.alc-loading__spinner-container{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite;border-radius:9999px;border-width:4px;border-style:solid;border-color:var(--border-color-loading);border-right-color:var(--border-color-loading-default)}.alc-loading__inline{display:inline-block}.alc-loading__spinner-inline,.alc-loading__label-inline{display:-ms-inline-flexbox;display:inline-flex;vertical-align:sub}.alc-loading__spinner-inline{margin-right:0.5rem;height:1.25rem;width:1.25rem;-ms-flex-negative:0;flex-shrink:0}@keyframes spin{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.alc-loading__spinner-inline{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite;border-radius:9999px;border-width:2px;border-style:solid;border-color:var(--border-color-loading);border-right-color:var(--border-color-loading-default)}.alc-loading__label-inline{font-size:0.875rem;line-height:1rem;line-height:1}.alc-loading__button{display:inline-block}.alc-loading__button-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}.alc-loading__spinner-button{position:relative;top:0.125em;margin-top:-0.125em;height:1rem;width:1rem}@keyframes spin{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.alc-loading__spinner-button{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite;border-radius:9999px;border-width:2px;border-style:solid;border-color:var(--border-color-loading);border-right-color:var(--border-color-loading-default)}.sr-only{position:absolute;margin:-1px;height:1px;width:1px;overflow:hidden;white-space:nowrap;border-width:0px;padding:0px;clip:rect(0, 0, 0, 0)}';
var AlcLoading = function() {
  function i(i2) {
    registerInstance(this, i2);
    this.active = false;
    this.label = "Carregando...";
    this.endMsg = "Finalizado.";
    this.variant = "full-screen";
    this.ariaMessage = "";
    this.parentButton = null;
  }
  i.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(i2) {
        if (this.active) {
          return [2, false];
        }
        this.active = true;
        return [2, true];
      });
    });
  };
  i.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(i2) {
        if (!this.active) {
          return [2, false];
        }
        this.active = false;
        return [2, true];
      });
    });
  };
  i.prototype.onActiveChange = function(i2, e) {
    if (i2 !== e) {
      this.updateAriaMessage();
      if (this.variant === "button") {
        this.updateParentButtonAttributes();
      }
    }
  };
  i.prototype.componentWillLoad = function() {
    this.updateAriaMessage();
  };
  i.prototype.componentDidLoad = function() {
    if (this.variant === "button") {
      this.findParentButton();
      this.updateParentButtonAttributes();
    }
  };
  i.prototype.updateAriaMessage = function() {
    this.ariaMessage = this.active ? this.label : this.endMsg;
  };
  i.prototype.findParentButton = function() {
    this.parentButton = this.el.closest("button");
    if (!this.parentButton) {
      logger.warn('alc-loading[variant="button"] deve estar dentro de um elemento <button>.');
    }
  };
  i.prototype.updateParentButtonAttributes = function() {
    if (this.parentButton) {
      if (this.active) {
        this.parentButton.setAttribute("aria-label", this.label);
      } else {
        this.parentButton.removeAttribute("aria-label");
      }
    }
  };
  i.prototype.render = function() {
    var i2 = this.variant !== "button";
    return h(Host, { key: "4e4d1315ccbcbd55c2718dd8421845ab217901fa" }, this.renderLoadingVisuals(), i2 && h("div", Object.assign({ key: "eab510d1080f9a3d1ec98600f86621a4faf99765", class: "sr-only", "aria-live": "polite", role: "status" }, testAttributes()), this.ariaMessage));
  };
  i.prototype.renderLoadingVisuals = function() {
    switch (this.variant) {
      case "full-screen":
        return this.renderFullScreen();
      case "container":
        return this.renderContainer();
      case "inline":
        return this.renderInline();
      case "button":
        return this.renderButton();
      default:
        return null;
    }
  };
  i.prototype.renderFullScreen = function() {
    if (!this.active) return null;
    return h("div", { class: "alc-loading__overlay", "aria-hidden": "true" }, h("div", { class: "alc-loading__card" }, h("p", null, this.label)));
  };
  i.prototype.renderContainer = function() {
    if (!this.active) return null;
    return h("div", { class: "alc-loading__overlay-container", "aria-hidden": "true" }, h("div", { class: "alc-loading__card-container" }, h("div", { class: "alc-loading__spinner-container" }), h("p", null, this.label)));
  };
  i.prototype.renderInline = function() {
    if (!this.active) return null;
    return h("div", { class: "alc-loading__inline", "aria-hidden": "true" }, h("div", { class: "alc-loading__spinner-inline" }), h("span", { class: "alc-loading__label" }, this.label));
  };
  i.prototype.renderButton = function() {
    if (!this.active) return null;
    return h("div", { class: "alc-loading__button", "aria-hidden": "true" }, h("span", { class: "alc-loading__button-wrapper" }, h("div", { class: "alc-loading__spinner-button" })));
  };
  Object.defineProperty(i.prototype, "el", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  Object.defineProperty(i, "watchers", { get: function() {
    return { active: ["onActiveChange"] };
  }, enumerable: false, configurable: true });
  return i;
}();
AlcLoading.style = alcLoadingCss;
var alcPaginationBaseCss = "alc-pagination{display:block}.alc-pagination{display:-ms-flexbox;display:flex;list-style-type:none;padding-left:0px;padding-right:0px}.alc-pagination__link{margin-left:0.25rem;margin-right:0.25rem;border-width:1px;border-style:solid;border-color:transparent;padding-left:0.5rem;padding-right:0.5rem}.alc-pagination__link.is-active{cursor:not-allowed;border-color:currentColor;color:currentColor;-webkit-text-decoration-line:none;text-decoration-line:none}.alc-pagination__link.is-disabled{cursor:not-allowed;color:currentColor;-webkit-text-decoration-line:none;text-decoration-line:none}";
var themeAlcPaginationCss = ".alc-pagination{display:-ms-flexbox;display:flex}.alc-pagination__content{display:-ms-flexbox;display:flex;list-style-type:none;-ms-flex-align:center;align-items:center}.alc-pagination__button--first,.alc-pagination__button--last{display:none}@media (min-width: 576px){.alc-pagination__button--first,.alc-pagination__button--last{display:block}}.alc-pagination__item{margin-left:0.125rem;margin-right:0.125rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.alc-pagination__select{--border-width:1px;margin-left:0.25rem;margin-right:0.25rem;padding-top:0.25rem;padding-bottom:0.25rem;border-width:var(--border-width);padding-left:calc(0.25rem - var(--border-width));padding-right:calc(0.25rem - var(--border-width));max-height:2rem;min-width:4rem}";
var Pagination = function() {
  function i(i2) {
    var e = this;
    registerInstance(this, i2);
    this.alcChange = createEvent(this, "alc-change", 6);
    this.idSelectPagination = null;
    this.disabledSelect = false;
    this.totalPages = 1;
    this.currentPage = 1;
    this.pageList = [];
    this.paginationItem = { isFirst: { icon: "chevron-double-left", label: "Ir para primeira página" }, isLast: { icon: "chevron-double-right", label: "Ir para última página" }, isPrev: { icon: "chevron-left", label: "Ir para página anterior" }, isNext: { icon: "chevron-right", label: "Ir para próxima página" } };
    this.checkPage = function(i3) {
      var t = ["isFirst", "isPrev"];
      var n = ["isLast", "isNext"];
      if (t.includes(i3)) {
        return e.currentPage !== 1;
      }
      if (n.includes(i3)) {
        return e.currentPage !== e.pageList.length;
      }
      return true;
    };
    this.handleSelectedPage = function(i3) {
      e.handleChangePage(parseInt(i3.target.value), "isSelect");
    };
    this.renderPaginationItem = function(i3, t) {
      var n = !e.checkPage(t);
      var a = !n && t !== "isFirst" ? ", Ir para página ".concat(i3) : "";
      return h("li", null, h("button", Object.assign({ onClick: function() {
        return e.handleChangePage(i3, t);
      }, class: { "alc-button alc-button-rounded": true, "alc-pagination__button--first": t === "isFirst", "alc-pagination__button--last": t === "isLast" }, "aria-label": e.paginationItem[t].label + a, "aria-disabled": n, disabled: n }, testAttributes()), h("alc-icon", { name: e.paginationItem[t].icon, label: "" })));
    };
  }
  i.prototype.watchPropTotalPages = function(i2, e) {
    if (i2 < this.currentPage) {
      this.totalPages = e;
      logger.warn('"total-pages" não pode ser menor do que "current-page". Foi mantido o valor '.concat(e));
      return;
    }
    this.pageList = __spreadArray([], new Array(i2), true).map(function(i3, e2) {
      return e2 + 1;
    });
  };
  i.prototype.componentWillLoad = function() {
    this.pageList = __spreadArray([], new Array(this.totalPages), true).map(function(i2, e) {
      return e + 1;
    });
    this.idSelectPagination = getUniqueId();
  };
  i.prototype.handleChangePage = function(i2, e) {
    if (!this.checkPage(e)) {
      return;
    }
    var t = this.alcChange.emit({ from: this.currentPage, to: i2, using: e });
    this.pageChangeHandler(t);
  };
  i.prototype.pageChangeHandler = function(i2) {
    var e = i2.detail, t = e.using, n = e.to;
    switch (t) {
      case "isFirst":
        this.currentPage = 1;
        break;
      case "isPrev":
        this.currentPage = this.currentPage - 1;
        break;
      case "isNext":
        this.currentPage = this.currentPage + 1;
        break;
      case "isLast":
        this.currentPage = this.totalPages;
        break;
      default:
        this.currentPage = n;
        break;
    }
  };
  i.prototype.render = function() {
    var i2 = this;
    return h(Host, { key: "b9c2cd42db54e71b3c5a51a415954b1c54eb45a1" }, h("nav", { key: "882ca182b295ef0381c3ded7d7a0a0c050b46433", role: "navigation", "aria-label": "Navegação paginada", class: "alc-pagination" }, h("ul", { key: "477efe3227941828b93bce80c41059df2c5b0a98", class: "alc-pagination__content" }, this.renderPaginationItem(1, "isFirst"), this.renderPaginationItem(this.currentPage - 1, "isPrev"), h("li", { key: "9d359535992c6a6774da1d48470179da7eb0f58e", class: "alc-pagination__item" }, h("label", { key: "fdeecaa87d18f33ba5a1d62cfe5405230ff6d7b9", htmlFor: this.idSelectPagination }, "Página"), h("select", { key: "9b30bfdd417a4dfbc719ef1625debd5ff4b650c4", onChange: this.handleSelectedPage, class: "alc-pagination__select", id: this.idSelectPagination, disabled: this.disabledSelect }, this.pageList.map(function(e) {
      return h("option", { value: e, selected: e === i2.currentPage, "aria-label": "Página ".concat(e) }, e);
    })), "de ", this.totalPages), this.renderPaginationItem(this.currentPage + 1, "isNext"), this.renderPaginationItem(this.pageList.length, "isLast"))));
  };
  Object.defineProperty(i, "watchers", { get: function() {
    return { totalPages: ["watchPropTotalPages"] };
  }, enumerable: false, configurable: true });
  return i;
}();
Pagination.style = { base: alcPaginationBaseCss, theme: themeAlcPaginationCss };
var iconMap = /* @__PURE__ */ new Map();
iconMap.set("asc", { name: "chevron-down" });
iconMap.set("desc", { name: "chevron-up" });
iconMap.set("none", { name: "chevron-expand" });
var AlcSortIndicator = function() {
  function i(i2) {
    registerInstance(this, i2);
    this.sorting = "none";
  }
  i.prototype.render = function() {
    return h(Host, { key: "d3de3f859d218235a32d3cbd2b1c78a1a667c903" }, h("span", { key: "b08d705fef11a025faa69144ab539dadc8e22035", class: "alc-sort-indicator" }, h("alc-icon", { key: "d9f35015d02ef4f5f8b82cb0a1ef1245e0fc9354", name: iconMap.get(this.sorting).name, class: "alc-sort-indicator__icon", label: "" })));
  };
  return i;
}();
export {
  AlcLoading as alc_loading,
  Pagination as alc_pagination,
  AlcSortIndicator as alc_sort_indicator
};
//# sourceMappingURL=alc-loading_3.entry-7JWKVNNJ.js.map
