import {
  logger
} from "./chunk-F2BFVVNU.js";
import {
  testAttributes
} from "./chunk-IGBJBFZL.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-S4YNXM4D.js";
import "./chunk-7D4SUZUM.js";

// node_modules/alcance/dist/esm-es5/alc-alert.entry.js
var __awaiter = function(r, e, o, t) {
  function a(r2) {
    return r2 instanceof o ? r2 : new o(function(e2) {
      e2(r2);
    });
  }
  return new (o || (o = Promise))(function(o2, c) {
    function i(r2) {
      try {
        l(t.next(r2));
      } catch (r3) {
        c(r3);
      }
    }
    function n(r2) {
      try {
        l(t["throw"](r2));
      } catch (r3) {
        c(r3);
      }
    }
    function l(r2) {
      r2.done ? o2(r2.value) : a(r2.value).then(i, n);
    }
    l((t = t.apply(r, e || [])).next());
  });
};
var __generator = function(r, e) {
  var o = { label: 0, sent: function() {
    if (c[0] & 1) throw c[1];
    return c[1];
  }, trys: [], ops: [] }, t, a, c, i;
  return i = { next: n(0), throw: n(1), return: n(2) }, typeof Symbol === "function" && (i[Symbol.iterator] = function() {
    return this;
  }), i;
  function n(r2) {
    return function(e2) {
      return l([r2, e2]);
    };
  }
  function l(n2) {
    if (t) throw new TypeError("Generator is already executing.");
    while (i && (i = 0, n2[0] && (o = 0)), o) try {
      if (t = 1, a && (c = n2[0] & 2 ? a["return"] : n2[0] ? a["throw"] || ((c = a["return"]) && c.call(a), 0) : a.next) && !(c = c.call(a, n2[1])).done) return c;
      if (a = 0, c) n2 = [n2[0] & 2, c.value];
      switch (n2[0]) {
        case 0:
        case 1:
          c = n2;
          break;
        case 4:
          o.label++;
          return { value: n2[1], done: false };
        case 5:
          o.label++;
          a = n2[1];
          n2 = [0];
          continue;
        case 7:
          n2 = o.ops.pop();
          o.trys.pop();
          continue;
        default:
          if (!(c = o.trys, c = c.length > 0 && c[c.length - 1]) && (n2[0] === 6 || n2[0] === 2)) {
            o = 0;
            continue;
          }
          if (n2[0] === 3 && (!c || n2[1] > c[0] && n2[1] < c[3])) {
            o.label = n2[1];
            break;
          }
          if (n2[0] === 6 && o.label < c[1]) {
            o.label = c[1];
            c = n2;
            break;
          }
          if (c && o.label < c[2]) {
            o.label = c[2];
            o.ops.push(n2);
            break;
          }
          if (c[2]) o.ops.pop();
          o.trys.pop();
          continue;
      }
      n2 = e.call(r, o);
    } catch (r2) {
      n2 = [6, r2];
      a = 0;
    } finally {
      t = c = 0;
    }
    if (n2[0] & 5) throw n2[1];
    return { value: n2[0] ? n2[1] : void 0, done: true };
  }
};
var noop = function() {
};
var setup = function(r, e, o) {
  if (e === void 0) {
    e = [];
  }
  if (r === void 0) {
    return o;
  }
  if (!e.includes(r)) {
    logger.warn('"'.concat(r, '" não é um valor válido; usando o valor padrão "').concat(o, '"'));
    return o;
  }
  return r;
};
var domains = { type: ["info", "warning", "error", "success"], dismissible: [true, false], visible: [true, false] };
var defaults = { type: "info", dismissible: true, visible: true };
var setupType = function(r) {
  return setup(r, domains.type, defaults.type);
};
var setupDismissible = function(r) {
  return setup(r, domains.dismissible, defaults.dismissible);
};
var setupVisible = function(r) {
  return setup(r, domains.visible, defaults.visible);
};
var AlertCore = /* @__PURE__ */ function() {
  function r(r2) {
    var e = r2.type, o = e === void 0 ? defaults.type : e, t = r2.dismissible, a = t === void 0 ? defaults.dismissible : t, c = r2.visible, i = c === void 0 ? defaults.visible : c, n = r2.dispatchHide, l = n === void 0 ? noop : n, s = r2.dispatchAfterHide, u = s === void 0 ? noop : s, f = r2.setVisible, d = f === void 0 ? noop : f;
    var b = this;
    this.type = "info";
    this.dismissible = true;
    this.visible = true;
    this.setVisible = noop;
    this.dispatchHide = noop;
    this.dispatchAfterHide = noop;
    this.hide = function() {
      if (!b.visible) {
        return false;
      }
      var r3 = b.dispatchHide().defaultPrevented;
      if (r3) {
        return false;
      }
      b.setVisible(false);
      b.dispatchAfterHide();
      return true;
    };
    this.show = function() {
      if (!b.visible) {
        b.setVisible(true);
        return true;
      }
      return false;
    };
    this.type = setupType(o);
    this.dismissible = setupDismissible(a);
    this.dispatchAfterHide = u;
    this.dispatchHide = l;
    this.setVisible = function(r3) {
      b.visible = r3;
      d(r3);
    };
    this.setVisible(setupVisible(i));
  }
  return r;
}();
var version = "0.16.0";
var alc = { version };
var ALC = { version: alc.version };
console.debug("Core do ALC executado.");
var alcAlertBaseCss = "alc-alert{display:block}.alc-alert{border-width:1px;border-style:solid}";
var themeAlcAlertCss = '[data-alc-theme="dark"] alc-alert{--bg-color-info:var(--alc-color-info-70);--border-color-info:var(--alc-color-info-60);--text-color-info:var(--alc-color-text-1);--bg-color-warning:var(--alc-color-warning-60);--border-color-warning:var(--alc-color-warning-50);--text-color-warning:var(--alc-color-text-1);--bg-color-error:var(--alc-color-error-70);--border-color-error:var(--alc-color-error-60);--text-color-error:var(--alc-color-text-1);--bg-color-success:var(--alc-color-success-70);--border-color-success:var(--alc-color-success-60);--text-color-success:var(--alc-color-text-1)}[data-alc-theme="light"] alc-alert{--bg-color-info:var(--alc-color-info-10);--border-color-info:var(--alc-color-info-40);--text-color-info:var(--alc-color-info-70);--bg-color-warning:var(--alc-color-warning-10);--border-color-warning:var(--alc-color-warning-20);--text-color-warning:var(--alc-color-warning-60);--bg-color-error:var(--alc-color-error-20);--border-color-error:var(--alc-color-error-50);--text-color-error:var(--alc-color-error-70);--bg-color-success:var(--alc-color-success-10);--border-color-success:var(--alc-color-success-50);--text-color-success:var(--alc-color-success-70)}.alc-alert{--border-width:6px;margin-top:0.5rem;margin-bottom:0.5rem;border-radius:0.125rem;padding-top:1rem;padding-bottom:1rem;padding-right:1rem;border-left-width:var(--border-width);padding-left:calc(1.5rem - var(--border-width));color:var(--alc-color-text-1);display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.alc-alert__content{-ms-flex-positive:1;flex-grow:1;padding-left:0.5rem}.alc-alert__summary{display:block;font-weight:700}.alc-alert__dismiss{margin-top:-0.5rem;margin-bottom:-0.5rem;margin-left:0.5rem;margin-right:-0.5rem}.alc-alert--info{background-color:var(--bg-color-info);border-color:var(--border-color-info);color:var(--text-color-info)}.alc-alert--warning{background-color:var(--bg-color-warning);border-color:var(--border-color-warning);color:var(--text-color-warning)}.alc-alert--error{background-color:var(--bg-color-error);border-color:var(--border-color-error);color:var(--text-color-error)}.alc-alert--success{background-color:var(--bg-color-success);border-color:var(--border-color-success);color:var(--text-color-success)}';
var iconMap = /* @__PURE__ */ new Map();
iconMap.set("info", { label: "Informação:", name: "info-circle" });
iconMap.set("error", { label: "Erro:", name: "x-circle" });
iconMap.set("warning", { label: "Alerta:", name: "exclamation-circle" });
iconMap.set("success", { label: "Sucesso:", name: "check-circle" });
var Alert = function() {
  function r(r2) {
    var e = this;
    registerInstance(this, r2);
    this.alcHide = createEvent(this, "alc-hide", 7);
    this.alcAfterHide = createEvent(this, "alc-after-hide", 6);
    this.visible = true;
    this.type = "info";
    this.dismissible = true;
    this.setVisible = function(r3) {
      e.visible = r3;
    };
  }
  r.prototype.watchPropVisible = function(r2) {
    r2 === true ? this.core.show() : this.core.hide();
  };
  r.prototype.watchType = function(r2) {
    this.core.type = r2;
  };
  r.prototype.watchDismissible = function(r2) {
    this.core.dismissible = r2;
  };
  r.prototype.connectedCallback = function() {
    var r2 = this;
    this.core = new AlertCore({ type: this.type, dismissible: this.dismissible, visible: this.visible, dispatchHide: function() {
      return r2.emitHide();
    }, dispatchAfterHide: function() {
      return r2.emitAfterHide();
    }, setVisible: this.setVisible });
  };
  r.prototype.hide = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(r2) {
        return [2, this.core.hide()];
      });
    });
  };
  r.prototype.show = function() {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(r2) {
        return [2, this.core.show()];
      });
    });
  };
  r.prototype.emitHide = function() {
    return this.alcHide.emit();
  };
  r.prototype.emitAfterHide = function() {
    return this.alcAfterHide.emit();
  };
  r.prototype.renderIcon = function() {
    var r2 = iconMap.get(this.core.type);
    return h("alc-icon", { name: r2.name, label: r2.label });
  };
  r.prototype.renderDismissButton = function() {
    var r2 = this;
    if (!this.core.dismissible) {
      return null;
    }
    return h("div", Object.assign({ class: "alc-alert__dismiss" }, testAttributes()), h("button", { class: "alc-button alc-button-rounded alc-button-rounded--".concat(this.core.type), onClick: function() {
      return r2.hide();
    } }, h("alc-icon", { name: "x-lg", label: "Dispensar" })));
  };
  r.prototype.componentDidRender = function() {
    this.el.querySelectorAll("a").forEach(function(r2) {
      r2.classList.add("alc-link--color-text");
    });
  };
  r.prototype.render = function() {
    logger.debug("render alc-alert", ALC);
    return h(Host, { key: "659c2cf489d4d1a8da0fc8e6aed725322c9dc38a", style: { display: this.visible ? null : "none" } }, h("div", { key: "ce93997657b175b0bebf0fb616f21ecb37738832", class: "alc-alert alc-alert--" + this.core.type }, this.renderIcon(), h("div", { key: "9ad2f7bf6903e63c8e123df01a73f510c6164d3c", class: "alc-alert__content" }, h("div", { key: "9b3168c210ad5b525c7a34a5273008c06f5d1e73", class: "alc-alert__summary" }, h("slot", { key: "3eebdf45b31d6f86cb5a5d3d6e366e0c062be2ee", name: "summary" })), h("slot", { key: "237e8b7b3dc224f3e37040be1746bfe15190d998" })), this.renderDismissButton()));
  };
  Object.defineProperty(r.prototype, "el", { get: function() {
    return getElement(this);
  }, enumerable: false, configurable: true });
  Object.defineProperty(r, "watchers", { get: function() {
    return { visible: ["watchPropVisible"], type: ["watchType"], dismissible: ["watchDismissible"] };
  }, enumerable: false, configurable: true });
  return r;
}();
Alert.style = { base: alcAlertBaseCss, theme: themeAlcAlertCss };
export {
  Alert as alc_alert
};
