import { EventEmitter } from '../../stencil-public-runtime';
export interface AlcTabsDidChangeEventTypes {
    tab: string;
}
export declare class AlcTabs {
    private hasButtonSlot;
    private selectedTabButton?;
    private tabList;
    private mo;
    /**
     * O identificador da tab atualmente selecionada
     */
    selected: string;
    selectedChange(newValue: string, oldValue: string): void;
    el: HTMLAlcTabsElement;
    selectedTab?: HTMLAlcTabElement;
    hasScroll: boolean;
    /**
     * Disparado quando houve uma mudança de tab
     */
    alcChange: EventEmitter<{
        tab: string;
    }>;
    /**
     * Seleciona uma tab pelo valor de sua propriedade `tab` ou pela referência do elemento.
     *
     * @param tab A tab a ser selecionada. Se passada como string, deve ser o valor da propriedade `tab` da tab.
     */
    select(tab: string | HTMLAlcTabElement): Promise<boolean>;
    private tabSwitch;
    selectedHandler(e: CustomEvent): void;
    selectedNextButton(e: CustomEvent): void;
    selectedPreviousButton(e: CustomEvent): void;
    selectedFirstButton(e: CustomEvent): void;
    selectedLastButton(e: CustomEvent): void;
    private shouldSwitch;
    private get tabs();
    private get tabButtons();
    private getNextButton;
    private getPreviousButton;
    private handleScroll;
    themeLoadedHandler(): void;
    componentDidLoad(): Promise<void>;
    private onTabClicked;
    private onTabButtonNext;
    private onTabButtonPrevious;
    private onTabButtonFirst;
    private onTabButtonLast;
    private handleSelectTabButton;
    private isValidTabButton;
    componentDidRender(): void;
    disconnectedCallback(): void;
    render(): any;
}
