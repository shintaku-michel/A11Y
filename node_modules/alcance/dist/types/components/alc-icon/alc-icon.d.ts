export declare class AlcIcon {
    private io?;
    private iconName;
    private inheritedAttributes;
    private role;
    el: HTMLElement;
    private svgContent?;
    private isVisible;
    private ariaLabel?;
    /**
     * Equivalente textual do ícone. Seu uso é semelhante ao atributo `alt` de uma imagem.
     * Esse texto será lido por software leitor de tela, e utilizado no lugar do ícone se por qualquer motivo a imagem não puder ser carregada no navegador.
     */
    label: string;
    /**
     * Define se o ícone deve ser espelhado horizontalmente quando `dir` for `"rtl"`.
     */
    flipRtl?: boolean;
    /**
     * Nome do ícone que será mostrado. Deve ser um dos nomes de ícone da biblioteca.
     */
    name?: string;
    /**
     * Especifica o `src` de um arquivo SVG a ser usado como ícone.
     */
    src?: string;
    /**
     * Uma combinação de `name` e `src`.
     * Se o valor for entendido como a URL de um `src`, ele definirá a propriedade `src`.
     * Caso contrário, assume-se como o nome de ícone da biblioteca, e define a propriedade `name`.
     */
    icon?: string;
    /**
     * Se ativado, a carga do ícone ocorrerá somente quando o componente estiver visível na _viewport_.
     */
    lazy: boolean;
    /**
     * Quando definido como `true`, o conteúdo SVG obtido via HTTP passará por uma limpeza.
     * Conteúdo que contenha algum elemento `<script>` ou atributo que comece com `on`, como `onclick`, será descartado.
     * Sendo descartado, a imagem não será mostrada.
     * @default false
     */
    sanitize: boolean;
    componentWillLoad(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    private waitUntilVisible;
    private hasAriaHidden;
    loadIcon(): void;
    render(): any;
}
