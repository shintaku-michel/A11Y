export type PopupPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end';
/**
 * @slot DEFAULT - Slot para o elemento principal do popup.
 *
 * @slot anchor - Slot que serve como âncora e aciona a abertura do popup.
*/
export declare class AlcPopup {
    private popupEl;
    private anchorEl;
    private cleanup;
    private padding;
    private arrowEl;
    /**
    * Aciona a abertura do popup.
    */
    active: boolean;
    /**
    * Define o posicionamento do popup.
    */
    placement: PopupPlacement;
    /**
    * Quando definido como `true`, troca o posicionamento (placement) do popup para mantê-lo visível.
    */
    flip: boolean;
    /**
    * Quando definido como `true`, desloca o popup ao longo do eixo para mantê-lo visível quando cortado.
    */
    shift: boolean;
    /**
    * Determina como o pop-up é posicionado. A estratégia `absoluta` funciona bem na maioria dos casos.
    * Se o overflow cortar o popup, usar a posição `fixed` muitas vezes pode contornar isso.
    */
    strategy: 'absolute' | 'fixed';
    /**
    * Define a distância entre o popup e âncora.
    */
    distance: number;
    /** Syncs the popup's width or height to that of the anchor element. */
    sync: 'width' | 'height' | 'both';
    /**
    *  Adiciona arrow no popup.
    */
    arrow: boolean;
    watchActive(newValue: boolean): void;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    start(): void;
    reposition(): void;
    resolveMiddleware(): Array<any>;
    render(): any;
}
