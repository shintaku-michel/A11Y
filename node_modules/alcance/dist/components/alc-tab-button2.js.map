{"file":"alc-tab-button2.js","mappings":";;;AAAA,MAAM,mBAAmB,GAAG,qIAAqI;;ACAjK,MAAM,oBAAoB,GAAG,g0CAAg0C;;MCWh1C,YAAY,iBAAAA,kBAAA,CAAA,MAAA,YAAA,SAAA,WAAA,CAAA;;;;;;;;;;IAgBvB,eAAe,CAAC,QAAiB,EAAE,QAAiB,EAAA;AAClD,QAAA,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzB,IAAI,QAAQ,EAAE;gBAEZ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;;iBAEtC;gBAEH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;;;;AA4BxC,IAAA,SAAS,CAAC,CAAQ,EAAA;AAExB,QAAA,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,GAAG,EAAE,IAAI,CAAC;AACX,aAAA,CAAC;YACF,CAAC,CAAC,cAAc,EAAE;;;;;AAMd,IAAA,cAAc,CAAC,CAAgB,EAAA;QACrC,IAAI,OAAO,GAAG,KAAK;AACnB,QAAA,QAAO,CAAC,CAAC,GAAG;AACV,YAAA,KAAK,YAAY;AACf,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACnB,OAAO,GAAG,IAAI;gBACd;AACF,YAAA,KAAK,WAAW;AACd,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;gBACvB,OAAO,GAAG,IAAI;gBACd;AACF,YAAA,KAAK,MAAM;AACT,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpB,OAAO,GAAG,IAAI;gBACd;AACF,YAAA,KAAK,KAAK;AACR,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACnB,OAAO,GAAG,IAAI;gBACd;;QAEJ,IAAI,OAAO,EAAE;YACX,CAAC,CAAC,cAAc,EAAE;;;IAItB,iBAAiB,GAAA;;IAGjB,MAAM,GAAA;;AACJ,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,GAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;QACxE,MAAM,KAAK,GAAG,MAAa;AAEzB,YAAA,IAAI,EAAU;AACd,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACd,gBAAA,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;;iBAEZ;gBACH,EAAE,GAAG,cAAc,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;;AAGlC,YAAA,OAAO,EAAE;AACX,SAAC;AAGD,QAAA,QACE,EAAC,IAAI,EAAA,IAAA,EACH,CACE,CAAA,QAAA,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EACzC,IAAI,EAAC,KAAK,EACK,eAAA,EAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,OAAO,EAC/C,QAAQ,EAAC,IAAI,EACb,EAAE,EAAE,KAAK,EAAE,EACX,KAAK,EAAE;AACL,gBAAA,kBAAkB,EAAE,IAAI;gBACxB,MAAM,EAAE,IAAI,CAAC;aACd,EACD,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAA,EAE3B,CAAQ,CAAA,MAAA,EAAA,IAAA,CAAA,CACD,CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement"],"sources":["src/components/alc-tab-button/alc-tab-button-base.css?tag=alc-tab-button&mode=base","src/components/alc-tab-button/alc-tab-button.css?tag=alc-tab-button&mode=theme","src/components/alc-tab-button/alc-tab-button.tsx"],"sourcesContent":["/* CSS básico para que o componente funcione - sem dependências externas */\nalc-tab-button {\n  @apply inline-block;\n}\n\n.alc-tabs__button.active {\n  @apply underline;\n}","/* Definição das variáveis - Setup dos temas*/\n\n/* \n  Definição das variáveis que estão no alc-tabs \n    --bg-color\n    --border-color\n    --border-width\n    --outline-color\n*/\n\n/* DARK */\n[data-alc-theme=\"dark\"] .alc-tabs__button {\n  --text-color: theme('colors.cyan.20v');\n  --bg-color-button: var(--alc-color-neutral-70);\n}\n\n[data-alc-theme=\"dark\"] .alc-tabs__button:hover {\n  --bg-color-button: theme('colors.gray-cool.70');\n}\n\n[data-alc-theme=\"dark\"] .alc-tabs__button.active {\n  --text-color: var(--alc-color-text-primary);\n  --bg-color-button: var(--bg-color);\n}\n\n/* LIGHT */\n[data-alc-theme=\"light\"] .alc-tabs__button {\n  --text-color: var(--alc-color-link-text);\n  --bg-color-button: theme('colors.gray-cool.10');\n}\n\n[data-alc-theme=\"light\"] .alc-tabs__button:hover {\n  --bg-color-button: theme('colors.gray-cool.20');\n}\n\n[data-alc-theme=\"light\"] .alc-tabs__button.active {\n  --text-color: var(--alc-color-text-primary);\n  --bg-color-button: var(--bg-color);\n}\n\n/* CSS COMUM a todos os temas */\nalc-tab-button {\n  @apply inline-block;\n}\n\n.alc-tabs__button {\n  @apply z-10 p-2 pt-3 text-[--text-color] bg-[--bg-color-button] border-[--border-color];\n  border-right-width: var(--border-width);\n  border-bottom-width: var(--border-width);\n}\n\n\n.alc-tabs__button.active {\n  @apply no-underline cursor-default pt-2;\n  @apply border-t-4 border-b-transparent;\n}\n\n\n/* \n  O primeiro alc-tab-button quando esta ativo deixa transparente a borda inferior.\n  Porém ficava um espaço entre essa borda invisivel e o do conteudo.\n  Foi adicionado borda no 'host' do primeiro botão para solucionar esse problema. \n*/\nalc-tab-button:first-child {\n  @apply border-[--border-color];\n  border-left-width: var(--border-width);\n}\n\n.alc-tabs__button:focus-visible, .alc-tabs__button.active:focus-visible {\n  @apply outline outline-2 outline-[--outline-color] -outline-offset-8;\n}\n","import { Component, Host, h, Event, EventEmitter, Prop, Element, Watch } from '@stencil/core';\nimport logger from '../utils/logger';\n\n@Component({\n  tag: 'alc-tab-button',\n  styleUrls: {\n    base: 'alc-tab-button-base.css',\n    theme: 'alc-tab-button.css',\n  },\n  scoped: false,\n})\nexport class AlcTabButton {\n  private button: HTMLElement;\n\n  @Element() el!: HTMLAlcTabButtonElement;\n\n  /**\n   * Um identificador da tab deve ser fornecido para cada `alc-tab`.\n   * Isso é usado internamente para referenciar a tab selecionada.\n   */\n  @Prop({ reflect: true }) tab!: string;\n\n  /**\n   * Indica que a tab está selecionada.\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean;\n  @Watch('selected')\n  selectedChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      if (newValue) {\n\n        this.button.setAttribute('tabindex', '0');\n      }\n      else {\n\n        this.button.setAttribute('tabindex', '-1');\n      }\n    }\n  }\n\n  /**\n   * Evento disparado ao clicar em alc-tab-button\n   */\n  @Event({ eventName: 'alc-click' }) alcClick: EventEmitter<{\n    tab: string\n  }>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button seguinte deve ser selecionado\n   */\n  @Event({ eventName: 'alc-next' }) alcNext: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button anterior deve ser selecionado\n   */\n  @Event({ eventName: 'alc-previous' }) alcPrevious: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o primeiro alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-first' }) alcFirst: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o último alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-last' }) alcLast: EventEmitter<null>;\n\n  private selectTab(e: Event) {\n\n    if (this.tab !== undefined) {\n      this.alcClick.emit({\n        tab: this.tab\n      });\n      e.preventDefault();\n    }\n  }\n\n  // Inspirado na implementação do WAI - função onKeyDown().\n  // https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/tabs/examples/js/tabs-automatic.js\n  private keyDownHandler(e: KeyboardEvent) {\n    let handled = false;\n    switch(e.key) {\n      case 'ArrowRight':\n        this.alcNext.emit();\n        handled = true;\n        break;\n      case 'ArrowLeft':\n        this.alcPrevious.emit();\n        handled = true;\n        break;\n      case 'Home':\n        this.alcFirst.emit();\n        handled = true;\n        break;\n      case 'End':\n        this.alcLast.emit();\n        handled = true;\n        break;\n    }\n    if (handled) {\n      e.preventDefault();\n    }\n  }\n\n  componentWillLoad() {\n  }\n\n  render() {\n    this.tab ?? logger.report('tab', this.el.tagName.toLowerCase(), this.el);\n    const getId = (): string => {\n\n      let id: string;\n      if (this.el.id) {\n        id = this.el.id;\n      }\n      else {\n        id = `alc-button_${this.el.tab}`;\n      }\n\n      return id;\n    }\n\n\n    return (\n      <Host>\n        <button\n          onClick={this.selectTab.bind(this)}\n          onKeyDown={this.keyDownHandler.bind(this)}\n          role='tab'\n          aria-selected={this.selected ? 'true' : 'false'}\n          tabindex='-1'\n          id={getId()} // Precisa ter id (para acessibilidade)\n          class={{\n            'alc-tabs__button': true,\n            active: this.selected\n          }}\n          ref={el => this.button = el}\n        >\n          <slot />\n        </button>\n      </Host>\n    );\n  }\n}\n\n"],"version":3}