{"file":"alc-loading2.js","mappings":"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","names":["__stencil_proxyCustomElement","test"],"sources":["src/components/alc-loading/alc-loading.css?tag=alc-loading","src/components/alc-loading/alc-loading.tsx"],"sourcesContent":["/* Definição das variáveis - Setup dos temas */\n[data-alc-theme=\"light\"] alc-loading {\n  --bg-color-overlay: theme('colors.gray-cool.80')66; /* 66 = 40% */\n  --border-color-loading-default: theme('colors.gray-cool.10');\n  --border-color-loading: var(--alc-color-action-60);\n}\n\n[data-alc-theme=\"dark\"] alc-loading {\n  --bg-color-overlay: theme('colors.gray-cool.60')66; /* 66 = 40% */\n  --border-color-loading-default: theme('colors.gray-cool.80');\n  --border-color-loading: var(--alc-color-action-40);\n}\n\nalc-loading {\n  --bg-color-card: var(--alc-color-surface);\n}\n\n/* Estilos para o modo full-screen (inalterado) */\n.alc-loading__overlay {\n  /* Posicionamento */\n  @apply z-[1090] w-full h-full top-0 left-0 fixed;\n  /* Cor */\n  @apply bg-[--bg-color-overlay];\n  /* Alinhamento do elemento interno */\n  @apply flex items-center justify-center flex-col gap-2;\n}\n\n.alc-loading__card {\n  /* Estilização do cartão */\n  @apply rounded-[--alc-radius-default] bg-[--bg-color-card] p-4 min-w-48;\n  /* Alinhamento dos elementos internos do cartão */\n  @apply flex justify-center flex-col items-center text-center text-nowrap;\n}\n\n/* Estilização do spinner no card */\n.alc-loading__card::before {\n  @apply block content-[\"\\200C\"];\n  @apply w-12 h-12 rounded-full animate-spin mb-[--alc-spacing-03];\n  @apply border-6 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n/* Estilos para o modo container */\n.alc-loading__container {\n  @apply relative;\n}\n\n.alc-loading__card-container {\n  /* Estilização do cartão */\n  @apply rounded-[--alc-radius-default] bg-[--bg-color-card] p-4 min-w-48 mb-2 mt-2;\n  /* Alinhamento dos elementos internos do cartão */\n  @apply flex justify-center flex-col items-center text-center text-nowrap;\n}\n\n.alc-loading__overlay-container {\n  @apply absolute inset-0 flex items-center justify-center bg-[--bg-color-overlay];\n  @apply z-[50];\n}\n\n.alc-loading__spinner-container {\n  @apply w-10 h-10 rounded-full animate-spin;\n  @apply border-4 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n/* Estilos para o modo inline */\n.alc-loading__inline {\n  @apply inline-block;\n}\n\n.alc-loading__spinner-inline,\n.alc-loading__label-inline {\n  @apply inline-flex align-sub;\n}\n\n.alc-loading__spinner-inline {\n  @apply flex-shrink-0 w-5 h-5 mr-2 rounded-full animate-spin;\n  @apply border-2 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n.alc-loading__label-inline {\n  @apply text-sm leading-none;\n}\n\n/* Estilos para o modo button */\n.alc-loading__button {\n  @apply inline-block;\n}\n\n.alc-loading__button-wrapper {\n  @apply inline-flex items-center;   \n}\n\n.alc-loading__spinner-button {\n  @apply w-4 h-4 rounded-full animate-spin -mt-[0.125em] top-[0.125em] relative;\n  @apply border-2 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n.sr-only {\n  @apply absolute w-[1px] h-[1px] p-0 m-[-1px] overflow-hidden whitespace-nowrap border-0;\n  clip: rect(0, 0, 0, 0);\n}","import { Component, Host, Method, Prop, Watch, State, Element, h } from '@stencil/core';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-loading',\n  styleUrl: 'alc-loading.css',\n  shadow: false,\n})\nexport class AlcLoading {\n  @Element() el: HTMLElement;\n  /**\n   * Define se o indicador de carregamento aparece na tela. Quando o valor é `true` mostra o componente e quando o valor é `false` oculta.\n   */\n  @Prop({ mutable: true, reflect: true }) active: boolean = false;\n\n  /**\n  * Texto mostrado na tela enquanto estiver carregando e também anunciado no leitor de tela quando o estado mudar para `active=true`.\n  */\n  @Prop({reflect: true}) label: string = 'Carregando...';\n\n  /**\n  * Texto anunciado ao leitor de tela quando mudar o estado para `active=false`.\n  */\n  @Prop({reflect: true}) endMsg: string = 'Finalizado.';\n\n  /**\n   * Define a variação visual do componente:\n   * - `'full-screen'`: ocupa a tela inteira.\n   * - `'container'`: ocupa o elemento pai.\n   * - `'inline'`: utilizado dentro de textos.\n   * - `'button'`: utilizado dentro de botões.\n   */\n  @Prop({ reflect: true }) variant: 'full-screen' | 'container' | 'inline' | 'button' = 'full-screen';\n\n  /**\n   * Mensagem interna para a região aria-live.\n   */\n  private ariaMessage: string = '';\n\n  private parentButton: HTMLButtonElement | null = null;\n\n  /**\n   * Exibe o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.active) {\n      return false;\n    }\n    this.active = true;\n    return true;\n  }\n\n  /**\n   * Esconde o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente oculto com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.active) {\n      return false;\n    }\n    this.active = false;\n    return true;\n  }\n\n  @Watch('active')\n  onActiveChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.updateAriaMessage();\n      if (this.variant === 'button') {\n        this.updateParentButtonAttributes();\n      }\n    }\n  }\n\n  componentWillLoad() {\n    this.updateAriaMessage();\n  }\n\n  componentDidLoad() {\n    if (this.variant === 'button') {\n      this.findParentButton();\n      this.updateParentButtonAttributes();\n    }\n  }\n\n  private updateAriaMessage() {\n    this.ariaMessage = this.active ? this.label : this.endMsg;\n  }\n\n  private findParentButton() {\n    this.parentButton = this.el.closest('button');\n    if (!this.parentButton) {\n      logger.warn('alc-loading[variant=\"button\"] deve estar dentro de um elemento <button>.');\n    }\n  }\n\n  private updateParentButtonAttributes() {\n    if (this.parentButton) {\n      if (this.active) {\n        this.parentButton.setAttribute('aria-label', this.label);\n      } else {\n        this.parentButton.removeAttribute('aria-label');  \n      }\n    }\n  }\n\n  render() {\n    const shouldRenderAriaLive = this.variant !== 'button';\n  \n    return (\n      <Host>\n        {this.renderLoadingVisuals()}\n        {shouldRenderAriaLive && (\n          <div class=\"sr-only\" aria-live=\"polite\" role=\"status\" {...test('data-test-acessibility')}>\n            {this.ariaMessage}\n          </div>\n        )}\n      </Host>\n    );\n  }\n\n  private renderLoadingVisuals() {\n    switch (this.variant) {\n      case 'full-screen':\n        return this.renderFullScreen();\n      case 'container':\n        return this.renderContainer();\n      case 'inline':\n        return this.renderInline();\n      case 'button':\n        return this.renderButton();\n      default:\n        return null;\n    }\n  }\n\n  private renderFullScreen() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card\">\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderContainer() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay-container\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card-container\">\n          <div class=\"alc-loading__spinner-container\"></div>\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderInline() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__inline\" aria-hidden=\"true\">\n        <div class=\"alc-loading__spinner-inline\"></div>\n        <span class=\"alc-loading__label\">{this.label}</span>\n      </div>\n    );\n  }\n\n  private renderButton() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__button\" aria-hidden=\"true\">\n        <span class=\"alc-loading__button-wrapper\">\n          <div class=\"alc-loading__spinner-button\"></div>\n        </span>\n      </div>\n    );\n  }\n}"],"version":3}