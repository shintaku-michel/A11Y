{"file":"alc-modal.js","mappings":"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","names":["AlcModal","__stencil_proxyCustomElement","test"],"sources":["src/components/alc-modal/alc-modal-base.css?tag=alc-modal&mode=base","src/components/alc-modal/alc-modal.css?tag=alc-modal&mode=theme","src/components/alc-modal/alc-modal.tsx"],"sourcesContent":[".alc-modal__overlay {\n    /* Posicionamento */\n    @apply z-10 w-screen h-screen top-0 left-0 p-2 fixed;\n    /* Alinhamento do elemento interno (cartão) */\n    @apply flex items-center justify-center;\n}\n  \n.alc-modal__card {\n    /* Aparência */\n    @apply bg-white border-2;\n    /* Tamanho */\n    @apply w-full md:max-w-lg;\n}\n\n.alc-modal__header {\n    @apply flex items-center justify-between;\n}\n\n.alc-modal__close {\n    /* Posicionamento e tamanho */\n    @apply text-lg w-8 h-8;\n}","/* Definição das variáveis - Setup dos temas*/\n[data-alc-theme=\"light\"] alc-modal {\n  --bg-color-overlay: theme('colors.gray-cool.80')66; /* 66 = 40% */\n  --border-color: theme('colors.gray-cool.40');\n}\n\n[data-alc-theme=\"dark\"] alc-modal {\n  --bg-color-overlay: theme('colors.gray-cool.60')66; /* 66 = 40% */\n  --border-color: theme('colors.gray-cool.60');\n}\n\nalc-modal {\n  --bg-color-card: var(--alc-color-surface-primary);\n  --bg-color-header: var(--alc-color-layer-b);\n}\n\n.alc-modal__base {\n  /* Posicionamento */\n  @apply z-[1050] w-full h-full top-0 left-0 fixed;\n  /* Alinhamento do elemento interno (cartão) */\n  @apply sm:flex sm:items-center sm:justify-center;\n}\n\n.alc-modal__overlay {\n  /* Posicionamento */\n  @apply w-full h-full top-0 left-0 fixed;\n  /* Cor */\n  @apply bg-[--bg-color-overlay];\n}\n\n.alc-modal__card {\n  /* Aparência */\n  @apply bg-[--bg-color-card] rounded-t border-t border-[--border-color] overflow-hidden; /* Overflow é para o header \"obedecer\" o arredondamento no topo do card */\n  /* A partir do sm vai ter borda em todo o card */\n  @apply sm:border;\n\n  /* Tamanho inicial (mobile) */\n  @apply w-full max-h-[90%];\n\n  /* Posicionamento dos elementos internos */\n  @apply flex flex-col;\n  \n  /* Posicionamento do cartão*/\n  /* Em mobile o cartão vai ficar na parte inferior */\n  @apply fixed bottom-0 left-0;\n  /* A partir do sm vai ficar centralizado na tela */\n  @apply sm:relative;\n}\n\n/* Tamanhos */\n.alc-modal__card--sm {\n  /* 576px */\n  @apply sm:w-[66%] sm:max-h-[72%];\n  /* 768px */\n  @apply md:w-[50%];\n  /* 992px */\n  @apply lg:w-[40%];\n  /* 1200px */\n  @apply xl:w-[33%];\n  /* 1400px */\n  @apply 2xl:w-[28%];\n}\n\n.alc-modal__card--md {\n  /* 576px */\n  @apply sm:w-[96%] sm:max-h-[84%];\n  /* 768px */\n  @apply md:w-[80%];\n  /* 992px */\n  @apply lg:w-[56%];\n  /* 1200px */\n  @apply xl:w-[52%];\n  /* 1400px */\n  @apply 2xl:w-[50%];\n}\n\n.alc-modal__card--lg {\n  /* 576px */\n  @apply sm:w-[96%] sm:max-h-[96%];\n  /* 768px */\n  @apply md:w-[96%];\n  /* 992px */\n  @apply lg:w-[78%];\n  /* 1200px */\n  @apply xl:w-[72%];\n  /* 1400px */\n  @apply 2xl:w-[70%];\n}\n\n.alc-modal__card--xl {\n  /* 576px */\n  @apply sm:w-[96%] sm:max-h-[96%];\n  /* 768px */\n  @apply md:w-[96%];\n  /* 992px */\n  @apply lg:w-[96%];\n  /* 1200px */\n  @apply xl:w-[98%];\n  /* 1400px */\n  @apply 2xl:w-[98%];\n}\n\n\n\n.alc-modal__header {\n  @apply flex items-center justify-between p-4 bg-[--bg-color-header];\n}\n\n.alc-modal__title {\n  @apply m-0;\n}\n\n.alc-modal__content {\n  @apply overflow-y-auto p-4;\n}\n\n.alc-modal__footer {\n  @apply text-right p-4 border-t border-t-[--border-color];\n}","import { Component, Host, h, Prop, Method, Listen, Event, EventEmitter, Watch } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport { getFocusableElements, focusFirstElement, handleKeyDown } from '../utils/keydown';\nimport test from '../utils/testAttributes';\nimport { lockBodyScroll, unlockBodyScroll } from '../utils/scrollLockManager';\n\ntype hideFromType = 'header-button' | 'footer-button' | 'keyboard' | 'overlay';\nexport interface AlcModalHideEventDetail {\n  from: hideFromType;\n}\n\n/**\n * @slot - O conteúdo da modal.\n * @slot header - O conteúdo do cabeçalho da modal.\n * @slot footer - O conteúdo do rodapé da modal.\n */\n\n@Component({\n  tag: 'alc-modal',\n  styleUrls: {\n    base: 'alc-modal-base.css',\n    theme: 'alc-modal.css',\n  },\n  scoped: false,\n})\nexport class AlcModal {\n  private idModalTitle = null;\n  private modalRef?: HTMLElement;\n  private triggerElement = null;\n  private overlayRef!: HTMLElement;\n\n  /**\n   * Define se a modal está aberta ou fechada.\n   */\n  @Prop({ mutable: true }) open?: boolean = false;\n\n  /**\n   * Título da modal\n   */\n  @Prop({ reflect: true }) headerText: string = '';\n\n  /**\n   * Tamanho da modal\n   */\n  @Prop({ mutable: true,  reflect: true  }) size?: 'sm' | 'md' | 'lg' | 'xl' = 'md';\n\n  /**\n   * Previne a modal de fechar ao clicar no overlay.\n   */\n  @Prop({ reflect: true, mutable: false }) preventOverlayClose: boolean = false;\n\n  @Watch('open')\n  watchOpen(open: boolean) {\n    if (open) {\n      // Show\n      this.alcAfterShow.emit();\n      this.triggerElement = document.activeElement as HTMLElement;\n      lockBodyScroll();\n    } else {\n      // Hide\n      this.alcAfterHide.emit();\n\n      const { defaultPrevented: defaultPreventedFocus } = this.alcFocusAfterHide.emit();\n      if (!defaultPreventedFocus) {\n        this.handleFocusWhenCloseModal();\n        unlockBodyScroll();\n      }\n\n    }\n  }\n\n  /**\n   * Evento disparado quando a modal abriu\n   */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando a modal vai fechar\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<{\n    from: 'header-button' | 'footer-button' | 'keyboard' | 'overlay';\n  }>;\n\n  /**\n   * Evento disparado quando a modal fechou\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando a modal fechou e esta pronto para lidar com foco.\n   */\n  @Event({\n    eventName: 'alc-focus-after-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcFocusAfterHide: EventEmitter<null>;\n\n  /**\n   * Método para abrir modal.\n   * @returns O valor retornado é `true` se a modal foi realmente exibida com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.open) {\n      return false;\n    }\n\n    this.open = true;\n    return true;\n  }\n\n  /**\n   * Método para fechar modal.\n   * @returns O valor retornado é `true` se a modal foi realmente oculta com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.open) {\n      return false;\n    }\n    \n    this.open = false;\n    return true;\n  }\n\n  /**\n   * Foco fica dentro da modal quando aberta.\n   */\n  @Listen('keydown', { target: 'document' })\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.open) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this.handleHideByUser('keyboard');\n      return;\n    }\n\n    if (event.key !== 'Tab') return;\n    const focusableElements = getFocusableElements(this.modalRef);\n    handleKeyDown(event, focusableElements);\n  }\n\n  componentWillLoad() {\n    // Antes do componente carregar, cria um id para o titulo da modal (Acessibilidade).\n    this.idModalTitle = getUniqueId();\n\n  }\n\n  componentDidRender() {\n    // Pega os elementos focáveis a cada renderização (Pode haver mudanças na modal).\n    const focusableElements = getFocusableElements(this.modalRef);\n\n    // Após o componente renderizar e estiver aberto, então ja coloca foco dentro da modal.\n    if (this.open) {\n      focusFirstElement(focusableElements);\n    }\n  }\n\n  connectedCallback() {\n    if (this.open) {\n      lockBodyScroll();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.open) {\n      unlockBodyScroll();\n    }\n  }\n\n  private getModalRef = element => (this.modalRef = element as HTMLElement);\n\n  private handleFocusWhenCloseModal = () => {\n    const defaultFocus = ['BODY', 'DOCUMENT'];\n    const hasTriggerElement = !!this.triggerElement && document.body.contains(this.triggerElement);\n\n    if (hasTriggerElement && !defaultFocus.includes(this.triggerElement.tagName)) {\n      this.triggerElement.focus();\n    }\n\n  };\n\n  private handleOutsideClick(event: MouseEvent) {\n    const isClickedOutside = event.target === this.overlayRef;\n\n    if (isClickedOutside) {\n      this.handleHideByUser('overlay');\n    }\n  }\n\n  private handleHideByUser(hideFrom: hideFromType) {\n    // Se o usuário clicar no overlay e estiver impedido de fechar, não faz nada.\n    if (hideFrom === 'overlay' && this.preventOverlayClose) return;\n\n    const { defaultPrevented } = this.alcHide.emit({from: hideFrom});\n    if (!defaultPrevented) {\n      this.open = false;\n    }\n  }\n\n  render() {\n    return (\n      <Host style={{ display: this.open ? 'block' : 'none' }}>\n        <div class=\"alc-modal__base\">\n          <div\n            class=\"alc-modal__overlay\"\n            onClick={(e) => this.handleOutsideClick(e)}\n            {...test('data-test-overlay')}\n            ref={el => this.overlayRef = el}\n          >\n          </div>\n          <div\n            class={{\n              'alc-modal__card': true,\n              'alc-modal__card--sm':   this.size === \"sm\",\n              'alc-modal__card--md':   this.size === \"md\",\n              'alc-modal__card--lg':   this.size === \"lg\",\n              'alc-modal__card--xl':   this.size === \"xl\",\n            }}\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-labelledby={this.idModalTitle}\n            ref={this.getModalRef}\n          >\n            <div class=\"alc-modal__header\">\n              {this.headerText ? (\n                <h2 id={this.idModalTitle} class=\"alc-modal__title\">\n                  {this.headerText}\n                </h2>\n              ) : (\n                <slot name=\"header\"></slot>\n              )}\n              <button type=\"button\" class=\"alc-button alc-button-rounded\" onClick={() => this.handleHideByUser('header-button')} {...test('data-test-close-button')}>\n                <alc-icon name=\"x-lg\" label=\"Fechar Modal\" {...test('data-test-close-icon')} />\n              </button>\n            </div>\n            <div class=\"alc-modal__content\">\n              <slot></slot>\n            </div>\n            <div class=\"alc-modal__footer\">\n              <slot name=\"footer\">\n                <button type=\"button\" class=\"alc-button alc-button-primary\" onClick={() => this.handleHideByUser('footer-button')} {...test('data-test-footer-close-button')}>\n                  Fechar\n                </button>\n              </slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}