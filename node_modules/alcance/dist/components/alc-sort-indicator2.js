import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$1 } from './alc-icon2.js';

const iconMap = new Map();
iconMap.set('asc', {
    name: 'chevron-down'
});
iconMap.set('desc', {
    name: 'chevron-up'
});
iconMap.set('none', {
    name: 'chevron-expand'
});
const AlcSortIndicator = /*@__PURE__*/ proxyCustomElement(class AlcSortIndicator extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        /**
        * Define indicação do sort.
        */
        this.sorting = 'none';
    }
    render() {
        return (h(Host, { key: 'd3de3f859d218235a32d3cbd2b1c78a1a667c903' }, h("span", { key: 'b08d705fef11a025faa69144ab539dadc8e22035', class: "alc-sort-indicator" }, h("alc-icon", { key: 'd9f35015d02ef4f5f8b82cb0a1ef1245e0fc9354', name: iconMap.get(this.sorting).name, class: "alc-sort-indicator__icon", label: "" }))));
    }
}, [0, "alc-sort-indicator", {
        "sorting": [513]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["alc-sort-indicator", "alc-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "alc-sort-indicator":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, AlcSortIndicator);
            }
            break;
        case "alc-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { AlcSortIndicator as A, defineCustomElement as d };
//# sourceMappingURL=alc-sort-indicator2.js.map

//# sourceMappingURL=alc-sort-indicator2.js.map