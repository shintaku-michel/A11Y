import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { s as setAppliedTheme, b as saveUserPreference, l as loadUserPreference, g as getAppliedTheme } from './theme.js';
import { d as defineCustomElement$2 } from './alc-icon2.js';
import { d as defineCustomElement$1 } from './alc-menu-item2.js';

const alcMenuItemThemeCss = "";

const AlcMenuItemTheme = /*@__PURE__*/ proxyCustomElement(class AlcMenuItemTheme extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        // Estado para controlar se o tema escuro está ativado
        this.checked = false;
        // Constantes para os temas
        this.DARK_THEME = 'dark';
        this.LIGHT_THEME = 'light';
    }
    // Listener para o evento 'alc-select', alterna o tema entre claro e escuro.
    handleClick() {
        this.toggleTheme();
    }
    // Alterna o tema entre claro e escuro.
    toggleTheme() {
        this.checked = !this.checked;
        const theme = this.checked ? this.DARK_THEME : this.LIGHT_THEME;
        setAppliedTheme(theme);
        saveUserPreference(theme);
    }
    // Define o estado inicial do tema com base na preferência do usuário ou no tema do sistema.
    componentWillLoad() {
        const userPreference = loadUserPreference();
        switch (userPreference) {
            case this.LIGHT_THEME:
                this.checked = false;
                break;
            case this.DARK_THEME:
                this.checked = true;
                break;
            default:
                // Se o tema do sistema for dark, então checked 'true' se não 'false'.
                this.checked = getAppliedTheme('system') === this.DARK_THEME;
                break;
        }
    }
    render() {
        return (h(Host, { key: '788a260b2aeae1d875d478e3ad990fb3cef50866' }, h("alc-menu-item", { key: '4b333a7fc81b036be43319a6411f363e13d6d04e', type: "checkbox", checked: this.checked }, h("alc-icon", { key: '6723be08ad75ec0f9e9fe4736d8befb3fbfba68a', icon: "moon", label: "", slot: "prefix" }), "Ver no tema escuro")));
    }
    static get style() { return alcMenuItemThemeCss; }
}, [0, "alc-menu-item-theme", {
        "checked": [32]
    }, [[0, "alc-select", "handleClick"]]]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["alc-menu-item-theme", "alc-icon", "alc-menu-item"];
    components.forEach(tagName => { switch (tagName) {
        case "alc-menu-item-theme":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, AlcMenuItemTheme);
            }
            break;
        case "alc-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "alc-menu-item":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { AlcMenuItemTheme as A, defineCustomElement as d };
//# sourceMappingURL=alc-menu-item-theme2.js.map

//# sourceMappingURL=alc-menu-item-theme2.js.map