import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { c as classNames } from './index2.js';
import { d as defineCustomElement$1 } from './alc-icon2.js';

const alcMenuItemCss = "alc-menu-item{--text-color:var(--alc-color-text-0);--text-color-disabled:var(--alc-color-text-4);--bg-color-active:var(--alc-color-surface-secondary);--bg-color-hover:var(--alc-color-surface-tertiary);--bg-color-focus:var(--alc-color-surface-secondary)}[data-alc-theme=\"dark\"] alc-menu-item{--text-color-active:var(--alc-color-text-0);--outline-color:var(--alc-color-action-30)}[data-alc-theme=\"light\"] alc-menu-item{--text-color-active:var(--alc-color-text-contrast);--outline-color:var(--alc-color-action-60)}*{-webkit-tap-highlight-color:rgba(255, 255, 255, 0)}.alc-menu-item{-webkit-user-select:none;display:-ms-flexbox;display:flex;-ms-flex-align:baseline;align-items:baseline;text-align:left;font-size:1rem;line-height:1.5rem;color:var(--text-color);cursor:pointer;padding-top:0.5rem;padding-bottom:0.5rem;padding-left:0.5rem;padding-right:1.5rem}.alc-menu-item:hover{background-color:var(--bg-color-hover)}.alc-menu-item:active{background-color:var(--bg-color-active)}.alc-menu-item:focus-visible{outline-style:solid;outline-width:2px;outline-offset:-8px;outline-color:var(--outline-color);background-color:var(--bg-color-focus)}.alc-menu-item--disabled{cursor:not-allowed;color:var(--text-color-disabled)}.alc-menu-item--disabled:hover{background-color:var(--bg-color-hover)}.alc-menu-item--disabled:focus-visible{background-color:var(--bg-color-focus)}.alc-menu-item__check{width:1.25rem;-ms-flex-negative:0;flex-shrink:0}.alc-menu-item__label{-ms-flex:1 1 0%;flex:1 1 0%}.alc-menu-item__prefix:not(:empty){margin-right:0.5rem}.alc-menu-item__suffix:not(:empty){margin-left:0.5rem}";

const ROLES = {
    normal: 'menuitem',
    checkbox: 'menuitemcheckbox',
    radio: 'menuitemradio',
};
const AlcMenuItem = /*@__PURE__*/ proxyCustomElement(class AlcMenuItem extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.alcSelect = createEvent(this, "alc-select", 7);
        /** Tipo do menu-item. */
        this.type = 'normal';
        /** Indica se o menu-item está ou não marcado. Usado quando `type=checkbox` ou `type=radio`. */
        this.checked = false;
        /** Indica se o menu-item está desabilitado. */
        this.disabled = false;
    }
    handleKeyDown(event) {
        if (' ' === event.key || 'Enter' === event.key) {
            event.preventDefault();
            this.triggerEvent({ originalEvent: event });
        }
    }
    handleClick(event) {
        if (!this.disabled) {
            event.preventDefault();
            this.triggerEvent({ originalEvent: event });
        }
    }
    triggerEvent(detail) {
        if (this.disabled) {
            return;
        }
        this.alcSelect.emit(detail);
    }
    getCssClassMap() {
        return classNames('alc-menu-item', this.disabled && 'alc-menu-item--disabled', this.type !== null && 'alc-menu-item--checkable');
    }
    render() {
        const checked = this.checked ? 'true' : 'false';
        const role = ROLES[this.type];
        return (h(Host, { key: '048aa3032c7030740d576b35ed43ed9763e75f49', role: role, "aria-checked": this.type === 'normal' ? null : checked, "aria-disabled": this.disabled ? 'true' : null, class: this.getCssClassMap(), tabindex: -1 }, h("span", { key: '0401543277ca494a123c9ac64a2a21a32587123e', class: "alc-menu-item__check" }, this.type === 'checkbox' && this.checked
            ? h("alc-icon", { label: "", name: "check" })
            : this.type === 'radio' && this.checked
                ? h("alc-icon", { label: "", name: "record-circle", class: "text-sm" })
                : null), h("span", { key: '20d5ad331ca14ea6924bfb499dfeb6b9c981c31b', class: "alc-menu-item__prefix" }, h("slot", { key: 'b9bb9e57ef0c413b91b4e80f00e4ad091a5673d8', name: "prefix" })), h("span", { key: '40e7fba648f5e6b42f4afd35ab6e911e006f5204', class: "alc-menu-item__label" }, h("slot", { key: '9a19ddeece85958962b7520828b835a0d957070c' })), h("span", { key: '54659f617b03600d2fecef7b209415b4db67ef00', class: "alc-menu-item__suffix" }, h("slot", { key: 'b7935e91e087c73b855504c980e0950289e8e519', name: "suffix" }))));
    }
    get hostElement() { return this; }
    static get style() { return alcMenuItemCss; }
}, [4, "alc-menu-item", {
        "type": [513],
        "checked": [1540],
        "disabled": [516],
        "value": [520]
    }, [[0, "keydown", "handleKeyDown"], [0, "click", "handleClick"]]]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["alc-menu-item", "alc-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "alc-menu-item":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, AlcMenuItem);
            }
            break;
        case "alc-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { AlcMenuItem as A, defineCustomElement as d };
//# sourceMappingURL=alc-menu-item2.js.map

//# sourceMappingURL=alc-menu-item2.js.map