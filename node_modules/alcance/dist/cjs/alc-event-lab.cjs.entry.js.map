{"file":"alc-event-lab.entry.cjs.js","mappings":";;;;;AAAA,MAAM,cAAc,GAAG,sBAAsB;;MCYhC,WAAW,GAAA,MAAA;AAJxB,IAAA,WAAA,CAAA,OAAA,EAAA;;;;AASE,QAAA,IAAU,CAAA,UAAA,GAAW,CAAC;AAgGvB;IAjFC,MAAM,UAAU,CAAC,UAAkB,EAAA;AACjC,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;;AAGlC,IAAA,eAAe,CAAC,SAAiB,EAAA;AAE/B,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU;AAErC,QAAAA,aAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,SAAS,CAAC;;;AAI1C,QAAA,IAAI,SAAS,KAAK,aAAa,EAAE;AAC/B,YAAAA,aAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC;YAC1C;;;AAIF,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChC,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,EAAE,EAAE;AACL,SAAA,CAAC;;;AAIF,QAAA,IAAI,KAAK,CAAC,gBAAgB,EAAE;AAC1B,YAAAA,aAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC;YAChC;;;AAIF,QAAA,IAAI,SAAS,KAAK,CAAC,EAAE;YACnB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC;;AAE/B,aAAA,IAAI,SAAS,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC;;AAEpC,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;;AAI3B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;AACvB,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,EAAE,EAAE;AACL,SAAA,CAAC;;IAIJ,MAAM,GAAA;AAEJ,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;AACvB,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,EAAE,EAAE;AACL,SAAA,CAAC;QAEF,QACEC,QAACC,UAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAEHD,OACE,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,kBAAkB,EACxB,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EACvB,OAAO,EAAE,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAG/B,EAAA,GAAA,CAAA,EAETA,OACE,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,QAAQ,EACd,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EACvB,OAAO,EAAE,MAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAG9B,EAAA,GAAA,CAAA,EAETA,OAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACR;;;;;;;","names":["logger","h","Host"],"sources":["src/components/alc-event-lab/alc-event-lab.css?tag=alc-event-lab","src/components/alc-event-lab/alc-event-lab.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, Event, EventEmitter, Method } from '@stencil/core';\nimport logger from '../utils/logger';\n\nexport interface AlcChangeEventTypes {\n  from: number;\n  to: number;\n}\n\n@Component({\n  tag: 'alc-event-lab',\n  styleUrl: 'alc-event-lab.css',\n})\nexport class AlcEventLab {\n\n  b1: HTMLButtonElement;\n  b2: HTMLButtonElement;\n\n  underlined: number = 1;\n\n  @Event({\n    eventName: 'alc-change',\n    cancelable: true\n  })\n  alcChange: EventEmitter<AlcChangeEventTypes>;\n\n  @Event({\n    eventName: 'alc-after-change',\n    cancelable: false\n  })\n  alcAfterChange: EventEmitter<AlcChangeEventTypes>;\n\n  @Method()\n  async changePage(pageNumber: number) {\n    this.requestChangeTo(pageNumber);\n  }\n\n  requestChangeTo(newButton: number) {\n\n    const currentButton = this.underlined;\n\n    logger.debug('RequestChangeTo', newButton);\n\n    // Regra interna do componente, que não faz nada se o botão clicado\n    // for o que já está sublinhado\n    if (newButton === currentButton) {\n      logger.debug('Botão já estava sublinhado');\n      return;\n    }\n\n    // Dispara o evento buttonWillChange.\n    const event = this.alcChange.emit({\n      from: currentButton,\n      to: newButton\n    });\n\n    // Verifica se foi prevenido externamente.\n    // Se foi, não faz mais nada.\n    if (event.defaultPrevented) {\n      logger.debug('defaultPrevented')\n      return;\n    }\n\n    // Registra a alteração solicitada\n    if (newButton === 1) {\n      this.b2.classList.remove('underline');\n      this.b1.classList.add('underline');\n    }\n    else if (newButton === 2) {\n      this.b1.classList.remove('underline');\n      this.b2.classList.add('underline');\n    }\n    this.underlined = newButton;\n\n\n    // Dispara o evento buttonDidChange.\n    this.alcAfterChange.emit({\n      from: currentButton,\n      to: newButton\n    });\n\n  }\n\n  render() {\n\n    this.alcAfterChange.emit({\n      from: undefined,\n      to: 1\n    });\n\n    return (\n      <Host>\n\n        <button\n          class=\"button underline\"\n          ref={el => this.b1 = el}\n          onClick={() => this.requestChangeTo(1)}\n        >\n          1\n        </button>\n\n        <button\n          class=\"button\"\n          ref={el => this.b2 = el}\n          onClick={() =>this.requestChangeTo(2)}\n        >\n          2\n        </button>\n\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}