'use strict';

var index = require('./index-BOXTLnv4.js');
var testAttributes = require('./testAttributes-uTFBrsRA.js');
var logger = require('./logger-D5AeZhi-.js');

const alcSkipLinkCss = "alc-skip-link{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0;z-index:10}alc-skip-link:focus-within{position:static;width:auto;height:auto;padding:0;margin:0;overflow:visible;clip:auto;white-space:normal;position:absolute;top:0px;width:100%;background-color:var(--alc-color-surface-secondary);padding:1rem;text-align:center}";

const AlcSkipLink = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.handleClick = (event) => {
            if (!this.target)
                return;
            event.preventDefault();
            const header = document.querySelector('alc-header, alc-header-v1');
            const headerHeight = (header instanceof HTMLElement) ? header.offsetHeight : 0; // Obtém a altura do cabeçalho
            const targetTop = this.target.offsetTop; // Obtém a posição do target em relação ao topo
            // Calcula a posição de rolagem ajustada
            const scrollPosition = targetTop - headerHeight - 16; // 16px de margem extra
            this.target.setAttribute('tabindex', '-1');
            this.target.focus({ preventScroll: true });
            // Preferência do usuário por movimento/animação reduzido
            const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
            window.scrollTo({
                top: scrollPosition,
                behavior: prefersReducedMotion ? 'instant' : 'smooth'
            });
        };
    }
    componentDidRender() {
        this.target = document.getElementById(this.anchor);
        if (!this.target) {
            logger.logger.warn(`O valor do atributo "anchor" (${this.anchor}) deve corresponder ao id de algum elemento na página.`);
        }
    }
    render() {
        return (index.h(index.Host, { key: '210b83f0a75914208b091cb3503bf36046fd2f3c' }, index.h("a", Object.assign({ key: 'c85b6203d3041a7559e60621878c21a2c6285fa2', class: 'alc-link text-center', href: `#${this.anchor}` }, testAttributes.testAttributes(), { onClick: this.handleClick }), "Ir para ", index.h("slot", { key: '4b14b6ff834a9052f00a27c22abbdd4984432481' }))));
    }
};
AlcSkipLink.style = alcSkipLinkCss;

exports.alc_skip_link = AlcSkipLink;
//# sourceMappingURL=alc-skip-link.entry.cjs.js.map

//# sourceMappingURL=alc-skip-link.cjs.entry.js.map