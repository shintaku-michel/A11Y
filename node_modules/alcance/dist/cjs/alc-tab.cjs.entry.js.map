{"file":"alc-tab.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,aAAa,GAAG,EAAE;;ACAxB,MAAM,cAAc,GAAG,iTAAiT;;MCY3T,MAAM,GAAA,MAAA;AARnB,IAAA,WAAA,CAAA,OAAA,EAAA;;AASE;;AAEG;AACsB,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE;AAW3C;;;AAGG;AACsB,QAAA,IAAY,CAAA,YAAA,GAAa,KAAK;AAuCxD;IAjCC,MAAM,GAAA;;AACJ,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,GAAIA,aAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;QACxE,MAAM,KAAK,GAAG,MAAa;AAEzB,YAAA,IAAI,EAAU;AACd,YAAA,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACd,gBAAA,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;;iBAEZ;gBACH,EAAE,GAAG,WAAW,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;;AAG/B,YAAA,OAAO,EAAE;AACX,SAAC;AAED,QAAA,QACEC,QAACC,UAAI,EAAA,IAAA,EACHD,OAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EACE,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,EACtB,IAAI,EAAC,UAAU,EACf,EAAE,EAAE,KAAK,EAAE,EACX,QAAQ,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,GAAG,EACxC,KAAK,EAAC,eAAe,IACjBE,6BAAI,CAAgB,CAAC,CAAA,EAEzBF,OAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,wBAAwB,EAAA,EACjCA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACJ,CACF,CACD;;;;;;;;;;;","names":["logger","h","Host","test"],"sources":["src/components/alc-tab/alc-tab-base.css?tag=alc-tab&mode=base","src/components/alc-tab/alc-tab.css?tag=alc-tab&mode=theme","src/components/alc-tab/alc-tab.tsx"],"sourcesContent":["/* CSS básico para que o componente funcione - sem dependências externas */","/* \n  Definição das variáveis que estão no alc-tabs \n    --bg-color\n    --border-color\n    --border-width\n    --outline-color\n*/\n\n.alc-tabs__tab:focus-visible {\n  @apply outline outline-2 outline-[--outline-color] -outline-offset-8;\n} \n\n.alc-tabs__tab--content {\n  @apply border-[--border-color] p-3 bg-[--bg-color];\n  border-width: var(--border-width);\n  margin-top: calc(-1 * var(--border-width));\n}\n\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-tab',\n  styleUrls: {\n    base: 'alc-tab-base.css',\n    theme: 'alc-tab.css',\n  },\n  scoped: false,\n})\nexport class AlcTab {\n  /**\n   * Rótulo da tab.\n   */\n  @Prop({ reflect: true }) label: string = '';\n  /**\n   * Identificador único da tab.\n   */\n  @Prop({ reflect: true }) tab!: string;\n\n  /**\n   * Indica se a tab está ou não selecionada.\n   */\n  @Prop({ reflect: true }) selected: boolean;\n\n  /**\n   * Se, dentro da tab, o primeiro elemento com conteúdo significativo for focalizável, deve ser definido como `true`.\n   * Caso contrário, deve ser mantido o valor padrão (`false`).\n   */\n  @Prop({ reflect: true }) contentFocus?: boolean = false;\n\n\n  @Element() el: HTMLAlcTabElement;\n\n\n  render() {\n    this.tab ?? logger.report('tab', this.el.tagName.toLowerCase(), this.el)\n    const getId = (): string => {\n\n      let id: string;\n      if (this.el.id) {\n        id = this.el.id;\n      }\n      else {\n        id = `alc-tab_${this.el.tab}`;\n      }\n\n      return id;\n    }\n\n    return (\n      <Host>\n        <div\n          hidden={!this.selected}\n          role='tabpanel'\n          id={getId()} // Precisa ter id (para acessibilidade)\n          tabindex={this.contentFocus ? null : '0'}\n          class='alc-tabs__tab'\n          {...test('data-test-tab')}\n        >\n          <div class='alc-tabs__tab--content'>\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}