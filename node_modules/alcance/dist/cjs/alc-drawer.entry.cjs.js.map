{"version":3,"file":"alc-drawer.entry.cjs.js","sources":["src/components/alc-drawer/alc-drawer-base.css?tag=alc-drawer&mode=base","src/components/alc-drawer/alc-drawer.css?tag=alc-drawer&mode=theme","src/components/alc-drawer/alc-drawer.tsx"],"sourcesContent":[".alc-modal__overlay {\n  @apply fixed inset-0 flex items-start justify-end z-10;\n}\n\n.alc-drawer__content {\n  @apply relative w-full max-w-md h-full overflow-y-auto;\n}\n\n.alc-drawer__header {\n  @apply flex justify-end p-4;\n}",".alc-drawer__overlay {\n  @apply fixed inset-0 flex items-start justify-end bg-opacity-40 bg-gray-cool-80 z-30;\n}\n\n.alc-drawer__content {\n  @apply relative w-full max-w-md bg-skin-surface-primary h-full overflow-y-auto shadow-lg;\n}\n\n.alc-drawer__header {\n  @apply block absolute right-0 pr-[--alc-spacing-04] pt-[--alc-spacing-04];\n}\n","import { Component, Host, h, Prop, Method, Listen, Event, EventEmitter, Watch } from '@stencil/core';\nimport { getFocusableElements, focusFirstElement, handleKeyDown } from '../utils/keydown';\nimport test from '../utils/testAttributes';\nimport { lockBodyScroll, unlockBodyScroll } from '../utils/scrollLockManager';\n@Component({\n  tag: 'alc-drawer',\n  styleUrls: {\n    base: 'alc-drawer-base.css',\n    theme: 'alc-drawer.css'\n  },\n  scoped: false,\n})\nexport class AlcDrawer {\n  private drawerRef?: HTMLElement;\n  private triggerElement = null;\n\n  /**\n  * @type Element ou ID\n  * @description Elemento ou ID do elemento que será focado quando o drawer fechar.\n  */\n  @Prop() elementToFocus?: HTMLElement | string = null;\n\n  /**\n  * @type boolean\n  * @description Define se o drawer está aberto ou fechado.\n  */\n  @Prop({ mutable: true, reflect: true }) isVisible?: boolean = false;\n\n  @Watch('isVisible')\n  watchIsVisible(isVisible: boolean) {\n    if (isVisible) {\n      lockBodyScroll();\n      this.triggerElement = document.activeElement as HTMLElement;\n      this.show();\n      return isVisible;\n    }\n\n    unlockBodyScroll();\n    this.hide();\n    return isVisible;\n  }\n\n  /**\n   * Evento disparado quando o drawer vai abrir\n   */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true\n  }) alcShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o drawer abriu\n   */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true\n  }) alcAfterShow: EventEmitter<null>;\n\n  /**\n  * Evento disparado quando o drawer vai fechar\n  */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true\n  }) alcHide: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o drawer fechou\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true\n  }) alcAfterHide: EventEmitter<null>;\n\n  /**\n  * Método para abrir o drawer.\n  */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.isVisible) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcShow.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.isVisible = true;\n    this.alcAfterShow.emit();\n\n    return true;\n  }\n\n  /**\n  * Método para fechar o drawer.\n  */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.isVisible) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcHide.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.isVisible = false;\n    this.alcAfterHide.emit();\n\n    this.handleFocusWhenCloseDrawer();\n\n    return true;\n  }\n\n  /**\n  * Foco fica dentro do drawer quando aberta.\n  */\n  @Listen('keydown', { target: 'document' })\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isVisible) {\n      return;\n    };\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if(event.key === 'Escape') {\n      event.preventDefault();\n      this.hide();\n      return;\n    }\n\n    if (event.key !== 'Tab') return;\n    const focusableElements = getFocusableElements(this.drawerRef);\n    handleKeyDown(event, focusableElements);\n  }\n\n  componentDidRender() {\n    // Pega os elementos focáveis a cada renderização (Pode haver mudanças no drawer).\n    const focusableElements = getFocusableElements(this.drawerRef);\n\n    // Após o componente renderizar e estiver aberto, então ja coloca foco dentro do drawer.\n    if (this.isVisible) {\n      focusFirstElement(focusableElements);\n    }\n\n  }\n\n  connectedCallback() {\n    if (this.isVisible) {\n      lockBodyScroll();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.isVisible) {\n      unlockBodyScroll();\n    }\n  }\n\n  private getDrawerRef = (element) => this.drawerRef = element as HTMLElement;\n\n  private handleFocusWhenCloseDrawer = () => {\n    if(!!this.elementToFocus) {\n      let element = this.elementToFocus;\n      if(typeof element === 'string') {\n        element = document.getElementById(element);\n      }\n      return !!element ? element.focus() : null;\n    }\n\n    const defaultFocus = ['BODY', 'DOCUMENT'];\n    const hasTriggerElement = !!this.triggerElement && document.body.contains(this.triggerElement);\n\n    if(hasTriggerElement && !defaultFocus.includes(this.triggerElement.tagName)){\n      this.triggerElement.focus();\n      return;\n    }\n\n    return;\n  }\n\n  render() {\n    return (\n      <Host style={{ display: this.isVisible ? 'block' : 'none' }}>\n        <div class=\"alc-drawer__overlay\">\n          <div\n            class=\"alc-drawer__content bg-white dark:bg-black\"\n            role=\"dialog\"\n            aria-modal=\"true\"\n            ref={this.getDrawerRef}\n          >\n            <div class=\"alc-drawer__header\">\n              <button\n                class=\"alc-button alc-button-rounded\"\n                onClick={() => this.hide()}\n                {...test('data-test-close-button')}\n              >\n                <alc-icon name=\"x-lg\" label=\"Fechar Drawer\" {...test('data-test-close-icon')} />\n              </button>\n            </div>\n            <div>\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"names":["lockBodyScroll","unlockBodyScroll","getFocusableElements","handleKeyDown","focusFirstElement","h","Host","test"],"mappings":"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"}