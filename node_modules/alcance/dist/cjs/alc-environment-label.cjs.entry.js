'use strict';

var index = require('./index-BOXTLnv4.js');

// Utilizado para não ter erro de escrita e/ou caso seja necessário mudar o valor dos ambientes
var Environments;
(function (Environments) {
    Environments["Prototype"] = "prototype";
    Environments["Development"] = "development";
    Environments["Testing"] = "testing";
    Environments["Homologation"] = "homologation";
    Environments["Production"] = "production";
})(Environments || (Environments = {}));

const alcEnvironmentLabelCss = "[data-alc-theme=\"dark\"] alc-environment-label{--text-color:var(--alc-color-text-0)}[data-alc-theme=\"light\"] alc-environment-label{--text-color:var(--alc-color-text-contrast)}alc-environment-label{display:block;padding:0.5rem;text-align:center;color:var(--text-color);background-color:var(--alc-color-label-undefined)}.alc-environment-label--prototype{background-color:var(--alc-color-label-prototype)}.alc-environment-label--development{background-color:var(--alc-color-label-development)}.alc-environment-label--testing{background-color:var(--alc-color-label-testing)}.alc-environment-label--homologation{background-color:var(--alc-color-label-homologation)}.alc-environment-label--production{display:none}";

const AlcEnvironmentLabel = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.environments = {
            [Environments.Prototype]: 'Protótipo',
            [Environments.Development]: 'Desenvolvimento',
            [Environments.Testing]: 'Teste',
            [Environments.Homologation]: 'Homologação',
            [Environments.Production]: '', // É válido (reconhecido), mas não deve ter texto apresentado.
        };
    }
    render() {
        var _a;
        return (index.h(index.Host, { key: '978bf8a1bdb0658e3362d2dbcede1486c73ca434', class: {
                'alc-environment-label--prototype': this.env === Environments.Prototype,
                'alc-environment-label--development': this.env === Environments.Development,
                'alc-environment-label--testing': this.env === Environments.Testing,
                'alc-environment-label--homologation': this.env === Environments.Homologation,
                'alc-environment-label--production': this.env === Environments.Production,
            } }, (_a = this.environments[this.env]) !== null && _a !== void 0 ? _a : 'Não reconhecido'));
    }
};
AlcEnvironmentLabel.style = alcEnvironmentLabelCss;

exports.alc_environment_label = AlcEnvironmentLabel;
//# sourceMappingURL=alc-environment-label.entry.cjs.js.map

//# sourceMappingURL=alc-environment-label.cjs.entry.js.map