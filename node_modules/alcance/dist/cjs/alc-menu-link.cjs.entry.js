'use strict';

var index = require('./index-BOXTLnv4.js');
var index$1 = require('./index-BFaOPcDi.js');
require('./_commonjsHelpers-CFO10eej.js');

const alcMenuLinkCss = "alc-menu-link{--text-color:var(--alc-color-text-0);--text-color-disabled:var(--alc-color-text-4);--bg-color-active:var(--alc-color-surface-secondary);--bg-color-hover:var(--alc-color-surface-tertiary);--bg-color-focus:var(--alc-color-surface-secondary)}[data-alc-theme=\"dark\"] alc-menu-link{--text-color-active:var(--alc-color-text-0);--outline-color:var(--alc-color-action-30)}[data-alc-theme=\"light\"] alc-menu-link{--text-color-active:var(--alc-color-text-contrast);--outline-color:var(--alc-color-action-60)}*{-webkit-tap-highlight-color:rgba(255, 255, 255, 0)}.alc-menu-link>a{-webkit-user-select:none;display:block;cursor:pointer;padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1.75rem;padding-right:1.5rem;-ms-flex-align:baseline;align-items:baseline;text-align:left;font-size:1rem;line-height:1.5rem;color:var(--text-color)}.alc-menu-link>a:hover{background-color:var(--bg-color-hover)}.alc-menu-link>a:active{background-color:var(--bg-color-active)}.alc-menu-link>a:focus-visible{outline-style:solid;outline-width:2px;outline-offset:-8px;outline-color:var(--outline-color);background-color:var(--bg-color-focus)}.alc-menu-link>a.alc-menu-link--disabled{cursor:not-allowed;color:var(--text-color-disabled)}.alc-menu-link>a.alc-menu-link--disabled:hover{background-color:var(--bg-color-hover)}.alc-menu-link>a.alc-menu-link--disabled:focus-visible{background-color:var(--bg-color-focus)}.alc-menu-link__label{-ms-flex:1 1 0%;flex:1 1 0%}.alc-menu-link__prefix:not(:empty){margin-right:0.5rem}.alc-menu-link__suffix:not(:empty){margin-left:0.5rem}";

const AlcMenuLink = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.alcSelect = index.createEvent(this, "alc-select", 7);
        /** Indica se o menu-link está desabilitado. */
        this.disabled = false;
        this.originalHref = null;
        this.spaceKeyEvent = null;
    }
    handleDisabledChange(newValue) {
        this.updateLinkState(newValue);
    }
    triggerEvent(detail) {
        if (this.disabled) {
            return;
        }
        this.alcSelect.emit(detail);
    }
    updateLinkState(disabled) {
        const anchor = this.hostElement.querySelector('a');
        if (anchor) {
            if (disabled) {
                this.originalHref = anchor.getAttribute('href');
                anchor.setAttribute('aria-disabled', 'true');
                anchor.classList.add('alc-menu-link--disabled');
                anchor.setAttribute('tabindex', '-1');
                anchor.removeAttribute('href');
                anchor.setAttribute('role', 'menuitem');
            }
            else {
                if (this.originalHref) {
                    anchor.setAttribute('href', this.originalHref);
                }
                anchor.removeAttribute('aria-disabled');
                anchor.classList.remove('alc-menu-link--disabled');
                anchor.setAttribute('tabindex', '0');
                anchor.setAttribute('role', 'menuitem');
            }
        }
    }
    handleKeyDown(event) {
        if (!this.disabled && event.key === ' ') {
            event.preventDefault();
            const anchor = this.hostElement.querySelector('a');
            if (anchor) {
                this.spaceKeyEvent = event;
                anchor.click();
            }
        }
    }
    handleClick(event) {
        var _a;
        const originalEvent = (_a = this.spaceKeyEvent) !== null && _a !== void 0 ? _a : event;
        this.spaceKeyEvent = null; // Despreza esse evento para os próximos disparos.
        if (this.disabled) {
            event.preventDefault();
        }
        else {
            this.triggerEvent({ originalEvent: originalEvent });
        }
    }
    componentWillLoad() {
        this.updateLinkState(this.disabled);
    }
    getCssClassMap() {
        return index$1.classNames('alc-menu-link', this.disabled && 'alc-menu-link--disabled');
    }
    render() {
        return (index.h(index.Host, { key: 'faa811162db480d42c060a355f35f76ce8f638a1', class: this.getCssClassMap(), "aria-disabled": this.disabled ? 'true' : null, onClick: this.handleClick.bind(this), onKeyDown: this.handleKeyDown.bind(this) }, index.h("slot", { key: '7d4214a496fb6d9d209f6f6b595c2ee0c08937f5' })));
    }
    get hostElement() { return index.getElement(this); }
    static get watchers() { return {
        "disabled": ["handleDisabledChange"]
    }; }
};
AlcMenuLink.style = alcMenuLinkCss;

exports.alc_menu_link = AlcMenuLink;
//# sourceMappingURL=alc-menu-link.entry.cjs.js.map

//# sourceMappingURL=alc-menu-link.cjs.entry.js.map