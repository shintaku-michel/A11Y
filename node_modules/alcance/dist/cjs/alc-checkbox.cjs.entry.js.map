{"file":"alc-checkbox.entry.cjs.js","mappings":"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","names":["getUniqueId","h","Host","test"],"sources":["src/components/alc-checkbox/alc-checkbox.css?tag=alc-checkbox","src/components/alc-checkbox/alc-checkbox.tsx"],"sourcesContent":["[data-alc-theme=\"dark\"] alc-checkbox {\n  --accent-color: var(--alc-color-action-40);\n  --outline-color: var(--alc-color-action-30);\n\n  --text-color: var(--alc-color-text-4);\n  --text-color-error: var(--alc-color-error-45);\n}\n\n[data-alc-theme=\"light\"] alc-checkbox {\n  --accent-color: var(--alc-color-action-60);\n  --outline-color: var(--alc-color-action-60);\n\n  --text-color: var(--alc-color-text-4);\n  --text-color-error: var(--alc-color-error-50);\n}\n\nalc-checkbox {\n  @apply flex gap-2 items-start;\n}\n\nalc-checkbox input[type='checkbox'] {\n  @apply mt-px;\n  @apply focus:outline focus:outline-offset-2 focus:outline-2;\n  @apply accent-[--accent-color];\n  @apply focus:outline-[--outline-color];\n}\n\n.alc-checkbox__label {\n  @apply flex flex-col text-sm font-medium;\n}\n\n.alc-checkbox__text {\n  @apply text-sm font-normal text-[--text-color];\n\n  &--error {\n    @apply text-[--text-color-error];\n  }\n}\n","import { Component, Host, h, Prop, Element, State } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport test from '../utils/testAttributes';\n\n/**\n * @slot DEFAULT - Slot para o elemento input do tipo checkbox.\n *\n * @slot label - Slot para o elemento label do checkbox. Há opção de adicionar apenas o texto por meio da propriedade `label`.\n*/\n\n@Component({\n  tag: 'alc-checkbox',\n  styleUrl: 'alc-checkbox.css',\n  scoped: false,\n})\nexport class AlcCheckbox {\n\n  describedBy = new Map();\n  errorId = '';\n  hintId = '';\n  input: HTMLInputElement;\n\n  @Element() el: HTMLAlcCheckboxElement;\n\n  @State() inputId: string;\n\n  /**\n   * Texto de ajuda.\n  */\n  @Prop({ reflect: true }) hint?: string = '';\n\n  /**\n   * Texto do label do input. Há opção de adicionar o elemento label pelo slot \"label\".\n  */\n  @Prop({ reflect: true }) label: string = '';\n\n  /**\n   * Texto de mensagem de erro.\n  */\n  @Prop({ mutable: true, reflect: true}) errorMsg: string = '';\n\n  componentWillLoad() {\n\n    // Independentemente de qualquer coisa, reserva ids para esses elementos.\n    this.errorId = getUniqueId();\n    this.hintId = getUniqueId();\n\n    this.input = this.el.querySelector('input[type=\"checkbox\"]');\n    const labelElement = this.el.querySelector('label');\n\n    this.inputId = this.input.id;\n\n    if(!this.inputId) {\n      this.inputId = getUniqueId();\n      this.input.setAttribute('id', this.inputId);\n    }\n\n    if(labelElement && !labelElement.getAttribute('for')){\n      labelElement.setAttribute('for', this.inputId);\n    }\n\n    this.describedBy.set('original', this.input.getAttribute('aria-describedby') || '');\n  }\n\n  componentWillRender() {\n\n    if (this.errorMsg) {\n      this.describedBy.set('error', this.errorId);\n    }\n    else {\n      this.describedBy.delete('error');\n    }\n\n    if (this.hint) {\n      this.describedBy.set('hint', this.hintId);\n    }\n    else {\n      this.describedBy.delete('hint');\n    }\n\n    let currentDescribedBy = '';\n\n    currentDescribedBy += ` ${this.describedBy.get('original') || ''}` ;\n    currentDescribedBy += ` ${this.describedBy.get('error') || ''}` ;\n    currentDescribedBy += ` ${this.describedBy.get('hint') || ''}` ;\n\n    this.input.setAttribute('aria-describedby', currentDescribedBy.trim());\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <div class=\"alc-checkbox__label\">\n          {/* Essa div faz o label desvincular-se da estrutura do flex, permitindo que seja mostrado inline, que é o natural */}\n          <div>\n            { this.label\n              ?\n                <label\n                  htmlFor={this.inputId}\n                  {...test('data-test-label')}\n                >\n                  {this.label}\n                </label>\n              :\n                <slot name=\"label\"></slot>\n            }\n          </div>\n          { this.errorMsg\n            ?\n              <small\n                class=\"alc-checkbox__text alc-checkbox__text--error\"\n                id={this.errorId}\n                {...test('data-test-error')}\n              >\n                {this.errorMsg}\n              </small>\n            :\n              null\n          }\n          { this.hint\n            ?\n              <small\n                class=\"alc-checkbox__text\"\n                id={this.hintId}\n                {...test('data-test-hint')}\n              >\n                {this.hint}\n              </small>\n            :\n              null\n          }\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}