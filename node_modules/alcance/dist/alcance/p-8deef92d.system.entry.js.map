{"version":3,"names":["childText","element","slice","call","childNodes","filter","node","nodeType","Node","TEXT_NODE","map","nodeValue","trim","join","createIcon","name","label","icon","document","createElement","setAttribute","alcNavCss","AlcNav","exports","class_1","prototype","openPanel","panel","logger","debug","closest","current","Array","from","this","panels","children","matches","classList","add","remove","child","forEach","p","_c","apply","_d","removeAttribute","parent","querySelector","concat","dataset","alcParent","focusableItems","el","querySelectorAll","focus","listitems","item","id","closePanel","togglePanel","listItem","parentElement","contains","setSelectedItem","setSelected","listitem","menu","li","initMenu","_this","getUniqueId","append","initPanel","initPanels","addEventListener","e","href","_b","_a","target","getAttribute","preventDefault","err","capture","initNavbar","listview","initListview","main","header","footer","some","parentListitem","parentPanel","navbar","prev","parentLabel","labelText","opener","title","innerHTML","prepend","previous","previousElementSibling","hasLabel","wrapper","insertBefore","initListitem","hasAttribute","text","subpanel","initSubPanel","alcChild","role","button","nextElementSibling","initOpened","selectedListItem","observeNavLinks","links","link","observer","MutationObserver","mutations","mutation","attributeName","observe","attributes","attributeFilter","componentDidLoad","isMobile","window","innerWidth","emitNavContent","componentDidRender","componentWillLoad","handleWindowResize","nowMobile","dispatchEvent","CustomEvent","detail","navEl","bubbles","composed","handleKeyDown","event","currentPanel","isSubPanel","key","backButton","click","render","h","Host","class","ref"],"sources":["src/components/utils/domUtils.ts","src/components/alc-nav/alc-nav.css?tag=alc-nav","src/components/alc-nav/alc-nav.tsx"],"sourcesContent":["export function childText(element: HTMLElement): string {\n    return element\n      ? [].slice.call(element.childNodes)\n        .filter(node => node.nodeType === Node.TEXT_NODE)\n        .map(node => node.nodeValue.trim())\n        .join(' ')\n      : '';\n  }\n  \n  export function createIcon(name: string, label?: string): HTMLAlcIconElement {\n    const icon = document.createElement('alc-icon');\n    icon.setAttribute('name', name);\n    icon.setAttribute('label', label ? label : '');\n    return icon;\n  }","alc-nav {\n  display: block;\n  --spacing-x: var(--alc-spacing-06);\n  --border-width-selected: var(--alc-spacing-03);\n  --border-color-selected: var(--alc-color-neutral-50);\n  --padding-left-selected: calc(var(--spacing-x) - var(--border-width-selected));\n}\n\n[data-alc-theme=\"light\"] alc-nav {\n  --icon-color: var(--alc-color-neutral-50);\n  --bg-color-selected: var(--alc-color-neutral-10);\n}\n\n[data-alc-theme=\"dark\"] alc-nav {\n  --icon-color: var(--alc-color-neutral-40);\n  --bg-color-selected: var(--alc-color-neutral-90);\n}\n\n.alc-nav__panel {\n  @apply hidden;\n}\n\n.alc-nav__panel--subpanel {\n  @apply py-4;\n}\n\n.alc-nav__panel.is-open {\n  @apply block;\n}\n\n.alc-nav__header {\n  @apply py-4;\n  @apply border-b border-[--alc-color-neutral-40];\n}\n\n.alc-nav__main {\n  @apply py-4;\n}\n\n\n.alc-nav__footer {\n  @apply py-4;\n  @apply border-t border-[--alc-color-neutral-40];\n}\n\n.alc-nav__label-wrapper {\n  @apply px-[--spacing-x] mt-6;\n}\n.alc-nav__label {\n  @apply uppercase font-bold text-xs tracking-[0.15rem] text-[--alc-color-text-3] dark:text-[--alc-color-text-2];\n\n}\n\n.alc-nav__listview {\n  @apply mt-2;\n}\n\n.alc-nav__listview--labelled {\n  @apply mt-4;\n}\n\n\n.alc-nav__listitem {\n  @apply flex gap-2 items-center;\n}\n\n.alc-nav__text {\n  @apply w-full text-[--alc-color-link-text] px-[--spacing-x] py-4;\n  @apply hover:text-[--alc-color-text-2] dark:hover:text-[--alc-color-text-0];\n  @apply hover:bg-[--alc-color-neutral-5] dark:hover:bg-[--alc-color-neutral-80];\n}\n\n.alc-nav__listitem.is-selected .alc-nav__text {\n  @apply border-l-[--border-color-selected] bg-[--bg-color-selected] pl-[--padding-left-selected];\n  border-left-width: var(--border-width-selected);\n  @apply hover:bg-[--alc-color-neutral-5] dark:hover:bg-[--alc-color-neutral-80];\n}\n\n.alc-nav__navbar {\n  @apply flex items-center mx-[--spacing-x];\n}\n\n.alc-nav__navbar-title {\n  @apply text-center grow font-medium uppercase text-[--alc-color-text-3] dark:text-[--alc-color-text-0];\n}\n\n.alc-nav__button--next {\n  @apply flex gap-2 justify-between items-center;\n}\n\n.alc-nav__icon--next {\n  @apply text-[--icon-color];\n}\n\n.alc-nav__icon--prev {\n  @apply text-4xl text-[--alc-color-link-text];\n}\n","import { Component, Element, Host, h, Method, Listen } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport { childText, createIcon } from '../utils/domUtils';\n\n/**\n * @slot DEFAULT - Slot para o conteúdo principal do nav. Tipicamente, os elementos de navegação pelas funcionalidades do sistema.\n * @slot footer - Slot nomeado para adicionar rodapé no nav. Tipicamente, os elementos de navegação acessórios e configurações, incluindo o seletor de tema.\n * @slot header - Slot nomeado para adicionar cabeçalho no nav. Tipicamente, a identificação do usuário logado no sistema.\n */\n@Component({\n  tag: 'alc-nav',\n  styleUrl: 'alc-nav.css',\n  scoped: false,\n})\nexport class AlcNav {\n\n  @Element() el: HTMLAlcNavElement;\n\n  private isMobile: boolean;\n\n  menu: HTMLElement;\n  panels: HTMLElement;\n\n  header: HTMLElement;\n  main: HTMLElement;\n  footer: HTMLElement;\n\n  // Lista de itens que podem receber foco no momento\n  focusableItems: HTMLElement[];\n\n  openPanel(panel: HTMLElement) {\n    if (!panel) {\n      return;\n    }\n\n    logger.debug('open', { panel });\n\n    panel = panel.closest('.alc-nav__panel') as HTMLElement;\n\n    // Identifica o painel que está aberto atualmente.\n    const current = Array.from(this.panels.children).filter(panel => panel.matches('.is-open'))[0] as HTMLElement;\n\n    // Mantém painel por cima enquanto está sendo fechado\n    if (panel.matches('.alc-nav__panel--parent') && current) {\n      current.classList.add('alc-nav__panel--highest');\n    }\n\n    const remove = ['is-open', 'mm-panel--parent'];\n    const add = [];\n\n    Array.from(this.panels.children)\n      .filter(child => child.matches('.alc-nav__panel'))\n      .forEach(p => {\n        p.classList.add(...add);\n        p.classList.remove(...remove);\n\n        if (p !== current) {\n          p.classList.remove('alc-nav__panel--highest');\n        }\n\n        if (p === panel) {\n          p.removeAttribute('inert');\n        } else {\n          p.setAttribute('inert', 'true');\n        }\n      });\n\n    // Abre novo painel.\n    panel.classList.add('is-open');\n\n    // Painel pai\n    let parent: HTMLElement = this.panels.querySelector(`#${panel.dataset.alcParent}`);\n\n    // Ajusta painéis pais como \"parent\"\n    while (parent) {\n      parent = parent.closest('.alc-nav__panel') as HTMLElement;\n      parent.classList.add('alc-nav__panel--parent');\n\n      parent = this.panels.querySelector(`#${parent.dataset.alcParent}`);\n    }\n\n    // Todos os links do painel aberto são considerados agora focáveis.\n    this.focusableItems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listview a'));\n    // Coloca o primeiro link do painel aberto na sequência de tabulação\n    this.focusableItems[0].focus();\n\n    // Se estiver \"voltando\" de um painel em um nível abaixo na hierarquia,\n    // coloca o foco no link que abriu esse painel.\n    const listitems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listitem'));\n    listitems.forEach((item: HTMLElement) => {\n      if (item.id === current?.dataset.alcParent) {\n        logger.debug('focus on', item, item.id);\n        item.querySelector('a').focus();\n      }\n    });\n  }\n\n  closePanel(panel: HTMLElement) {\n    logger.debug('close', { panel });\n  }\n\n  /**\n   * Abre ou fecha o painel especificado pelo parâmetro.\n   */\n  @Method()\n  async togglePanel(panel: HTMLElement) {\n    const listItem = panel.parentElement;\n\n    if (listItem.classList.contains('is-open')) {\n      logger.debug('will close', panel);\n      this.closePanel(panel);\n    } else {\n      logger.debug('will open', panel);\n      this.openPanel(panel);\n    }\n  }\n\n  /**\n   * Seleciona o item passado pelo parâmetro. Se nenhum valor for passado, apenas remove o item atualmente selecionado.\n   */\n  @Method()\n  async setSelectedItem(listItem?: HTMLElement) {\n    // Remove a classe 'is-selected' e a propriedade 'data-alc-selected' de qualquer item\n    this.el.querySelectorAll('.alc-nav__listitem.is-selected').forEach(item => {\n      item.classList.remove('is-selected');\n      item.removeAttribute('data-alc-selected');\n    });\n\n    if (listItem) {\n      // Adiciona a classe 'is-selected' e a propriedade 'data-alc-selected' ao item passado como parâmetro\n      listItem.classList.add('is-selected');\n      listItem.setAttribute('data-alc-selected', 'true');\n    }\n  }\n\n  setSelected(listitem: HTMLElement) {\n    this.menu.querySelectorAll('.alc-nav__listitem--selected').forEach(li => {\n      li.classList.remove('alc-nav__listitem--selected');\n    });\n\n    listitem.classList.add('alc-nav__listitem--selected');\n  }\n\n  initMenu() {\n    this.menu.id = this.menu.id || getUniqueId();\n\n    const panels = Array.from((this.menu.children)).filter(child => child.matches('[data-alc-panel]')) as HTMLElement[];\n\n    logger.debug({ panels });\n\n    this.panels = document.createElement('div');\n    this.panels.classList.add('alc-nav__panels');\n    this.menu.append(this.panels);\n\n    panels.forEach(panel => {\n      this.initPanel(panel);\n    });\n  }\n\n  initPanels() {\n    this.menu.addEventListener('click', e => {\n      const href = (e.target as HTMLElement)?.closest('a[href]')?.getAttribute('href') || '';\n\n      if (href.slice(0, 1) === '#') {\n        try {\n          const panel = this.el.querySelector(href) as HTMLElement;\n\n          if (panel) {\n            e.preventDefault();\n            this.togglePanel(panel);\n          }\n        } catch (err) {}\n      }\n    }, {\n      capture: true\n    });\n  }\n\n  initPanel(panel: HTMLElement): HTMLElement {\n    if (panel.matches('.alc-nav__panel')) {\n      return;\n    }\n\n    logger.debug({ panel });\n\n    panel.id = panel.id || getUniqueId();\n\n    panel.classList.add('alc-nav__panel');\n\n    this.panels.append(panel);\n\n    this.initNavbar(panel);\n\n    Array.from(panel.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n\n    Array.from(this.main.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n\n    if(this.header?.children) {\n      Array.from(this.header.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n    }\n\n    if(this.footer?.children) {\n      Array.from(this.footer.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n    }\n\n    return panel;\n  }\n\n  initNavbar(panel: HTMLElement) {\n    if (Array.from(panel.children).some(child => child.matches('.alc-nav__navbar'))) {\n      return;\n    }\n\n    let parentListitem: HTMLElement = null;\n\n    let parentPanel: HTMLElement = null;\n\n    if (panel.dataset.alcParent) {\n      parentListitem = this.panels.querySelector(`#${panel.dataset.alcParent}`);\n      parentPanel = parentListitem.closest('.alc-nav__panel');\n\n      while (parentPanel.closest('.alc-nav__listitem')) {\n        parentPanel = parentPanel.parentElement.closest('.alc-nav__panel');\n      }\n    }\n\n    const navbar = document.createElement('div');\n    navbar.classList.add('alc-nav__navbar');\n\n    if (parentPanel) {\n      const prev = document.createElement('a');\n\n      prev.classList.add(\n        'alc-nav__button',\n        'alc-nav__button--prev',\n      );\n\n      const parentLabel = childText(parentPanel.querySelector('.alc-nav__navbar-title'));\n      const labelText = parentLabel ? `Voltar para ${parentLabel}` : 'Voltar para navegação principal';\n\n      const icon = createIcon('arrow-left-short', labelText);\n      icon.classList.add('alc-nav__icon--prev');\n\n      prev.href = `#${parentPanel.id}`;\n\n      prev.append(icon);\n      navbar.append(prev);\n    } else {\n      return;\n    }\n\n    let opener: HTMLElement = null;\n\n    if (parentListitem) {\n      opener = Array.from(parentListitem.children).filter(child => child.matches('.alc-nav__text'))[0] as HTMLElement;\n    } else if (parentPanel) {\n      opener = parentPanel.querySelector(`a[href=#${panel.id}]`);\n    }\n\n    const title = document.createElement('span');\n    title.classList.add('alc-nav__navbar-title');\n    title.innerHTML = childText(opener) || '';\n\n    panel.prepend(navbar);\n    navbar.append(title);\n  }\n\n  initListview(listview: HTMLElement) {\n    if (listview.matches('.alc-nav__listview')) {\n      return;\n    }\n\n    listview.classList.add('alc-nav__listview');\n\n    const previous = listview.previousElementSibling as HTMLElement;\n    const hasLabel = previous ? 'alcLabel' in previous.dataset : false;\n    if (hasLabel) {\n      listview.classList.add('alc-nav__listview--labelled');\n\n      const wrapper = document.createElement('div');\n      wrapper.classList.add('alc-nav__label-wrapper');\n      listview.parentElement.insertBefore(wrapper, previous);\n      wrapper.insertBefore(previous, null);\n\n      previous.classList.add('alc-nav__label');\n      previous.id = previous.id || getUniqueId();\n      listview.setAttribute('aria-labelledby', previous.id);\n    }\n\n    Array.from(listview.children).forEach((listitem: HTMLElement) => {\n      this.initListitem(listitem);\n    });\n  }\n\n  initListitem(listitem: HTMLElement) {\n    if (listitem.matches('.alc-nav__listitem')) {\n      return;\n    }\n\n    listitem.classList.add('alc-nav__listitem');\n\n    if (listitem.hasAttribute('data-alc-selected')) {\n      listitem.classList.add('is-selected');\n    }\n\n    Array.from(listitem.children)\n      .filter(element => element.matches('a, span'))\n      .forEach(text => text.classList.add('alc-nav__text'));\n\n    Array.from(listitem.children)\n      .filter(element => element.matches('[data-alc-panel]'))\n      .forEach((subpanel: HTMLElement) => this.initSubPanel(subpanel));\n  }\n\n  initSubPanel(subpanel: HTMLElement) {\n    if (subpanel.matches('.alc-nav__panel')) {\n      return;\n    }\n\n    const listitem = subpanel.parentElement;\n\n    listitem.id = listitem.id || getUniqueId();\n    subpanel.id = subpanel.id || getUniqueId();\n\n    listitem.dataset.alcChild = subpanel.id;\n    subpanel.dataset.alcParent = listitem.id;\n\n    subpanel.role = \"dialog\";\n    subpanel.setAttribute('aria-labelledby', listitem.id);\n    subpanel.classList.add('alc-nav__panel--subpanel');\n\n    let button = Array.from(listitem.children).filter(child => child.matches('.alc-nav__button'))[0] as HTMLAnchorElement;\n\n    if (!button) {\n      button = document.createElement('a');\n      button.classList.add('alc-nav__button', 'alc-nav__button--next');\n      button.setAttribute('aria-expanded', 'false');\n    }\n\n    const icon = createIcon('chevron-right');\n    icon.setAttribute('aria-hidden', 'true');\n    icon.classList.add('alc-nav__icon--next');\n\n    Array.from(listitem.children)\n      .filter(child => child.matches('a, span'))\n      .forEach(text => {\n        if (text.matches('span')) {\n          button.classList.add('alc-nav__text');\n          button.innerHTML = text.innerHTML;\n          listitem.insertBefore(button, text.nextElementSibling);\n          text.remove();\n        } else {\n          listitem.insertBefore(button, text.nextElementSibling);\n        }\n      });\n\n    button.href = `#${subpanel.id}`;\n    button.append(icon);\n\n    this.initPanel(subpanel);\n  }\n\n  initOpened() {\n    const listitem: HTMLElement = this.panels.querySelector('.alc-nav__listitem--selected');\n    let panel: HTMLElement = this.panels.querySelector('.alc-nav__panel');\n\n    if (listitem) {\n      this.setSelected(listitem);\n      panel = listitem.closest('.alc-nav__panel');\n    }\n\n    // Verificar se há um item com o atributo data-alc-selected\n    const selectedListItem = this.el.querySelector('.alc-nav__listitem[data-alc-selected]') as HTMLElement;\n    if (selectedListItem) {\n      this.setSelectedItem(selectedListItem);\n    }\n\n    this.openPanel(panel);\n  }\n\n  observeNavLinks() {\n    // Seleciona os links que estão dentro de uma listview\n    const links = Array.from(\n      this.el.querySelectorAll('.alc-nav__listview a, .alc-nav__listview router-link')\n    );\n  \n    links.forEach(link => {\n      // Cria um observer para monitorar mudanças no atributo 'class'\n      const observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (mutation.attributeName === 'class') {\n            // Se a classe 'alc-nav__text' não estiver presente, adiciona novamente\n            if (!link.classList.contains('alc-nav__text')) {\n              link.classList.add('alc-nav__text');\n            }\n          }\n        });\n      });\n  \n      observer.observe(link, {\n        attributes: true,\n        attributeFilter: ['class'],\n      });\n    });\n  }\n\n  componentDidLoad() {\n    // dispara uma vez no carregamento\n    this.isMobile = window.innerWidth < 768;\n    this.emitNavContent(this.isMobile);\n  }\n\n  componentDidRender() {\n    this.initMenu();\n    this.initPanels();\n    this.initOpened();\n\n    this.focusableItems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listview a'));\n\n    // Força a classe 'alc-nav__text' nos links mesmo após alterações\n    this.observeNavLinks();\n  }\n\n  componentWillLoad() {\n    this.header = this.el.querySelector(\"[slot='header']\");\n    this.footer = this.el.querySelector(\"[slot='footer']\");\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleWindowResize() {\n    const nowMobile = window.innerWidth < 768;\n    if (nowMobile !== this.isMobile) {\n      this.isMobile = nowMobile;\n      this.emitNavContent(this.isMobile);\n    }\n  }\n\n  private emitNavContent(isMobile: boolean) {\n    this.el.dispatchEvent(new CustomEvent('alc-nav-content', {\n      detail: { navEl: this.el, isMobile },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    const currentPanel = Array.from(this.panels.children).filter(panel => panel.matches('.is-open'))[0] as HTMLElement;\n    const isSubPanel = currentPanel?.hasAttribute('data-alc-parent');\n    if (event.key === 'Escape' && isSubPanel) {\n      const backButton = currentPanel.querySelector('.alc-nav__button--prev') as HTMLElement;\n      if (backButton) {\n        backButton.click();\n      }\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <Host class={{ 'alc-nav': true, 'alc-nav__wrapper': true }}>\n        <nav ref={el => this.menu = el} class=\"alc-nav__menu\">\n          <div data-alc-panel>\n            {this.header ? (\n              <div class=\"alc-nav__header\">\n                <slot name=\"header\"></slot>\n              </div>\n            ) : null}\n            <div class=\"alc-nav__main\" ref={el => this.main = el}>\n              <slot></slot>\n            </div>\n            {this.footer ? (\n              <div class=\"alc-nav__footer\">\n                <slot name=\"footer\"></slot>\n              </div>\n            ) : null}\n          </div>\n        </nav>\n      </Host>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}