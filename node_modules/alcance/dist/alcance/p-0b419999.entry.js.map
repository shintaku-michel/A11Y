{"version":3,"names":["alcHeaderCss","MOBILE_BREAKPOINT","Number","screens","sm","split","TABLET_BREAKPOINT","md","AlcHeader","constructor","hostRef","this","supportItems","availableWidth","requiredWidth","scrollTop","scrollDirection","resizeThrottle","throttle","resize","isDrawer","isSupportDropdown","needSeparator","isMenuCreated","handleScroll","window","innerWidth","currentScroll","pageYOffset","document","documentElement","currentDirection","el","clientHeight","wrapper","classList","add","remove","handleNavContent","event","navEl","isMobile","detail","drawer","_a","querySelector","navPanel","_b","drawerBody","panelContent","console","log","contains","removeChild","appendChild","handleResize","isVisible","hide","handleAlcHome","stopPropagation","homeEvent","alcHome","emit","defaultPrevented","preventDefault","componentDidRender","toMenuVariant","link","button","null","toInlineVariant","length","assignedElementsSlotSupport","slotSupport","assignedElements","Array","from","children","forEach","item","push","userMenu","slotUser","firstElementChild","menuSupport","createElement","logger","debug","replaceChildren","menu","supportGroup","role","separator","className","innerText","id","getUniqueId","setAttribute","variant","insertAdjacentElement","setTimeout","refresh","support","variation","componentDidLoad","observer","ResizeObserver","checkLayout","calcRequiredWidth","observe","render","name","report","tagName","toLowerCase","homeUrl","h","Host","key","class","ref","description","bind","supportWrapper","slotFixed","onClick","show","icon","label","style","overflowY","overflowX","scrollWidth","removeProperty","offsetWidth","fixedElementsVisible","slotElement","HTMLElement"],"sources":["src/components/alc-header/alc-header.css?tag=alc-header","src/components/alc-header/alc-header.tsx"],"sourcesContent":["[data-alc-theme=\"light\"] alc-header {\n  --bg-color-gradient-from: theme('colors.mint-cool.50');\n  --bg-color-gradient-to: theme('colors.blue-cool.70v');\n  --bg-color-logo: theme('colors.cyan.60');\n}\n\n[data-alc-theme=\"dark\"] alc-header {\n  --bg-color-gradient-from: theme('colors.mint-cool.80');\n  --bg-color-gradient-to: theme('colors.gray-cool.90');\n  --bg-color-logo: theme('colors.mint-cool.86');\n\n}\n\n/*\n  O ideal é deixar o mínimo de (ou nenhum) CSS aplicado diretamente à tag.\n  Entretanto, pela particularidade do posicionamento na página,\n  essa é uma solução razoável.\n*/\nalc-header {\n  @apply block sticky top-0 z-20;\n}\n\n.alc-header {\n  transition: transform 0.3s ease;\n}\n\n.alc-header--scroll-down {\n  @apply -translate-y-full md:translate-y-0;\n}\n\n.alc-header__header {\n  @apply block w-full md:z-[1020];\n}\n\n.alc-header__id {\n  @apply flex gap-[--alc-spacing-05];\n}\n\n.alc-header__container {\n  @apply bg-gradient-to-r from-0% to-100% flex items-center justify-between gap-[--alc-spacing-05];\n  @apply p-[--alc-spacing-05];\n  @apply from-[--bg-color-gradient-from] to-[--bg-color-gradient-to];\n}\n\n.alc-header__logo {\n  @apply w-9 h-9 lg:w-10 lg:h-10;\n}\n\n.alc-header__panel {\n  @apply flex grow items-center;\n}\n\n.alc-header__support-wrapper {\n  @apply grow text-right whitespace-nowrap;\n}\n\n.alc-header__support {\n  @apply inline-block;\n}\n\n.alc-header__menu-separator {\n  /* Texto */\n  @apply text-[--alc-color-text-subtle] text-xs uppercase font-bold tracking-widest;\n  /* Espaçamento */\n  @apply py-[--alc-spacing-04] px-[--alc-spacing-05];\n  /* Borda */\n  @apply border-t border-[--alc-color-border];\n}\n\n.alc-header__user {\n  /* Estabelece os valores que serão usados */\n  --padding: var(--alc-spacing-05);\n  --margin: var(--alc-spacing-05);\n  --border-width: theme('borderWidth.DEFAULT');\n  /* O \"blank space\" corresponde à soma de margem, borda e padding.\n      Isso serve para manter a largura total ocupada pelo elemento invariável,\n      independentemente se há ou não uma borda (aplicada por alc-header__user--separator)\n      - Com separador >>>> MMM|PPP[ELEMENTO] (sendo: M-margin, |-borda, P-padding)\n      - Sem separador >>>> BBBBBBB[ELEMENTO] (sendo: B-blank space)\n  */\n  --blank-space: calc( var(--margin) + var(--border-width) + var(--padding));\n\n  @apply hidden md:block ml-[--blank-space] text-white;\n}\n\n.alc-header__user--separator {\n  /* Necessário \"calc\" em border-l-[] para que tailwind interprete como width e não como color\n                                                ⤵⤵⤵⤵ */\n  @apply pl-[--padding] ml-[--margin] border-l-[calc(var(--border-width)*1)] border-l-white;\n}\n\n.alc-header__drawer-nav {\n  @apply md:hidden;\n}\n","import { Component, Element, Host, Listen, Prop, State, h, Event, EventEmitter } from '@stencil/core';\nimport screens from '../../../tailwind-screens';\nimport logger from '../utils/logger';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport { throttle } from '../utils/throttle';\n\n// Pega o valor definido da configuração do tailwind e remove o 'px'\nconst MOBILE_BREAKPOINT = Number(screens.sm.split('px')[0]);\nconst TABLET_BREAKPOINT = Number(screens.md.split('px')[0]);\n\n/**\n * @slot DEFAULT - Slot para skip-links, identificação do ambiente, etc.\n * @slot support - Slot para o conteúdo de apoio, como links de ajuda, contato etc.\n * @slot fixed - Slot para conteúdo fixo, como botões de ações rápidas.\n * @slot user - Slot para o menu de usuário.\n */\n@Component({\n  tag: 'alc-header',\n  styleUrl: 'alc-header.css',\n  scoped: false,\n})\nexport class AlcHeader {\n\n  private navPanel!: HTMLAlcNavPanelElement;\n\n  private slotSupport: HTMLSlotElement;\n  private slotFixed: HTMLSlotElement;\n  private slotUser: HTMLSlotElement;\n  private supportItems = [];\n  private userMenu: HTMLAlcUserMenuElement;\n  private supportWrapper: HTMLElement;\n  private support: HTMLElement;\n  private menuSupport: HTMLElement;\n  private wrapper: HTMLElement;\n  private drawer: HTMLAlcDrawerElement;\n  private observer: ResizeObserver;\n\n  private availableWidth = 0;\n  private requiredWidth = 0;\n\n  private scrollTop = 0;\n  private scrollDirection: 'up' | 'down' = null;\n\n  private resizeThrottle = throttle(this.resize, 300);\n\n  @Element() el!: HTMLElement;\n\n  @State() isDrawer: boolean = false;\n  @State() isSupportDropdown: boolean = false;\n  @State() needSeparator: boolean = false;\n  @State() isMenuCreated: boolean = false;\n\n\n  /**\n   * O nome do sistema.\n   */\n  @Prop({ reflect: true }) name!: string;\n\n  /**\n   * Descrição do sistema. Usualmente, o nome do sistema (se usada a sigla em \"name\"), descrição ou um complemento ao nome do sistema.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  /**\n   * URL para a página inicial do sistema.\n   */\n  @Prop({ reflect: true }) homeUrl!: string;\n\n  /**\n   * Evento disparado quando o usuário aciona o link para a página inicial.\n   * Executar `preventDefault()` evita que a navegação para a página inicial aconteça.\n   */\n  @Event({ eventName: 'alc-home' })\n  alcHome: EventEmitter<null>;\n\n  @Listen('scroll', { target: 'window' })\n  handleScroll() {\n    if( window.innerWidth >= TABLET_BREAKPOINT) return;\n\n    const currentScroll = window.pageYOffset || document.documentElement.scrollTop;\n    let currentDirection = this.scrollDirection; \n\n    if (currentScroll > this.scrollTop && currentDirection !== 'down' && currentScroll > this.el.clientHeight/2) {\n      // Scroll descendo, esconde\n      this.wrapper.classList.add('alc-header--scroll-down');\n      currentDirection = 'down'\n    } \n\n    if (currentScroll < this.scrollTop && currentDirection !== 'up') {\n      // Scroll subindo, mostra\n      currentDirection = 'up'\n      this.wrapper.classList.remove('alc-header--scroll-down');\n    }\n\n    this.scrollTop = currentScroll <= 0 ? 0 : currentScroll;\n    this.scrollDirection = currentDirection;\n  }\n\n  @Listen('alc-nav-content', { target: 'window' })\n  handleNavContent(event: CustomEvent<{ navEl: HTMLAlcNavElement; isMobile: boolean }>) {\n\n    const { navEl, isMobile } = event.detail;\n\n    // pega o drawer se ainda não pegou\n    const drawer = this.drawer ?? this.el.querySelector('alc-drawer');\n    // pega o nav-panel se ainda não pegou\n    const navPanel = this.navPanel ?? document.querySelector('alc-nav-panel');\n\n    if (!drawer || !navPanel) {\n      // ainda não inicializou completamente, sai sem fazer nada\n      return;\n    }\n\n    // PROCURA O BODY DO DRAWER, OU USA O PRÓPRIO drawer COMO BACKUP\n    const drawerBody = drawer.querySelector('.alc-drawer__header + div') || drawer;\n    const panelContent = navPanel.querySelector('.alc-nav-panel__content');\n\n    if (!drawerBody || !panelContent) {\n      return;\n    }\n\n    if (isMobile) {\n      // MODO MOBILE\n      console.log(\"É Mobile!\");\n      if (panelContent.contains(navEl)) {\n        panelContent.removeChild(navEl);\n      }\n      if (!drawerBody.contains(navEl)) {\n        drawerBody.appendChild(navEl);\n      }\n      navPanel.classList.add('alc-nav-panel--hidden');\n    } else {\n      // MODO DESKTOP\n      if (drawerBody.contains(navEl)) {\n        drawerBody.removeChild(navEl);\n      }\n      if (!panelContent.contains(navEl)) {\n        panelContent.appendChild(navEl);\n      }\n      navPanel.classList.remove('alc-nav-panel--hidden');\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.resizeThrottle();\n  }\n\n  private resize() {\n    // Se o drawer estiver aberto e a tela for maior que o breakpoint, fecha o drawer.\n    if( window.innerWidth >= TABLET_BREAKPOINT && this.drawer.isVisible) {\n      this.drawer.hide();\n    }\n  }\n\n  private handleAlcHome(event: CustomEvent) {\n    event.stopPropagation();\n\n    const homeEvent = this.alcHome.emit();\n    if (homeEvent.defaultPrevented) {\n      event.preventDefault();\n    };\n  }\n\n  componentDidRender() {\n    // Tabelas de conversão de variante\n    const toMenuVariant: Record<string | null, 'menu-link' | 'menu-item'> = {\n      link:        'menu-link',\n      'menu-link': 'menu-link',\n      button:      'menu-item',\n      'menu-item': 'menu-item',\n      null:        'menu-item',\n    };\n\n    const toInlineVariant: Record<string | null, 'link' | 'button'> = {\n      link:        'link',\n      'menu-link': 'link',\n      button:      'button',\n      'menu-item': 'button',\n      null:        'button',\n    };\n  \n  // Obtém os elementos do slot support\n  if (!this.supportItems.length) {\n      const assignedElementsSlotSupport = this.slotSupport.assignedElements();\n      if (assignedElementsSlotSupport.length > 0) {\n        Array.from(assignedElementsSlotSupport[0].children).forEach(item => {\n          this.supportItems.push(item);\n        });\n      }\n    }\n\n    if (!this.userMenu) {\n      this.userMenu = this.slotUser.assignedElements()[0].firstElementChild as HTMLAlcUserMenuElement;\n    }\n\n    if (!this.menuSupport) {\n      this.menuSupport = document.createElement('div');\n    }\n\n    logger.debug('header componentDidRender', this.supportItems, this.slotSupport.assignedElements());\n\n    // Remove filhos de menuSupport\n    this.menuSupport.replaceChildren();\n\n    /*\n      Dois casos em que o menu de apoio estará \"junto\" ao menu de usuário:\n      1. Quando não houver espaço para os itens de apoio lado a lado no header (isSupportDropdown)\n      2. Quando a navegação estiver contida no drawer - padrão para as telas menores (isDrawer)\n    */\n    if (this.isSupportDropdown || this.isDrawer) {\n\n      logger.debug('header createElement menu', this.supportItems);\n      const menu = this.userMenu.querySelector('alc-menu');\n\n      if (this.supportItems.length > 0) {\n        // Cria um grupo e um separador dentro dele. O separador dá nome ao grupo.\n        const supportGroup = document.createElement('div');\n        supportGroup.role = \"group\"\n\n        const separator = document.createElement('div');\n        // @TODO: Estruturar isso depois dentro de alc-menu (ou componentes relacionados)\n        separator.className = \"alc-header__menu-separator\";\n        separator.role = \"separator\";\n        separator.innerText = \"Menu de apoio\"\n        separator.id = getUniqueId();\n\n        supportGroup.appendChild(separator);\n        supportGroup.setAttribute('aria-labelledby', separator.id);\n\n        Array.from(this.supportItems).forEach(item => {\n          // @ts-ignore\n          item.variant = toMenuVariant[item.variant];\n          // @ts-ignore\n          supportGroup.appendChild(item);\n        });\n\n        logger.debug('header insertElement menu', this.supportItems, supportGroup);\n\n        this.menuSupport.appendChild(supportGroup);\n        menu.insertAdjacentElement('beforeend', this.menuSupport);\n      }\n      // @TODO: Encontrar solução mais robusta do que um timeout.\n      setTimeout(() => {\n        logger.debug('menu.refresh()');\n        menu.refresh();\n      }, 100);\n\n    }\n    else {\n      Array.from(this.supportItems).forEach(item => {\n        // @ts-ignore\n        item.variant = toInlineVariant[item.variant];\n        // @ts-ignore\n        this.support.appendChild(item);\n      });\n    }\n\n    if (this.isDrawer) {\n      this.userMenu.variation = 'mobile';\n      this.drawer.insertAdjacentElement('beforeend', this.userMenu);\n      // @TODO: Aqui criou-se uma dependência da estrutura interna do dropdown\n      // a necessidade especificar a classe alc-drawer__header.\n      // Isso é um ponto de atenção e que merecer ser revisto para uma solução mais robusta.\n      this.drawer.querySelector('.alc-drawer__header + div').insertAdjacentElement('afterbegin', this.userMenu);\n    }\n    else {\n      this.userMenu.variation = 'desktop';\n      this.slotUser.assignedElements()[0].insertAdjacentElement('beforeend', this.userMenu);\n    }\n\n    logger.debug(this.supportItems);\n  }\n\n  componentDidLoad() {\n\n    // ref ao drawer já existente no template\n    this.drawer = this.el.querySelector('alc-drawer')!;\n    // nav-panel está em outro lugar do DOM\n    this.navPanel = document.querySelector('alc-nav-panel')!;\n\n    this.observer = new ResizeObserver(() => {\n      this.checkLayout();\n    });\n\n    // @TODO: Encontrar solução mais robusta do que um timeout.\n    setTimeout(() => {\n      this.calcRequiredWidth();\n      this.observer.observe(this.el);\n    }, 100);\n\n  }\n\n  render() {\n      this.name ?? logger.report('name', this.el.tagName.toLowerCase(), this.el);\n      this.homeUrl ?? logger.report('homeUrl', this.el.tagName.toLowerCase(), this.el);\n\n    return (\n      <Host>\n\n        <div class=\"alc-header\" ref={(el: HTMLElement) => this.wrapper = el}>\n          <header class=\"alc-header__header\">\n\n          <slot></slot>\n          <slot name=\"support\" ref={(el: HTMLSlotElement) => this.slotSupport = el} ></slot>\n\n            <div class=\"alc-header__container\">\n\n              <div class=\"alc-header__id\">\n                <alc-header-id\n                  name={this.name} \n                  description={this.description} \n                  homeUrl={this.homeUrl}\n                  onAlc-home={this.handleAlcHome.bind(this)}\n                >\n                </alc-header-id>\n              </div>\n\n              <div class=\"alc-header__panel\">\n\n                <div\n                  class=\"alc-header__support-wrapper\"\n                  ref={el => this.supportWrapper = el}\n                >\n                  <div\n                    class=\"alc-header__support\"\n                    ref={el => this.support = el}\n                  >\n                  </div>\n                </div>\n\n                <div class=\"alc-header__fixed\">\n                  <slot name=\"fixed\" ref={(el: HTMLSlotElement) => this.slotFixed = el}></slot>\n                </div>\n\n                {/* Mostrado por padrão em telas pequenas, onde se usa o drawer */}\n                <div class=\"alc-header__drawer-nav\">\n                  <button\n                    class=\"alc-header-button\"\n                    onClick={() => this.drawer.show()}\n                    data-alc-header-drawer-button\n                    >\n                    <alc-icon icon=\"list\" label=\"Abrir navegação\" class=\"alc-header-button__icon\"></alc-icon>\n                  </button>\n\n                  <alc-drawer ref={(el: HTMLAlcDrawerElement) => this.drawer = el}>\n                  </alc-drawer>\n\n                </div>\n\n                {/* Mostrado em telas maiores, onde se usa o dropdown de usuário */}\n                <div \n                  class={{\n                    'alc-header__user': true,\n                    'alc-header__user--separator': this.needSeparator\n                  }}\n                >\n                  <slot name=\"user\" ref={(el: HTMLSlotElement) => this.slotUser = el} ></slot>\n                </div>\n              </div>\n            </div>\n          </header>\n        </div>\n\n      </Host>\n    );\n  }\n\n  private calcRequiredWidth() {\n\n    // Altera overflow-y para \"hidden\" para fazer a medição\n    this.supportWrapper.style.overflowY = 'hidden';\n    this.supportWrapper.style.overflowX = 'clip';\n\n    this.requiredWidth = this.support.scrollWidth;\n\n    this.supportWrapper.style.removeProperty('overflow-x');\n    this.supportWrapper.style.removeProperty('overflow-y');\n  }\n\n  private checkLayout() {\n\n    // Altera overflow-y para \"hidden\" para fazer a medição\n    this.supportWrapper.style.overflowY = 'hidden';\n    this.supportWrapper.style.overflowX = 'clip';\n\n    this.availableWidth = this.supportWrapper.offsetWidth;\n    this.isSupportDropdown = (this.requiredWidth > this.availableWidth) || (window.innerWidth < MOBILE_BREAKPOINT);\n\n    this.supportWrapper.style.removeProperty('overflow-x');\n    this.supportWrapper.style.removeProperty('overflow-y');\n\n    this.isDrawer = window.innerWidth < TABLET_BREAKPOINT;\n\n    this.needSeparator = this.fixedElementsVisible() || (this.requiredWidth > 0 && !this.isSupportDropdown);\n  }\n\n  private fixedElementsVisible(): boolean {\n    const slotElement = this.slotFixed.assignedElements()[0];\n    // O slot foi usado\n    if (slotElement instanceof HTMLElement) {\n      // True se está ocupando alguma largura (ou seja, se tem algo visível)\n      return (slotElement.offsetWidth > 0);\n    }\n    return false;\n  }\n}"],"mappings":"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","ignoreList":[]}