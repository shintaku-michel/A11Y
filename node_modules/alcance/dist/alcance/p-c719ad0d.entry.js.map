{"version":3,"names":["alcTooltipCss","AlcTooltip","constructor","hostRef","this","contentId","hasClickedOrFocused","active","content","placement","trigger","strategy","show","defaultPrevented","alcShow","emit","from","hide","alcHide","watchActive","alcAfterShow","alcAfterHide","handleKeyDown","event","key","preventDefault","_a","anchorEl","focus","handleHide","handleFocus","hasTrigger","opened","handleShow","handleBlur","closed","handleMouseOver","handleMouseOut","handleClick","componentWillLoad","getUniqueId","componentDidLoad","anchorSlot","el","assignedElements","HTMLElement","setAttribute","type","triggerType","triggers","split","includes","render","h","Host","shift","flip","distance","arrow","role","Object","assign","slot","test","name","ref","class","id"],"sources":["src/components/alc-tooltip/alc-tooltip.css?tag=alc-tooltip","src/components/alc-tooltip/alc-tooltip.tsx"],"sourcesContent":["[data-alc-theme=\"dark\"] alc-tooltip {\n  --bg-color: var(--alc-color-neutral-90);\n}\n\n[data-alc-theme=\"light\"] alc-tooltip {\n  --bg-color: var(--alc-color-neutral-5);\n}\n\n.alc-tooltip__content {\n  @apply px-2 py-1 rounded-sm bg-[--bg-color] text-[--alc-color-text-secondary] border border-[--alc-color-border] text-sm;\n  width: fit-content;\n}\n\n/* Estilização para arrow */\nalc-tooltip .alc-popup__arrow {\n  /* width e height devem ser iguais */\n  --arrow-size: var(--alc-spacing-03);\n\n  @apply bg-[--bg-color] w-[--arrow-size] h-[--arrow-size] border-[--alc-color-border];\n  border-bottom-width: var(--alc-border-width);\n  border-right-width: var(--alc-border-width);\n}","import { Component, Host, Prop, h, Method, Event, EventEmitter, Watch, Listen } from '@stencil/core';\nimport { PopupPlacement } from '../alc-popup/alc-popup';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-tooltip',\n  styleUrl: 'alc-tooltip.css',\n  shadow: false\n})\nexport class AlcTooltip {\n  contentId: string = null;\n  anchorSlot: HTMLSlotElement;\n  anchorEl: HTMLElement;\n  hasClickedOrFocused: boolean = false;\n\n  /**\n  * Indica se o tooltip esta ativo ou não. Pode-se usar essa propriedade em vez dos métodos show/hide.\n  */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n  * Indica o conteudo textual do tooltip. Pode-se usar o slot em vez dessa propriedade.\n  */\n  @Prop({ reflect: true }) content: string = null;\n\n  /**\n  * Define o posicionamento do tooltip.\n  */\n  @Prop({ reflect: true }) placement: PopupPlacement = 'top';\n\n  /**\n  * Define como o tooltip vai ser ativado. Pode ser: `click` , `hover` , `focus` e/ou `manual`. Pode adicionar mais de um, separando por espaço. Ex.: 'hover focus'.\n  */\n  @Prop({ reflect: true }) trigger: string = 'hover focus';\n\n  /**\n  * Define o posicionamento do tooltip.\n  */\n  @Prop({ reflect: true }) strategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n   * Exibe o tooltip.\n   * @returns O valor retornado é `true` se o tooltip foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.active) return false;\n\n    const { defaultPrevented } = this.alcShow.emit({from: 'method'});\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.active = true;\n    return true;\n  }\n\n  /**\n  * Fecha o tooltip.\n  * @returns O valor retornado é `true` se o tooltip foi realmente dispensado com essa chamada ao método.\n  */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.active) return false;\n\n    const { defaultPrevented } = this.alcHide.emit({from: 'method'});\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.active = false;\n    return true;\n  }\n\n  /**\n  * Evento disparado quando o tooltip vai abrir\n  */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcShow: EventEmitter<{\n    from: 'click' | 'hover' | 'focus' | 'method';\n  }>;;\n\n  /**\n  * Evento disparado quando o tooltip abriu\n  */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n  * Evento disparado quando o tooltip vai fechar.\n  */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<{\n    from: 'click' | 'hover' | 'focus' | 'keyboard' | 'method';\n  }>;\n\n  /**\n  * Evento disparado quando o tooltip fechou.\n  */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  @Watch('active')\n  watchActive(active: boolean) {\n    if (active) {\n      // Show\n      this.alcAfterShow.emit();\n    } else {\n      // Hide\n      this.alcAfterHide.emit();\n    }\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    if(event.key === 'Escape') {\n      event.preventDefault();\n      this.anchorEl?.focus();\n      this.handleHide('keyboard');\n    }\n  }\n\n  @Listen('focus', { capture: true })\n  handleFocus() {\n    if (!this.hasTrigger('focus')) return;\n\n    const opened = this.handleShow('focus');\n    if (opened) this.hasClickedOrFocused = true;\n  }\n\n  @Listen('blur', { capture: true })\n  handleBlur() {\n    if (!this.hasTrigger('focus')) return;\n\n    const closed = this.handleHide('focus');\n    if (closed) this.hasClickedOrFocused = false;\n  }\n\n  @Listen('mouseover')\n  handleMouseOver() {\n    if(!this.hasTrigger('hover')) return;\n    this.handleShow('hover');\n  }\n\n  @Listen('mouseout')\n  handleMouseOut() {\n    if(!this.hasTrigger('hover')) return;\n\n    // Verifica se ja foi aberto por click ou foco para não fechar com hover\n    if (this.hasClickedOrFocused) return;\n    \n    this.handleHide('hover');\n  }\n\n  @Listen('click')\n  handleClick() {\n    if(!this.hasTrigger('click')) return;\n\n    if(this.active) {\n      // Hide\n      const closed = this.handleHide('click');\n      if (closed) this.hasClickedOrFocused = false;\n    } else {\n      // Show\n      const opened = this.handleShow('click');\n      if (opened) this.hasClickedOrFocused = true;\n    }\n  }\n\n  componentWillLoad() {\n    this.contentId = getUniqueId();\n  }\n\n  componentDidLoad() {\n    if(this.anchorSlot) {\n      const el = this.anchorSlot.assignedElements()[0];\n      if (el instanceof HTMLElement) {\n        this.anchorEl = el;\n        this.anchorEl.setAttribute('aria-describedby', this.contentId);\n        this.anchorEl.setAttribute('tabindex', '0');\n      }\n    }\n  }\n\n  async handleHide(type: 'click' | 'hover' | 'focus' | 'keyboard') {\n    const { defaultPrevented } = this.alcHide.emit({from: type});\n    let closed = false;\n\n    if(!defaultPrevented) {\n      closed = await this.hide();\n    }\n\n    return closed;\n  }\n\n  async handleShow(type: 'click' | 'hover' | 'focus' ) {\n    const { defaultPrevented } = this.alcShow.emit({from: type});\n    let opened = false;\n\n    if(!defaultPrevented) {\n      opened = await this.show();\n    }\n    \n    return opened;\n  }\n\n  hasTrigger(triggerType: string) {\n    const triggers = this.trigger.split(' ');\n    return triggers.includes(triggerType);\n  }\n\n  render() {\n    return (\n      <Host>\n        <alc-popup\n          active={this.active}\n          placement={this.placement}\n          shift\n          flip\n          distance={8}\n          arrow\n          role=\"tooltip\"\n          strategy={this.strategy}\n        >\n          <div slot=\"anchor\" {...test('data-test-trigger')}>\n            <slot name=\"trigger\" ref={(el: HTMLSlotElement) => this.anchorSlot = el}/>\n          </div>\n\n          <div class=\"alc-tooltip__content\" id={this.contentId} {...test('data-test-content')}>\n            <slot>{this.content}</slot>\n          </div>\n        </alc-popup>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}