{"version":3,"names":["childText","element","slice","call","childNodes","filter","node","nodeType","Node","TEXT_NODE","map","nodeValue","trim","join","createIcon","name","label","icon","document","createElement","setAttribute","alcNavCss","AlcNav","openPanel","panel","logger","debug","closest","current","Array","from","this","panels","children","matches","classList","add","remove","child","forEach","p","removeAttribute","parent","querySelector","dataset","alcParent","focusableItems","el","querySelectorAll","focus","listitems","item","id","closePanel","togglePanel","listItem","parentElement","contains","setSelectedItem","setSelected","listitem","menu","li","initMenu","getUniqueId","append","initPanel","initPanels","addEventListener","e","href","_b","_a","target","getAttribute","preventDefault","err","capture","initNavbar","listview","initListview","main","header","footer","some","parentListitem","parentPanel","navbar","prev","parentLabel","labelText","opener","title","innerHTML","prepend","previous","previousElementSibling","hasLabel","wrapper","insertBefore","initListitem","hasAttribute","text","subpanel","initSubPanel","alcChild","role","button","nextElementSibling","initOpened","selectedListItem","observeNavLinks","links","link","observer","MutationObserver","mutations","mutation","attributeName","observe","attributes","attributeFilter","componentDidLoad","isMobile","window","innerWidth","emitNavContent","componentDidRender","componentWillLoad","handleWindowResize","nowMobile","dispatchEvent","CustomEvent","detail","navEl","bubbles","composed","handleKeyDown","event","currentPanel","isSubPanel","key","backButton","click","render","h","Host","class","ref"],"sources":["src/components/utils/domUtils.ts","src/components/alc-nav/alc-nav.css?tag=alc-nav","src/components/alc-nav/alc-nav.tsx"],"sourcesContent":["export function childText(element: HTMLElement): string {\n    return element\n      ? [].slice.call(element.childNodes)\n        .filter(node => node.nodeType === Node.TEXT_NODE)\n        .map(node => node.nodeValue.trim())\n        .join(' ')\n      : '';\n  }\n  \n  export function createIcon(name: string, label?: string): HTMLAlcIconElement {\n    const icon = document.createElement('alc-icon');\n    icon.setAttribute('name', name);\n    icon.setAttribute('label', label ? label : '');\n    return icon;\n  }","alc-nav {\n  display: block;\n  --spacing-x: var(--alc-spacing-06);\n  --border-width-selected: var(--alc-spacing-03);\n  --border-color-selected: var(--alc-color-neutral-50);\n  --padding-left-selected: calc(var(--spacing-x) - var(--border-width-selected));\n}\n\n[data-alc-theme=\"light\"] alc-nav {\n  --icon-color: var(--alc-color-neutral-50);\n  --bg-color-selected: var(--alc-color-neutral-10);\n}\n\n[data-alc-theme=\"dark\"] alc-nav {\n  --icon-color: var(--alc-color-neutral-40);\n  --bg-color-selected: var(--alc-color-neutral-90);\n}\n\n.alc-nav__panel {\n  @apply hidden;\n}\n\n.alc-nav__panel--subpanel {\n  @apply py-4;\n}\n\n.alc-nav__panel.is-open {\n  @apply block;\n}\n\n.alc-nav__header {\n  @apply py-4;\n  @apply border-b border-[--alc-color-neutral-40];\n}\n\n.alc-nav__main {\n  @apply py-4;\n}\n\n\n.alc-nav__footer {\n  @apply py-4;\n  @apply border-t border-[--alc-color-neutral-40];\n}\n\n.alc-nav__label-wrapper {\n  @apply px-[--spacing-x] mt-6;\n}\n.alc-nav__label {\n  @apply uppercase font-bold text-xs tracking-[0.15rem] text-[--alc-color-text-3] dark:text-[--alc-color-text-2];\n\n}\n\n.alc-nav__listview {\n  @apply mt-2;\n}\n\n.alc-nav__listview--labelled {\n  @apply mt-4;\n}\n\n\n.alc-nav__listitem {\n  @apply flex gap-2 items-center;\n}\n\n.alc-nav__text {\n  @apply w-full text-[--alc-color-link-text] px-[--spacing-x] py-4;\n  @apply hover:text-[--alc-color-text-2] dark:hover:text-[--alc-color-text-0];\n  @apply hover:bg-[--alc-color-neutral-5] dark:hover:bg-[--alc-color-neutral-80];\n}\n\n.alc-nav__listitem.is-selected .alc-nav__text {\n  @apply border-l-[--border-color-selected] bg-[--bg-color-selected] pl-[--padding-left-selected];\n  border-left-width: var(--border-width-selected);\n  @apply hover:bg-[--alc-color-neutral-5] dark:hover:bg-[--alc-color-neutral-80];\n}\n\n.alc-nav__navbar {\n  @apply flex items-center mx-[--spacing-x];\n}\n\n.alc-nav__navbar-title {\n  @apply text-center grow font-medium uppercase text-[--alc-color-text-3] dark:text-[--alc-color-text-0];\n}\n\n.alc-nav__button--next {\n  @apply flex gap-2 justify-between items-center;\n}\n\n.alc-nav__icon--next {\n  @apply text-[--icon-color];\n}\n\n.alc-nav__icon--prev {\n  @apply text-4xl text-[--alc-color-link-text];\n}\n","import { Component, Element, Host, h, Method, Listen } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport { childText, createIcon } from '../utils/domUtils';\n\n/**\n * @slot DEFAULT - Slot para o conteúdo principal do nav. Tipicamente, os elementos de navegação pelas funcionalidades do sistema.\n * @slot footer - Slot nomeado para adicionar rodapé no nav. Tipicamente, os elementos de navegação acessórios e configurações, incluindo o seletor de tema.\n * @slot header - Slot nomeado para adicionar cabeçalho no nav. Tipicamente, a identificação do usuário logado no sistema.\n */\n@Component({\n  tag: 'alc-nav',\n  styleUrl: 'alc-nav.css',\n  scoped: false,\n})\nexport class AlcNav {\n\n  @Element() el: HTMLAlcNavElement;\n\n  private isMobile: boolean;\n\n  menu: HTMLElement;\n  panels: HTMLElement;\n\n  header: HTMLElement;\n  main: HTMLElement;\n  footer: HTMLElement;\n\n  // Lista de itens que podem receber foco no momento\n  focusableItems: HTMLElement[];\n\n  openPanel(panel: HTMLElement) {\n    if (!panel) {\n      return;\n    }\n\n    logger.debug('open', { panel });\n\n    panel = panel.closest('.alc-nav__panel') as HTMLElement;\n\n    // Identifica o painel que está aberto atualmente.\n    const current = Array.from(this.panels.children).filter(panel => panel.matches('.is-open'))[0] as HTMLElement;\n\n    // Mantém painel por cima enquanto está sendo fechado\n    if (panel.matches('.alc-nav__panel--parent') && current) {\n      current.classList.add('alc-nav__panel--highest');\n    }\n\n    const remove = ['is-open', 'mm-panel--parent'];\n    const add = [];\n\n    Array.from(this.panels.children)\n      .filter(child => child.matches('.alc-nav__panel'))\n      .forEach(p => {\n        p.classList.add(...add);\n        p.classList.remove(...remove);\n\n        if (p !== current) {\n          p.classList.remove('alc-nav__panel--highest');\n        }\n\n        if (p === panel) {\n          p.removeAttribute('inert');\n        } else {\n          p.setAttribute('inert', 'true');\n        }\n      });\n\n    // Abre novo painel.\n    panel.classList.add('is-open');\n\n    // Painel pai\n    let parent: HTMLElement = this.panels.querySelector(`#${panel.dataset.alcParent}`);\n\n    // Ajusta painéis pais como \"parent\"\n    while (parent) {\n      parent = parent.closest('.alc-nav__panel') as HTMLElement;\n      parent.classList.add('alc-nav__panel--parent');\n\n      parent = this.panels.querySelector(`#${parent.dataset.alcParent}`);\n    }\n\n    // Todos os links do painel aberto são considerados agora focáveis.\n    this.focusableItems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listview a'));\n    // Coloca o primeiro link do painel aberto na sequência de tabulação\n    this.focusableItems[0].focus();\n\n    // Se estiver \"voltando\" de um painel em um nível abaixo na hierarquia,\n    // coloca o foco no link que abriu esse painel.\n    const listitems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listitem'));\n    listitems.forEach((item: HTMLElement) => {\n      if (item.id === current?.dataset.alcParent) {\n        logger.debug('focus on', item, item.id);\n        item.querySelector('a').focus();\n      }\n    });\n  }\n\n  closePanel(panel: HTMLElement) {\n    logger.debug('close', { panel });\n  }\n\n  /**\n   * Abre ou fecha o painel especificado pelo parâmetro.\n   */\n  @Method()\n  async togglePanel(panel: HTMLElement) {\n    const listItem = panel.parentElement;\n\n    if (listItem.classList.contains('is-open')) {\n      logger.debug('will close', panel);\n      this.closePanel(panel);\n    } else {\n      logger.debug('will open', panel);\n      this.openPanel(panel);\n    }\n  }\n\n  /**\n   * Seleciona o item passado pelo parâmetro. Se nenhum valor for passado, apenas remove o item atualmente selecionado.\n   */\n  @Method()\n  async setSelectedItem(listItem?: HTMLElement) {\n    // Remove a classe 'is-selected' e a propriedade 'data-alc-selected' de qualquer item\n    this.el.querySelectorAll('.alc-nav__listitem.is-selected').forEach(item => {\n      item.classList.remove('is-selected');\n      item.removeAttribute('data-alc-selected');\n    });\n\n    if (listItem) {\n      // Adiciona a classe 'is-selected' e a propriedade 'data-alc-selected' ao item passado como parâmetro\n      listItem.classList.add('is-selected');\n      listItem.setAttribute('data-alc-selected', 'true');\n    }\n  }\n\n  setSelected(listitem: HTMLElement) {\n    this.menu.querySelectorAll('.alc-nav__listitem--selected').forEach(li => {\n      li.classList.remove('alc-nav__listitem--selected');\n    });\n\n    listitem.classList.add('alc-nav__listitem--selected');\n  }\n\n  initMenu() {\n    this.menu.id = this.menu.id || getUniqueId();\n\n    const panels = Array.from((this.menu.children)).filter(child => child.matches('[data-alc-panel]')) as HTMLElement[];\n\n    logger.debug({ panels });\n\n    this.panels = document.createElement('div');\n    this.panels.classList.add('alc-nav__panels');\n    this.menu.append(this.panels);\n\n    panels.forEach(panel => {\n      this.initPanel(panel);\n    });\n  }\n\n  initPanels() {\n    this.menu.addEventListener('click', e => {\n      const href = (e.target as HTMLElement)?.closest('a[href]')?.getAttribute('href') || '';\n\n      if (href.slice(0, 1) === '#') {\n        try {\n          const panel = this.el.querySelector(href) as HTMLElement;\n\n          if (panel) {\n            e.preventDefault();\n            this.togglePanel(panel);\n          }\n        } catch (err) {}\n      }\n    }, {\n      capture: true\n    });\n  }\n\n  initPanel(panel: HTMLElement): HTMLElement {\n    if (panel.matches('.alc-nav__panel')) {\n      return;\n    }\n\n    logger.debug({ panel });\n\n    panel.id = panel.id || getUniqueId();\n\n    panel.classList.add('alc-nav__panel');\n\n    this.panels.append(panel);\n\n    this.initNavbar(panel);\n\n    Array.from(panel.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n\n    Array.from(this.main.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n\n    if(this.header?.children) {\n      Array.from(this.header.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n    }\n\n    if(this.footer?.children) {\n      Array.from(this.footer.children)\n      .filter(element => element.matches('ol, ul'))\n      .forEach((listview: HTMLElement) => {\n        this.initListview(listview);\n      });\n    }\n\n    return panel;\n  }\n\n  initNavbar(panel: HTMLElement) {\n    if (Array.from(panel.children).some(child => child.matches('.alc-nav__navbar'))) {\n      return;\n    }\n\n    let parentListitem: HTMLElement = null;\n\n    let parentPanel: HTMLElement = null;\n\n    if (panel.dataset.alcParent) {\n      parentListitem = this.panels.querySelector(`#${panel.dataset.alcParent}`);\n      parentPanel = parentListitem.closest('.alc-nav__panel');\n\n      while (parentPanel.closest('.alc-nav__listitem')) {\n        parentPanel = parentPanel.parentElement.closest('.alc-nav__panel');\n      }\n    }\n\n    const navbar = document.createElement('div');\n    navbar.classList.add('alc-nav__navbar');\n\n    if (parentPanel) {\n      const prev = document.createElement('a');\n\n      prev.classList.add(\n        'alc-nav__button',\n        'alc-nav__button--prev',\n      );\n\n      const parentLabel = childText(parentPanel.querySelector('.alc-nav__navbar-title'));\n      const labelText = parentLabel ? `Voltar para ${parentLabel}` : 'Voltar para navegação principal';\n\n      const icon = createIcon('arrow-left-short', labelText);\n      icon.classList.add('alc-nav__icon--prev');\n\n      prev.href = `#${parentPanel.id}`;\n\n      prev.append(icon);\n      navbar.append(prev);\n    } else {\n      return;\n    }\n\n    let opener: HTMLElement = null;\n\n    if (parentListitem) {\n      opener = Array.from(parentListitem.children).filter(child => child.matches('.alc-nav__text'))[0] as HTMLElement;\n    } else if (parentPanel) {\n      opener = parentPanel.querySelector(`a[href=#${panel.id}]`);\n    }\n\n    const title = document.createElement('span');\n    title.classList.add('alc-nav__navbar-title');\n    title.innerHTML = childText(opener) || '';\n\n    panel.prepend(navbar);\n    navbar.append(title);\n  }\n\n  initListview(listview: HTMLElement) {\n    if (listview.matches('.alc-nav__listview')) {\n      return;\n    }\n\n    listview.classList.add('alc-nav__listview');\n\n    const previous = listview.previousElementSibling as HTMLElement;\n    const hasLabel = previous ? 'alcLabel' in previous.dataset : false;\n    if (hasLabel) {\n      listview.classList.add('alc-nav__listview--labelled');\n\n      const wrapper = document.createElement('div');\n      wrapper.classList.add('alc-nav__label-wrapper');\n      listview.parentElement.insertBefore(wrapper, previous);\n      wrapper.insertBefore(previous, null);\n\n      previous.classList.add('alc-nav__label');\n      previous.id = previous.id || getUniqueId();\n      listview.setAttribute('aria-labelledby', previous.id);\n    }\n\n    Array.from(listview.children).forEach((listitem: HTMLElement) => {\n      this.initListitem(listitem);\n    });\n  }\n\n  initListitem(listitem: HTMLElement) {\n    if (listitem.matches('.alc-nav__listitem')) {\n      return;\n    }\n\n    listitem.classList.add('alc-nav__listitem');\n\n    if (listitem.hasAttribute('data-alc-selected')) {\n      listitem.classList.add('is-selected');\n    }\n\n    Array.from(listitem.children)\n      .filter(element => element.matches('a, span'))\n      .forEach(text => text.classList.add('alc-nav__text'));\n\n    Array.from(listitem.children)\n      .filter(element => element.matches('[data-alc-panel]'))\n      .forEach((subpanel: HTMLElement) => this.initSubPanel(subpanel));\n  }\n\n  initSubPanel(subpanel: HTMLElement) {\n    if (subpanel.matches('.alc-nav__panel')) {\n      return;\n    }\n\n    const listitem = subpanel.parentElement;\n\n    listitem.id = listitem.id || getUniqueId();\n    subpanel.id = subpanel.id || getUniqueId();\n\n    listitem.dataset.alcChild = subpanel.id;\n    subpanel.dataset.alcParent = listitem.id;\n\n    subpanel.role = \"dialog\";\n    subpanel.setAttribute('aria-labelledby', listitem.id);\n    subpanel.classList.add('alc-nav__panel--subpanel');\n\n    let button = Array.from(listitem.children).filter(child => child.matches('.alc-nav__button'))[0] as HTMLAnchorElement;\n\n    if (!button) {\n      button = document.createElement('a');\n      button.classList.add('alc-nav__button', 'alc-nav__button--next');\n      button.setAttribute('aria-expanded', 'false');\n    }\n\n    const icon = createIcon('chevron-right');\n    icon.setAttribute('aria-hidden', 'true');\n    icon.classList.add('alc-nav__icon--next');\n\n    Array.from(listitem.children)\n      .filter(child => child.matches('a, span'))\n      .forEach(text => {\n        if (text.matches('span')) {\n          button.classList.add('alc-nav__text');\n          button.innerHTML = text.innerHTML;\n          listitem.insertBefore(button, text.nextElementSibling);\n          text.remove();\n        } else {\n          listitem.insertBefore(button, text.nextElementSibling);\n        }\n      });\n\n    button.href = `#${subpanel.id}`;\n    button.append(icon);\n\n    this.initPanel(subpanel);\n  }\n\n  initOpened() {\n    const listitem: HTMLElement = this.panels.querySelector('.alc-nav__listitem--selected');\n    let panel: HTMLElement = this.panels.querySelector('.alc-nav__panel');\n\n    if (listitem) {\n      this.setSelected(listitem);\n      panel = listitem.closest('.alc-nav__panel');\n    }\n\n    // Verificar se há um item com o atributo data-alc-selected\n    const selectedListItem = this.el.querySelector('.alc-nav__listitem[data-alc-selected]') as HTMLElement;\n    if (selectedListItem) {\n      this.setSelectedItem(selectedListItem);\n    }\n\n    this.openPanel(panel);\n  }\n\n  observeNavLinks() {\n    // Seleciona os links que estão dentro de uma listview\n    const links = Array.from(\n      this.el.querySelectorAll('.alc-nav__listview a, .alc-nav__listview router-link')\n    );\n  \n    links.forEach(link => {\n      // Cria um observer para monitorar mudanças no atributo 'class'\n      const observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (mutation.attributeName === 'class') {\n            // Se a classe 'alc-nav__text' não estiver presente, adiciona novamente\n            if (!link.classList.contains('alc-nav__text')) {\n              link.classList.add('alc-nav__text');\n            }\n          }\n        });\n      });\n  \n      observer.observe(link, {\n        attributes: true,\n        attributeFilter: ['class'],\n      });\n    });\n  }\n\n  componentDidLoad() {\n    // dispara uma vez no carregamento\n    this.isMobile = window.innerWidth < 768;\n    this.emitNavContent(this.isMobile);\n  }\n\n  componentDidRender() {\n    this.initMenu();\n    this.initPanels();\n    this.initOpened();\n\n    this.focusableItems = Array.from(this.el.querySelectorAll('.alc-nav__panel.is-open .alc-nav__listview a'));\n\n    // Força a classe 'alc-nav__text' nos links mesmo após alterações\n    this.observeNavLinks();\n  }\n\n  componentWillLoad() {\n    this.header = this.el.querySelector(\"[slot='header']\");\n    this.footer = this.el.querySelector(\"[slot='footer']\");\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleWindowResize() {\n    const nowMobile = window.innerWidth < 768;\n    if (nowMobile !== this.isMobile) {\n      this.isMobile = nowMobile;\n      this.emitNavContent(this.isMobile);\n    }\n  }\n\n  private emitNavContent(isMobile: boolean) {\n    this.el.dispatchEvent(new CustomEvent('alc-nav-content', {\n      detail: { navEl: this.el, isMobile },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    const currentPanel = Array.from(this.panels.children).filter(panel => panel.matches('.is-open'))[0] as HTMLElement;\n    const isSubPanel = currentPanel?.hasAttribute('data-alc-parent');\n    if (event.key === 'Escape' && isSubPanel) {\n      const backButton = currentPanel.querySelector('.alc-nav__button--prev') as HTMLElement;\n      if (backButton) {\n        backButton.click();\n      }\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <Host class={{ 'alc-nav': true, 'alc-nav__wrapper': true }}>\n        <nav ref={el => this.menu = el} class=\"alc-nav__menu\">\n          <div data-alc-panel>\n            {this.header ? (\n              <div class=\"alc-nav__header\">\n                <slot name=\"header\"></slot>\n              </div>\n            ) : null}\n            <div class=\"alc-nav__main\" ref={el => this.main = el}>\n              <slot></slot>\n            </div>\n            {this.footer ? (\n              <div class=\"alc-nav__footer\">\n                <slot name=\"footer\"></slot>\n              </div>\n            ) : null}\n          </div>\n        </nav>\n      </Host>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}