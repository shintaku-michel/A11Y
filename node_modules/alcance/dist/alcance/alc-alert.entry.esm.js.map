{"version":3,"file":"alc-alert.entry.esm.js","sources":["src/components/alc-alert/alc-alert.core.ts","src/core/alc.ts","src/components/alc-alert/alc-alert-base.css?tag=alc-alert&mode=base","src/components/alc-alert/alc-alert.css?tag=alc-alert&mode=theme","src/components/alc-alert/alc-alert.tsx"],"sourcesContent":["import { AnyFunction, Type } from './index';\nimport logger from '../utils/logger';\n\nconst noop: AnyFunction = () => {};\n\nconst setup = (value, domain = [], defaultValue) => {\n\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  if (!domain.includes(value)) {\n    logger.warn(`\"${value}\" não é um valor válido; usando o valor padrão \"${defaultValue}\"`);\n    return defaultValue;\n  }\n\n  return value;\n}\n\nconst domains = {\n  type: ['info', 'warning', 'error', 'success'],\n  dismissible: [true, false],\n  visible: [true, false]\n}\n\nconst defaults = {\n  type: 'info' as Type,\n  dismissible: true,\n  visible: true\n}\n\nconst setupType = value => setup(value, domains.type, defaults.type);\nconst setupDismissible = value => setup(value, domains.dismissible, defaults.dismissible)\nconst setupVisible = value => setup(value, domains.visible, defaults.visible);\n\nclass AlertCore {\n\n  // Tipo do alert\n  type: Type = 'info';\n  // Indica se o alert pode ou não ser dispensado\n  dismissible = true;\n  // Indica se o alerta está ou não visível\n  visible = true;\n  // Ajusta a visibilidade do alert\n  setVisible: AnyFunction = noop;\n  // Dispara o evento alc-hide\n  dispatchHide: AnyFunction = noop;\n  // Dispara o evento alc-after-hide\n  dispatchAfterHide: AnyFunction = noop;\n\n  constructor({\n    type = defaults.type,\n    dismissible = defaults.dismissible,\n    visible = defaults.visible,\n    dispatchHide = noop,\n    dispatchAfterHide = noop,\n    setVisible = noop\n  }) {\n\n    this.type = setupType(type);\n    this.dismissible = setupDismissible(dismissible);\n    this.dispatchAfterHide = dispatchAfterHide;\n    this.dispatchHide = dispatchHide;\n\n    this.setVisible = visible => {\n      this.visible = visible;\n      setVisible(visible);\n    }\n    this.setVisible(setupVisible(visible));\n  };\n\n  hide = () => {\n    if (!this.visible) {\n      return false;\n    }\n    const { defaultPrevented } = this.dispatchHide();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.setVisible(false);\n    this.dispatchAfterHide();\n    return true;\n  };\n\n  show = () => {\n    if (!this.visible) {\n      this.setVisible(true);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport { AlertCore, defaults };\n","import alc from '../../package.json'\ntype AlcTypes = {\n  version: string;\n}\n\nconst ALC: AlcTypes = {\n  version: alc.version,\n};\n\nconsole.debug('Core do ALC executado.');\n\nexport default ALC;\n","/* CSS básico para que o componente funcione - sem dependências externas */\nalc-alert {\n  @apply block;\n}\n.alc-alert {\n  @apply border border-solid;\n}","/* Definição das variáveis - Setup dos temas*/\n[data-alc-theme=\"dark\"] alc-alert {\n/**\n * @prop --bg-color-info: Cor de fundo para info\n * @prop --border-color-info: Cor de borda para info\n * @prop --text-color-info: Cor de texto para info\n */\n  --bg-color-info: var(--alc-color-info-70);\n  --border-color-info: var(--alc-color-info-60);\n  --text-color-info: var(--alc-color-text-1);\n\n/**\n * @prop --bg-color-warning: Cor de fundo para warning\n * @prop --border-color-warning: Cor de borda para warning\n * @prop --text-color-warning: Cor de texto para warning\n */\n  --bg-color-warning: var(--alc-color-warning-60);\n  --border-color-warning: var(--alc-color-warning-50);\n  --text-color-warning: var(--alc-color-text-1);\n\n  --bg-color-error: var(--alc-color-error-70);\n  --border-color-error: var(--alc-color-error-60);\n  --text-color-error: var(--alc-color-text-1);\n\n  --bg-color-success: var(--alc-color-success-70);\n  --border-color-success: var(--alc-color-success-60);\n  --text-color-success: var(--alc-color-text-1);\n}\n\n[data-alc-theme=\"light\"] alc-alert {\n\n  --bg-color-info: var(--alc-color-info-10);\n  --border-color-info: var(--alc-color-info-40);\n  --text-color-info: var(--alc-color-info-70);\n\n  --bg-color-warning: var(--alc-color-warning-10);\n  --border-color-warning: var(--alc-color-warning-20);\n  --text-color-warning: var(--alc-color-warning-60);\n\n  --bg-color-error: var(--alc-color-error-20);\n  --border-color-error: var(--alc-color-error-50);\n  --text-color-error: var(--alc-color-error-70);\n\n  --bg-color-success: var(--alc-color-success-10);\n  --border-color-success: var(--alc-color-success-50);\n  --text-color-success: var(--alc-color-success-70);\n}\n\n\n/* CSS COMUM a todos os temas */\n.alc-alert {\n  --border-width: theme('borderWidth.6');\n\n  @apply rounded-sm py-4 pr-4 my-2;\n  border-left-width: var(--border-width);\n  padding-left: calc(theme('padding.6') - var(--border-width));\n  color: var(--alc-color-text-1);\n}\n\n.alc-alert {\n  @apply flex flex-row flex-nowrap;\n}\n\n.alc-alert__content {\n  @apply flex-grow pl-2;\n}\n\n/**\n * @prop alc-alert__summary: Elemento que deve conter o sumário do alerta.\n */\n.alc-alert__summary {\n  @apply font-bold block;\n}\n\n.alc-alert__dismiss {\n  @apply  ml-2 -my-2 -mr-2;\n}\n\n.alc-alert--info {\n  background-color: var(--bg-color-info);\n  border-color: var(--border-color-info);\n  color: var(--text-color-info);\n}\n\n.alc-alert--warning {\n  background-color: var(--bg-color-warning);\n  border-color: var(--border-color-warning);\n  color: var(--text-color-warning);\n}\n\n.alc-alert--error {\n  background-color: var(--bg-color-error);\n  border-color: var(--border-color-error);\n  color: var(--text-color-error);\n}\n\n.alc-alert--success {\n  background-color: var(--bg-color-success);\n  border-color: var(--border-color-success);\n  color: var(--text-color-success);\n}\n","import { Component, Element, Prop, Event, EventEmitter, h, Method, Watch, Host } from '@stencil/core';\nimport { AlertCore } from './alc-alert.core';\nimport { Type } from './index';\nimport ALC from '../../core/alc';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n// @TODO Ver se é possível deixar os códigos SVG separados em outros arquivos,\n//       mas sem que crie problemas com importação de assets quando for distribuído.\nconst iconMap = new Map();\n\niconMap.set('info', {\n  label: 'Informação:',\n  name: 'info-circle'\n});\niconMap.set('error', {\n  label: 'Erro:',\n  name: 'x-circle'\n});\niconMap.set('warning', {\n  label: 'Alerta:',\n  name: 'exclamation-circle'\n});\niconMap.set('success', {\n  label: 'Sucesso:',\n  name: 'check-circle'\n});\n\n// Comentários sobre o comentário (jsdoc-like) abaixo:\n//\n// 1- O texto livre inicial é colocado na chave `docs` do json.\n//\n// 2- @slot é uma tag definida pelo StencilJS. É colocado na chave:\n//   slots: [\n//     {\n//       \"name\": \"default\",\n//       \"docs\": \"Slot para o conteúdo do alert\"\n//     }\n//   ]\n//\n// 3- @picWidget é um exemplo de tag customizada. É colocado na chave:\n//   docsTags: [\n//     {\n//       \"name\": \"picWidget\",\n//       \"text\": \"pic-alert\"\n//     }\n//   ]\n/**\n * Vamos lá testar.\n * Ver se isso vai funcionar.\n * ^^^^^ [1]\n *\n * @slot - Slot para o conteúdo do alert.\n * @slot summary - Slot para o summary do alert.\n * @picWidget pic-alert\n */\n\n@Component({\n  tag: 'alc-alert',\n  styleUrls: {\n    base: 'alc-alert-base.css',\n    theme: 'alc-alert.css'\n  },\n  scoped: false,\n})\n\nexport class Alert {\n\n  // The alert core\n  private core: AlertCore;\n\n  @Element() el: HTMLAlcAlertElement;\n\n  /**\n   * Indica se o alert está visível. Pode-se usar essa propriedade em vez dos métodos show/hide.\n    */\n  @Prop({ mutable: true, reflect: true }) visible: boolean = true;\n\n  @Watch('visible')\n  watchPropVisible(newValue: boolean) {\n    newValue === true ? this.core.show() : this.core.hide();\n  }\n\n  /**\n   * O tipo do alert, de acordo com a natureza da mensagem nele contido.\n   */\n  // @TODO O ideal seria buscar o valor default do core, mas não fica legal a documentação\n  @Prop({ reflect: true }) type: Type = 'info';\n\n  @Watch('type')\n  watchType(newValue: Type) {\n    this.core.type = newValue;\n  }\n\n  /**\n   * Define se o alert pode ser dispensado pelo usuário.\n   */\n  // @TODO O ideal seria buscar o valor default do core, mas não fica legal a documentação\n  @Prop({ reflect: true }) dismissible: boolean = true;\n\n  @Watch('dismissible')\n  watchDismissible(newValue: boolean) {\n    this.core.dismissible = newValue;\n  }\n\n  /**\n   * Evento disparado quando o alert é dispensado.\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true\n\n  }) alcHide: EventEmitter<null>;\n  /**\n   * Evento disparado quando o alert é dispensado.\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true\n  }) alcAfterHide: EventEmitter<null>;\n\n  connectedCallback() {\n    this.core = new AlertCore({\n      type: this.type,\n      dismissible: this.dismissible,\n      visible: this.visible,\n      dispatchHide: () => this.emitHide(),\n      dispatchAfterHide: () => this.emitAfterHide(),\n      setVisible: this.setVisible\n    });\n  }\n\n  /**\n   * Fecha o alert.\n   * @returns O valor retornado é `true` se o alert foi realmente dispensado com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    return this.core.hide();\n  }\n\n  /**\n   * Exibe o alert.\n   * @returns O valor retornado é `true` se o alert foi realmente exibido com esa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    return this.core.show();\n  }\n\n  /*\n   * Dispara o evento will dismiss\n   */\n  private emitHide(): CustomEvent {\n    return this.alcHide.emit();\n  }\n\n  /*\n   * Dispara o evento did dismiss\n   */\n  private emitAfterHide(): CustomEvent {\n    return this.alcAfterHide.emit();\n  }\n\n\n  /*\n   * Renderiza o ícone de acordo com o type\n   */\n  private renderIcon(): string {\n    let icon = iconMap.get(this.core.type);\n    return <alc-icon name={icon.name} label={icon.label}></alc-icon>\n  }\n\n  /*\n   * Renderiza o botão \"dispensar\" se for o caso.\n   */\n  private renderDismissButton(): string {\n    // Will not have a button if !dismissible\n    if (!this.core.dismissible) {\n      return null;\n    }\n\n    return (\n      <div class=\"alc-alert__dismiss\" {...test('data-test-dismiss')}>\n        <button\n          class={`alc-button alc-button-rounded alc-button-rounded--${this.core.type}`}\n          onClick={() => this.hide()}\n        >\n          <alc-icon name=\"x-lg\" label=\"Dispensar\"></alc-icon>\n        </button>\n      </div>\n    );\n  }\n\n  private setVisible = (visible: boolean) => {\n    this.visible = visible;\n  }\n\n  componentDidRender() {\n    this.el.querySelectorAll('a').forEach(link => {\n      link.classList.add('alc-link--color-text');\n    });\n  }\n\n  /**\n   * StencilJS render\n   */\n\n  render() {\n\n    logger.debug('render alc-alert', ALC);\n\n    return (\n      <Host\n        style={{display: this.visible ? null : 'none'}}\n      >\n        <div class={\"alc-alert alc-alert--\" + this.core.type}>\n          {this.renderIcon()}\n          <div class='alc-alert__content'>\n            <div class=\"alc-alert__summary\">\n              <slot name=\"summary\"></slot>\n            </div>\n            <slot />\n          </div>\n\n          {this.renderDismissButton()}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["test"],"mappings":"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"}