{"version":3,"names":["alcDropdownCss","AlcDropdown","constructor","hostRef","this","hideOnEventsMap","Map","open","hideOn","handleAnchorClick","event","target","Node","_a","trigger","contains","toggleDropdown","async","hide","show","watchOpen","handleTriggerAriaExpanded","handleTriggerTabindex","watchHideOn","forEach","listener","eventName","content","removeEventListener","delete","addHideOnListeners","handleKeydown","key","defaultPrevented","preventDefault","handleTriggerFocus","alcShow","emit","alcAfterShow","alcHide","alcAfterHide","focus","handleContentFocus","contentFirstFocusable","getFocusableElements","HTMLElement","setTriggerAccessibility","getAttribute","setAttribute","contentElementChild","firstElementChild","ariaHaspopup","role","id","getUniqueId","ariaExpanded","tabIndex","originalTriggerTabindex","handleFocusOut","e","relatedTarget","isNode","el","handleCloseOn","trim","eventNames","split","set","addEventListener","componentDidUpdate","getTrigger","slot","querySelector","tagName","logger","warn","componentDidLoad","render","h","Host","active","placement","flip","shift","strategy","onFocusout","bind","distance","onClick","name","class","ref","tabindex","alcMenuCss","AlcMenu","hasFocus","getListItems","Array","from","hostElement","querySelectorAll","includeFirstItemInTabNavigation","items","item","pos","removeAllItemsFromTabNavigation","setHasFocus","refresh","handleFocusedItemIndex","handleAlcSelect","index","findIndex","handleFocusItem","handleFocusin","handleFocusout","direction","currentIndex","indexOf","document","activeElement","nextIndex","itemsLength","length","componentDidRender"],"sources":["src/components/alc-dropdown/alc-dropdown.css?tag=alc-dropdown","src/components/alc-dropdown/alc-dropdown.tsx","src/components/alc-menu/alc-menu.css?tag=alc-menu","src/components/alc-menu/alc-menu.tsx"],"sourcesContent":["[data-alc-theme=\"dark\"] alc-dropdown {\n  --border-color: var(--alc-color-neutral-80);\n}\n\n[data-alc-theme=\"light\"] alc-dropdown {\n  --border-color: var(--alc-color-neutral-10);\n}\n\n\nalc-dropdown {\n  @apply relative inline-block;\n}\n\n.alc-dropdown__content {\n  @apply bg-[color:var(--alc-color-surface-primary)] overflow-auto;\n  @apply drop-shadow-md shadow-black rounded border border-[color:var(--border-color)];\n  /* Vai pegar a altura máxima do pai (popup) permitindo funcionar o overflow */\n  max-height: inherit;\n\n  /* animation: Scale 100ms ease-in-out; */\n}\n\n.alc-dropdown__content--opened {\n  @apply block;\n}\n\n@keyframes Scale {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n","import { Component, Prop, h, Host, Element, Listen, Watch, Method, Event, EventEmitter } from '@stencil/core';\nimport { getFocusableElements } from '../utils/keydown';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\n\n\n/**\n * @slot - O conteúdo do dropdown.\n * @slot trigger - O disparador do dropdown, usualmente um botão.\n */\n@Component({\n  tag: 'alc-dropdown',\n  styleUrl: 'alc-dropdown.css',\n  shadow: false,\n})\nexport class AlcDropdown {\n  @Element() el: HTMLElement;\n  private trigger: HTMLElement;\n  private content: HTMLElement;\n  private originalTriggerTabindex: number | null;\n  private hideOnEventsMap: Map<string, EventListener> = new Map();\n\n  /**\n   * Indica se o dropdown esta aberto ou não. Pode-se usar essa propriedade em vez dos métodos show/hide.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) open: boolean = false;\n\n  @Watch('open')\n  watchOpen() {\n    if (this.trigger) {\n      this.handleTriggerAriaExpanded();\n      this.handleTriggerTabindex();\n    }\n  }\n\n  /**\n   * Nome do evento que, ao ocorrer no conteúdo do dropdown, vai fazer com que ele seja fechado.\n   * Podem ser informados vários eventos, separados por um espaço em branco.\n   */\n  @Prop({\n    reflect: true,\n    mutable: false,\n  }) hideOn: string = '';\n\n  @Watch('hideOn')\n  watchHideOn() {\n    // Remove todos os eventos anteriores\n    this.hideOnEventsMap.forEach((listener, eventName) => {\n      this.content.removeEventListener(eventName, listener);\n      this.hideOnEventsMap.delete(eventName);\n    })\n\n    // Adiciona todos os novos eventos\n    this.addHideOnListeners();\n  }\n\n  @Listen('keydown')\n  async handleKeydown(event: KeyboardEvent) {\n    if (!this.open) return;\n    \n    if (event.key !== 'Escape') return;\n\n    if (event.defaultPrevented) return;\n\n    event.preventDefault();\n    await this.hide();\n    this.handleTriggerFocus();\n  }\n\n  /**\n   * Evento disparado quando o dropdown vai abrir\n   */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown abriu\n   */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown vai fechar\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown fechou\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  /**\n   * Método para abrir o dropdown.\n   * @returns O valor retornado é `true` se o dropdown foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.open) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcShow.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.open = true;\n    this.alcAfterShow.emit();\n\n    return true;\n  }\n\n  /**\n   * Método para fechar o dropdown.\n   * @returns O valor retornado é `true` se o dropdown foi realmente oculto com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.open) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcHide.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.open = false;\n    this.alcAfterHide.emit();\n\n    return true;\n  }\n\n  private handleAnchorClick = (event: MouseEvent) => {\n    if (!(event.target instanceof Node)) {\n      return;\n    }\n\n    // Se o click foi no trigger (ou dentro dele)\n    if (this.trigger?.contains(event.target)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown = async () => {\n    this.open ? this.hide() : this.show();\n  }\n\n  handleTriggerFocus() {\n    this.trigger?.focus();\n  }\n\n  handleContentFocus() {\n    const contentFirstFocusable = getFocusableElements(this.content)[0];\n\n    if(!contentFirstFocusable) return;\n\n    if(contentFirstFocusable instanceof HTMLElement) {\n      contentFirstFocusable.focus();\n    }\n  }\n\n  private setTriggerAccessibility() {\n    if (this.trigger.getAttribute('role') === null) {\n      this.trigger.setAttribute('role', \"button\");\n    }\n\n    const contentElementChild = this.content.firstElementChild;\n\n    if (this.trigger.getAttribute('aria-haspopup') === null) {\n      const ariaHaspopup = contentElementChild?.role === \"menu\" ? \"menu\" : \"dialog\";\n      this.trigger.setAttribute('aria-haspopup', ariaHaspopup);\n    }\n\n    let id = contentElementChild?.id ? contentElementChild.id : getUniqueId();\n\n    // Se não ter conteudo dentro, o id vai no alc-dropdown__content se não vai no conteudo\n    if(!contentElementChild) {\n      this.content.id = id;\n    } else {\n      contentElementChild.id = id;\n    }\n\n    this.trigger.setAttribute('aria-controls', id);\n  }\n\n  private handleTriggerAriaExpanded() {\n    this.trigger.ariaExpanded = `${this.open}`;\n  }\n\n  private handleTriggerTabindex() {\n    this.trigger.tabIndex = this.open ? -1 : this.originalTriggerTabindex;\n  }\n\n  private async handleFocusOut(e: FocusEvent) {\n    const { relatedTarget } = e;\n    const isNode = relatedTarget instanceof Node;\n\n    /*\n      OBSERVAÇÃO:\n      Para que um clique qualquer dentro de content, mesmo se for um elemento não focalizável,\n      não resulte em relatedTarget null, foi definido tabindex=-1 para o content.\n      Se não fosse assim, um clique em um elemento não focalizável dentro de content\n      resultaria no fechamento indesejado do dropdown.\n    */\n    if (isNode && this.el.contains(relatedTarget)) {\n      return;\n    }\n\n    await this.hide();\n  }\n\n  private handleCloseOn(e: Event) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    this.open = false;\n  }\n\n  private addHideOnListeners() {\n    const hideOn = this.hideOn.trim();\n    // Nada a fazer se for um string vazia.\n    if (!hideOn) {\n      return;\n    }\n\n    const eventNames = hideOn.split(/\\s+/);\n\n    eventNames.forEach(eventName => {\n      const listener = (e: Event) => this.handleCloseOn(e);\n      this.hideOnEventsMap.set(eventName, listener);\n      this.content.addEventListener(eventName, listener);\n    });\n  }\n\n  componentDidUpdate() {\n    if(this.open) {\n      // Quando o trigger for acionado por teclado para abrir o foco deve ir para o primeiro elemento focalizável dentro do conteúdo\n      // Foi adicionado para tratar no componentDidUpdate pois no handleKeydown o dropdown ainda esta fechado, logo o 'elemento.focus()' não funciona\n      // Aqui o componente ja foi renderizado com o novo estado.\n      this.handleContentFocus();\n    }\n  }\n\n  getTrigger(): HTMLElement {\n    let slot: HTMLElement = null;\n    let trigger: HTMLElement = null;\n\n    slot = this.el.querySelector('[slot=\"trigger\"]');\n    if (slot) {\n      if (slot.tagName === 'BUTTON' || slot.getAttribute('role') === 'button') {\n        // Trigger é o próprio slot se ele mesmo for o botão\n        trigger = slot;\n      }\n      else {\n        // Trigger é o primeiro botão encontrado dentro do slot (se existir)\n        trigger = slot.querySelector('button, [role=\"button\"]');\n      }\n    }\n\n    if (trigger === null) {\n      logger.warn(this.el, 'alc-dropdown não localizou um trigger válido. Slot deve ser ou conter um botão. Veja a documentação para mais detalhes.');\n    }\n    return trigger;\n  }\n\n  componentDidLoad() {\n\n    this.trigger = this.getTrigger();\n\n    if (this.trigger) {\n      this.setTriggerAccessibility();\n      this.handleTriggerAriaExpanded();\n      this.originalTriggerTabindex = this.trigger.tabIndex;\n    }\n\n    // Adiciona close-on listeners\n    this.addHideOnListeners();\n  }\n\n  render() {\n    return (\n      <Host>\n        <alc-popup\n          active={this.open}\n          placement=\"bottom-start\"\n          flip\n          shift\n          strategy=\"fixed\"\n          onFocusout={this.handleFocusOut.bind(this)}\n          distance={2}\n        >\n          <div slot=\"anchor\" onClick={this.handleAnchorClick}>\n            <slot name=\"trigger\" />\n          </div>\n\n          <div class=\"alc-dropdown__content\" ref={(el) => this.content = el} tabindex='-1'>\n            <slot></slot>\n          </div>\n        </alc-popup>\n      </Host>\n    );\n  }\n}\n\n",".alc-menu {\n  @apply block py-2;\n  @apply bg-[color:var(--alc-color-surface-primary)];\n}\n","import { Component, h, Host, Element, Listen, Method } from '@stencil/core';\n\n@Component({\n  tag: 'alc-menu',\n  styleUrl: 'alc-menu.css',\n  shadow: false,\n})\nexport class AlcMenu {\n  @Element() hostElement: HTMLElement;\n\n  private hasFocus = false;\n\n  private items: Element[];\n\n  @Method()\n  async refresh() {\n    this.items = this.getListItems();\n    this.includeFirstItemInTabNavigation();\n  }\n\n\n  @Listen('keydown')\n  handleKeydown(event: KeyboardEvent) {\n    if ('ArrowDown' === event.key) {\n      event.preventDefault();\n      this.handleFocusedItemIndex();\n      return;\n    }\n\n    if ('ArrowUp' === event.key) {\n      event.preventDefault();\n      this.handleFocusedItemIndex(-1);\n      return;\n    }\n  }\n\n  /**\n   * Focar item recém-selecionado\n   */\n  @Listen('alc-select')\n  handleAlcSelect (e: CustomEvent) {\n    const index = this.items.findIndex(item => item === e.target);\n\n    if(index === null) return;\n\n    this.handleFocusItem(index);\n  }\n\n  @Listen('focusin')\n  handleFocusin ({ target }) {\n    // Se já tem o foco, nada a fazer\n    if (this.hasFocus) {\n      return;\n    }\n    if (this.hostElement.contains(target)) {\n      this.setHasFocus(true);\n    }\n  }\n\n  @Listen('focusout')\n  handleFocusout ({ relatedTarget }) {\n    if (!this.hostElement.contains(relatedTarget)) {\n      this.setHasFocus(false);\n    }\n  }\n\n  handleFocusedItemIndex(direction: -1 | 1 = 1) {\n    const currentIndex = this.items.indexOf(document.activeElement);\n    if (currentIndex === -1) return;\n\n    let nextIndex = currentIndex + direction;\n    const itemsLength = this.items.length - 1;\n\n    if (nextIndex > itemsLength) {\n      nextIndex = 0;\n    }\n\n    if (nextIndex < 0) {\n      nextIndex = itemsLength;\n    }\n\n    this.handleFocusItem(nextIndex);\n  }\n\n  handleFocusItem(index: number) {\n    const item = this.items[index];\n\n    if(item instanceof HTMLElement) {\n      // Seta foco no atual\n      item.focus();\n    }\n\n  }\n\n  getListItems = () => Array.from(this.hostElement.querySelectorAll('[role^=menuitem]'));\n\n  includeFirstItemInTabNavigation = () => {\n    this.items.forEach((item, pos) => {\n      item.setAttribute('tabindex', pos === 0 ? '0' : '-1')\n    });\n  }\n\n  removeAllItemsFromTabNavigation = () => {\n    this.items.forEach(item => item.setAttribute('tabindex', '-1'));\n  }\n\n\n  setHasFocus = (hasFocus = true) => {\n\n    this.hasFocus = hasFocus;\n\n    if (hasFocus) {\n      this.removeAllItemsFromTabNavigation();\n    }\n    else {\n      this.includeFirstItemInTabNavigation();\n    }\n\n  }\n\n\n  componentDidRender() {\n    this.items = this.getListItems();\n  }\n\n  componentDidLoad() {\n    this.includeFirstItemInTabNavigation();\n  }\n\n  render() {\n    return (\n      <Host role=\"menu\" class=\"alc-menu\">\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"4KAAA,MAAMA,EAAiB,wuC,MCeVC,EAAW,MALxB,WAAAC,CAAAC,G,wKAUUC,KAAAC,gBAA8C,IAAIC,IAQvDF,KAAIG,KAAY,MAiBhBH,KAAMI,OAAW,GA6GZJ,KAAAK,kBAAqBC,I,MAC3B,KAAMA,EAAMC,kBAAkBC,MAAO,CACnC,M,CAIF,IAAIC,EAAAT,KAAKU,WAAS,MAAAD,SAAA,SAAAA,EAAAE,SAASL,EAAMC,QAAS,CACxCP,KAAKY,gB,GAITZ,KAAcY,eAAGC,UACfb,KAAKG,KAAOH,KAAKc,OAASd,KAAKe,MAAM,CA8JxC,CArSC,SAAAC,GACE,GAAIhB,KAAKU,QAAS,CAChBV,KAAKiB,4BACLjB,KAAKkB,uB,EAcT,WAAAC,GAEEnB,KAAKC,gBAAgBmB,SAAQ,CAACC,EAAUC,KACtCtB,KAAKuB,QAAQC,oBAAoBF,EAAWD,GAC5CrB,KAAKC,gBAAgBwB,OAAOH,EAAU,IAIxCtB,KAAK0B,oB,CAIP,mBAAMC,CAAcrB,GAClB,IAAKN,KAAKG,KAAM,OAEhB,GAAIG,EAAMsB,MAAQ,SAAU,OAE5B,GAAItB,EAAMuB,iBAAkB,OAE5BvB,EAAMwB,uBACA9B,KAAKc,OACXd,KAAK+B,oB,CAgDP,UAAMhB,GACJ,GAAIf,KAAKG,KAAM,CACb,OAAO,K,CAGT,MAAM0B,iBAAEA,GAAqB7B,KAAKgC,QAAQC,OAC1C,GAAIJ,EAAkB,CACpB,OAAO,K,CAGT7B,KAAKG,KAAO,KACZH,KAAKkC,aAAaD,OAElB,OAAO,I,CAQT,UAAMnB,GACJ,IAAKd,KAAKG,KAAM,CACd,OAAO,K,CAGT,MAAM0B,iBAAEA,GAAqB7B,KAAKmC,QAAQF,OAC1C,GAAIJ,EAAkB,CACpB,OAAO,K,CAGT7B,KAAKG,KAAO,MACZH,KAAKoC,aAAaH,OAElB,OAAO,I,CAkBT,kBAAAF,G,OACEtB,EAAAT,KAAKU,WAAS,MAAAD,SAAA,SAAAA,EAAA4B,O,CAGhB,kBAAAC,GACE,MAAMC,EAAwBC,EAAqBxC,KAAKuB,SAAS,GAEjE,IAAIgB,EAAuB,OAE3B,GAAGA,aAAiCE,YAAa,CAC/CF,EAAsBF,O,EAIlB,uBAAAK,GACN,GAAI1C,KAAKU,QAAQiC,aAAa,UAAY,KAAM,CAC9C3C,KAAKU,QAAQkC,aAAa,OAAQ,S,CAGpC,MAAMC,EAAsB7C,KAAKuB,QAAQuB,kBAEzC,GAAI9C,KAAKU,QAAQiC,aAAa,mBAAqB,KAAM,CACvD,MAAMI,GAAeF,IAAmB,MAAnBA,SAAmB,SAAnBA,EAAqBG,QAAS,OAAS,OAAS,SACrEhD,KAAKU,QAAQkC,aAAa,gBAAiBG,E,CAG7C,IAAIE,GAAKJ,IAAmB,MAAnBA,SAAmB,SAAnBA,EAAqBI,IAAKJ,EAAoBI,GAAKC,IAG5D,IAAIL,EAAqB,CACvB7C,KAAKuB,QAAQ0B,GAAKA,C,KACb,CACLJ,EAAoBI,GAAKA,C,CAG3BjD,KAAKU,QAAQkC,aAAa,gBAAiBK,E,CAGrC,yBAAAhC,GACNjB,KAAKU,QAAQyC,aAAe,GAAGnD,KAAKG,M,CAG9B,qBAAAe,GACNlB,KAAKU,QAAQ0C,SAAWpD,KAAKG,MAAO,EAAKH,KAAKqD,uB,CAGxC,oBAAMC,CAAeC,GAC3B,MAAMC,cAAEA,GAAkBD,EAC1B,MAAME,EAASD,aAAyBhD,KASxC,GAAIiD,GAAUzD,KAAK0D,GAAG/C,SAAS6C,GAAgB,CAC7C,M,OAGIxD,KAAKc,M,CAGL,aAAA6C,CAAcJ,GACpB,GAAIA,EAAE1B,iBAAkB,CACtB,M,CAEF7B,KAAKG,KAAO,K,CAGN,kBAAAuB,GACN,MAAMtB,EAASJ,KAAKI,OAAOwD,OAE3B,IAAKxD,EAAQ,CACX,M,CAGF,MAAMyD,EAAazD,EAAO0D,MAAM,OAEhCD,EAAWzC,SAAQE,IACjB,MAAMD,EAAYkC,GAAavD,KAAK2D,cAAcJ,GAClDvD,KAAKC,gBAAgB8D,IAAIzC,EAAWD,GACpCrB,KAAKuB,QAAQyC,iBAAiB1C,EAAWD,EAAS,G,CAItD,kBAAA4C,GACE,GAAGjE,KAAKG,KAAM,CAIZH,KAAKsC,oB,EAIT,UAAA4B,GACE,IAAIC,EAAoB,KACxB,IAAIzD,EAAuB,KAE3ByD,EAAOnE,KAAK0D,GAAGU,cAAc,oBAC7B,GAAID,EAAM,CACR,GAAIA,EAAKE,UAAY,UAAYF,EAAKxB,aAAa,UAAY,SAAU,CAEvEjC,EAAUyD,C,KAEP,CAEHzD,EAAUyD,EAAKC,cAAc,0B,EAIjC,GAAI1D,IAAY,KAAM,CACpB4D,EAAOC,KAAKvE,KAAK0D,GAAI,0H,CAEvB,OAAOhD,C,CAGT,gBAAA8D,GAEExE,KAAKU,QAAUV,KAAKkE,aAEpB,GAAIlE,KAAKU,QAAS,CAChBV,KAAK0C,0BACL1C,KAAKiB,4BACLjB,KAAKqD,wBAA0BrD,KAAKU,QAAQ0C,Q,CAI9CpD,KAAK0B,oB,CAGP,MAAA+C,GACE,OACEC,EAACC,EAAI,CAAA/C,IAAA,4CACH8C,EAAA,aAAA9C,IAAA,2CACEgD,OAAQ5E,KAAKG,KACb0E,UAAU,eACVC,KAAI,KACJC,MACA,KAAAC,SAAS,QACTC,WAAYjF,KAAKsD,eAAe4B,KAAKlF,MACrCmF,SAAU,GAEVT,EAAK,OAAA9C,IAAA,2CAAAuC,KAAK,SAASiB,QAASpF,KAAKK,mBAC/BqE,EAAA,QAAA9C,IAAA,2CAAMyD,KAAK,aAGbX,EAAA,OAAA9C,IAAA,2CAAK0D,MAAM,wBAAwBC,IAAM7B,GAAO1D,KAAKuB,QAAUmC,EAAI8B,SAAS,MAC1Ed,EAAA,QAAA9C,IAAA,+C,6GC9TZ,MAAM6D,EAAa,sH,MCONC,EAAO,MALpB,WAAA5F,CAAAC,G,UAQUC,KAAQ2F,SAAG,MAoFnB3F,KAAA4F,aAAe,IAAMC,MAAMC,KAAK9F,KAAK+F,YAAYC,iBAAiB,qBAElEhG,KAA+BiG,gCAAG,KAChCjG,KAAKkG,MAAM9E,SAAQ,CAAC+E,EAAMC,KACxBD,EAAKvD,aAAa,WAAYwD,IAAQ,EAAI,IAAM,KAAK,GACrD,EAGJpG,KAA+BqG,gCAAG,KAChCrG,KAAKkG,MAAM9E,SAAQ+E,GAAQA,EAAKvD,aAAa,WAAY,OAAM,EAIjE5C,KAAAsG,YAAc,CAACX,EAAW,QAExB3F,KAAK2F,SAAWA,EAEhB,GAAIA,EAAU,CACZ3F,KAAKqG,iC,KAEF,CACHrG,KAAKiG,iC,EAqBV,CAzHC,aAAMM,GACJvG,KAAKkG,MAAQlG,KAAK4F,eAClB5F,KAAKiG,iC,CAKP,aAAAtE,CAAcrB,GACZ,GAAI,cAAgBA,EAAMsB,IAAK,CAC7BtB,EAAMwB,iBACN9B,KAAKwG,yBACL,M,CAGF,GAAI,YAAclG,EAAMsB,IAAK,CAC3BtB,EAAMwB,iBACN9B,KAAKwG,wBAAuB,GAC5B,M,EAQJ,eAAAC,CAAiBlD,GACf,MAAMmD,EAAQ1G,KAAKkG,MAAMS,WAAUR,GAAQA,IAAS5C,EAAEhD,SAEtD,GAAGmG,IAAU,KAAM,OAEnB1G,KAAK4G,gBAAgBF,E,CAIvB,aAAAG,EAAetG,OAAEA,IAEf,GAAIP,KAAK2F,SAAU,CACjB,M,CAEF,GAAI3F,KAAK+F,YAAYpF,SAASJ,GAAS,CACrCP,KAAKsG,YAAY,K,EAKrB,cAAAQ,EAAgBtD,cAAEA,IAChB,IAAKxD,KAAK+F,YAAYpF,SAAS6C,GAAgB,CAC7CxD,KAAKsG,YAAY,M,EAIrB,sBAAAE,CAAuBO,EAAoB,GACzC,MAAMC,EAAehH,KAAKkG,MAAMe,QAAQC,SAASC,eACjD,GAAIH,KAAiB,EAAI,OAEzB,IAAII,EAAYJ,EAAeD,EAC/B,MAAMM,EAAcrH,KAAKkG,MAAMoB,OAAS,EAExC,GAAIF,EAAYC,EAAa,CAC3BD,EAAY,C,CAGd,GAAIA,EAAY,EAAG,CACjBA,EAAYC,C,CAGdrH,KAAK4G,gBAAgBQ,E,CAGvB,eAAAR,CAAgBF,GACd,MAAMP,EAAOnG,KAAKkG,MAAMQ,GAExB,GAAGP,aAAgB1D,YAAa,CAE9B0D,EAAK9D,O,EAgCT,kBAAAkF,GACEvH,KAAKkG,MAAQlG,KAAK4F,c,CAGpB,gBAAApB,GACExE,KAAKiG,iC,CAGP,MAAAxB,GACE,OACEC,EAACC,EAAK,CAAA/C,IAAA,2CAAAoB,KAAK,OAAOsC,MAAM,YACtBZ,EAAQ,QAAA9C,IAAA,6C","ignoreList":[]}