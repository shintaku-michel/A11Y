{"version":3,"names":["alcLoadingCss","AlcLoading","exports","class_1","hostRef","this","active","label","endMsg","variant","ariaMessage","parentButton","prototype","show","hide","onActiveChange","newValue","oldValue","updateAriaMessage","updateParentButtonAttributes","componentWillLoad","componentDidLoad","findParentButton","el","closest","logger","warn","setAttribute","removeAttribute","render","shouldRenderAriaLive","h","Host","key","renderLoadingVisuals","Object","assign","class","role","test","renderFullScreen","renderContainer","renderInline","renderButton","alcPaginationBaseCss","themeAlcPaginationCss","Pagination","class_2","_this","idSelectPagination","disabledSelect","totalPages","currentPage","pageList","paginationItem","isFirst","icon","isLast","isPrev","isNext","checkPage","using","leftPaginationItems","rightPaginationItems","includes","length","handleSelectedPage","event","handleChangePage","parseInt","target","value","renderPaginationItem","pageNumber","paginationItemIsDisabled","paginationItemLabel","concat","onClick","disabled","name","watchPropTotalPages","__spreadArray","Array","map","_","index","getUniqueId","newChange","alcChange","emit","from","to","pageChangeHandler","_a","detail","htmlFor","onChange","id","page","selected","iconMap","Map","set","AlcSortIndicator","class_3","sorting","get"],"sources":["src/components/alc-loading/alc-loading.css?tag=alc-loading","src/components/alc-loading/alc-loading.tsx","src/components/alc-pagination/alc-pagination-base.css?tag=alc-pagination&mode=base","src/components/alc-pagination/alc-pagination.css?tag=alc-pagination&mode=theme","src/components/alc-pagination/alc-pagination.tsx","src/components/alc-sort-indicator/alc-sort-indicator.tsx"],"sourcesContent":["/* Definição das variáveis - Setup dos temas */\n[data-alc-theme=\"light\"] alc-loading {\n  --bg-color-overlay: theme('colors.gray-cool.80')66; /* 66 = 40% */\n  --border-color-loading-default: theme('colors.gray-cool.10');\n  --border-color-loading: var(--alc-color-action-60);\n}\n\n[data-alc-theme=\"dark\"] alc-loading {\n  --bg-color-overlay: theme('colors.gray-cool.60')66; /* 66 = 40% */\n  --border-color-loading-default: theme('colors.gray-cool.80');\n  --border-color-loading: var(--alc-color-action-40);\n}\n\nalc-loading {\n  --bg-color-card: var(--alc-color-surface);\n}\n\n/* Estilos para o modo full-screen (inalterado) */\n.alc-loading__overlay {\n  /* Posicionamento */\n  @apply z-[1090] w-full h-full top-0 left-0 fixed;\n  /* Cor */\n  @apply bg-[--bg-color-overlay];\n  /* Alinhamento do elemento interno */\n  @apply flex items-center justify-center flex-col gap-2;\n}\n\n.alc-loading__card {\n  /* Estilização do cartão */\n  @apply rounded-[--alc-radius-default] bg-[--bg-color-card] p-4 min-w-48;\n  /* Alinhamento dos elementos internos do cartão */\n  @apply flex justify-center flex-col items-center text-center text-nowrap;\n}\n\n/* Estilização do spinner no card */\n.alc-loading__card::before {\n  @apply block content-[\"\\200C\"];\n  @apply w-12 h-12 rounded-full animate-spin mb-[--alc-spacing-03];\n  @apply border-6 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n/* Estilos para o modo container */\n.alc-loading__container {\n  @apply relative;\n}\n\n.alc-loading__card-container {\n  /* Estilização do cartão */\n  @apply rounded-[--alc-radius-default] bg-[--bg-color-card] p-4 min-w-48 mb-2 mt-2;\n  /* Alinhamento dos elementos internos do cartão */\n  @apply flex justify-center flex-col items-center text-center text-nowrap;\n}\n\n.alc-loading__overlay-container {\n  @apply absolute inset-0 flex items-center justify-center bg-[--bg-color-overlay];\n  @apply z-[50];\n}\n\n.alc-loading__spinner-container {\n  @apply w-10 h-10 rounded-full animate-spin;\n  @apply border-4 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n/* Estilos para o modo inline */\n.alc-loading__inline {\n  @apply inline-block;\n}\n\n.alc-loading__spinner-inline,\n.alc-loading__label-inline {\n  @apply inline-flex align-sub;\n}\n\n.alc-loading__spinner-inline {\n  @apply flex-shrink-0 w-5 h-5 mr-2 rounded-full animate-spin;\n  @apply border-2 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n.alc-loading__label-inline {\n  @apply text-sm leading-none;\n}\n\n/* Estilos para o modo button */\n.alc-loading__button {\n  @apply inline-block;\n}\n\n.alc-loading__button-wrapper {\n  @apply inline-flex items-center;   \n}\n\n.alc-loading__spinner-button {\n  @apply w-4 h-4 rounded-full animate-spin -mt-[0.125em] top-[0.125em] relative;\n  @apply border-2 border-solid border-[--border-color-loading] border-r-[--border-color-loading-default];\n}\n\n.sr-only {\n  @apply absolute w-[1px] h-[1px] p-0 m-[-1px] overflow-hidden whitespace-nowrap border-0;\n  clip: rect(0, 0, 0, 0);\n}","import { Component, Host, Method, Prop, Watch, State, Element, h } from '@stencil/core';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-loading',\n  styleUrl: 'alc-loading.css',\n  shadow: false,\n})\nexport class AlcLoading {\n  @Element() el: HTMLElement;\n  /**\n   * Define se o indicador de carregamento aparece na tela. Quando o valor é `true` mostra o componente e quando o valor é `false` oculta.\n   */\n  @Prop({ mutable: true, reflect: true }) active: boolean = false;\n\n  /**\n  * Texto mostrado na tela enquanto estiver carregando e também anunciado no leitor de tela quando o estado mudar para `active=true`.\n  */\n  @Prop({reflect: true}) label: string = 'Carregando...';\n\n  /**\n  * Texto anunciado ao leitor de tela quando mudar o estado para `active=false`.\n  */\n  @Prop({reflect: true}) endMsg: string = 'Finalizado.';\n\n  /**\n   * Define a variação visual do componente:\n   * - `'full-screen'`: ocupa a tela inteira.\n   * - `'container'`: ocupa o elemento pai.\n   * - `'inline'`: utilizado dentro de textos.\n   * - `'button'`: utilizado dentro de botões.\n   */\n  @Prop({ reflect: true }) variant: 'full-screen' | 'container' | 'inline' | 'button' = 'full-screen';\n\n  /**\n   * Mensagem interna para a região aria-live.\n   */\n  private ariaMessage: string = '';\n\n  private parentButton: HTMLButtonElement | null = null;\n\n  /**\n   * Exibe o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.active) {\n      return false;\n    }\n    this.active = true;\n    return true;\n  }\n\n  /**\n   * Esconde o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente oculto com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.active) {\n      return false;\n    }\n    this.active = false;\n    return true;\n  }\n\n  @Watch('active')\n  onActiveChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.updateAriaMessage();\n      if (this.variant === 'button') {\n        this.updateParentButtonAttributes();\n      }\n    }\n  }\n\n  componentWillLoad() {\n    this.updateAriaMessage();\n  }\n\n  componentDidLoad() {\n    if (this.variant === 'button') {\n      this.findParentButton();\n      this.updateParentButtonAttributes();\n    }\n  }\n\n  private updateAriaMessage() {\n    this.ariaMessage = this.active ? this.label : this.endMsg;\n  }\n\n  private findParentButton() {\n    this.parentButton = this.el.closest('button');\n    if (!this.parentButton) {\n      logger.warn('alc-loading[variant=\"button\"] deve estar dentro de um elemento <button>.');\n    }\n  }\n\n  private updateParentButtonAttributes() {\n    if (this.parentButton) {\n      if (this.active) {\n        this.parentButton.setAttribute('aria-label', this.label);\n      } else {\n        this.parentButton.removeAttribute('aria-label');  \n      }\n    }\n  }\n\n  render() {\n    const shouldRenderAriaLive = this.variant !== 'button';\n  \n    return (\n      <Host>\n        {this.renderLoadingVisuals()}\n        {shouldRenderAriaLive && (\n          <div class=\"sr-only\" aria-live=\"polite\" role=\"status\" {...test('data-test-acessibility')}>\n            {this.ariaMessage}\n          </div>\n        )}\n      </Host>\n    );\n  }\n\n  private renderLoadingVisuals() {\n    switch (this.variant) {\n      case 'full-screen':\n        return this.renderFullScreen();\n      case 'container':\n        return this.renderContainer();\n      case 'inline':\n        return this.renderInline();\n      case 'button':\n        return this.renderButton();\n      default:\n        return null;\n    }\n  }\n\n  private renderFullScreen() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card\">\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderContainer() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay-container\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card-container\">\n          <div class=\"alc-loading__spinner-container\"></div>\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderInline() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__inline\" aria-hidden=\"true\">\n        <div class=\"alc-loading__spinner-inline\"></div>\n        <span class=\"alc-loading__label\">{this.label}</span>\n      </div>\n    );\n  }\n\n  private renderButton() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__button\" aria-hidden=\"true\">\n        <span class=\"alc-loading__button-wrapper\">\n          <div class=\"alc-loading__spinner-button\"></div>\n        </span>\n      </div>\n    );\n  }\n}","\nalc-pagination {\n    @apply block;\n}\n.alc-pagination {\n    @apply flex px-0 list-none;\n}\n\n.alc-pagination__link {\n    @apply mx-1 px-2 border border-solid border-transparent;\n}\n\n.alc-pagination__link.is-active {\n    @apply cursor-not-allowed no-underline text-current border-current;\n}\n\n.alc-pagination__link.is-disabled {\n    @apply cursor-not-allowed no-underline text-current;\n}",".alc-pagination {\n    @apply flex;\n}\n\n.alc-pagination__content {\n    @apply flex list-none items-center;\n}\n\n.alc-pagination__button--first,\n.alc-pagination__button--last {\n    @apply hidden sm:block;\n}\n\n.alc-pagination__item {\n    @apply flex items-center mx-0.5;\n}\n\n.alc-pagination__select {\n    --border-width: theme('borderWidth.DEFAULT');\n\n    @apply mx-1 py-1;\n    border-width: var(--border-width);\n    padding-left: calc(theme('padding.1') - var(--border-width));\n    padding-right: calc(theme('padding.1') - var(--border-width));\n    max-height: 2rem;\n    min-width: 4rem;\n}\n","import { Component, Host, h, Prop, EventEmitter, Event, State, Watch } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\ntype PageChangeType = 'isFirst' | 'isPrev' | 'isLast' | 'isNext' | 'isSelect';\n\nexport interface PageChangeEventProps {\n  from: number;\n  to: number;\n  using: PageChangeType;\n}\n\ninterface PaginationItem {\n  [using: string]: {\n    icon: string;\n    label: string;\n  }\n}\n\n@Component({\n  tag: 'alc-pagination',\n  styleUrls: {\n    base: 'alc-pagination-base.css',\n    theme: 'alc-pagination.css'\n  },\n})\nexport class Pagination {\n  private idSelectPagination = null;\n  private disabledSelect: boolean = false;\n\n  /**\n   * Número total de páginas.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) totalPages: number = 1;\n  @Watch('totalPages')\n  watchPropTotalPages(newValue: number , oldValue: number) {\n\n    if (newValue < this.currentPage) {\n      this.totalPages = oldValue;\n      logger.warn(`\"total-pages\" não pode ser menor do que \"current-page\". Foi mantido o valor ${oldValue}`);\n      return;\n    }\n    this.pageList = [...new Array(newValue)].map((_, index) => index + 1);\n  }\n\n  /**\n   * Número da página atual\n   */\n  @Prop({ mutable: true, reflect: true }) currentPage: number = 1;\n\n  /**\n  * @type Array<number>\n  * @default []\n  *\n  * Lista de páginas\n  */\n  @State() pageList: Array<number> = [];\n\n  /**\n   * Disparado quando ocorre a mudança de uma página para outra.\n   */\n  @Event({\n    eventName: 'alc-change',\n    cancelable: false,\n  })\n  alcChange: EventEmitter<{\n    from: number;\n    to: number;\n    using: 'isFirst' | 'isPrev' | 'isLast' | 'isNext' | 'isSelect'\n  }>;\n\n  componentWillLoad() {\n    this.pageList = [...new Array(this.totalPages)].map((_, index) => index + 1);\n    this.idSelectPagination = getUniqueId();\n  }\n\n  private paginationItem: PaginationItem = {\n    'isFirst': {\n      icon: 'chevron-double-left',\n      label: 'Ir para primeira página',\n    },\n    'isLast': {\n      icon: 'chevron-double-right',\n      label: 'Ir para última página',\n    },\n    'isPrev': {\n      icon: 'chevron-left',\n      label: 'Ir para página anterior',\n    },\n    'isNext': {\n      icon: 'chevron-right',\n      label: 'Ir para próxima página',\n    },\n  }\n\n  private checkPage = (using: PageChangeType) => {\n    const leftPaginationItems = ['isFirst', 'isPrev'];\n    const rightPaginationItems = ['isLast', 'isNext'];\n\n    if (leftPaginationItems.includes(using)) {\n      return this.currentPage !== 1\n    }\n\n    if (rightPaginationItems.includes(using)) {\n      return this.currentPage !== this.pageList.length\n    }\n\n    return true;\n  }\n\n  private handleSelectedPage = (event: any) => {\n    this.handleChangePage(parseInt(event.target.value), 'isSelect')\n  }\n\n  private handleChangePage(pageNumber: number, using: PageChangeType) {\n    if (!this.checkPage(using)) {\n      return;\n    }\n\n    const newChange =\n      this.alcChange.emit({\n        from: this.currentPage,\n        to: pageNumber,\n        using: using,\n      });\n\n    this.pageChangeHandler(newChange);\n\n  }\n\n  private pageChangeHandler(event: CustomEvent<PageChangeEventProps>) {\n    const { using, to } = event.detail;\n\n    switch (using) {\n      case 'isFirst':\n        this.currentPage = 1;\n        break;\n      case 'isPrev':\n        this.currentPage = this.currentPage - 1;\n        break;\n      case 'isNext':\n        this.currentPage = this.currentPage + 1;\n        break;\n      case 'isLast':\n        this.currentPage = this.totalPages;\n        break;\n      default:\n        this.currentPage = to;\n        break;\n    }\n  }\n\n  private renderPaginationItem = (pageNumber: number, using: PageChangeType) => {\n    const paginationItemIsDisabled = !this.checkPage(using);\n    const paginationItemLabel = (!paginationItemIsDisabled && using !== 'isFirst') ? `, Ir para página ${pageNumber}` : '';\n\n    return (\n      <li>\n        <button\n          onClick={() => this.handleChangePage(pageNumber, using)}\n          class={{\n            'alc-button alc-button-rounded': true,\n            'alc-pagination__button--first': using === 'isFirst',\n            'alc-pagination__button--last': using === 'isLast',\n          }}\n          aria-label={this.paginationItem[using].label + paginationItemLabel}\n          aria-disabled={paginationItemIsDisabled}\n          disabled={paginationItemIsDisabled}\n          {...test('data-test-pagination-button')}\n        >\n          <alc-icon\n            name={this.paginationItem[using].icon}\n            label=\"\"\n          />\n        </button>\n      </li>\n    )\n  }\n\n  render() {\n    return (\n      <Host>\n        <nav role=\"navigation\" aria-label=\"Navegação paginada\" class=\"alc-pagination\">\n          <ul class=\"alc-pagination__content\">\n\n            {this.renderPaginationItem(1, 'isFirst')}\n            {this.renderPaginationItem(this.currentPage - 1, 'isPrev')}\n\n            <li class=\"alc-pagination__item\">\n              <label htmlFor={this.idSelectPagination}>Página</label>\n              <select onChange={this.handleSelectedPage} class=\"alc-pagination__select\" id={this.idSelectPagination} disabled={this.disabledSelect}>\n                {this.pageList.map(page => (\n                  <option value={page} selected={page === this.currentPage} aria-label={`Página ${page}`}>\n                    {page}\n                  </option>\n                ))}\n              </select>\n              de {this.totalPages}\n            </li>\n\n            {this.renderPaginationItem(this.currentPage + 1, 'isNext')}\n            {this.renderPaginationItem(this.pageList.length, 'isLast')}\n\n          </ul>\n        </nav>\n      </Host>\n    );\n  }\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\n\n\nconst iconMap = new Map();\n\niconMap.set('asc', {\n  name: 'chevron-down'\n});\niconMap.set('desc', {\n  name: 'chevron-up'\n});\niconMap.set('none', {\n  name: 'chevron-expand'\n});\n\n\n@Component({\n  tag: 'alc-sort-indicator',\n  scoped: false,\n})\nexport class AlcSortIndicator {\n  /**\n  * Define indicação do sort.\n  */\n  @Prop({\n    reflect: true\n  }) sorting: 'asc' | 'desc' | 'none' = 'none';\n\n  render() {\n    return (\n      <Host>\n        <span class=\"alc-sort-indicator\">\n          <alc-icon name={iconMap.get(this.sorting).name} class=\"alc-sort-indicator__icon\" label=\"\"></alc-icon>\n        </span>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":"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","ignoreList":[]}