{"version":3,"names":["min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","concat","expandPaddingObject","padding","__assign","getPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","__awaiter","_this","_a","_b","strategy","_d","middleware","platform","validMiddleware","filter","Boolean","isRTL","_l","sent","getElementRects","_e","statefulPlacement","middlewareData","resetCount","i","_f","name","fn","initialPlacement","elements","_g","nextX","nextY","data","reset","_j","_h","_k","detectOverflow","state","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","getClippingRect","isElement","_await$platform$isEle","_s","_m","contextElement","getDocumentElement","apply","_r","clippingClientRect","getOffsetParent","offsetParent","getScale","_o","offsetScale","_p","convertOffsetParentRelativeRectToViewportRelativeRect","_q","elementClientRect","arrow","getDimensions","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","centerOffset","flip","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","__rest","_middlewareData$arrow","isBasePlacement","push","placements","__spreadArray","overflow","overflows","overflowsData","_middlewareData$flip","sides","every","nextIndex","_middlewareData$flip2","index","nextPlacement","resetPlacement","_overflowsData$filter","d","sort","a","b","placement_1","_overflowsData$map$so","reduce","acc","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","min_1","max_1","min_2","max_2","limitedCoords","size","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","getComputedStyle","overflowX","overflowY","display","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","some","willChange","contain","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","isOffsetParentAnElement","scroll","offsets","offsetRect","getClientRects","Array","from","getWindowScrollBarX","getDocumentRect","html","scrollWidth","clientWidth","scrollHeight","clientHeight","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParentFn","getDimensionsFn","observeMove","onMove","io","timeoutId","root","cleanup","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","e","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","frameId","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache","computePosition$1","alcPopupCss","AlcPopup","exports","class_1","hostRef","active","distance","sync","prototype","watchActive","newValue","componentDidLoad","disconnectedCallback","anchorEl","popupEl","reposition","resolveMiddleware","then","Object","assign","style","staticSide","x_1","y_1","rotate","incValue","sign","arrowEl","syncWidth","syncHeight","render","h","Host","key","ref","class"],"sources":["node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","node_modules/@floating-ui/core/dist/floating-ui.core.mjs","node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","src/components/alc-popup/alc-popup.css?tag=alc-popup","src/components/alc-popup/alc-popup.tsx"],"sourcesContent":["const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n",":host {\n  display: block;\n}\n\nalc-popup {\n  @apply relative inline-block;\n}\n\n.alc-popup__content {\n  @apply w-max absolute top-0 left-0 hidden z-[1060];\n}\n\n.alc-popup__content--active {\n  @apply block;\n}\n\n.alc-popup__content--fixed {\n  @apply fixed;\n}\n\n.alc-popup__arrow {\n  /*\n    Sendo o componente alc-popup um utilitário para elementos flutuantes,\n    definindo posicionamento, distância, deslocamento, mas não cor, borda etc.,\n    quem for usar o alc-popup é que tem que definir esses aspectos visuais.\n    Para a seta (arrow), define-se portanto somente o posicionamento.\n  */\n  @apply absolute;\n}\n","import { Component, Host, h, Prop, Watch } from '@stencil/core';\nimport { computePosition, flip, shift, autoUpdate, size, offset, arrow } from '@floating-ui/dom';\n\nexport type PopupPlacement =\n  'top'\n  | 'top-start'\n  | 'top-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right'\n  | 'right-start'\n  | 'right-end'\n  | 'left'\n  | 'left-start'\n  | 'left-end';\n\n/**\n * @slot DEFAULT - Slot para o elemento principal do popup.\n *\n * @slot anchor - Slot que serve como âncora e aciona a abertura do popup.\n*/\n\n@Component({\n  tag: 'alc-popup',\n  styleUrl: 'alc-popup.css',\n  shadow: false,\n})\nexport class AlcPopup {\n  private popupEl: HTMLElement;\n  private anchorEl: HTMLElement;\n  private cleanup: ReturnType<typeof autoUpdate> | undefined;\n  private padding = 8;\n  private arrowEl: HTMLElement;\n\n  /**\n  * Aciona a abertura do popup.\n  */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n  * Define o posicionamento do popup.\n  */\n  @Prop({ reflect: true }) placement: PopupPlacement = 'bottom';\n\n  /**\n  * Quando definido como `true`, troca o posicionamento (placement) do popup para mantê-lo visível.\n  */\n  @Prop({ reflect: true }) flip: boolean = false;\n\n  /**\n  * Quando definido como `true`, desloca o popup ao longo do eixo para mantê-lo visível quando cortado.\n  */\n  @Prop({ reflect: true }) shift: boolean = false;\n\n  /**\n  * Determina como o pop-up é posicionado. A estratégia `absoluta` funciona bem na maioria dos casos.\n  * Se o overflow cortar o popup, usar a posição `fixed` muitas vezes pode contornar isso.\n  */\n  @Prop({ reflect: true }) strategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n  * Define a distância entre o popup e âncora.\n  */\n  @Prop({ reflect: true }) distance: number = 0;\n\n  /** Syncs the popup's width or height to that of the anchor element. */\n  @Prop({ reflect: true }) sync: 'width' | 'height' | 'both' = null;\n\n  /**\n  *  Adiciona arrow no popup.\n  */\n  @Prop({ reflect: true }) arrow: boolean = false;\n\n  @Watch('active')\n  watchActive(newValue: boolean) {\n    if (newValue) {\n      // Ao ativar, start;\n      this.start();\n    }\n    else {\n      // Ao desativar, cleanup\n      if (this.cleanup) {\n        this.cleanup();\n      }\n    }\n  }\n\n  componentDidLoad() {\n    if (this.active) {\n      this.start();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.cleanup) {\n      this.cleanup();\n    }\n  }\n\n  start() {\n    if (!this.anchorEl || !this.popupEl) {\n      return;\n    }\n\n    // autoUpdate retorna uma função para limpar os event listeners\n    this.cleanup = autoUpdate(this.anchorEl, this.popupEl, () => {\n      this.reposition();\n    });\n  }\n\n  reposition() {\n    const middleware = this.resolveMiddleware();\n\n    computePosition(this.anchorEl, this.popupEl, {\n      placement: this.placement,\n      middleware,\n      strategy: this.strategy,\n    }).then(({ x, y, middlewareData, placement }) => {\n      // Descobri que aqui da para colocar o 'transform: translate()';\n      Object.assign(this.popupEl.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      });\n\n      const staticSide = { top: 'bottom', right: 'left', bottom: 'top', left: 'right' }[placement.split('-')[0]]!;\n\n      if (middlewareData.arrow) {\n        const {x, y, centerOffset} = middlewareData.arrow;\n        const rotate = { top: 225, right: 315, bottom: 45, left: 135 };\n\n        let top = '';\n        let left = '';\n        \n        const incValue = Math.sign(centerOffset) * -3;\n\n        if (placement === 'bottom' || placement === 'top') {\n          left = `${x + incValue}px`\n        } else {\n          top = `${y + incValue}px`\n        }\n\n        // Reseta os valores de top e bottom antes de atribuir o valor a um deles, se não fica os dois valores e buga a posição do arrow.\n        Object.assign(this.arrowEl.style, {\n          bottom: '',\n          right: '',\n          top,\n          left,\n          [staticSide]: `${-this.arrowEl.offsetWidth/2}px`,\n          transform: `rotate(${rotate[staticSide]}deg)`\n        });\n      }\n\n    });\n  }\n\n  resolveMiddleware(): Array<any> {\n    const padding = this.padding;\n\n    const middleware = [\n      offset({ mainAxis: this.distance })\n    ];\n\n    // Aqui temos as funções prontas do floating-ui mas podemos customizar e/ou criar se for necessário.\n    if (this.flip) {\n      middleware.push(\n        flip({\n          padding: padding,\n        })\n      )\n    }\n\n    // middleware.push(\n    //   size({\n    //     apply({rects, availableWidth, availableHeight, elements}) {\n    //       Object.assign(elements.floating.style, {\n    //         maxWidth: `${availableWidth - padding}px`,\n    //         maxHeight: `${availableHeight - padding}px`,\n    //         width: `${rects.reference.width}px`,\n    //       });\n    //     },\n    //   }),\n    // );\n\n\n    middleware.push(\n      size({\n        apply: ({rects, availableWidth, availableHeight, elements}) => {\n\n          if (this.sync) {\n            const syncWidth = this.sync === 'width' || this.sync === 'both';\n            const syncHeight = this.sync === 'height' || this.sync === 'both';\n\n            Object.assign(elements.floating.style, {\n              width: syncWidth ? `${rects.reference.width}px` : '',\n              height: syncHeight ? `${rects.reference.width}px` : '',\n            });\n\n          } else {\n            Object.assign(elements.floating.style, {\n              width: '',\n              height: '',\n            });\n          }\n          \n          // Object.assign(elements.floating.style, {\n          //   maxWidth: `${availableWidth - padding}px`,\n          //   maxHeight: `${availableHeight - padding}px`,\n          // });\n          \n        }\n      })\n    );\n\n\n    if (this.shift) {\n      middleware.push(shift({padding: padding}))\n    }\n\n    if (this.arrow) {\n      middleware.push(arrow({element: this.arrowEl}))\n    }\n\n    return middleware;\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div ref={(el: HTMLElement) => this.anchorEl = el}>\n          <slot name=\"anchor\"></slot>\n        </div>\n        <div\n          class={{\n            'alc-popup__content': true,\n            'alc-popup__content--active': this.active,\n            'alc-popup__content--fixed': this.strategy === 'fixed',\n          }}\n          ref={(el: HTMLElement) => this.popupEl = el}\n        >\n          <slot></slot>\n          <div ref={(el: HTMLElement) => this.arrowEl = el} class={this.arrow ? 'alc-popup__arrow' : ''}></div>\n        </div>\n      </Host>\n    );\n  }\n}\n\n"],"mappings":"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","ignoreList":[]}