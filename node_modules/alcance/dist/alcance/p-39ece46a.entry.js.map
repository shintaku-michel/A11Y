{"version":3,"names":["alcScrollPanelBaseCss","themeAlcScrollPanelCss","SCROLL_STEP","AlcScrollPanel","constructor","hostRef","this","hasScroll","canScrollRight","canScrollLeft","hasFocus","scrollWidth","scrolling","resizeThrottle","throttle","resize","scrollThrottle","handleScroll","themeLoadedHandler","handleResize","handleScrollToElement","element","scrollIntoView","inline","block","scrollToElement","content","offsetWidth","setCanScroll","scrollRight","scrollLeft","startScrolling","button","scroll","window","setInterval","disabled","stopScrolling","apply","startScrollingRight","e","currentTarget","HTMLButtonElement","startScrollingLeft","clearInterval","Math","ceil","componentDidRender","_a","mo","disconnect","MutationObserver","logger","debug","forceUpdate","el","observe","childList","subtree","disconnectedCallback","cancel","render","h","Host","key","class","onClick","bind","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onTouchCancel","tabindex","name","label","ref","onScroll","alcTabButtonBaseCss","themeAlcTabButtonCss","AlcTabButton","selectedChanged","newValue","oldValue","setAttribute","selectTab","tab","undefined","alcClick","emit","preventDefault","keyDownHandler","handled","alcNext","alcPrevious","alcFirst","alcLast","componentWillLoad","report","tagName","toLowerCase","getId","id","onKeyDown","role","selected","active"],"sources":["src/components/alc-scroll-panel/alc-scroll-panel-base.css?tag=alc-scroll-panel&mode=base","src/components/alc-scroll-panel/alc-scroll-panel.css?tag=alc-scroll-panel&mode=theme","src/components/alc-scroll-panel/alc-scroll-panel.tsx","src/components/alc-tab-button/alc-tab-button-base.css?tag=alc-tab-button&mode=base","src/components/alc-tab-button/alc-tab-button.css?tag=alc-tab-button&mode=theme","src/components/alc-tab-button/alc-tab-button.tsx"],"sourcesContent":["alc-scroll-panel {\n  @apply block;\n}\n\n.alc-scroll-panel {\n  @apply flex flex-row items-stretch;\n}\n\n.alc-scroll-panel__content {\n  @apply overflow-x-hidden whitespace-nowrap;\n}","@import 'alc-scroll-panel-base.css';\n\n/* Definição das variáveis - Setup dos temas*/\n\n/* DARK */\n[data-alc-theme=\"dark\"] alc-scroll-panel {\n  --border-color: var(--alc-color-border);\n  --shadow-color:  theme('colors.gray.30');\n  --outline-color: var(--alc-color-action-30);\n}\n\n[data-alc-theme=\"dark\"] .alc-scroll-panel__button {\n  --text-color: var(--alc-color-link-text);\n  --bg-color: theme('colors.transparent');\n}\n\n[data-alc-theme=\"dark\"] .alc-scroll-panel__button:hover {\n  --text-color: var(--alc-color-text-0);\n  --bg-color: var(--alc-color-action-50);\n}\n\n[data-alc-theme=\"dark\"] .alc-scroll-panel__button:active {\n  --text-color: var(--alc-color-text-0);\n  --bg-color: var(--alc-color-action-70);\n}\n\n[data-alc-theme=\"dark\"] .alc-scroll-panel__button:disabled {\n  --text-color: var(--alc-color-neutral-60);\n  --bg-color: theme('colors.transparent');\n}\n\n\n/* LIGHT */\n[data-alc-theme=\"light\"] alc-scroll-panel {\n  --border-color: var(--alc-color-border);\n  --shadow-color:  theme('colors.gray.30');\n  --outline-color: var(--alc-color-action-60);\n}\n\n[data-alc-theme=\"light\"] .alc-scroll-panel__button {\n  --text-color: var(--alc-color-link-text);\n  --bg-color: theme('colors.transparent');\n}\n\n[data-alc-theme=\"light\"] .alc-scroll-panel__button:hover {\n  --text-color: var(--alc-color-text-contrast);\n  --bg-color: var(--alc-color-action-50);\n}\n\n[data-alc-theme=\"light\"] .alc-scroll-panel__button:active {\n  --text-color: var(--alc-color-text-contrast);\n  --bg-color: var(--alc-color-action-70);\n}\n\n[data-alc-theme=\"light\"] .alc-scroll-panel__button:disabled {\n  --text-color: var(--alc-color-neutral-30);\n  --bg-color: theme('colors.transparent');\n}\n\n\n.alc-scroll-panel__button {\n  --border-width: var(--alc-border-width);\n  \n  /* Borda top para deixar o elemento centralizado */\n  border-width: var(--border-width) 0;\n  @apply border-b-[--border-color] border-t-transparent;\n  @apply w-10 h-full text-[--text-color] bg-[--bg-color] transition-colors;\n}\n\n.alc-scroll-panel__wrapper-content {\n  @apply overflow-hidden relative;\n}\n\n.alc-scroll-panel__content {\n  @apply overflow-auto;\n}\n\n.alc-scroll-panel__content::-webkit-scrollbar {\n  display: none;\n}\n\n\n.alc-scroll-panel__has-scroll-left::before,\n.alc-scroll-panel__has-scroll-right::after {\n  @apply block content-[\"\\200C\"];\n  @apply w-3 h-full absolute top-0 z-10 pointer-events-none;\n}\n\n.alc-scroll-panel__has-scroll-left::before {  \n  @apply left-0;\n  box-shadow: inset 8px 0px 8px -8px var(--shadow-color);\n}\n\n.alc-scroll-panel__has-scroll-right::after {\n  @apply right-0;\n  box-shadow: inset -8px 0px 8px -8px var(--shadow-color);\n}\n\n.alc-scroll-panel__button:focus-visible, .alc-scroll-panel__button.active:focus-visible {\n  @apply outline outline-2 outline-[--outline-color] -outline-offset-2;\n}","import { Component, Host, h, Listen, State, Element, forceUpdate, Prop, Watch } from '@stencil/core';\nimport logger from '../utils/logger';\nimport { throttle } from '../utils/throttle';\n\nconst SCROLL_STEP = 20;\n\n@Component({\n  tag: 'alc-scroll-panel',\n  styleUrls: {\n    base: 'alc-scroll-panel-base.css',\n    theme: 'alc-scroll-panel.css'\n  },\n  scoped: false,\n})\nexport class AlcScrollPanel {\n\n  @Element() el: HTMLAlcScrollPanelElement;\n\n  @State() hasScroll: boolean = false;\n  @State() canScrollRight: boolean = false;\n  @State() canScrollLeft: boolean = false;\n  /**\n  * Define se há foco.\n  */\n  @Prop({ reflect: true }) hasFocus: boolean = true;\n  /**\n  * Define para qual elemento o scroll vai.\n  */\n  @Prop({ reflect: true }) scrollToElement: HTMLElement;\n\n  private content: HTMLDivElement;\n  private scrollWidth: number = 0;\n  private scrolling: number = 0;\n  private mo: MutationObserver;\n  private resizeThrottle = throttle(this.resize, 200);\n  private scrollThrottle = throttle(this.handleScroll, 300);\n\n  @Listen('themeLoaded', {\n    target: 'window'\n  })\n  themeLoadedHandler() {\n    this.handleScroll();\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.resizeThrottle();\n  }\n\n  @Watch('scrollToElement')\n  handleScrollToElement(element: HTMLElement) {\n    if(!!element){\n      element.scrollIntoView({ inline: \"center\", block: 'nearest' });\n    }\n  }\n\n  private resize() {\n    this.handleScroll();\n    this.handleScrollToElement(this.scrollToElement);\n  }\n\n  private handleScroll() {\n    this.scrollWidth = this.content.scrollWidth;\n    this.hasScroll = this.scrollWidth > this.content.offsetWidth;\n    this.setCanScroll();\n  }\n\n  private scrollRight() { // Pra frente >>>\n    this.content.scrollLeft += SCROLL_STEP;\n    this.setCanScroll();\n  }\n\n  private scrollLeft() { // Pra trás <<<\n    this.content.scrollLeft = this.content.scrollLeft - SCROLL_STEP;\n    this.setCanScroll();\n  }\n\n  private startScrolling(button: HTMLButtonElement, scroll: Function) {\n    if (this.scrolling) return;\n\n    this.scrolling = window.setInterval(() => {\n      if (button.disabled) {\n        this.stopScrolling();\n        return;\n      }\n\n      scroll.apply(this);\n    }, 200);\n  }\n\n  private startScrollingRight(e: MouseEvent) {\n    const button = e.currentTarget;\n\n    if(button instanceof HTMLButtonElement) {\n      this.startScrolling(button, this.scrollRight);\n    }\n  }\n\n  private startScrollingLeft(e: MouseEvent) {\n    const button = e.currentTarget;\n\n    if(button instanceof HTMLButtonElement) {\n      this.startScrolling(button, this.scrollLeft);\n    }\n  }\n\n  private stopScrolling() {\n    window.clearInterval(this.scrolling);\n    this.scrolling = 0;\n  }\n\n  private setCanScroll() {\n    // Math.ceil foi necessário ao verificar funcionamento em um dispositivo móvel real,\n    // onde scrollLeft apresenta números fracionários.\n    this.canScrollRight = Math.ceil(this.content.offsetWidth + this.content.scrollLeft) < this.scrollWidth;\n    this.canScrollLeft = this.content.scrollLeft > 0;\n  }\n\n  componentDidRender() {\n    /*\n     O trecho abaixo permite que o componente seja atualizado\n     sempre que houver mudanças no conteúdo (como a inclusão de \"fihos\").\n     Isso foi feito para permitir, por exemplo, que o conteúdo do panel\n     seja atualizado dinamicamente com a manipulação do DOM.\n     */\n    this.mo?.disconnect();\n    this.mo = new MutationObserver(() => {\n      logger.debug('forceUpdate scroll-panel');\n      forceUpdate(this.el);\n    });\n    this.mo.observe(this.el, {\n      childList: true,\n      subtree: true\n    });\n\n    this.handleScroll();\n  }\n\n  disconnectedCallback() {\n    this.mo?.disconnect();\n    this.resizeThrottle.cancel();\n    this.scrollThrottle.cancel();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"alc-scroll-panel\">\n          {\n            this.hasScroll\n            ? <div\n                key=\"left-button\"\n              >\n                <button\n                  onClick={this.scrollLeft.bind(this)}\n                  onMouseDown={this.startScrollingLeft.bind(this)}\n                  onMouseUp={this.stopScrolling.bind(this)}\n                  onTouchStart={this.startScrollingLeft.bind(this)}\n                  onTouchEnd={this.stopScrolling.bind(this)}\n                  onTouchCancel={this.stopScrolling.bind(this)}\n                  class=\"alc-scroll-panel__button\"\n                  disabled={!this.canScrollLeft}\n                  aria-label=\"Ir para esquerda\"\n                  tabindex={this.hasFocus ? '0' : '-1'}\n                >\n                  <alc-icon name=\"chevron-left\" label=''></alc-icon>\n                </button>\n              </div>\n            : null\n          }\n          <div\n            class={{\n              \"alc-scroll-panel__wrapper-content\": true,\n              \"alc-scroll-panel__has-scroll-left\": this.canScrollLeft,\n              \"alc-scroll-panel__has-scroll-right\": this.canScrollRight\n            }}\n            key=\"content\"\n          >\n            <div\n              class=\"alc-scroll-panel__content\"\n              ref={el => this.content = el}\n              onScroll={() => this.scrollThrottle()}\n            >\n              <slot />\n            </div>\n          </div>\n          {\n            this.hasScroll\n            ? <div\n                key=\"right-button\"\n              >\n                <button\n                  onClick={this.scrollRight.bind(this)}\n                  onMouseDown={this.startScrollingRight.bind(this)}\n                  onMouseUp={this.stopScrolling.bind(this)}\n                  onTouchStart={this.startScrollingRight.bind(this)}\n                  onTouchEnd={this.stopScrolling.bind(this)}\n                  onTouchCancel={this.stopScrolling.bind(this)}\n                  class=\"alc-scroll-panel__button\"\n                  disabled={!this.canScrollRight}\n                  aria-label=\"Ir para direita\"\n                  tabindex={this.hasFocus ? '0' : '-1'}\n                >\n                  <alc-icon name=\"chevron-right\" label=''></alc-icon>\n                </button>\n              </div>\n            : null\n          }\n        </div>\n      </Host>\n    );\n  }\n}","/* CSS básico para que o componente funcione - sem dependências externas */\nalc-tab-button {\n  @apply inline-block;\n}\n\n.alc-tabs__button.active {\n  @apply underline;\n}","/* Definição das variáveis - Setup dos temas*/\n\n/* \n  Definição das variáveis que estão no alc-tabs \n    --bg-color\n    --border-color\n    --border-width\n    --outline-color\n*/\n\n/* DARK */\n[data-alc-theme=\"dark\"] .alc-tabs__button {\n  --text-color: theme('colors.cyan.20v');\n  --bg-color-button: var(--alc-color-neutral-70);\n}\n\n[data-alc-theme=\"dark\"] .alc-tabs__button:hover {\n  --bg-color-button: theme('colors.gray-cool.70');\n}\n\n[data-alc-theme=\"dark\"] .alc-tabs__button.active {\n  --text-color: var(--alc-color-text-primary);\n  --bg-color-button: var(--bg-color);\n}\n\n/* LIGHT */\n[data-alc-theme=\"light\"] .alc-tabs__button {\n  --text-color: var(--alc-color-link-text);\n  --bg-color-button: theme('colors.gray-cool.10');\n}\n\n[data-alc-theme=\"light\"] .alc-tabs__button:hover {\n  --bg-color-button: theme('colors.gray-cool.20');\n}\n\n[data-alc-theme=\"light\"] .alc-tabs__button.active {\n  --text-color: var(--alc-color-text-primary);\n  --bg-color-button: var(--bg-color);\n}\n\n/* CSS COMUM a todos os temas */\nalc-tab-button {\n  @apply inline-block;\n}\n\n.alc-tabs__button {\n  @apply z-10 p-2 pt-3 text-[--text-color] bg-[--bg-color-button] border-[--border-color];\n  border-right-width: var(--border-width);\n  border-bottom-width: var(--border-width);\n}\n\n\n.alc-tabs__button.active {\n  @apply no-underline cursor-default pt-2;\n  @apply border-t-4 border-b-transparent;\n}\n\n\n/* \n  O primeiro alc-tab-button quando esta ativo deixa transparente a borda inferior.\n  Porém ficava um espaço entre essa borda invisivel e o do conteudo.\n  Foi adicionado borda no 'host' do primeiro botão para solucionar esse problema. \n*/\nalc-tab-button:first-child {\n  @apply border-[--border-color];\n  border-left-width: var(--border-width);\n}\n\n.alc-tabs__button:focus-visible, .alc-tabs__button.active:focus-visible {\n  @apply outline outline-2 outline-[--outline-color] -outline-offset-8;\n}\n","import { Component, Host, h, Event, EventEmitter, Prop, Element, Watch } from '@stencil/core';\nimport logger from '../utils/logger';\n\n@Component({\n  tag: 'alc-tab-button',\n  styleUrls: {\n    base: 'alc-tab-button-base.css',\n    theme: 'alc-tab-button.css',\n  },\n  scoped: false,\n})\nexport class AlcTabButton {\n  private button: HTMLElement;\n\n  @Element() el!: HTMLAlcTabButtonElement;\n\n  /**\n   * Um identificador da tab deve ser fornecido para cada `alc-tab`.\n   * Isso é usado internamente para referenciar a tab selecionada.\n   */\n  @Prop({ reflect: true }) tab!: string;\n\n  /**\n   * Indica que a tab está selecionada.\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean;\n  @Watch('selected')\n  selectedChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      if (newValue) {\n\n        this.button.setAttribute('tabindex', '0');\n      }\n      else {\n\n        this.button.setAttribute('tabindex', '-1');\n      }\n    }\n  }\n\n  /**\n   * Evento disparado ao clicar em alc-tab-button\n   */\n  @Event({ eventName: 'alc-click' }) alcClick: EventEmitter<{\n    tab: string\n  }>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button seguinte deve ser selecionado\n   */\n  @Event({ eventName: 'alc-next' }) alcNext: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button anterior deve ser selecionado\n   */\n  @Event({ eventName: 'alc-previous' }) alcPrevious: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o primeiro alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-first' }) alcFirst: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o último alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-last' }) alcLast: EventEmitter<null>;\n\n  private selectTab(e: Event) {\n\n    if (this.tab !== undefined) {\n      this.alcClick.emit({\n        tab: this.tab\n      });\n      e.preventDefault();\n    }\n  }\n\n  // Inspirado na implementação do WAI - função onKeyDown().\n  // https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/tabs/examples/js/tabs-automatic.js\n  private keyDownHandler(e: KeyboardEvent) {\n    let handled = false;\n    switch(e.key) {\n      case 'ArrowRight':\n        this.alcNext.emit();\n        handled = true;\n        break;\n      case 'ArrowLeft':\n        this.alcPrevious.emit();\n        handled = true;\n        break;\n      case 'Home':\n        this.alcFirst.emit();\n        handled = true;\n        break;\n      case 'End':\n        this.alcLast.emit();\n        handled = true;\n        break;\n    }\n    if (handled) {\n      e.preventDefault();\n    }\n  }\n\n  componentWillLoad() {\n  }\n\n  render() {\n    this.tab ?? logger.report('tab', this.el.tagName.toLowerCase(), this.el);\n    const getId = (): string => {\n\n      let id: string;\n      if (this.el.id) {\n        id = this.el.id;\n      }\n      else {\n        id = `alc-button_${this.el.tab}`;\n      }\n\n      return id;\n    }\n\n\n    return (\n      <Host>\n        <button\n          onClick={this.selectTab.bind(this)}\n          onKeyDown={this.keyDownHandler.bind(this)}\n          role='tab'\n          aria-selected={this.selected ? 'true' : 'false'}\n          tabindex='-1'\n          id={getId()} // Precisa ter id (para acessibilidade)\n          class={{\n            'alc-tabs__button': true,\n            active: this.selected\n          }}\n          ref={el => this.button = el}\n        >\n          <slot />\n        </button>\n      </Host>\n    );\n  }\n}\n\n"],"mappings":"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","ignoreList":[]}