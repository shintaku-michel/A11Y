{"version":3,"names":["alcSidepanelCss","MOBILE_BREAKPOINT","Number","screens","md","split","DEFAULT_STATE","visible","AlcSidepanel","constructor","hostRef","this","isMobile","drawer","slotContainer","mobileSlot","desktopSlot","slotContent","state","renderMobile","h","Object","assign","class","onClick","show","test","name","label","ref","el","alcStateChange","emit","hide","handleResize","window","innerWidth","componentWillLoad","detail","alcStateRequest","componentDidRender","_a","children","length","appendChild","setOffset","top","document","querySelector","_b","ro","disconnect","ResizeObserver","observe","disconnectedCallback","render","console","debug","classList","add","remove","Host","key","type","logger","offsetHeight","style","setProperty","toString"],"sources":["src/components/alc-sidepanel/alc-sidepanel.css?tag=alc-sidepanel","src/components/alc-sidepanel/alc-sidepanel.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nalc-sidepanel {\n  /*\n    --offset\n    Esse valor é calculado pelo componente.\n    Representa a posição inicial (vertical) do sidepanel na página.\n    Deve fazer parte da API do sidepanel para que a aplicação possa ajustar caso seja necessário.\n  */\n  /* O valor default é 80px, que seria a altura padrão em produção, em situação \"normal\" */\n  --_offset: calc(var(--offset, 80) * 1px);\n  /* A altura do sidepanel é o total da view subtraído do offset. */\n  --height: calc(100vh - var(--_offset));\n}\n\n.alc-sidepanel__mobile-container {\n  @apply md:hidden;\n}\n\n.alc-sidepanel__desktop-container {\n  @apply hidden md:block sticky top-[--_offset] z-[1020];\n}\n\n.alc-sidepanel__desktop-slot {\n  @apply hidden overflow-y-auto bg-white dark:bg-black;\n  height: var(--height)\n}\n\n.alc-sidepanel__desktop-slot.is-open {\n  @apply block w-72 shadow-xl;\n}","import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State } from '@stencil/core';\nimport screens from '../../../tailwind-screens';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n// Pega o valor definido da configuração do tailwind e remove o 'px'\nconst MOBILE_BREAKPOINT = Number(screens.md.split('px')[0]);\nconst DEFAULT_STATE = {\n  visible: true\n};\n\n/**\n * @slot DEFAULT - Slot para o conteúdo do sidepanel.\n */\n\n@Component({\n  tag: 'alc-sidepanel',\n  styleUrl: 'alc-sidepanel.css',\n  scoped: false,\n})\nexport class AlcSidepanel {\n  @Element() el: HTMLAlcSidepanelElement;\n\n  @State() isMobile: boolean = false;\n\n  drawer: HTMLAlcDrawerElement = null;\n  slotContainer: HTMLElement = null;\n  mobileSlot: HTMLElement = null;\n  desktopSlot: HTMLElement = null;\n  slotContent: HTMLElement = null;\n\n  ro: ResizeObserver;\n\n  state: {\n    visible: boolean,\n  } = DEFAULT_STATE;\n\n  /**\n   * Indica se o sidepanel está visível.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  })\n  visible: boolean = true;\n\n  /**\n   * Abre o sidepanel.\n   * @returns O valor retornado é `true` se o painel foi exibido com a chamada do método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    this.visible = true;\n    this.state.visible = this.visible;\n    if (this.isMobile) {\n      return this.drawer.show();\n    }\n    else {\n      this.alcStateChange.emit({state: this.state});\n    }\n    return;\n  }\n\n  /**\n   * Fecha o sidepanel\n   * @returns O valor retornado é `true` se o painel foi dispensado com a chamada do método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    this.visible = false;\n    this.state.visible = this.visible;\n    if (this.isMobile) {\n      return this.drawer.hide();\n    }\n    else {\n      this.alcStateChange.emit({state: this.state});\n    }\n    return;\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.isMobile = window.innerWidth < MOBILE_BREAKPOINT;\n  }\n\n  /**\n   * Evento disparado quando o estado do sidepanel é alterado.\n   */\n  @Event({\n    eventName: 'alc-state-change',\n    cancelable: false,\n    bubbles: true\n  }) alcStateChange: EventEmitter<{state: {visible: boolean}}>;\n\n  /**\n   * Evento disparado quando o sidepanel precisa recuperar o estado.\n   */\n  @Event({\n    eventName: 'alc-state-request',\n    cancelable: false,\n    bubbles: true\n  }) alcStateRequest: EventEmitter<{state: {visible: boolean}}>;\n\n  componentWillLoad() {\n    let detail = {\n      state: this.state\n    };\n\n    this.handleResize();\n    this.state.visible = this.visible;\n    this.alcStateRequest.emit(detail);\n    // Garante que o objeto this.state tenha as chaves esperadas, independente do valor de detail.state\n    this.state = {...DEFAULT_STATE, ...detail.state};\n    this.visible = this.state.visible;\n  }\n\n  componentDidRender() {\n    if (this.slotContainer.children?.length) {\n      // @TODO Melhorar isso, pois pressupõe que tem somente um children\n      this.slotContent = this.slotContainer.children[0] as HTMLElement;\n    }\n\n    if (this.isMobile) {\n      this.mobileSlot.appendChild(this.slotContent);\n    }\n    else {\n      this.desktopSlot.appendChild(this.slotContent);\n    }\n\n    this.setOffset();\n\n    const top: HTMLElement = document.querySelector('[data-alc-top]');\n\n    this.ro?.disconnect();\n    this.ro = new ResizeObserver(() => {\n      this.setOffset();\n    });\n    this.ro.observe(top);\n\n  }\n\n  disconnectedCallback() {\n    this.ro?.disconnect();\n  }\n\n  renderMobile = () => (\n    [\n      <button\n        class=\"alc-button alc-button-rounded absolute right-2 -mt-[3.25rem] text-white\"\n        onClick={() => this.drawer.show()}\n        {...test('data-test-sidepanel-mobile-close-button')}\n        data-alc-sidepanel-drawer-button\n      >\n        <alc-icon name=\"list\" label=\"Abrir\"></alc-icon>\n      </button>,\n      <alc-drawer\n        onSl-show={() => this.visible = true}\n        onSl-hide={() => this.visible = false}\n        ref={el => this.drawer = el}\n      >\n        <div ref={el => this.mobileSlot = el}></div>\n      </alc-drawer>\n    ]\n  )\n\n  render() {\n    console.debug('render menu container');\n\n    if (!this.isMobile && this.visible) {\n      document.querySelector('html').classList.add('alc-sidepanel-visible');\n    }\n    else {\n      document.querySelector('html').classList.remove('alc-sidepanel-visible');\n    }\n\n    return (\n      <Host\n        class=\"alc-sidepanel\"\n      >\n        <div ref={el => this.slotContainer = el}>\n          <slot></slot>\n        </div>\n        <div\n          class={{\n            'alc-sidepanel__mobile-container': true,\n          }}\n        >\n          {this.renderMobile()}\n        </div>\n        <div\n          class={{\n            'alc-sidepanel__desktop-container': true,\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"alc-button alc-button-rounded fixed left-2 -mt-[3.75rem] text-white z-[1020] focus-visible:outline-2 focus-visible:outline-white\"\n            onClick={() => this.visible ? this.hide() : this.show()}\n            aria-pressed={this.visible ? 'true' : 'false'}\n            {...test('data-test-sidepanel-desktop-close-button')}\n            data-alc-sidepanel-button\n          >\n            <alc-icon name=\"list\" label=\"Exibir navegação\"></alc-icon>\n          </button>\n          <div\n            ref={el => this.desktopSlot = el}\n            class={{\n              'alc-sidepanel__desktop-slot': true,\n              'is-open': this.visible,\n            }}\n          >\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  setOffset() {\n    const top: HTMLElement = document.querySelector('[data-alc-top]');\n    logger.debug(top.offsetHeight);\n    this.el.style.setProperty('--offset', top.offsetHeight.toString());\n  }\n}"],"mappings":"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","ignoreList":[]}