{"version":3,"file":"alc-field.alc-theme.entry.esm.js","sources":["src/components/alc-field/alc-field.css?tag=alc-field","src/components/alc-field/alc-field.tsx","src/components/alc-theme/alc-theme-base.css?tag=alc-theme&mode=base","src/components/alc-theme/alc-theme.css?tag=alc-theme&mode=theme","src/components/alc-theme/alc-theme.tsx"],"sourcesContent":["\n[data-alc-theme=\"light\"] alc-field {\n  --text-color: var(--alc-color-text-4);\n  --text-color-label: var(--alc-color-text-0);\n  --text-color-placeholder: var(--alc-color-text-4);\n\n  --bg-color: var(--alc-color-surface-primary);\n\n  --shadow-color: var(--alc-color-neutral-5);\n\n  --outline-color: var(--alc-color-action-60);\n\n  --border-color: var(--alc-color-neutral-60);\n  --border-color-hover: var(--alc-color-action-60);\n  --border-color-focus : var(--alc-color-action-20);\n\n  /* Estilização de desabilitado */\n  --bg-color-disabled    : var(--alc-color-neutral-10);\n  --border-color-disabled: var(--alc-color-neutral-40);\n  --text-color-disabled  : var(--alc-color-text-4);\n\n  /* Estilização de error */\n  --text-color-error: var(--alc-color-error-50);\n  --border-color-error       : var(--alc-color-error-50);\n  --border-color-hover-error : var(--alc-color-error-45);\n  --border-color-focus-error : var(--alc-color-error-20);\n}\n\n[data-alc-theme=\"dark\"] alc-field {\n  --text-color: var(--alc-color-text-4);\n  --text-color-label: var(--alc-color-text-0);\n  --text-color-placeholder: var(--alc-color-text-4);\n\n  --bg-color: var(--alc-color-neutral-100);\n\n  --shadow-color: var(--alc-color-neutral-80);\n\n  --outline-color: var(--alc-color-action-30);\n\n  --border-color: var(--alc-color-neutral-30);\n  --border-color-hover: var(--alc-color-action-40);\n  --border-color-focus : var(--alc-color-action-70);\n\n  /* Estilização de desabilitado */\n  --bg-color-disabled    : var(--alc-color-neutral-80);\n  --border-color-disabled: var(--alc-color-neutral-50);\n  --text-color-disabled  : var(--alc-color-text-4);\n\n  /* Estilização de error */\n  --text-color-error: var(--alc-color-error-45);\n  --border-color-error       : var(--alc-color-error-45);\n  --border-color-hover-error : var(--alc-color-error-50);\n  --border-color-focus-error : var(--alc-color-error-70);\n}\n\n\n.alc-field {\n  @apply flex flex-col gap-1;\n}\n\n.alc-field__label {\n  @apply text-[--text-color-label];\n}\n\n.alc-field__core {\n  @apply flex flex-col gap-1;\n}\n\n.alc-field__text {\n  @apply text-sm text-[--text-color];\n\n  &--error {\n    @apply text-[--text-color-error];\n  }\n}\n\n.alc-field__input {\n  @apply shadow-inner shadow-[--shadow-color] w-full transition-colors min-h-[theme(height.10)];\n  @apply bg-[--bg-color] border border-[--border-color];\n  @apply placeholder:text-[--text-color-placeholder];\n\n  @apply hover:border-[--border-color-hover];\n  @apply focus:ring-0 focus:border-[--border-color-hover] focus:outline focus:outline-2 focus:outline-offset-2 focus:outline-[--outline-color];\n\n  @apply disabled:shadow-none disabled:bg-[--bg-color-disabled] disabled:border-[--border-color-disabled];\n  @apply disabled:text-[--text-color-disabled] disabled:cursor-not-allowed;\n  @apply disabled:hover:border-[--border-color-disabled];\n}\n\n.alc-field__input--error {\n  @apply border-[--border-color-error];\n  @apply hover:border-[--border-color-hover-error];\n  @apply focus:border-[--border-color-hover-error];\n}","import { Component, Element, Host, h, Prop, State, Watch} from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\n\n/**\n * @slot - Slot para o controle de formulário.\n * Pode ser um `input` (text, number, password, email etc.), `select` ou `textarea`.\n *\n * @slot label - Slot para o elemento label do campo. Há opção de adicionar apenas o texto por meio da propriedade `label`.\n * Use esse recurso case seja necessário alguma personalização no HTML referente ao label.\n *\n * @cssClass alc-field__label - Aplicada ao elemento `label`.\n * @cssClass alc-field__core - Aplicada ao elemento que agrupa o controle de formulário, mensagem de erro e texto de ajuda.\n*/\n\n@Component({\n  tag: 'alc-field',\n  styleUrl: 'alc-field.css',\n  scoped: false,\n})\nexport class AlcField {\n\n  describedBy = new Map();\n  errorId = '';\n  hintId = '';\n\n  @Element() el: HTMLAlcFieldElement;\n\n  @State() input: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n  @State() inputId: string;\n  @State() slottedElement: HTMLElement;\n\n  /**\n   * Texto do label do input.\n  */\n  @Prop({ reflect: true }) label?: string;\n\n  /**\n   * Texto de ajuda.\n  */\n  @Prop({ reflect: true }) hint: string = '';\n\n  /**\n   * Indica se o input é obrigatório.\n  */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  /**\n   * Texto de mensagem de erro.\n  */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  }) errorMsg: string = '';\n  @Watch('errorMsg')\n  watchErrorMsg(newValue: string) {\n    logger.debug('watchErrorMsg', newValue, this.input);\n\n    if (newValue) {\n      if (this.slottedElement.tagName === 'ALC-INPUT-FILE') {\n        const mode = this.slottedElement.getAttribute('mode');\n        if (mode === 'dropzone') {\n          const dropzoneElement = this.slottedElement.querySelector('.alc-input-file__dropzone');\n          if (dropzoneElement) {\n            dropzoneElement.classList.add('alc-field__input--error');\n          }\n        } else if (mode === 'input') {\n          const textInputElement = this.slottedElement.querySelector('.alc-input-file__text-input');\n          if (textInputElement) {\n            textInputElement.classList.add('alc-field__input--error');\n          }\n        } else if (mode === 'button') {\n          const buttonElement = this.slottedElement.querySelector('button.alc-button');\n          if (buttonElement) {\n            buttonElement.classList.add('alc-field__input--error');\n          }\n        }\n      } else {\n        // É um elemento nativo\n        this.input.classList.add('alc-field__input--error');\n      }\n    } else {\n      if (this.slottedElement.tagName === 'ALC-INPUT-FILE') {\n        const mode = this.slottedElement.getAttribute('mode');\n        if (mode === 'dropzone') {\n          const dropzoneElement = this.slottedElement.querySelector('.alc-input-file__dropzone');\n          if (dropzoneElement) {\n            dropzoneElement.classList.remove('alc-field__input--error');\n          }\n        } else if (mode === 'input') {\n          const textInputElement = this.slottedElement.querySelector('.alc-input-file__text-input');\n          if (textInputElement) {\n            textInputElement.classList.remove('alc-field__input--error');\n          }\n        } else if (mode === 'button') {\n          const buttonElement = this.slottedElement.querySelector('button.alc-button');\n          if (buttonElement) {\n            buttonElement.classList.remove('alc-field__input--error');\n          }\n        }\n      } else {\n        // É um elemento nativo\n        this.input.classList.remove('alc-field__input--error');\n      }\n    }\n  }\n  \n  // Função recursiva para encontrar o <input>\n  private findInputElement(element: Element): HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | null {\n    if (!element) return null;\n\n    const tagName = element.tagName.toLowerCase();\n    if (tagName === 'input' || tagName === 'select' || tagName === 'textarea') {\n      return element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n    }\n\n    for (let i = 0; i < element.children.length; i++) {\n      const found = this.findInputElement(element.children[i]);\n      if (found) {\n        return found;\n      }\n    }\n\n    return null;\n  }\n\n  async componentDidLoad() {\n    // Reserva IDs para os elementos de erro e dica\n    this.errorId = getUniqueId();\n    this.hintId = getUniqueId();\n\n    // Seleciona o elemento slotted\n    this.slottedElement = this.el.querySelector('input, select, textarea, alc-input-file');\n\n    if (this.slottedElement) {\n      // Procura o elemento <input> dentro do componente slotted\n      this.input = this.findInputElement(this.slottedElement);\n\n      if (this.input) {\n        this.input.id = this.input.id || getUniqueId();\n        this.input.setAttribute('aria-required', this.required ? 'true' : 'false');\n        this.input.classList.add('alc-field__input');\n        this.inputId = this.input.getAttribute('id');\n        this.watchErrorMsg(this.errorMsg);\n        this.describedBy.set('original', this.input.getAttribute('aria-describedby') || '');\n      }\n    }\n\n    // Configura o label se não estiver usando o slot \"label\"\n    if (!this.label) {\n      const labelEl = this.el.querySelector('[slot=\"label\"] label');\n      labelEl?.classList.add('alc-field__label');\n      if (labelEl && this.required) {\n        const small = document.createElement('small');\n        small.setAttribute('aria-hidden', 'true');\n        small.innerText = ' (obrigatório)';\n        labelEl.appendChild(small);\n      }\n    }\n\n    // Atualiza os atributos de acessibilidade\n    this.updateAriaDescribedBy();\n  }\n  componentWillRender() {\n    this.updateAriaDescribedBy();\n  }\n\n\n  private updateAriaDescribedBy() {\n    if (this.errorMsg) {\n      this.describedBy.set('error', this.errorId);\n    } else {\n      this.describedBy.delete('error');\n    }\n\n    if (this.hint) {\n      this.describedBy.set('hint', this.hintId);\n    } else {\n      this.describedBy.delete('hint');\n    }\n\n    let currentDescribedBy = '';\n\n    currentDescribedBy += ` ${this.describedBy.get('original') || ''}`;\n    currentDescribedBy += ` ${this.describedBy.get('error') || ''}`;\n    currentDescribedBy += ` ${this.describedBy.get('hint') || ''}`;\n\n    if (this.input) this.input.setAttribute('aria-describedby', currentDescribedBy.trim());\n  }\n\n  render() {\n\n    return (\n      <Host\n        class={{\n          'alc-field': true,\n        }}\n      >\n        {\n          this.label\n            ?\n            <div> {/* Essa div faz o label desvincular-se da estrutura do flex, permitindo que seja mostrado inline, que é o natural */}\n              <label\n                class=\"alc-field__label\"\n                htmlFor={this.inputId}\n              >\n                {this.label}\n                {this.required\n                ?\n                  // aria-hidden porque o \"required\" do input já é suficiente para informar.\n                  <small aria-hidden=\"true\"> (obrigatório)</small>\n                :\n                  null\n                }\n              </label>\n            </div>\n            :\n            <slot name=\"label\"></slot>\n        }\n        <div class=\"alc-field__core\">\n          <slot></slot>\n          { this.errorMsg\n            ?\n              <small\n                class=\"alc-field__text alc-field__text--error\"\n                id={this.errorId}\n              >\n                {this.errorMsg}\n              </small>\n            :\n              null\n          }\n          { this.hint\n            ?\n              <small\n                class=\"alc-field__text\"\n                id={this.hintId}\n              >\n                {this.hint}\n              </small>\n            :\n              null\n          }\n        </div>\n\n      </Host>\n    );\n  }\n\n}\n","/* CSS básico para que o componente funcione - sem dependências externas */","/* Definição das variáveis - Setup dos temas*/\n\n\n/* CSS COMUM a todos os temas */\nalc-theme {\n  display: block;\n}\n\n.alc-theme__label {\n  @apply sr-only;\n}\n\n/*\n  Não tem problema em usar .alc-field__core aqui porque:\n  1. alc-theme está usando o componente alc-field, ou seja, um componente já \"conhece\" o outro, porque depende dele.\n  2. A classe alc-field__core faz parte da API pública de alc-field.\n */\n.alc-field__core .alc-theme__select {\n  /*\n    Isso foi feito para manter o visual adotado desde o início com o seletor de tema,\n    que não ocupa 100% da largura disponível, como acontece por padrão para os\n    campos de entrada usando o componente alc-field.\n  */\n  @apply w-auto;\n}\n","import { Component, Host, h, State } from '@stencil/core';\nimport logger from '../utils/logger';\nimport { getAppliedTheme, setAppliedTheme, loadUserPreference, saveUserPreference, removeUserPreference } from '../utils/theme';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport testAttributes from '../utils/testAttributes';\n\nconst NO_THEME = 0;\nconst LIGHT_THEME = 1;\nconst DARK_THEME = 2;\n\n@Component({\n  tag: 'alc-theme',\n  styleUrls: {\n    base: 'alc-theme-base.css',\n    theme: 'alc-theme.css'\n  },\n  scoped: false\n})\nexport class AlcTheme {\n\n  themeLink: HTMLLinkElement;\n  selectId: string;\n\n  @State() selectedTheme: number;\n\n  private change(theme: number) {\n\n    logger.log('changed to', theme);\n    switch (theme) {\n      case LIGHT_THEME:\n        setAppliedTheme('light');\n        saveUserPreference('light');\n        break;\n        case DARK_THEME:\n        setAppliedTheme('dark');\n        saveUserPreference('dark');\n        break;\n      default:\n        setAppliedTheme(getAppliedTheme('system'));\n        removeUserPreference();\n        break;\n    }\n    this.selectedTheme = theme;\n  }\n\n  private getSelectedValue(select: HTMLSelectElement): number {\n    return parseInt(select.selectedOptions[0].value);\n  }\n\n  componentWillLoad() {\n\n    const userPreference = loadUserPreference();\n    if (userPreference === 'light') {\n      this.selectedTheme = LIGHT_THEME;\n    }\n    else if (userPreference === 'dark') {\n      this.selectedTheme = DARK_THEME;\n    }\n    else {\n      this.selectedTheme = NO_THEME;\n    }\n    this.selectId = getUniqueId();\n  }\n\n  render() {\n\n    return (\n      <Host>\n        <alc-field>\n          {/* Label colocado como slot para poder ter seu visual personalizado (sr-only) */}\n          <label\n            htmlFor={this.selectId}\n            slot=\"label\"\n            class=\"alc-theme__label\"\n            {...testAttributes('data-test-label')}\n          >\n            Tema\n          </label>\n          <div>\n            <select\n              onChange={(e) => this.change(this.getSelectedValue(e.target as HTMLSelectElement))}\n              class=\"alc-theme__select\"\n              id={this.selectId}\n              {...testAttributes('data-test-select')}\n            >\n              <option value={NO_THEME} selected={this.selectedTheme === NO_THEME}>\n                Do Sistema\n                {this.selectedTheme === NO_THEME ? ' ✔' : ''}\n              </option>\n              <option value={LIGHT_THEME} selected={this.selectedTheme === LIGHT_THEME}>\n                Claro\n                {this.selectedTheme === LIGHT_THEME ? ' ✔' : ''}\n              </option>\n              <option value={DARK_THEME} selected={this.selectedTheme === DARK_THEME}>\n                Escuro\n                {this.selectedTheme === DARK_THEME ? ' ✔' : ''}\n              </option>\n            </select>\n          </div>\n        </alc-field>\n      </Host>\n    );\n  }\n\n}\n"],"names":[],"mappings":"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"}