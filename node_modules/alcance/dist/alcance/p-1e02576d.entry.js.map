{"version":3,"names":["alcInputFileCss","AlcInputFile","constructor","hostRef","this","idInputFilePolite","idLabel","idDropzoneText","multiple","accept","disabled","required","buttonType","undefined","mode","files","maxInputTextLength","renderFiles","map","file","h","Object","assign","class","test","name","formatFileSize","size","onClick","handleRemove","label","renderFileInfo","totalSize","reduce","acc","totalSizeFormatted","fileCount","length","fileText","renderPolite","politeText","fileNames","join","id","role","invokeFileInput","inputClick","el","querySelector","idInput","click","filter","currentFile","dataTransfer","DataTransfer","forEach","f","items","add","inputFileElement","readFilesAndEmitEvent","handleRemoveAll","value","alcFileSelected","emit","handleDrop","e","preventDefault","stopPropagation","droppedFiles","_a","filesArray","Array","from","handleDragOver","handleDragEnter","dropzone","currentTarget","classList","handleDragLeave","remove","getFiles","filesWithContent","Promise","all","async","content","arrayBuffer","clear","handleFileChange","input","target","sizeInBytes","units","unitIndex","toFixed","componentWillLoad","getUniqueId","componentDidLoad","textInputElement","updateMaxInputTextLength","initializeResizeObserver","MutationObserver","observe","childList","subtree","disconnectedCallback","resizeObserver","disconnect","ResizeObserver","inputWidth","offsetWidth","closeButtonWidth","paddingLeft","iconName","paddingRight","totalPadding","availableWidth","characterWidth","maxChars","Math","floor","truncateText","text","maxLength","substring","render","logger","report","tagName","toLowerCase","inputAttributes","type","onChange","fileInput","key","inputTextValue","inputTitle","Host","readOnly","placeholder","onKeyDown","onDrop","onDragOver","onDragEnter","onDragLeave","tabIndex"],"sources":["src/components/alc-input-file/alc-input-file.css?tag=alc-input-file","src/components/alc-input-file/alc-input-file.tsx"],"sourcesContent":["/* Definição de variáveis de cor para temas claro e escuro */\n[data-alc-theme=\"light\"] alc-input-file {\n  --text-color-label: var(--alc-color-text-0);\n  --text-color: var(--alc-color-text-1);\n\n  --shadow-color: var(--alc-color-neutral-5);\n\n  --outline-color: var(--alc-color-action-60);\n\n  --border-color: var(--alc-color-neutral-60);\n  --border-color-hover: var(--alc-color-action-60);\n  --border-color-focus : var(--alc-color-action-20);\n\n  /* Estilização de desabilitado */\n  --bg-color-disabled    : var(--alc-color-neutral-10);\n  --border-color-disabled: var(--alc-color-neutral-40);\n  --text-color-disabled  : var(--alc-color-text-4);\n}\n\n[data-alc-theme=\"dark\"] alc-input-file {\n  --text-color-label: var(--alc-color-text-0);\n  --text-color: var(--alc-color-text-1);\n\n  --shadow-color: var(--alc-color-neutral-80);\n\n  --outline-color: var(--alc-color-action-30);\n\n  --border-color: var(--alc-color-neutral-30);\n  --border-color-hover: var(--alc-color-action-40);\n  --border-color-focus : var(--alc-color-action-70);\n\n  /* Estilização de desabilitado */\n  --bg-color-disabled    : var(--alc-color-neutral-80);\n  --border-color-disabled: var(--alc-color-neutral-50);\n  --text-color-disabled  : var(--alc-color-text-4);\n}\n\n/* Estilos para o campo principal */\n.alc-input-file__field {\n  @apply flex flex-col w-full;\n}\n\n.alc-input-file__text-button {\n  @apply flex items-center gap-2 text-base;\n}\n\n.alc-input-file__content {\n  @apply flex flex-col w-full gap-2 mt-2;\n}\n\n.alc-input-file__file {\n  @apply flex items-center justify-between py-2 px-4 rounded w-full bg-[--alc-color-layer-b] text-[--text-color];\n}\n\n.alc-input-file__file span {\n  @apply break-words;\n}\n\n.alc-input-file__text {\n  @apply text-[--alc-color-text-4] text-[0.875rem];\n}\n\n.alc-input-file__label {\n  @apply text-[--text-color-label];\n}\n\n/* Ocultar o input de arquivo padrão */\n.alc-input-file__input {\n  @apply hidden;\n}\n\n/* Estilos para o Modo Input */\n.alc-input-file__input-container {\n  @apply flex flex-col;\n}\n\n.alc-input-file__input-wrapper {\n  @apply relative flex items-center;\n}\n\n.alc-input-file__icon {\n  @apply absolute left-3 top-1/2 transform -translate-y-1/2 pointer-events-none;\n}\n\n/* Input sem ícone */\ninput[type=text].alc-input-file__text-input {\n  @apply w-full py-2 pl-3 pr-16 cursor-pointer box-border select-none;\n  @apply overflow-hidden text-ellipsis whitespace-nowrap;\n  @apply shadow-inner shadow-[--shadow-color] transition-colors min-h-[theme(height.10)];\n  @apply placeholder:text-[--text-color-placeholder];\n}\n\n/* Input com ícone */\n.alc-input-file__input-wrapper--with-icon input[type=text].alc-input-file__text-input {\n  @apply pl-10; /* Adiciona padding-left maior quando há ícone */\n}\n\ninput[type=text].alc-input-file__text-input:focus {\n  @apply select-none ring-0 outline outline-2 outline-offset-2 outline-[--outline-color];\n}\n\n.alc-input-file__text-input:disabled {\n  @apply shadow-none bg-[--bg-color-disabled] border-[--border-color-disabled];\n  @apply text-[--text-color-disabled] cursor-not-allowed;\n  @apply hover:border-[--border-color-disabled];\n}\n\n.alc-input-file__remove-button {\n  @apply absolute top-1/2 right-2 -translate-y-1/2 bg-transparent border-0 cursor-pointer p-0 w-8 h-8 rounded-full shadow-none;\n}\n\n.alc-input-file__remove-button:hover,\n.alc-input-file__remove-button:focus {\n  @apply bg-[--alc-color-layer-b] outline-none ring-2 ring-[--alc-color-primary];\n}\n\n.alc-input-file__remove-button alc-icon {\n  @apply pointer-events-none;\n}\n\n.alc-input-file__info {\n  @apply mt-1 text-right text-sm text-[--alc-color-text-4];\n}\n\n/* Estilos para o Modo Área de Drop */\n.alc-input-file__dropzone {\n  @apply flex items-center justify-center flex-col gap-2 p-4 bg-[--alc-color-layer-b] text-[--text-color];\n  @apply border-[--alc-color-neutral-40] border-2 border-dashed rounded cursor-pointer transition-colors duration-200;\n}\n\n.alc-input-file__dropzone:focus {\n  @apply ring-0 border-[--border-color-hover] outline outline-2 outline-offset-2 outline-[--outline-color];\n  @apply border-[--border-color-hover];\n}\n\n.alc-input-file__dropzone:hover {\n  @apply border-[--border-color-hover];\n}\n\n.alc-input-file__dropzone--dragover {\n  @apply border-[--alc-color-primary] bg-[--alc-color-neutral-20];\n}\n\n.alc-input-file__dropzone--disabled {\n  @apply opacity-60 cursor-not-allowed;\n}\n\n.alc-input-file__dropzone-text {\n  @apply text-base text-center;\n}\n\n.alc-input-file__dropzone.alc-field__input--error {\n  @apply border-[--border-color-error];\n}\n\n/* Estilos para o Modo Button */\n\n.alc-button.alc-field__input--error {\n  @apply border border-[--border-color-error];\n}\n\n/* Ajustes Responsivos */\n@media (max-width: 600px) {\n  .alc-input-file__file {\n    @apply items-start;\n  }\n\n  .alc-input-file__info {\n    @apply text-left;\n  }\n}","import { Component, h, Prop, State, Event, EventEmitter, Host, Element, Method } from '@stencil/core';\nimport logger from '../utils/logger';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport test from '../utils/testAttributes';\n\nexport interface AlcFileWithContent {\n  file: File;\n  content: ArrayBuffer;\n}\n\nexport interface AlcFileSelectedEvent {\n  files: AlcFileWithContent[];\n}\n\n@Component({\n  tag: 'alc-input-file',\n  styleUrl: 'alc-input-file.css',\n  shadow: false,\n})\nexport class AlcInputFile {\n  private idInputFilePolite: string = null;\n  private textInputElement: HTMLInputElement;\n  private resizeObserver: ResizeObserver;\n  private idLabel: string = null;\n  private idDropzoneText: string = null;\n\n  /**\n   * Altera o funcionamento para aceitar vários arquivos.\n   */\n  @Prop({ reflect: true })\n  multiple: boolean = false;\n\n  /**\n   * Obrigatório. ID do input.\n   */\n  @Prop({ reflect: true })\n  idInput!: string;\n\n  /**\n   * Define tipos de arquivos específicos para envio. Padrão: Todos.\n   */\n  @Prop({ reflect: true })\n  accept?: string = '*/*';\n\n  /**\n   * Desativa o componente.\n   */\n  @Prop({ reflect: true })\n  disabled: boolean = false;\n\n  /**\n   * Indica se é obrigatório.\n   */\n  @Prop({ reflect: true })\n  required: boolean = false;\n\n  /**\n   * Define o tipo de botão que vai ser renderizado.\n   */\n  @Prop({ reflect: true })\n  buttonType?: 'secondary' | undefined = undefined;\n\n  /**\n   * Ícone a ser exibido no início do input.\n   */\n  @Prop({ reflect: true })\n  iconName?: string;\n\n  /**\n   * Modo de visualização do componente.\n   * Pode ser 'button', 'input' ou 'dropzone'.\n   */\n  @Prop({ reflect: true })\n  mode: 'button' | 'input' | 'dropzone' = 'button';\n\n  @Event({ eventName: 'alc-file-selected' })\n  alcFileSelected: EventEmitter<AlcFileSelectedEvent>;\n\n  @Element() el!: HTMLElement;\n\n  @State()\n  files: File[] = [];\n\n  @State()\n  maxInputTextLength: number = 50; // Valor inicial arbitrário\n\n  /**\n   * Retorna array de arquivos selecionados com seus blobs.\n   * @returns Lista de arquivos com conteúdo.\n   */\n  @Method()\n  async getFiles(): Promise<AlcFileWithContent[]> {\n    const inputFileElement = this.el.querySelector('#' + this.idInput) as HTMLInputElement;\n    const files = Array.from(inputFileElement.files || []);\n\n    const filesWithContent = await Promise.all(files.map(async (file) => {\n      const content = await file.arrayBuffer();\n      return { file, content };\n    }));\n\n    return filesWithContent;\n  }\n\n  /**\n   * Limpa os dados do input e a lista de arquivos.\n   */\n  @Method()\n  async clear(): Promise<void> {\n    this.files = [];\n    const inputFileElement = this.el.querySelector('#' + this.idInput) as HTMLInputElement;\n    inputFileElement.value = '';\n  }\n\n  private handleFileChange(e: Event) {\n    const input = e.target as HTMLInputElement;\n    const files = Array.from(input.files || []);\n    this.files = files;\n\n    // Ler o conteúdo dos arquivos e emitir o evento\n    this.readFilesAndEmitEvent(files);\n  }\n\n  private async readFilesAndEmitEvent(files: File[]) {\n    const filesWithContent = await Promise.all(files.map(async (file) => {\n      const content = await file.arrayBuffer();\n      return { file, content };\n    }));\n\n    this.alcFileSelected.emit({ files: filesWithContent });\n  }\n\n  private formatFileSize(sizeInBytes: number): string {\n    const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n    let size = sizeInBytes;\n    let unitIndex = 0;\n\n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size = size / 1024;\n      unitIndex++;\n    }\n\n    return `${size.toFixed(2)} ${units[unitIndex]}`;\n  }\n\n  private renderFiles = () => {\n    return this.files.map(file => (\n      <div class=\"alc-input-file__file\" {...test('data-test-file')}>\n        <span>\n          {file.name} ({this.formatFileSize(file.size)})\n        </span>\n        <button\n          class=\"alc-button alc-button-rounded\"\n          onClick={() => this.handleRemove(file)}\n          aria-label={`Remover arquivo ${file.name}`}\n          {...test('data-test-delete-file-button')}\n        >\n          <alc-icon name=\"x\" label=\"Apagar\"></alc-icon>\n        </button>\n      </div>\n    ));\n  };\n\n  private renderFileInfo = () => {\n    const totalSize = this.files.reduce((acc, file) => acc + file.size, 0);\n    const totalSizeFormatted = this.formatFileSize(totalSize);\n    const fileCount = this.files.length;\n    const fileText = fileCount === 1 ? 'arquivo' : 'arquivos';\n\n    return (\n      <span {...test('data-test-file-info')}>\n        {`${fileCount} ${fileText} (${totalSizeFormatted} no total)`}\n      </span>\n    );\n  };\n\n  private renderPolite = () => {\n    let politeText = 'Nenhum arquivo selecionado.';\n\n    if (this.files.length === 1) {\n      politeText = 'Arquivo selecionado: ' + this.files[0].name;\n    }\n\n    if (this.files.length > 1) {\n      const fileNames = this.files.map(file => file.name).join('; ');\n      politeText = this.files.length + ' arquivos selecionados: ' + fileNames;\n    }\n\n    return (\n      <span aria-live=\"polite\" class=\"sr-only\" id={this.idInputFilePolite} role=\"status\">\n        {politeText}\n      </span>\n    );\n  };\n\n  private invokeFileInput = () => {\n    const inputClick = this.el.querySelector('#' + this.idInput) as HTMLElement;\n    inputClick.click();\n  };\n\n  private handleRemove = (file: File) => {\n    this.files = this.files.filter(currentFile => currentFile !== file);\n    // Atualiza os arquivos do input\n    const dataTransfer = new DataTransfer();\n    this.files.forEach(f => dataTransfer.items.add(f));\n    const inputFileElement = this.el.querySelector('#' + this.idInput) as HTMLInputElement;\n    inputFileElement.files = dataTransfer.files;\n\n    // Ler o conteúdo dos arquivos restantes e emitir o evento\n    this.readFilesAndEmitEvent(this.files);\n  };\n\n  private handleRemoveAll = () => {\n    this.files = [];\n    const inputFileElement = this.el.querySelector('#' + this.idInput) as HTMLInputElement;\n    inputFileElement.value = '';\n    this.alcFileSelected.emit({ files: [] });\n  };\n\n  private handleDrop = (e: DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.disabled) return;\n\n    const droppedFiles = e.dataTransfer?.files;\n    if (droppedFiles && droppedFiles.length > 0) {\n      const filesArray = Array.from(droppedFiles);\n      if (this.multiple) {\n        this.files = [...this.files, ...filesArray];\n      } else {\n        this.files = [filesArray[0]];\n      }\n\n      // Atualiza os arquivos do input\n      const dataTransfer = new DataTransfer();\n      this.files.forEach(f => dataTransfer.items.add(f));\n      const inputFileElement = this.el.querySelector('#' + this.idInput) as HTMLInputElement;\n      inputFileElement.files = dataTransfer.files;\n\n      // Ler o conteúdo dos arquivos e emitir o evento\n      this.readFilesAndEmitEvent(this.files);\n    }\n  };\n\n  private handleDragOver = (e: DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  private handleDragEnter = (e: DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.disabled) return;\n    const dropzone = e.currentTarget as HTMLElement;\n    dropzone.classList.add('alc-input-file__dropzone--dragover');\n  };\n\n  private handleDragLeave = (e: DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.disabled) return;\n    const dropzone = e.currentTarget as HTMLElement;\n    dropzone.classList.remove('alc-input-file__dropzone--dragover');\n  };\n\n  componentWillLoad() {\n    // Antes do componente carregar, cria um id para o controle de aria-live\n    this.idInputFilePolite = getUniqueId();\n    this.idLabel = getUniqueId();\n    this.idDropzoneText = getUniqueId();\n  }\n\n  componentDidLoad() {\n    if (this.mode === 'input') {\n      this.textInputElement = this.el.querySelector('.alc-input-file__text-input') as HTMLInputElement;\n      this.updateMaxInputTextLength();\n      this.initializeResizeObserver();\n  \n      // Observa mudanças no número de arquivos para atualizar o tamanho disponível\n      new MutationObserver(() => {\n        this.updateMaxInputTextLength();\n      }).observe(this.el, { childList: true, subtree: true });\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  private initializeResizeObserver() {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.updateMaxInputTextLength();\n    });\n    this.resizeObserver.observe(this.textInputElement);\n  }\n\n  private updateMaxInputTextLength() {\n    if (!this.textInputElement) return;\n  \n    // Obtém a largura total do input\n    const inputWidth = this.textInputElement.offsetWidth;\n  \n    // Largura do botão de remover (close button)\n    const closeButtonWidth = this.files.length > 0 ? 28 : 0; // 28px se o botão estiver presente, 0 se não\n  \n    // Padding esquerdo\n    let paddingLeft = 12; // Padding padrão quando não há ícone (em pixels)\n    if (this.iconName) {\n      paddingLeft = 40; // Padding maior quando há ícone (corresponde a pl-10)\n    }\n  \n    // Padding direito (para o botão de remover ou padding padrão)\n    const paddingRight = closeButtonWidth > 0 ? 40 : 12; // 40px se o botão estiver presente, 12px se não\n  \n    // Espaçamento total (padding esquerdo + padding direito)\n    const totalPadding = paddingLeft + paddingRight;\n  \n    // Calcula a largura disponível\n    const availableWidth = inputWidth - totalPadding;\n  \n    // Estima o número de caracteres que cabem no espaço disponível\n    const characterWidth = 7.8; // Largura média de um caractere em pixels\n    const maxChars = Math.floor(availableWidth / characterWidth);\n  \n    // Atualizar o estado\n    this.maxInputTextLength = maxChars > 0 ? maxChars : 10; // Define um mínimo de 10 caracteres\n  }\n\n  private truncateText(text: string, maxLength: number): string {\n    if (text.length <= maxLength) {\n      return text;\n    }\n    return text.substring(0, maxLength - 3) + '...';\n  }\n\n  render() {\n    this.idInput ?? logger.report('id-input', this.el.tagName.toLowerCase(), this.el);\n\n    const inputAttributes = {\n      type: 'file',\n      id: this.idInput,\n      class: 'alc-input-file__input',\n      multiple: this.multiple,\n      accept: this.accept,\n      disabled: this.disabled,\n      onChange: (e: Event) => this.handleFileChange(e),\n      required: this.required // A obrigatoriedade fica no file input real\n    };\n\n    const fileInput = <input {...inputAttributes} {...test('data-test-file-input')}/>;\n\n    // Obtém os nomes dos arquivos\n    const fileNames = this.files.map(file => file.name);\n\n    // Junta os nomes dos arquivos e trunca o texto se necessário\n    const inputTextValue = this.truncateText(fileNames.join(', '), this.maxInputTextLength);\n\n    // Define o atributo title para mostrar os nomes completos ao passar o mouse\n    const inputTitle = fileNames.join(', ');\n\n    return (\n      <Host>\n        <slot />\n        {this.renderPolite()}\n\n        {this.mode === 'button' && (\n          <div class=\"alc-input-file__field\">\n            <button\n              class={`alc-button ${this.buttonType === 'secondary' ? 'alc-button--secondary' : ''}`}\n              onClick={this.invokeFileInput}\n              disabled={this.disabled}\n              {...test('data-test-button')}\n            >\n              <span class=\"alc-input-file__text-button\">\n                {this.iconName && <alc-icon name={this.iconName} label=\"\"></alc-icon>}  \n                {this.multiple ? 'Escolher arquivos' : 'Escolher arquivo'}\n              </span>\n            </button>\n\n            <div class=\"alc-input-file__content\" aria-controls={this.idInputFilePolite} {...test('data-test-file-content')}>\n              {this.files.length > 0 ? (\n                this.renderFiles()\n              ) : (\n                <small class=\"alc-input-file__text\">Nenhum arquivo selecionado</small>\n              )}\n            </div>\n\n            \n          </div>\n        )}\n\n        {this.mode === 'input' && (\n          <div class=\"alc-input-file__field\">\n            <div class=\"alc-input-file__input-container\">\n              <div class={`alc-input-file__input-wrapper ${this.iconName ? 'alc-input-file__input-wrapper--with-icon' : ''}`}>\n                {this.iconName && (\n                  <alc-icon class=\"alc-input-file__icon\" name={this.iconName} label=\"\"></alc-icon>\n                )}\n                <input\n                  type=\"text\"\n                  class=\"alc-input-file__text-input\"\n                  readOnly\n                  value={inputTextValue}\n                  aria-labelledby={this.idLabel}\n                  placeholder=\"Selecione um arquivo\"\n                  onClick={this.invokeFileInput}\n                  onKeyDown={(e: KeyboardEvent) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                      e.preventDefault();\n                      this.invokeFileInput();\n                    }\n                  }}\n                  aria-description={inputTitle}\n                  {...test('data-test-input')}\n                />\n                {this.files.length > 0 && (\n                  <button\n                    class=\"alc-input-file__remove-button\"\n                    onClick={this.handleRemoveAll}\n                    aria-label=\"Remover arquivos selecionados\"\n                    {...test('data-test-delete-file-button')}\n                  >\n                    <alc-icon name=\"x\" label=\"Apagar\"></alc-icon>\n                  </button>\n                )}\n              </div>\n            </div>\n\n            <div class=\"alc-input-file__info\">\n              {this.files.length > 0 ? this.renderFileInfo() : ''}\n            </div>\n          </div>\n        )}\n\n        {this.mode === 'dropzone' && (\n          <div class=\"alc-input-file__field\">\n            <div\n              class={`alc-input-file__dropzone ${this.disabled ? 'alc-input-file__dropzone--disabled' : ''}`}\n              onDrop={this.handleDrop}\n              onDragOver={this.handleDragOver}\n              onDragEnter={this.handleDragEnter}\n              onDragLeave={this.handleDragLeave}\n              role=\"button\"\n              tabIndex={0}\n              aria-labelledby={this.idLabel}\n              aria-describedby={this.idDropzoneText}\n              onClick={this.invokeFileInput}\n              onKeyDown={(e: KeyboardEvent) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  this.invokeFileInput();\n                }\n              }}\n              {...test('data-test-dropzone')}\n            >\n              {this.iconName && <alc-icon name={this.iconName} label=\"\"></alc-icon>}\n              <span class=\"alc-input-file__dropzone-text\" id={this.idDropzoneText}>\n                Arraste e solte arquivos aqui ou clique para selecionar\n              </span>\n            </div>\n\n            <div class=\"alc-input-file__content\" aria-controls={this.idInputFilePolite}>\n              {this.files.length > 0 ? (\n                this.renderFiles()\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        )}\n        {fileInput}\n      </Host>\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}