{"version":3,"names":["alcHeaderActionCss","AlcHeaderAction","constructor","hostRef","this","slotNodes","iconName","variant","url","spaceKeyEvent","triggerEvent","detail","alcSelect","emit","handleKeyDownLink","event","key","preventDefault","anchor","hostElement","querySelector","click","handleClickLink","originalEvent","_a","handleKeyDownButton","handleClickButton","handleAlcSelect","stopPropagation","componentDidLoad","slot","assignedNodes","componentDidRender","logger","debug","_b","containerByVariant","button","buttonContainer","link","linkContainer","menuItemContainer","menuLinkContainer","target","node","_c","contains","appendChild","render","renderByVariant","renderButton","bind","renderLink","renderMenuItem","renderMenuLink","VariantContent","call","h","Host","ref","el","class","onClick","onKeyDown","icon","label","href"],"sources":["src/components/alc-header-action/alc-header-action.css?tag=alc-header-action","src/components/alc-header-action/alc-header-action.tsx"],"sourcesContent":["alc-header-action {\n  display: inline\n}\n\n.alc-header-action__menu-link-icon {\n  @apply mr-2;\n}","import { Component, Host, Prop, Event, EventEmitter, Element, h } from '@stencil/core';\nimport logger from '../utils/logger';\n\nexport interface AlcActionDetail {\n  originalEvent: MouseEvent | KeyboardEvent;\n}\n\n/**\n * @slot DEFAULT - Slot para o conteúdo do componente.\n */\n@Component({\n  tag: 'alc-header-action',\n  styleUrl: 'alc-header-action.css',\n  shadow: false,\n})\nexport class AlcHeaderAction {\n  @Element() hostElement: HTMLElement;\n\n  slot: HTMLSlotElement;\n  slotNodes = null;\n  buttonContainer: HTMLElement;\n  linkContainer: HTMLElement;\n  menuItemContainer: HTMLElement;\n  menuLinkContainer: HTMLElement;\n\n  /**\n   * Nome do ícone a ser exibido.\n   */\n  @Prop({\n    reflect: true\n  })\n  iconName: string = 'square';\n\n  /**\n   * Define o tipo de elemento a ser renderizado.\n   */\n  @Prop({\n    reflect: true\n  })\n  variant: 'button' | 'menu-item' | 'link' | 'menu-link' = 'button';\n\n  /**\n   * URL para a página de suporte. Usado quando a propriedade `variant` é `link` ou `menu-link`.\n   */\n  @Prop() url: string = '';\n\n  private spaceKeyEvent: KeyboardEvent = null;\n\n  /**\n   * Evento disparado quando o usuário aciona o suporte.\n   */\n  @Event({ eventName: 'alc-select', bubbles: true })\n  alcSelect: EventEmitter<{\n    originalEvent: MouseEvent | KeyboardEvent;\n  }>;\n\n  /** handler comum a todas as ativações locais */\n  private triggerEvent = (detail: AlcActionDetail) => {\n    this.alcSelect.emit(detail);\n  };\n\n  handleKeyDownLink(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      const anchor = this.hostElement.querySelector('a');\n      if (anchor) {\n        this.spaceKeyEvent = event;\n        anchor.click();\n      }\n    }\n  }\n\n  handleClickLink(event: MouseEvent) {\n    const originalEvent = this.spaceKeyEvent ?? event;\n    this.spaceKeyEvent = null; // Despreza esse evento para os próximos disparos.\n    this.triggerEvent({ originalEvent: originalEvent });\n  }\n\n  handleKeyDownButton(event: KeyboardEvent) {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      this.triggerEvent({ originalEvent: event });\n    }\n  }\n\n  handleClickButton(event: MouseEvent) {\n    event.preventDefault()\n    this.triggerEvent({ originalEvent: event });\n  }\n\n  handleAlcSelect(event: CustomEvent) {\n    // Esse código faz com que o evento deixe de ser do menu-item ou do menu-link\n    // e passe a ser um evento do header-action.\n    // Dessa forma, o usuário desse componente não precisa se preocupar com esse\n    // detalhe da implementação interna. Ou seja, para todos os efeitos, para quem\n    // vê de fora, o evento é disparado pelo header-action.\n    event.stopPropagation();\n    this.triggerEvent({\n      originalEvent: event.detail.originalEvent\n    });\n  }\n\n  componentDidLoad() {\n    this.slotNodes = this.slot.assignedNodes();\n  }\n\n  componentDidRender() {\n    logger.debug('alc-header-action did render', this.slotNodes);\n\n    // Captura os nós do <slot> apenas na primeira execução\n    this.slotNodes ??= this.slot?.assignedNodes();\n\n    // Mapeia cada variante ao respectivo container\n    const containerByVariant: Record<AlcHeaderAction['variant'], HTMLElement | undefined> = {\n      button: this.buttonContainer,\n      link: this.linkContainer,\n      'menu-item': this.menuItemContainer,\n      'menu-link': this.menuLinkContainer,\n    };\n\n    const target = containerByVariant[this.variant];\n    const node = this.slotNodes?.[0];\n\n    // Só anexa se ambos existirem e o nó ainda não estiver no container\n    if (target && node && !target.contains(node)) {\n      target.appendChild(node);\n    }\n  }\n\n\n  render() {\n    // Tabela de renderização por variante\n    const renderByVariant: Record<\n      AlcHeaderAction['variant'],\n      (() => any) | undefined\n    > = {\n      button: this.renderButton.bind(this),\n      link: this.renderLink.bind(this),\n      'menu-item': this.renderMenuItem.bind(this),\n      'menu-link': this.renderMenuLink.bind(this),\n    };\n\n    // Executa o renderer correspondente (se existir)\n    const VariantContent = renderByVariant[this.variant]?.();\n\n    return (\n      <Host>\n        {/* Captura o <slot> apenas uma vez */}\n        <slot ref={el => (this.slot = el as HTMLSlotElement)} />\n        {VariantContent}\n      </Host>\n    );\n  }\n\n  renderButton() {\n\n    return (\n      <button\n        class=\"alc-header-button\"\n        onClick={this.handleClickButton.bind(this)}\n        onKeyDown={this.handleKeyDownButton.bind(this)}\n      >\n        <alc-icon icon={this.iconName} label=\"\" class=\"alc-header-button__icon\"></alc-icon>\n        <span\n          class=\"alc-header-button__label\"\n          ref={el => this.buttonContainer = el}\n        >\n        </span>\n\n        {/* {this.slot} */}\n      </button>\n    );\n  }\n\n  renderLink() {\n\n    return (\n      <a\n        href={this.url}\n        class=\"alc-header-button\"\n        onClick={this.handleClickLink.bind(this)}\n        onKeyDown={this.handleKeyDownLink.bind(this)}\n      >\n        <alc-icon icon={this.iconName} label=\"\" class=\"alc-header-button__icon\"></alc-icon>\n        <span\n          class=\"alc-header-button__label\"\n          ref={el => this.linkContainer = el}\n        >\n        </span>\n\n        {/* {this.slot} */}\n      </a>\n    );\n  }\n\n\n  renderMenuItem() {\n    return (\n      <alc-menu-item\n        onAlc-select={this.handleAlcSelect.bind(this)}\n      >\n        <alc-icon slot=\"prefix\" icon={this.iconName} label=\"\"></alc-icon>\n        <span\n          ref={el => this.menuItemContainer = el}\n        >\n        </span>\n        {/* {this.slot} */}\n      </alc-menu-item>\n    );\n  }\n\n  renderMenuLink() {\n    return (\n      <alc-menu-link\n        onAlc-select={this.handleAlcSelect.bind(this)}\n      >\n        <a\n          href={this.url}\n          ref={el => this.menuLinkContainer = el}\n        >\n          <alc-icon icon={this.iconName} label=\"\" class=\"alc-header-action__menu-link-icon\"></alc-icon>\n\n          {/* {this.slot} */}\n        </a>\n      </alc-menu-link>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}