{"version":3,"file":"p-t12TGoMX.system.js","sources":["src/components/utils/keydown.ts"],"sourcesContent":["export const getFocusableElements = (element: HTMLElement) => {\n    const focusableElements = getAllFocusableElements(element);\n    // Retorna somente elementos visíveis\n    // Valida se o elemento possui tabindex de qualquer valor negativo e adiciona à lista de filtrados\n    return focusableElements.filter(element => {\n        const el = element as HTMLElement;\n        return el.offsetParent !== null && !(el.hasAttribute('tabindex') && parseInt(el.getAttribute('tabindex') || '0') < 0);\n    });\n}\n\n// Pega todos os elementos focaveis, inclusive invisíveis e com tabindex negativo \n// Pegar elementos invisíveis são úteis quando estão dentro de componentes que não foram renderizados, como a modal fechada.\n// E tabindex negativo é usado para controlar o foco manualmente e, para isso, queremos pegar esses elementos.\nexport const getAllFocusableElements = (element: HTMLElement) => {\n    const focusableElements = element.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex], [contenteditable]:not([contenteditable=\"false\"])',\n    );\n\n    // Converte NodeList para Array\n    return Array.from(focusableElements);\n}\n\nexport const focusFirstElement = (focusableElements: Element[]) => {\n    if (focusableElements.length > 0) {\n        const firstElement = focusableElements[0] as HTMLElement;\n        firstElement.focus();\n    }\n}\n\nexport const handleKeyDown = (event: KeyboardEvent, focusableElements: Element[]) => {\n    if (focusableElements.length > 0) {\n        const firstElement = focusableElements[0] as HTMLElement;\n        const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n        if (focusableElements.length === 1) {\n            firstElement.focus();\n            return event.preventDefault();\n        }\n\n        if (!event.shiftKey && document.activeElement === lastElement) {\n            firstElement.focus();\n            return event.preventDefault();\n        }\n\n        if (event.shiftKey && document.activeElement === firstElement) {\n            lastElement.focus();\n            return event.preventDefault();\n        }\n\n    }\n}\n"],"names":[],"mappings":";;;;;AAAa,kBAAA,oBAAoB,gBAAG,CAAC,OAAoB,KAAI;YACzD,IAAA,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,OAAO,CAAC;;;YAG1D,IAAA,OAAO,iBAAiB,CAAC,MAAM,CAAC,OAAO,IAAG;oBACtC,MAAM,EAAE,GAAG,OAAsB;YACjC,QAAA,OAAO,EAAE,CAAC,YAAY,KAAK,IAAI,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;YACzH,KAAC,CAAC;YACN;YAEA;YACA;YACA;YACO,MAAM,uBAAuB,GAAG,CAAC,OAAoB,KAAI;gBAC5D,MAAM,iBAAiB,GAAG,OAAO,CAAC,gBAAgB,CAC9C,uGAAuG,CAC1G;;YAGD,IAAA,OAAO,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACxC,CAAC;AAEY,kBAAA,iBAAiB,gBAAG,CAAC,iBAA4B,KAAI;YAC9D,IAAA,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,QAAA,MAAM,YAAY,GAAG,iBAAiB,CAAC,CAAC,CAAgB;oBACxD,YAAY,CAAC,KAAK,EAAE;;YAE5B;kBAEa,aAAa,gBAAG,CAAC,KAAoB,EAAE,iBAA4B,KAAI;YAChF,IAAA,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,QAAA,MAAM,YAAY,GAAG,iBAAiB,CAAC,CAAC,CAAgB;oBACxD,MAAM,WAAW,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAgB;YAElF,QAAA,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;wBAChC,YAAY,CAAC,KAAK,EAAE;YACpB,YAAA,OAAO,KAAK,CAAC,cAAc,EAAE;;oBAGjC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,KAAK,WAAW,EAAE;wBAC3D,YAAY,CAAC,KAAK,EAAE;YACpB,YAAA,OAAO,KAAK,CAAC,cAAc,EAAE;;oBAGjC,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,KAAK,YAAY,EAAE;wBAC3D,WAAW,CAAC,KAAK,EAAE;YACnB,YAAA,OAAO,KAAK,CAAC,cAAc,EAAE;;;YAIzC;;;;;;;;"}