{"version":3,"names":["alcAutocompleteCss","AlcAutocomplete","exports","class_1","hostRef","this","items","displayKeys","label","hint","required","listDirection","disabled","loading","error","errorMsg","filteredData","itemSelected","selectedItemValue","emptyResult","activeRowIndex","activeColIndex","rowsCount","colsCount","gridFocused","shown","selectionCol","prototype","selectedItemValueChanged","newValue","alcChange","emit","handleLoadingChange","newVal","oldVal","_this","input","requestAnimationFrame","focus","componentWillLoad","inputId","getUniqueId","gridId","labelId","messageRowContainerId","componentDidLoad","observer","MutationObserver","hasAttribute","setAttribute","observe","attributes","attributeFilter","addEventListener","handleFocus","bind","handleBodyClick","evt","target","Node","grid","contains","hideResults","handleInputKeyUp","key","preventDefault","updateResults","handleInputKeyDown","removeFocusCell","setTimeout","value","prevActive","getItemAt","activeItem","getRowIndex","selectItem","focusCell","handleGridClick","targetElement","row","closest","querySelector","isElementInView","element","bounding","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","searchString","length","searchDataService","maxItems","resultsToShow_1","slice","resultRow","createElement","className","concat","this_1","toString","split","forEach","atributo","col","resultCell","innerText","trim","appendChild","classList","remove","showMessageRow","rowIndex","colIndex","getElementById","item","event","index","getAttribute","undefined","selectedData","parseInt","handleInput","_a","clearSelection","clearSelected","innerHTML","add","messageRowContainer","el","scrollIntoView","behavior","block","ariaSelected","cell","ensureCellInView","gridContainer","elementTop","offsetTop","scrollTop","normalizeString","str","normalize","replace","toLowerCase","normalizedSearchString","results","_i","_b","_c","_d","normalizedItem","includes","push","message","existingMessageRow","messageRow","getSelected","setSelected","firstKey","displayText","render","listClass","active","h","Host","id","class","shift","flip","strategy","distance","placement","sync","slot","name","Object","assign","ref","placeholder","type","role","onInput","test","onClick"],"sources":["src/components/alc-autocomplete/alc-autocomplete.css?tag=alc-autocomplete","src/components/alc-autocomplete/alc-autocomplete.tsx"],"sourcesContent":["[data-alc-theme=\"light\"] alc-autocomplete {\n  --bg-color: var(--alc-color-surface-primary);\n  --bg-color-footer: var(--alc-color-layer-b);\n  --bg-color-hover: var(--alc-color-layer-b);\n  --border-color: var(--alc-color-neutral-60);\n  --border-color-hover: var(--alc-color-action-60);\n  --border-color-focus : var(--alc-color-action-20);\n  --text-color: var(--alc-color-text-primary);\n}\n\n[data-alc-theme=\"dark\"] alc-autocomplete {\n  --bg-color: var(--alc-color-surface-primary);\n  --bg-color-footer: var(--alc-color-layer-b);\n  --bg-color-hover: var(--alc-color-layer-b);\n  --border-color: var(--alc-color-neutral-60);\n  --border-color-hover: var(--alc-color-action-60);\n  --border-color-focus : var(--alc-color-action-20);\n  --text-color: var(--alc-color-text-primary);\n}\n\nalc-autocomplete {\n  @apply block;\n}\n\n.alc-autocomplete__grid.is-hidden {\n  @apply hidden;\n}\n\n.alc-autocomplete__result-cell{\n  @apply leading-6;\n}\n\n.alc-autocomplete__grid {\n  @apply min-w-64 w-full bg-[--bg-color] border border-solid border-[--border-color] p-0 z-10;\n}\n\n.alc-autocomplete__message-row-container {\n  /* @apply min-w-64 absolute w-full; */\n  @apply w-full;\n}\n\n.alc-autocomplete__result-row {\n  @apply p-2 cursor-default flex;\n}\n\n.alc-autocomplete__result-row:hover {\n  @apply bg-[--bg--color-hover];\n}\n\n.alc-autocomplete__result-row:hover {\n  @apply bg-[--bg-color-hover];\n}\n\n.alc-autocomplete__result-row.is-focused {\n  @apply text-[--text-color] underline border-2 border-solid border-[--border-color-hover] rounded-sm;\n}\n\n/* Rever linha abaixo */\n.alc-autocomplete__result-cell.is-focused {\n  @apply underline;\n}\n\n.alc-autocomplete__result-cell {\n  @apply text-base inline-block cursor-default m-0 px-1;\n}\n\n.alc-autocomplete__result-cell:nth-child(n+2) {\n  @apply text-xs font-normal text-[--text-color] leading-6;\n}\n\n.alc-autocomplete__icon {\n  @apply absolute left-2 top-2 pointer-events-none;\n}\n\n.alc-field__input.alc-autocomplete__input {\n  @apply pl-8;\n}\n\n.alc-autocomplete__clear-button {\n  @apply cursor-pointer absolute right-1;\n}\n\n.alc-autocomplete__message-row {\n  @apply p-2 italic text-[--text-color] bg-[--bg-color-footer] border-x border-b border-solid border-[--border-color];\n}\n\n.alc-autocomplete__field .alc-field__core {\n  @apply relative;\n}\n\n.alc-field__input.alc-autocomplete__input {\n  @apply pl-8 pr-12 text-ellipsis;\n}\n\n.alc-autocomplete__result-row--horizontal {\n  @apply flex-row\n}\n\n.alc-autocomplete__result-row--vertical {\n  @apply flex-col\n}\n\n.alc-autocomplete__grid--vertical {\n  @apply overflow-y-scroll max-h-full;\n}\n\n.alc-autocomplete__list-container {\n  @apply absolute min-w-[250px] mt-11 w-full z-10;\n}\n\n.alc-autocomplete__has-an-error-indicator, .alc-autocomplete__loading-indicator {\n  @apply bg-[--bg-color-footer] font-[#000] border border-solid border-[--border-color] p-2 -mb-1 flex items-center;\n}\n\n.alc-autocomplete__loading-icon {\n  @apply mr-1 animate-spin;\n}\n\n/* Centralizar o icone */\n.alc-autocomplete__loading-icon .icon-inner {\n  @apply block;\n}\n\n/* Centralizar o icone */\n.alc-autocomplete__loading-icon .alc-icon__image {\n  @apply top-0 mt-0 h-auto w-auto;\n}\n\n\n.alc-autocomplete__container-results {\n  @apply h-full max-h-[inherit];\n}\n\n.alc-autocomplete__results {\n  @apply h-full max-h-[inherit] flex flex-col;\n}","import { Component, Element, Host, Listen, Method, Prop, State, h, Watch, Event, EventEmitter } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-autocomplete',\n  styleUrl: 'alc-autocomplete.css',\n  shadow: false,\n})\nexport class AlcAutocomplete {\n  @Element() el: HTMLElement;\n\n  /** Itens que serão listado no componente */\n  @Prop({ reflect: true }) items: Array<{ [key: string]: string }> = [];\n\n  /** Indica os atributos dos dados que serão exibidos na lista */\n  @Prop({ reflect: true }) displayKeys: string = '';\n\n  /** Label do input */\n  @Prop({ reflect: true }) label?: string = '';\n\n  /** Mensagem de ajuda */\n  @Prop({ reflect: true }) hint: string = '';\n\n  /** Indica se o input é obrigatório */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /** Texto dentro do input */\n  @Prop({ reflect: true }) placeholder?: string;\n\n  /** Indica o tipo de visualização da lista */\n  @Prop({ reflect: true }) listDirection: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Desabilita input */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** Indica se os dados estão sendo carregados */\n  @Prop({ reflect: true }) loading: boolean = false;\n\n  /** Indica se houve um erro ao carregar os dados */\n  @Prop({ reflect: true, mutable: true }) error: boolean = false;\n\n  // Mensagem de erro do input\n  @Prop({ reflect: true}) errorMsg: string = null;\n\n  @State() filteredData: any[] = []; // Armazena os dados filtrados\n  @State() itemSelected: boolean = false; // Indica se um item foi selecionado\n  @State() selectedItemValue: HTMLElement | null = null; // Armazena o valor selecionado\n  @State() emptyResult: boolean = false; // Indica se não foi encontrado nenhum resultado\n\n  input: HTMLInputElement;\n  grid: HTMLElement;\n  activeRowIndex: number = -1;\n  activeColIndex: number = 0;\n  rowsCount: number = 0;\n  colsCount: number = 0;\n  gridFocused: boolean = false;\n  shown: boolean = false;\n  selectionCol: number = 0;\n  inputId: string;\n  gridId: string;\n  labelId: string;\n  messageRowContainerId: string;\n\n  /**\n * Evento emitido sempre que o item selecionado for alterado.\n * O valor emitido será o mesmo que pode ser obtido pelo método `getSelected()`.\n */\n  @Event({\n    eventName: 'alc-change',\n  })\n  alcChange: EventEmitter<any>;\n\n  @Watch('selectedItemValue')\n  selectedItemValueChanged(newValue: any) {\n    // Sempre que o valor selecionado for alterado (via seleção na lista ou via setSelected),\n    // emitimos o evento alc-change com o novo valor.\n    this.alcChange.emit(newValue);\n  }\n\n  @Watch('loading')\n  handleLoadingChange(newVal: boolean, oldVal: boolean) {\n    if (oldVal === true && newVal === false && !this.disabled && this.input) {\n      requestAnimationFrame(() => {\n        this.input.focus();\n      });\n    }\n  }\n\n  componentWillLoad() {\n    this.inputId = getUniqueId();\n    this.gridId = getUniqueId();\n    this.labelId = getUniqueId();\n    this.messageRowContainerId = getUniqueId();\n  }\n\n  componentDidLoad() {\n    /* Não permite remover o atributo disabled pelo modo desenvolvedor no browser */\n    const observer = new MutationObserver(() => {\n      if (!this.input.hasAttribute('disabled')) {\n        if (this.disabled || this.loading) {\n          this.input.setAttribute('disabled', 'true');\n        }\n      }\n    });\n\n    observer.observe(this.input, { attributes: true, attributeFilter: ['disabled'] });\n\n    if (this.disabled || this.loading) {\n      this.input.setAttribute('disabled', 'true');\n    }\n\n    this.input.addEventListener('focus', this.handleFocus.bind(this));\n  }\n\n  @Listen('click', { target: 'body' })\n  handleBodyClick(evt: MouseEvent) {\n    const target = evt.target;\n\n    if (target === this.input || (target instanceof Node && this.grid.contains(target))) {\n      return;\n    }\n    this.hideResults();\n  }\n\n  @Listen('keyup')\n  handleInputKeyUp(evt: KeyboardEvent) {\n    const target = evt.target;\n    if (!(target instanceof Node) || !this.input.contains(target)) {\n      return;\n    }\n\n    const key = evt.key;\n\n    switch (key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'Escape':\n      case 'Enter':\n        evt.preventDefault();\n        return;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        if (this.gridFocused) {\n          evt.preventDefault();\n          return;\n        }\n        break;\n      default:\n        this.updateResults(); // Atualiza os resultados de busca\n    }\n  }\n\n  @Listen('keydown')\n  handleInputKeyDown(evt: KeyboardEvent) {\n    const key = evt.key; // Recomenda-se usar evt.key ao invés de keyCode\n    let activeRowIndex = this.activeRowIndex;\n    let activeColIndex = this.activeColIndex;\n\n    const target = evt.target;\n\n    // Verifique se evt.target é um Node\n    if (!(target instanceof Node) || !this.input.contains(target)) {\n      return;\n    }\n\n    if (key === 'Escape') { // ESC\n      evt.preventDefault();\n      if (this.gridFocused) {\n        this.gridFocused = false;\n        this.removeFocusCell(this.activeRowIndex, this.activeColIndex);\n        this.activeRowIndex = -1;\n        this.activeColIndex = 0;\n        this.input.setAttribute('aria-activedescendant', '');\n      } else {\n        if (!this.shown) {\n          setTimeout(() => {\n            this.input.value = '';\n          }, 1);\n        }\n      }\n      if (this.shown) {\n        this.hideResults();\n      }\n      // Remover botão de fechar quando clicar na tecla Esc\n      this.itemSelected = false;\n      this.emptyResult = false;\n      this.error = false;\n      return;\n    }\n\n    if (this.rowsCount < 1) {\n      return;\n    }\n\n    const prevActive = this.getItemAt(activeRowIndex, this.selectionCol);\n    let activeItem: HTMLElement | null;\n\n    switch (key) {\n      case 'ArrowUp':\n        this.gridFocused = true;\n        activeRowIndex = this.getRowIndex('ArrowUp');\n        evt.preventDefault();\n        break;\n      case 'ArrowDown':\n        this.gridFocused = true;\n        activeRowIndex = this.getRowIndex('ArrowDown');\n        evt.preventDefault();\n        break;\n      case 'ArrowLeft':\n        if (activeColIndex <= 0) {\n          activeColIndex = this.colsCount - 1;\n          activeRowIndex = this.getRowIndex('ArrowLeft');\n        } else {\n          activeColIndex--;\n        }\n        if (this.gridFocused) {\n          evt.preventDefault();\n        }\n        break;\n      case 'ArrowRight':\n        if (activeColIndex === -1 || activeColIndex >= this.colsCount - 1) {\n          activeColIndex = 0;\n          activeRowIndex = this.getRowIndex('ArrowRight');\n        } else {\n          activeColIndex++;\n        }\n        if (this.gridFocused) {\n          evt.preventDefault();\n        }\n        break;\n      case 'Enter': // ENTER\n        evt.preventDefault(); // Prevenir submissão do formulário\n        if (this.gridFocused) {\n          activeItem = this.getItemAt(activeRowIndex, this.selectionCol);\n          this.selectItem(activeItem, evt);\n          this.gridFocused = false;\n        } else {\n          // Opcional: ações adicionais quando Enter é pressionado fora da lista\n          this.hideResults();\n        }\n        return;\n      case 'Tab': // TAB\n        this.hideResults();\n        return;\n      default:\n        return;\n    }\n\n    if (prevActive) {\n      this.removeFocusCell(this.activeRowIndex, this.activeColIndex);\n    }\n\n    activeItem = this.getItemAt(activeRowIndex, activeColIndex);\n    this.activeRowIndex = activeRowIndex;\n    this.activeColIndex = activeColIndex;\n\n    if (activeItem) {\n      this.input.setAttribute(\n        'aria-activedescendant',\n        'result-item-' + activeRowIndex + 'x' + activeColIndex\n      );\n      this.focusCell(activeRowIndex, activeColIndex);\n    } else {\n      this.input.setAttribute('aria-activedescendant', '');\n    }\n  }\n\n  @Listen('click')\n  handleGridClick(evt: MouseEvent) {\n    const targetElement = evt.target as HTMLElement;\n\n    if (!targetElement || !this.grid.contains(targetElement)) {\n      return;\n    }\n\n    let row: HTMLElement | null = targetElement.closest('li');\n\n    if (!row) {\n      return;\n    }\n\n    const selectItem = row.querySelector('.alc-autocomplete__result-cell') as HTMLElement;\n    this.selectItem(selectItem, evt);\n  }\n\n  isElementInView(element: HTMLElement): boolean {\n    const bounding = element.getBoundingClientRect();\n\n    return (\n      bounding.top >= 0 &&\n      bounding.left >= 0 &&\n      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      bounding.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n\n  updateResults() {\n    const searchString = this.input.value;\n    this.emptyResult = false;\n\n    // Verifique se a string de pesquisa tem pelo menos 2 caracteres\n    if (searchString.length < 2) {\n      this.hideResults();\n      this.emptyResult = false;\n      return;\n    }\n\n    this.filteredData = this.searchDataService(searchString);\n\n    this.hideResults();\n\n    if (this.filteredData.length > 0) {\n      const maxItems = 10;\n      const resultsToShow = this.filteredData.slice(0, maxItems);\n\n      if (resultsToShow.length) {\n        for (let row = 0; row < resultsToShow.length; row++) {\n          const resultRow = document.createElement('li');\n          resultRow.className = `alc-autocomplete__result-row alc-autocomplete__result-row--${this.listDirection}`;\n          resultRow.setAttribute('role', 'option');\n          resultRow.setAttribute('id', 'result-row-' + row);\n          resultRow.setAttribute('data-index', row.toString());\n\n          this.displayKeys.split(',').forEach((atributo, col) => {\n            const resultCell = document.createElement('span');\n            resultCell.className = 'alc-autocomplete__result-cell';\n            resultCell.setAttribute('role', 'presentation');\n            resultCell.setAttribute('id', 'result-item-' + row + 'x' + col);\n            resultCell.innerText = resultsToShow[row][atributo.trim()];\n            resultRow.appendChild(resultCell);\n          });\n\n          this.grid.appendChild(resultRow);\n        }\n        this.grid.classList.remove('is-hidden');\n        this.input.setAttribute('aria-expanded', 'true');\n        this.rowsCount = resultsToShow.length;\n        this.colsCount = this.displayKeys.split(',').length;\n        this.shown = true;\n      }\n\n      if (this.filteredData.length > maxItems) {\n        this.showMessageRow(\"Mais de 10 itens encontrados. Refine seus critérios de pesquisa.\");\n      }\n    } else {\n      this.emptyResult = true;\n    }\n  }\n\n  getRowIndex(key: string): number {\n    let activeRowIndex = this.activeRowIndex;\n\n    switch (key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        if (activeRowIndex <= 0) {\n          activeRowIndex = this.rowsCount - 1;\n        } else {\n          activeRowIndex--;\n        }\n        break;\n      case 'ArrowDown':\n      case 'ArrowRight':\n        if (activeRowIndex === -1 || activeRowIndex >= this.rowsCount - 1) {\n          activeRowIndex = 0;\n        } else {\n          activeRowIndex++;\n        }\n    }\n\n    return activeRowIndex;\n  }\n\n  getItemAt(rowIndex: number, colIndex: number): HTMLElement | null {\n    return document.getElementById('result-item-' + rowIndex + 'x' + colIndex) as HTMLElement | null;\n  }\n\n  selectItem(item: HTMLElement | null, event?: Event) {\n    if (event) event.preventDefault();\n    if (item) {\n      const row = item.closest('li');\n      const index = row?.getAttribute('data-index');\n      if (index !== null && index !== undefined) {\n        const selectedData = this.filteredData[parseInt(index, 10)];\n        this.input.value = item.innerText;\n        this.selectedItemValue = selectedData;\n        this.hideResults();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.itemSelected = true;\n\n        this.emptyResult = false;\n        this.input.focus();\n      }\n    }\n  }\n\n  handleInput() {\n    this.itemSelected = this.input?.value.length > 0;\n  }\n\n  handleFocus() {\n    // Quando o input ganhar foco novamente, se já existir algum valor digitado,\n    // e o valor for maior ou igual a 2 caracteres, tentar exibir novamente os resultados.\n    const searchString = this.input.value || '';\n    if (searchString.length >= 2) {\n      this.updateResults();\n    }\n  }\n\n  clearSelection(event: Event) {\n    event.preventDefault(); // Prevenir comportamento padrão de submit\n    this.clearSelected();\n    this.input.focus();\n  }\n\n  hideResults() {\n    if (!this.shown) {\n      return;\n    }\n  \n    this.gridFocused = false;\n    this.shown = false;\n    this.activeRowIndex = -1;\n    this.activeColIndex = 0;\n    this.grid.innerHTML = '';\n    this.grid.classList.add('is-hidden');\n    this.input.setAttribute('aria-expanded', 'false');\n    this.rowsCount = 0;\n    this.colsCount = 0;\n    this.input.setAttribute('aria-activedescendant', '');\n  \n    const messageRowContainer = this.el.querySelector(`#${this.messageRowContainerId}`);\n    if (messageRowContainer) {\n      messageRowContainer.innerHTML = '';\n    }\n  \n    if (!this.isElementInView(this.input)) {\n      this.input.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  removeFocusCell(rowIndex: number, colIndex: number) {\n    const row = document.getElementById('result-row-' + rowIndex);\n    if(row) {\n      row.classList.remove('is-focused');\n      row.ariaSelected = \"false\";\n    }\n    const cell = this.getItemAt(rowIndex, colIndex);\n    if (cell) cell.classList.remove('is-focused');\n  }\n\n  focusCell(rowIndex: number, colIndex: number) {\n    const row = document.getElementById('result-row-' + rowIndex);\n\n    if (row) {\n      row.classList.add('is-focused');\n      row.ariaSelected = \"true\";\n    }\n\n    const cell = this.getItemAt(rowIndex, colIndex);\n    if (cell) {\n      cell.classList.add('is-focused');\n\n      if (this.listDirection === 'vertical') {\n        this.ensureCellInView(cell);\n      } else {\n        if (!this.isElementInView(cell)) {\n          cell.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n      }\n    }\n  }\n\n  /* Mantém o elemento focável dentro do scroll */\n  ensureCellInView(element: HTMLElement) {\n    const gridContainer = this.grid;\n    const elementTop = element.offsetTop;\n\n    gridContainer.scrollTop = elementTop;\n  }\n\n  /* Mostra pesquisa com e sem acentos */\n  searchDataService(searchString: string): any[] {\n    const normalizeString = (str: string) =>\n      str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase();\n\n    const normalizedSearchString = normalizeString(searchString);\n\n    const results = [];\n\n    for (const item of this.items) {\n      for (const atributo of this.displayKeys.split(',')) {\n        const normalizedItem = normalizeString(item[atributo.trim()] || '');\n        if (normalizedItem.includes(normalizedSearchString)) {\n          results.push(item);\n          break;\n        }\n      }\n    }\n\n    return results;\n  }\n\n  showMessageRow(message: string) {\n    const messageRowContainer = this.el.querySelector(`#${this.messageRowContainerId} `) as HTMLElement;\n    const existingMessageRow = messageRowContainer.querySelector('.alc-autocomplete__message-row');\n\n    if (!existingMessageRow) {\n      const messageRow = document.createElement('div');\n      messageRow.className = `alc-autocomplete__message-row`;\n      messageRow.innerText = message;\n      if (messageRowContainer) {\n        messageRowContainer.appendChild(messageRow);\n      }\n    }\n  }\n\n  /** Retorna o valor selecionado */\n  @Method()\n  async getSelected(): Promise<any> {\n    return this.selectedItemValue || null;\n  }\n\n  /** Define o valor selecionado */\n  @Method()\n  async setSelected(item: any): Promise<void> {\n    if (item) {\n      this.selectedItemValue = item;\n      const firstKey = this.displayKeys.split(',')[0].trim();\n      const displayText = item[firstKey];\n\n      this.input.value = displayText;\n      this.itemSelected = true;\n      this.emptyResult = false;\n    }\n  }\n\n  /** Limpa o valor selecionado */\n  @Method()\n  async clearSelected(): Promise<void> {\n    this.input.value = '';\n    this.selectedItemValue = null;\n    this.itemSelected = false;\n    this.hideResults();\n    this.emptyResult = false;\n    this.error = false;\n  }\n\n  render() {\n    const listClass = this.listDirection === 'vertical'\n      ? 'alc-autocomplete__grid alc-autocomplete__grid--vertical is-hidden alc-field__text'\n      : 'alc-autocomplete__grid is-hidden alc-field__text';\n\n    const active = this.shown || this.loading || this.error || (!this.error && this.emptyResult)\n\n    return (\n      <Host>\n        <alc-field\n          id={this.labelId}\n          label={this.label}\n          hint={this.hint}\n          required={this.required}\n          class=\"alc-autocomplete__field\"\n        >\n\n          <alc-popup shift flip strategy=\"fixed\" active={active} distance={2} placement=\"bottom-start\" sync='width'>\n            <div slot=\"anchor\">\n              <alc-icon name=\"search\" label=\"Pesquisar\" class=\"alc-autocomplete__icon\"></alc-icon>\n              <input\n                ref={el => this.input = el}\n                placeholder={this.placeholder}\n                class=\"alc-autocomplete__input\"\n                type=\"text\"\n                role=\"combobox\"\n                aria-haspopup=\"grid\"\n                aria-expanded=\"false\"\n                aria-autocomplete=\"list\"\n                aria-controls={this.gridId}\n                id={this.inputId}\n                disabled={this.disabled || this.loading}\n                onInput={() => this.handleInput()}\n                {...test('data-test-autocomplete-input')}\n              />\n\n              {this.itemSelected && this.input?.value && (\n                <button\n                  type=\"button\" // Adicionado para evitar submissão do formulário\n                  class=\"alc-button alc-button-rounded alc-autocomplete__clear-button\"\n                  onClick={(event) => this.clearSelection(event)}\n                  {...test('data-test-autocomplete-clear-button')}\n                  >\n                  <alc-icon name=\"x-lg\" label=\"Limpar\"></alc-icon>\n                </button>\n              )}\n            </div>\n\n            <div class=\"alc-autocomplete__container-results\">\n              {this.loading ? (\n                <div class=\"alc-autocomplete__loading-indicator\">\n                  <alc-icon name=\"arrow-clockwise\" label=\"Carregando\" class=\"alc-autocomplete__loading-icon\"></alc-icon> Carregando...\n                </div>\n              ) : null\n              }\n              {this.error ? (\n                <div class=\"alc-autocomplete__has-an-error-indicator\">\n                  <alc-icon name=\"exclamation-triangle\" label=\"Erro\" class=\"mr-1\"></alc-icon> Serviço indisponível. Volte mais tarde!\n                </div>\n              ) : null\n              }\n              {!this.error && this.emptyResult ? (\n                <div class=\"alc-autocomplete__has-an-error-indicator\">\n                  <alc-icon name=\"exclamation-triangle\" label=\"Erro\" class=\"mr-1\"></alc-icon> Nenhum resultado encontrado. Refine seus critérios de pesquisa.\n                </div>\n              ) : null\n              }\n\n              <div class=\"alc-autocomplete__results\" {...test('data-test-autocomplete-results')}>\n                <ul\n                  aria-labelledby={this.labelId}\n                  role=\"listbox\"\n                  id={this.gridId}\n                  class={listClass}\n                  ref={el => this.grid = el}\n                ></ul>\n                <div id={this.messageRowContainerId} class=\"alc-autocomplete__message-row-container\"></div>\n              </div>\n            </div>\n\n          </alc-popup>\n\n        </alc-field>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}