{"version":3,"names":["alcDropdownCss","AlcDropdown","class_1","hostRef","_this","this","hideOnEventsMap","Map","open","hideOn","handleAnchorClick","event","target","Node","_a","trigger","contains","toggleDropdown","__awaiter","hide","show","prototype","watchOpen","handleTriggerAriaExpanded","handleTriggerTabindex","watchHideOn","forEach","listener","eventName","content","removeEventListener","delete","addHideOnListeners","handleKeydown","key","defaultPrevented","preventDefault","_b","sent","handleTriggerFocus","alcShow","emit","alcAfterShow","alcHide","alcAfterHide","focus","handleContentFocus","contentFirstFocusable","getFocusableElements","HTMLElement","setTriggerAccessibility","getAttribute","setAttribute","contentElementChild","firstElementChild","ariaHaspopup","role","id","getUniqueId","ariaExpanded","concat","tabIndex","originalTriggerTabindex","handleFocusOut","e","relatedTarget","isNode","el","handleCloseOn","trim","eventNames","split","set","addEventListener","componentDidUpdate","getTrigger","slot","querySelector","tagName","logger","warn","componentDidLoad","render","h","Host","active","placement","flip","shift","strategy","onFocusout","bind","distance","onClick","name","class","ref","tabindex","alcMenuCss","AlcMenu","class_2","hasFocus","getListItems","Array","from","hostElement","querySelectorAll","includeFirstItemInTabNavigation","items","item","pos","removeAllItemsFromTabNavigation","setHasFocus","refresh","handleFocusedItemIndex","handleAlcSelect","index","findIndex","handleFocusItem","handleFocusin","handleFocusout","direction","currentIndex","indexOf","document","activeElement","nextIndex","itemsLength","length","componentDidRender"],"sources":["src/components/alc-dropdown/alc-dropdown.css?tag=alc-dropdown","src/components/alc-dropdown/alc-dropdown.tsx","src/components/alc-menu/alc-menu.css?tag=alc-menu","src/components/alc-menu/alc-menu.tsx"],"sourcesContent":["[data-alc-theme=\"dark\"] alc-dropdown {\n  --border-color: var(--alc-color-neutral-80);\n}\n\n[data-alc-theme=\"light\"] alc-dropdown {\n  --border-color: var(--alc-color-neutral-10);\n}\n\n\nalc-dropdown {\n  @apply relative inline-block;\n}\n\n.alc-dropdown__content {\n  @apply bg-[color:var(--alc-color-surface-primary)] overflow-auto;\n  @apply drop-shadow-md shadow-black rounded border border-[color:var(--border-color)];\n  /* Vai pegar a altura máxima do pai (popup) permitindo funcionar o overflow */\n  max-height: inherit;\n\n  /* animation: Scale 100ms ease-in-out; */\n}\n\n.alc-dropdown__content--opened {\n  @apply block;\n}\n\n@keyframes Scale {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n","import { Component, Prop, h, Host, Element, Listen, Watch, Method, Event, EventEmitter } from '@stencil/core';\nimport { getFocusableElements } from '../utils/keydown';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\n\n\n/**\n * @slot - O conteúdo do dropdown.\n * @slot trigger - O disparador do dropdown, usualmente um botão.\n */\n@Component({\n  tag: 'alc-dropdown',\n  styleUrl: 'alc-dropdown.css',\n  shadow: false,\n})\nexport class AlcDropdown {\n  @Element() el: HTMLElement;\n  private trigger: HTMLElement;\n  private content: HTMLElement;\n  private originalTriggerTabindex: number | null;\n  private hideOnEventsMap: Map<string, EventListener> = new Map();\n\n  /**\n   * Indica se o dropdown esta aberto ou não. Pode-se usar essa propriedade em vez dos métodos show/hide.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) open: boolean = false;\n\n  @Watch('open')\n  watchOpen() {\n    if (this.trigger) {\n      this.handleTriggerAriaExpanded();\n      this.handleTriggerTabindex();\n    }\n  }\n\n  /**\n   * Nome do evento que, ao ocorrer no conteúdo do dropdown, vai fazer com que ele seja fechado.\n   * Podem ser informados vários eventos, separados por um espaço em branco.\n   */\n  @Prop({\n    reflect: true,\n    mutable: false,\n  }) hideOn: string = '';\n\n  @Watch('hideOn')\n  watchHideOn() {\n    // Remove todos os eventos anteriores\n    this.hideOnEventsMap.forEach((listener, eventName) => {\n      this.content.removeEventListener(eventName, listener);\n      this.hideOnEventsMap.delete(eventName);\n    })\n\n    // Adiciona todos os novos eventos\n    this.addHideOnListeners();\n  }\n\n  @Listen('keydown')\n  async handleKeydown(event: KeyboardEvent) {\n    if (!this.open) return;\n    \n    if (event.key !== 'Escape') return;\n\n    if (event.defaultPrevented) return;\n\n    event.preventDefault();\n    await this.hide();\n    this.handleTriggerFocus();\n  }\n\n  /**\n   * Evento disparado quando o dropdown vai abrir\n   */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown abriu\n   */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown vai fechar\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando o dropdown fechou\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  /**\n   * Método para abrir o dropdown.\n   * @returns O valor retornado é `true` se o dropdown foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.open) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcShow.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.open = true;\n    this.alcAfterShow.emit();\n\n    return true;\n  }\n\n  /**\n   * Método para fechar o dropdown.\n   * @returns O valor retornado é `true` se o dropdown foi realmente oculto com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.open) {\n      return false;\n    }\n\n    const { defaultPrevented } = this.alcHide.emit();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.open = false;\n    this.alcAfterHide.emit();\n\n    return true;\n  }\n\n  private handleAnchorClick = (event: MouseEvent) => {\n    if (!(event.target instanceof Node)) {\n      return;\n    }\n\n    // Se o click foi no trigger (ou dentro dele)\n    if (this.trigger?.contains(event.target)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown = async () => {\n    this.open ? this.hide() : this.show();\n  }\n\n  handleTriggerFocus() {\n    this.trigger?.focus();\n  }\n\n  handleContentFocus() {\n    const contentFirstFocusable = getFocusableElements(this.content)[0];\n\n    if(!contentFirstFocusable) return;\n\n    if(contentFirstFocusable instanceof HTMLElement) {\n      contentFirstFocusable.focus();\n    }\n  }\n\n  private setTriggerAccessibility() {\n    if (this.trigger.getAttribute('role') === null) {\n      this.trigger.setAttribute('role', \"button\");\n    }\n\n    const contentElementChild = this.content.firstElementChild;\n\n    if (this.trigger.getAttribute('aria-haspopup') === null) {\n      const ariaHaspopup = contentElementChild?.role === \"menu\" ? \"menu\" : \"dialog\";\n      this.trigger.setAttribute('aria-haspopup', ariaHaspopup);\n    }\n\n    let id = contentElementChild?.id ? contentElementChild.id : getUniqueId();\n\n    // Se não ter conteudo dentro, o id vai no alc-dropdown__content se não vai no conteudo\n    if(!contentElementChild) {\n      this.content.id = id;\n    } else {\n      contentElementChild.id = id;\n    }\n\n    this.trigger.setAttribute('aria-controls', id);\n  }\n\n  private handleTriggerAriaExpanded() {\n    this.trigger.ariaExpanded = `${this.open}`;\n  }\n\n  private handleTriggerTabindex() {\n    this.trigger.tabIndex = this.open ? -1 : this.originalTriggerTabindex;\n  }\n\n  private async handleFocusOut(e: FocusEvent) {\n    const { relatedTarget } = e;\n    const isNode = relatedTarget instanceof Node;\n\n    /*\n      OBSERVAÇÃO:\n      Para que um clique qualquer dentro de content, mesmo se for um elemento não focalizável,\n      não resulte em relatedTarget null, foi definido tabindex=-1 para o content.\n      Se não fosse assim, um clique em um elemento não focalizável dentro de content\n      resultaria no fechamento indesejado do dropdown.\n    */\n    if (isNode && this.el.contains(relatedTarget)) {\n      return;\n    }\n\n    await this.hide();\n  }\n\n  private handleCloseOn(e: Event) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    this.open = false;\n  }\n\n  private addHideOnListeners() {\n    const hideOn = this.hideOn.trim();\n    // Nada a fazer se for um string vazia.\n    if (!hideOn) {\n      return;\n    }\n\n    const eventNames = hideOn.split(/\\s+/);\n\n    eventNames.forEach(eventName => {\n      const listener = (e: Event) => this.handleCloseOn(e);\n      this.hideOnEventsMap.set(eventName, listener);\n      this.content.addEventListener(eventName, listener);\n    });\n  }\n\n  componentDidUpdate() {\n    if(this.open) {\n      // Quando o trigger for acionado por teclado para abrir o foco deve ir para o primeiro elemento focalizável dentro do conteúdo\n      // Foi adicionado para tratar no componentDidUpdate pois no handleKeydown o dropdown ainda esta fechado, logo o 'elemento.focus()' não funciona\n      // Aqui o componente ja foi renderizado com o novo estado.\n      this.handleContentFocus();\n    }\n  }\n\n  getTrigger(): HTMLElement {\n    let slot: HTMLElement = null;\n    let trigger: HTMLElement = null;\n\n    slot = this.el.querySelector('[slot=\"trigger\"]');\n    if (slot) {\n      if (slot.tagName === 'BUTTON' || slot.getAttribute('role') === 'button') {\n        // Trigger é o próprio slot se ele mesmo for o botão\n        trigger = slot;\n      }\n      else {\n        // Trigger é o primeiro botão encontrado dentro do slot (se existir)\n        trigger = slot.querySelector('button, [role=\"button\"]');\n      }\n    }\n\n    if (trigger === null) {\n      logger.warn(this.el, 'alc-dropdown não localizou um trigger válido. Slot deve ser ou conter um botão. Veja a documentação para mais detalhes.');\n    }\n    return trigger;\n  }\n\n  componentDidLoad() {\n\n    this.trigger = this.getTrigger();\n\n    if (this.trigger) {\n      this.setTriggerAccessibility();\n      this.handleTriggerAriaExpanded();\n      this.originalTriggerTabindex = this.trigger.tabIndex;\n    }\n\n    // Adiciona close-on listeners\n    this.addHideOnListeners();\n  }\n\n  render() {\n    return (\n      <Host>\n        <alc-popup\n          active={this.open}\n          placement=\"bottom-start\"\n          flip\n          shift\n          strategy=\"fixed\"\n          onFocusout={this.handleFocusOut.bind(this)}\n          distance={2}\n        >\n          <div slot=\"anchor\" onClick={this.handleAnchorClick}>\n            <slot name=\"trigger\" />\n          </div>\n\n          <div class=\"alc-dropdown__content\" ref={(el) => this.content = el} tabindex='-1'>\n            <slot></slot>\n          </div>\n        </alc-popup>\n      </Host>\n    );\n  }\n}\n\n",".alc-menu {\n  @apply block py-2;\n  @apply bg-[color:var(--alc-color-surface-primary)];\n}\n","import { Component, h, Host, Element, Listen, Method } from '@stencil/core';\n\n@Component({\n  tag: 'alc-menu',\n  styleUrl: 'alc-menu.css',\n  shadow: false,\n})\nexport class AlcMenu {\n  @Element() hostElement: HTMLElement;\n\n  private hasFocus = false;\n\n  private items: Element[];\n\n  @Method()\n  async refresh() {\n    this.items = this.getListItems();\n    this.includeFirstItemInTabNavigation();\n  }\n\n\n  @Listen('keydown')\n  handleKeydown(event: KeyboardEvent) {\n    if ('ArrowDown' === event.key) {\n      event.preventDefault();\n      this.handleFocusedItemIndex();\n      return;\n    }\n\n    if ('ArrowUp' === event.key) {\n      event.preventDefault();\n      this.handleFocusedItemIndex(-1);\n      return;\n    }\n  }\n\n  /**\n   * Focar item recém-selecionado\n   */\n  @Listen('alc-select')\n  handleAlcSelect (e: CustomEvent) {\n    const index = this.items.findIndex(item => item === e.target);\n\n    if(index === null) return;\n\n    this.handleFocusItem(index);\n  }\n\n  @Listen('focusin')\n  handleFocusin ({ target }) {\n    // Se já tem o foco, nada a fazer\n    if (this.hasFocus) {\n      return;\n    }\n    if (this.hostElement.contains(target)) {\n      this.setHasFocus(true);\n    }\n  }\n\n  @Listen('focusout')\n  handleFocusout ({ relatedTarget }) {\n    if (!this.hostElement.contains(relatedTarget)) {\n      this.setHasFocus(false);\n    }\n  }\n\n  handleFocusedItemIndex(direction: -1 | 1 = 1) {\n    const currentIndex = this.items.indexOf(document.activeElement);\n    if (currentIndex === -1) return;\n\n    let nextIndex = currentIndex + direction;\n    const itemsLength = this.items.length - 1;\n\n    if (nextIndex > itemsLength) {\n      nextIndex = 0;\n    }\n\n    if (nextIndex < 0) {\n      nextIndex = itemsLength;\n    }\n\n    this.handleFocusItem(nextIndex);\n  }\n\n  handleFocusItem(index: number) {\n    const item = this.items[index];\n\n    if(item instanceof HTMLElement) {\n      // Seta foco no atual\n      item.focus();\n    }\n\n  }\n\n  getListItems = () => Array.from(this.hostElement.querySelectorAll('[role^=menuitem]'));\n\n  includeFirstItemInTabNavigation = () => {\n    this.items.forEach((item, pos) => {\n      item.setAttribute('tabindex', pos === 0 ? '0' : '-1')\n    });\n  }\n\n  removeAllItemsFromTabNavigation = () => {\n    this.items.forEach(item => item.setAttribute('tabindex', '-1'));\n  }\n\n\n  setHasFocus = (hasFocus = true) => {\n\n    this.hasFocus = hasFocus;\n\n    if (hasFocus) {\n      this.removeAllItemsFromTabNavigation();\n    }\n    else {\n      this.includeFirstItemInTabNavigation();\n    }\n\n  }\n\n\n  componentDidRender() {\n    this.items = this.getListItems();\n  }\n\n  componentDidLoad() {\n    this.includeFirstItemInTabNavigation();\n  }\n\n  render() {\n    return (\n      <Host role=\"menu\" class=\"alc-menu\">\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}