{"version":3,"file":"alc-fieldset.entry.js","sources":["src/components/alc-fieldset/alc-fieldset.css?tag=alc-fieldset","src/components/alc-fieldset/alc-fieldset.tsx"],"sourcesContent":["alc-fieldset {\n  display: block;\n}\n\n[data-alc-theme=\"dark\"] alc-fieldset {\n  --border-color: var(--alc-color-border);\n  --text-color: var(--alc-color-text-4);\n  --text-color-error: var(--alc-color-error-45);\n}\n\n[data-alc-theme=\"light\"] alc-fieldset {\n  --border-color: theme('colors.gray-warm.50');\n  --text-color: var(--alc-color-text-4);\n  --text-color-error: var(--alc-color-error-50);\n}\n\n.alc-fieldset {\n  @apply border border-solid border-[--border-color] rounded p-3;\n}\n\n.alc-fieldset__legend {\n  @apply font-semibold px-1.5;\n}\n\n.alc-fieldset__text-container {\n  @apply mt-4 flex flex-col gap-1;\n}\n\n.alc-fieldset__text {\n  @apply text-sm text-[--text-color];\n\n  &--error {\n    @apply text-[--text-color-error];\n  }\n}","import { Component, Element, Host, h, Prop, Watch } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n/**\n * @slot DEFAULT - Slot para o conteúdo do fieldset.\n*/\n\n@Component({\n  tag: 'alc-fieldset',\n  styleUrl: 'alc-fieldset.css',\n  shadow: false,\n})\nexport class AlcFieldset {\n\n  describedBy = new Map();\n  errorId = '';\n  hintId = '';\n\n  @Element() el: HTMLAlcFieldsetElement;\n\n  /**\n   * Texto da legenda do fieldset.\n  */\n  @Prop({ reflect: true }) legend!: string;\n\n  /**\n   * Texto de ajuda.\n  */\n  @Prop({ reflect: true }) hint: string = '';\n\n  /**\n   * Indica se o fieldset é obrigatório.\n  */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  /**\n   * Texto de mensagem de erro.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  }) errorMsg: string = '';\n  @Watch('errorMsg')\n  watchErrorMsg(newValue: string) {\n\n    logger.debug('watchErrorMsg', newValue);\n\n    if (newValue) {\n      this.el.classList.add('alc-form__input--error');\n    }\n    else {\n      this.el.classList.remove('alc-form__input--error');\n    }\n  }\n\n  componentWillLoad() {\n\n    // Independentemente de qualquer coisa, reserva ids para esses elementos.\n    this.errorId = getUniqueId();\n    this.hintId = getUniqueId();\n\n    if (this.el) {\n      this.watchErrorMsg(this.errorMsg);\n    }\n\n  }\n\n  componentWillRender() {\n\n    if (this.errorMsg) {\n      this.describedBy.set('error', this.errorId);\n    }\n    else {\n      this.describedBy.delete('error');\n    }\n\n    if (this.hint) {\n      this.describedBy.set('hint', this.hintId);\n    }\n    else {\n      this.describedBy.delete('hint');\n    }\n\n  }\n\n  render() {\n\n\n    return (\n      <Host>\n        <fieldset\n          class=\"alc-fieldset\"\n          aria-describedby={mapToString(this.describedBy)}\n          {...test('data-test-fieldset')}\n        >\n          <legend\n            class=\"alc-fieldset__legend\"\n            {...test('data-test-legend')}\n          >\n            {this.legend}\n            {this.required\n              ?\n              // aria-hidden porque o \"required\" do input já é suficiente para informar.\n              <small aria-hidden=\"true\"> (obrigatório)</small>\n              :\n              null\n            }\n          </legend>\n          <slot></slot>\n          <div class=\"alc-fieldset__text-container\">\n            {this.errorMsg\n              ?\n              <small\n                class=\"alc-fieldset__text alc-fieldset__text--error\"\n                id={this.errorId}\n                {...test('data-test-error')}\n              >\n                {this.errorMsg}\n              </small>\n              :\n              null\n            }\n            {this.hint\n              ?\n              <small\n                class=\"alc-fieldset__text\"\n                id={this.hintId}\n                {...test('data-test-hint')}\n              >\n                {this.hint}\n              </small>\n              :\n              null\n            }\n          </div>\n        </fieldset>\n      </Host>\n    );\n  }\n\n}\n\n// get Map and transform in a string with the values separated by spaces. return null if Map is empty.\nfunction mapToString(map: Map<string, string>) {\n  if (map.size > 0) {\n    return Array.from(map.values()).join(' ');\n  }\n  else {\n    return null;\n  }\n}\n"],"names":["test"],"mappings":"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"}