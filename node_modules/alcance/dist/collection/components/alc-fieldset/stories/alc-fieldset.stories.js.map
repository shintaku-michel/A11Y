{"version":3,"file":"alc-fieldset.stories.js","sourceRoot":"","sources":["../../../../../src/components/alc-fieldset/stories/alc-fieldset.stories.ts"],"names":[],"mappings":"AAAA,aAAa;AACb,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,kDAAkD,CAAC;AACxF,OAAO,cAAc,MAAM,mDAAmD,CAAC;AAE/E,eAAe;IACb,KAAK,EAAE,sBAAsB;IAC7B,IAAI,EAAE,UAAU;IAChB,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,QAAQ;CACnB,CAAC;AAEF,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;AAE7C,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAC/B,IAAI,EAAE,wBAAwB;IAC9B,IAAI,kCACC,WAAW,KACd,QAAQ,EAAE,kBAAkB,GAC7B;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;GAavC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,IAAI,EAAE,qBAAqB;IAC3B,IAAI,kCACC,WAAW,KACd,QAAQ,EAAE,yCAAyC,GACpD;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;GAavC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,IAAI,EAAE,aAAa;IACnB,IAAI,kCACC,WAAW,KACd,QAAQ,EAAE,yCAAyC,EACnD,UAAU,EAAE,IAAI,GACjB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;GAavC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,IAAI,EAAE,gBAAgB;IACtB,IAAI,kCACC,WAAW,KACd,MAAM,EAAE,wCAAwC,EAChD,QAAQ,EAAE,WAAW,GACtB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;GAavC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG;IAClB,IAAI,EAAE,kBAAkB;IACxB,IAAI,kCACC,WAAW,KACd,WAAW,EAAE,mCAAmC,EAChD,QAAQ,EAAE,yCAAyC,GACpD;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;GAavC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG;IACtB,IAAI,EAAE,WAAW;IACjB,IAAI,kCACC,WAAW,KACd,QAAQ,EAAE,WAAW,GACtB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;GAyBvC,CAAC;CACH,CAAC","sourcesContent":["// @ts-ignore\nimport { argTypes } from './alc-fieldset.args';\nimport { render as renderArgs } from '../../../stories/functions/components.renderArgs';\nimport getDefaultArgs from '../../../stories/functions/components.defaultArgs';\n\nexport default {\n  title: 'Componentes/Fieldset',\n  name: 'Fieldset',\n  component: 'alc-fieldset',\n  parameters: {},\n  argTypes: argTypes,\n};\n\nconst defaultArgs = getDefaultArgs(argTypes);\n\nexport const BasicoComCheckbox = {\n  name: 'Básico usando checkbox',\n  args: {\n    ...defaultArgs,\n    'legend': 'Eu quero receber',\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)}>\n  <div class=\"flex flex-col gap-2\">\n    <alc-checkbox label=\"Notícias da semana\" >\n      <input type=\"checkbox\" />\n    </alc-checkbox>\n    <alc-checkbox label=\"Ofertas e promoções\">\n      <input type=\"checkbox\" />\n    </alc-checkbox>\n    <alc-checkbox label=\"Atualizações\">\n      <input type=\"checkbox\" />\n    </alc-checkbox>\n  </div>\n</alc-fieldset>\n  `)\n};\n\nexport const BasicoComRadio = {\n  name: 'Básico usando radio',\n  args: {\n    ...defaultArgs,\n    'legend': 'Escolha um framework de sua preferência',\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)}>\n  <div class=\"flex flex-col gap-2\">\n    <alc-radio label=\"React\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Angular\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Vue.js\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n  </div>\n</alc-fieldset>\n  `)\n};\n\nexport const Obrigatorio = {\n  name: 'Obrigatório',\n  args: {\n    ...defaultArgs,\n    'legend': 'Escolha um framework de sua preferência',\n    'required': true,\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)}>\n  <div class=\"flex flex-col gap-2\">\n    <alc-radio label=\"React\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Angular\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Vue.js\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n  </div>\n</alc-fieldset>\n  `)\n};\n\nexport const TextoAjuda = {\n  name: 'Texto de ajuda',\n  args: {\n    ...defaultArgs,\n    'hint': 'Escolha o framework de sua preferência',\n    'legend': 'Framework',\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)}>\n  <div class=\"flex flex-col gap-2\">\n    <alc-radio label=\"React\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Angular\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Vue.js\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n  </div>\n</alc-fieldset>\n  `)\n};\n\nexport const Erro = {\n  name: 'Mensagem de erro',\n  args: {\n    ...defaultArgs,\n    'error-msg': 'Precisa selecionar uma das opções',\n    'legend': 'Escolha um framework de sua preferência',\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)}>\n  <div class=\"flex flex-col gap-2\">\n    <alc-radio label=\"React\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Angular\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Vue.js\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n  </div>\n</alc-fieldset>\n  `)\n};\n\nexport const SemBorda = {\n  name: 'Sem borda',\n  args: {\n    ...defaultArgs,\n    'legend': 'Framework',\n  },\n  render: (args) => (`\n<alc-fieldset ${renderArgs(argTypes, args)} class=\"sem-borda\">\n  <div class=\"flex flex-col gap-2\">\n    <alc-radio label=\"React\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Angular\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n    <alc-radio label=\"Vue.js\">\n      <input type=\"radio\" name=\"framework\" />\n    </alc-radio>\n  </div>\n</alc-fieldset>\n\n<style>\n  .sem-borda fieldset {\n    border: none;\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .sem-borda legend {\n    padding: 0;\n  }\n</style>\n  `)\n};"]}