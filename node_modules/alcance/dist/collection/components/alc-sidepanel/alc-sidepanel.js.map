{"version":3,"file":"alc-sidepanel.js","sourceRoot":"","sources":["../../../../src/components/alc-sidepanel/alc-sidepanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State } from '@stencil/core';\nimport screens from '../../../tailwind-screens';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n// Pega o valor definido da configuração do tailwind e remove o 'px'\nconst MOBILE_BREAKPOINT = Number(screens.md.split('px')[0]);\nconst DEFAULT_STATE = {\n  visible: true\n};\n\n/**\n * @slot DEFAULT - Slot para o conteúdo do sidepanel.\n */\n\n@Component({\n  tag: 'alc-sidepanel',\n  styleUrl: 'alc-sidepanel.css',\n  scoped: false,\n})\nexport class AlcSidepanel {\n  @Element() el: HTMLAlcSidepanelElement;\n\n  @State() isMobile: boolean = false;\n\n  drawer: HTMLAlcDrawerElement = null;\n  slotContainer: HTMLElement = null;\n  mobileSlot: HTMLElement = null;\n  desktopSlot: HTMLElement = null;\n  slotContent: HTMLElement = null;\n\n  ro: ResizeObserver;\n\n  state: {\n    visible: boolean,\n  } = DEFAULT_STATE;\n\n  /**\n   * Indica se o sidepanel está visível.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  })\n  visible: boolean = true;\n\n  /**\n   * Abre o sidepanel.\n   * @returns O valor retornado é `true` se o painel foi exibido com a chamada do método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    this.visible = true;\n    this.state.visible = this.visible;\n    if (this.isMobile) {\n      return this.drawer.show();\n    }\n    else {\n      this.alcStateChange.emit({state: this.state});\n    }\n    return;\n  }\n\n  /**\n   * Fecha o sidepanel\n   * @returns O valor retornado é `true` se o painel foi dispensado com a chamada do método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    this.visible = false;\n    this.state.visible = this.visible;\n    if (this.isMobile) {\n      return this.drawer.hide();\n    }\n    else {\n      this.alcStateChange.emit({state: this.state});\n    }\n    return;\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    this.isMobile = window.innerWidth < MOBILE_BREAKPOINT;\n  }\n\n  /**\n   * Evento disparado quando o estado do sidepanel é alterado.\n   */\n  @Event({\n    eventName: 'alc-state-change',\n    cancelable: false,\n    bubbles: true\n  }) alcStateChange: EventEmitter<{state: {visible: boolean}}>;\n\n  /**\n   * Evento disparado quando o sidepanel precisa recuperar o estado.\n   */\n  @Event({\n    eventName: 'alc-state-request',\n    cancelable: false,\n    bubbles: true\n  }) alcStateRequest: EventEmitter<{state: {visible: boolean}}>;\n\n  componentWillLoad() {\n    let detail = {\n      state: this.state\n    };\n\n    this.handleResize();\n    this.state.visible = this.visible;\n    this.alcStateRequest.emit(detail);\n    // Garante que o objeto this.state tenha as chaves esperadas, independente do valor de detail.state\n    this.state = {...DEFAULT_STATE, ...detail.state};\n    this.visible = this.state.visible;\n  }\n\n  componentDidRender() {\n    if (this.slotContainer.children?.length) {\n      // @TODO Melhorar isso, pois pressupõe que tem somente um children\n      this.slotContent = this.slotContainer.children[0] as HTMLElement;\n    }\n\n    if (this.isMobile) {\n      this.mobileSlot.appendChild(this.slotContent);\n    }\n    else {\n      this.desktopSlot.appendChild(this.slotContent);\n    }\n\n    this.setOffset();\n\n    const top: HTMLElement = document.querySelector('[data-alc-top]');\n\n    this.ro?.disconnect();\n    this.ro = new ResizeObserver(() => {\n      this.setOffset();\n    });\n    this.ro.observe(top);\n\n  }\n\n  disconnectedCallback() {\n    this.ro?.disconnect();\n  }\n\n  renderMobile = () => (\n    [\n      <button\n        class=\"alc-button alc-button-rounded absolute right-2 -mt-[3.25rem] text-white\"\n        onClick={() => this.drawer.show()}\n        {...test('data-test-sidepanel-mobile-close-button')}\n        data-alc-sidepanel-drawer-button\n      >\n        <alc-icon name=\"list\" label=\"Abrir\"></alc-icon>\n      </button>,\n      <alc-drawer\n        onSl-show={() => this.visible = true}\n        onSl-hide={() => this.visible = false}\n        ref={el => this.drawer = el}\n      >\n        <div ref={el => this.mobileSlot = el}></div>\n      </alc-drawer>\n    ]\n  )\n\n  render() {\n    console.debug('render menu container');\n\n    if (!this.isMobile && this.visible) {\n      document.querySelector('html').classList.add('alc-sidepanel-visible');\n    }\n    else {\n      document.querySelector('html').classList.remove('alc-sidepanel-visible');\n    }\n\n    return (\n      <Host\n        class=\"alc-sidepanel\"\n      >\n        <div ref={el => this.slotContainer = el}>\n          <slot></slot>\n        </div>\n        <div\n          class={{\n            'alc-sidepanel__mobile-container': true,\n          }}\n        >\n          {this.renderMobile()}\n        </div>\n        <div\n          class={{\n            'alc-sidepanel__desktop-container': true,\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"alc-button alc-button-rounded fixed left-2 -mt-[3.75rem] text-white z-[1020] focus-visible:outline-2 focus-visible:outline-white\"\n            onClick={() => this.visible ? this.hide() : this.show()}\n            aria-pressed={this.visible ? 'true' : 'false'}\n            {...test('data-test-sidepanel-desktop-close-button')}\n            data-alc-sidepanel-button\n          >\n            <alc-icon name=\"list\" label=\"Exibir navegação\"></alc-icon>\n          </button>\n          <div\n            ref={el => this.desktopSlot = el}\n            class={{\n              'alc-sidepanel__desktop-slot': true,\n              'is-open': this.visible,\n            }}\n          >\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  setOffset() {\n    const top: HTMLElement = document.querySelector('[data-alc-top]');\n    logger.debug(top.offsetHeight);\n    this.el.style.setProperty('--offset', top.offsetHeight.toString());\n  }\n}"]}