import { Host, h } from "@stencil/core";
import test from "../utils/testAttributes";
import logger from "../utils/logger";
/**
* @slot DEFAULT - Slot para inserção do texto que indica para onde o usuário vai saltar na página. A parte inicial é fixa: "Ir para". O texto no slot é concatenado a ele. Por exemplo: "Ir para _conteúdo_."
*/
export class AlcSkipLink {
    constructor() {
        this.handleClick = (event) => {
            if (!this.target)
                return;
            event.preventDefault();
            const header = document.querySelector('alc-header, alc-header-v1');
            const headerHeight = (header instanceof HTMLElement) ? header.offsetHeight : 0; // Obtém a altura do cabeçalho
            const targetTop = this.target.offsetTop; // Obtém a posição do target em relação ao topo
            // Calcula a posição de rolagem ajustada
            const scrollPosition = targetTop - headerHeight - 16; // 16px de margem extra
            this.target.setAttribute('tabindex', '-1');
            this.target.focus({ preventScroll: true });
            // Preferência do usuário por movimento/animação reduzido
            const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
            window.scrollTo({
                top: scrollPosition,
                behavior: prefersReducedMotion ? 'instant' : 'smooth'
            });
        };
    }
    componentDidRender() {
        this.target = document.getElementById(this.anchor);
        if (!this.target) {
            logger.warn(`O valor do atributo "anchor" (${this.anchor}) deve corresponder ao id de algum elemento na página.`);
        }
    }
    render() {
        return (h(Host, { key: '210b83f0a75914208b091cb3503bf36046fd2f3c' }, h("a", Object.assign({ key: 'c85b6203d3041a7559e60621878c21a2c6285fa2', class: 'alc-link text-center', href: `#${this.anchor}` }, test('data-test-link'), { onClick: this.handleClick }), "Ir para ", h("slot", { key: '4b14b6ff834a9052f00a27c22abbdd4984432481' }))));
    }
    static get is() { return "alc-skip-link"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-skip-link.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-skip-link.css"]
        };
    }
    static get properties() {
        return {
            "anchor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Valor do `id` do elemento para onde o usu\u00E1rio navegar\u00E1 ao acionar o link."
                },
                "getter": false,
                "setter": false,
                "attribute": "anchor",
                "reflect": true
            }
        };
    }
}
//# sourceMappingURL=alc-skip-link.js.map
