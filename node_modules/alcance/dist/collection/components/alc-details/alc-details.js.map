{"version":3,"file":"alc-details.js","sourceRoot":"","sources":["../../../../src/components/alc-details/alc-details.tsx"],"names":[],"mappings":"AAAA,cAAc;AACd,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAiB,MAAM,eAAe,CAAC;AAC7G,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAUzC,MAAM,OAAO,UAAU;IARvB;QAcU,cAAS,GAAG,IAAI,CAAC;QAazB;;WAEG;QAIH,WAAM,GAAY,KAAK,CAAC;QAEf,cAAS,GAAW,IAAI,CAAC;QAsB1B,gBAAW,GAAG,CAAC,CAAQ,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;YACT,CAAC;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvB,CAAC;QACH,CAAC,CAAC;KAgGH;IA9FS,UAAU;QAChB,yCAAyC;QACzC,IAAI,OAAO,EAAE,KAAK,MAAM,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,CACL,gBACE,IAAI,EAAC,eAAe,EACpB,KAAK,EAAC,UAAU,EAChB,KAAK,EAAE;gBACL,mBAAmB,EAAE,IAAI;gBACzB,SAAS,EAAE,IAAI,CAAC,MAAM;aACvB,GACS,CACb,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,2DAA2D;QAC3D,IAAI,CAAC,SAAS,GAAG,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,gEAAgE;QAChE,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAEnE,CAAC;IAGD,qGAAqG;IACrG,yBAAyB;IACzB,sFAAsF;IACtF,sFAAsF;IAEtF,oGAAoG;IACpG,kCAAkC;IAClC,wCAAwC;IACxC,iDAAiD;IACjD,wDAAwD;IAExD,kCAAkC;IAClC,gDAAgD;IAChD,mDAAmD;IACnD,2EAA2E;IAC3E,wEAAwE;IACxE,MAAM;IAEN,oDAAoD;IACpD,6BAA6B;IAE7B,iEAAiE;IACjE,8CAA8C;IAC9C,2BAA2B;IAC3B,0DAA0D;IAC1D,0DAA0D;IAE1D,2EAA2E;IAC3E,+EAA+E;IAC/E,MAAM;IAEN,IAAI;IAEJ,MAAM;;QACJ,MAAA,IAAI,CAAC,OAAO,mCAAI,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAC1F,OAAO,CACL,EAAC,IAAI;YACH,gEACE,EAAE,EAAE,IAAI,CAAC,SAAS,EAClB,IAAI,EAAE,IAAI,CAAC,MAAM,EACjB,KAAK,EAAE;oBACL,aAAa,EAAE,IAAI;oBACnB,aAAa,EAAE,IAAI,CAAC,QAAQ;oBAC5B,SAAS,EAAE,IAAI,CAAC,MAAM;iBACvB,EACD,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBAErC,gEACE,KAAK,EAAE;wBACL,sBAAsB,EAAE,IAAI;wBAC5B,aAAa,EAAE,IAAI,CAAC,QAAQ;wBAC5B,SAAS,EAAE,IAAI,CAAC,MAAM;qBACvB;oBAEA,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,OAAO,CACL;gBACV,4DAAK,KAAK,EAAC,sBAAsB;oBAC/B,8DAAa,CACT,CACE,CACL,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["// @ts-nocheck\nimport { h, Component, Element, Event, EventEmitter, Host, Prop, State, Watch, Listen } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport { getMode } from '../utils/theme';\n\n@Component({\n  tag: 'alc-details',\n  styleUrls: {\n    base: 'alc-details-base.css',\n    theme: 'alc-details.css',\n  },\n  shadow: false,\n})\nexport class AlcDetails {\n  @Element()\n  element: HTMLElement;\n  detailsElement: HTMLElement;\n  summaryElement: HTMLElement;\n  contentElement: HTMLElement;\n  private idDetails = null;\n  private ro: ResizeObserver;\n\n  /**\n   * Insere o summary do details.\n   */\n  @Prop({ reflect: true }) summary!: string;\n\n  /**\n   * Desativa o componente.\n   */\n  @Prop({ reflect: true }) disabled: boolean;\n\n  /**\n   * Mantém aberto.\n   */\n  @Prop({\n    mutable: true,\n  })\n  opened: boolean = false;\n\n  @State() maxHeight: number = null;\n\n  /**\n   * Evento disparado quando a details abrir\n   */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando a details fechar\n   */\n  @Event({\n    eventName: 'alc-close',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcClose: EventEmitter<null>;\n\n  private showDetails = (e: Event) => {\n    if (this.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    this.opened = this.detailsElement.open;\n    if (this.opened) {\n      this.alcShow.emit();\n    } else {\n      this.alcClose.emit();\n    }\n  };\n\n  private renderIcon() {\n    // Não mostra ícone se não for tematizado\n    if (getMode() === 'base') {\n      return null;\n    }\n\n    return (\n      <alc-icon\n        name=\"chevron-right\"\n        label=\"Expandir\"\n        class={{\n          'alc-details__icon': true,\n          'is-open': this.opened,\n        }}\n      ></alc-icon>\n    );\n  }\n\n  componentWillLoad() {\n    // Antes do componente carregar, cria um id para o details.\n    this.idDetails = getUniqueId();\n  }\n\n  componentDidLoad() {\n    // Aguarda carga do componente para inserir o listener do evento\n    this.detailsElement.addEventListener('toggle', this.showDetails);\n\n  }\n\n\n  // Configuração de altura para animação removida até ajustar para que funcione details dentro do tabs\n  // componentDidRender() {\n  //   this.summaryElement = this.detailsElement.querySelector('.alc-details__summary');\n  //   this.contentElement = this.detailsElement.querySelector('.alc-details__content');\n\n  //   // Por meio do ResizeObserver, redefine o valor de altura máxima, deixando a altura do conteúdo\n  //   // dentro do details dinâmico\n  //   const target = this.contentElement;\n  //   const modifierElement = this.detailsElement;\n  //   const minHeight = this.summaryElement.offsetHeight;\n\n  //   function observerCallback() {\n  //     const targetHeight = target.scrollHeight;\n  //     const height = targetHeight + minHeight + 1;\n  //     modifierElement.style.setProperty('--min-height', minHeight + 'px');\n  //     modifierElement.style.setProperty('--max-height', height + 'px');\n  //   }\n\n  //   this.ro = new ResizeObserver(observerCallback);\n  //   this.ro.observe(target);\n\n  //   // Inicia com um cálculo de altura necessário para animação.\n  //   // Não interfere na dinâmica do conteúdo.\n  //   if (modifierElement) {\n  //     const minHeight = this.summaryElement.offsetHeight;\n  //     const maxHeight = this.contentElement.offsetHeight;\n\n  //     modifierElement.style.setProperty('--min-height', minHeight + 'px');\n  //     modifierElement.style.setProperty('--content-height', maxHeight + 'px');\n  //   }\n\n  // }\n\n  render() {\n    this.summary ?? logger.report('summary', this.element.tagName.toLowerCase(), this.element)\n    return (\n      <Host>\n        <details\n          id={this.idDetails}\n          open={this.opened}\n          class={{\n            'alc-details': true,\n            'is-disabled': this.disabled,\n            'is-open': this.opened,\n          }}\n          ref={el => (this.detailsElement = el)}\n        >\n          <summary\n            class={{\n              'alc-details__summary': true,\n              'is-disabled': this.disabled,\n              'is-open': this.opened\n            }}\n          >\n            {this.renderIcon()}\n            {this.summary}\n          </summary>\n          <div class=\"alc-details__content\">\n            <slot></slot>\n          </div>\n        </details>\n      </Host>\n    );\n  }\n}\n"]}