{"version":3,"file":"alc-badge.js","sourceRoot":"","sources":["../../../../src/components/alc-badge/alc-badge.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOzD,MAAM,OAAO,QAAQ;IALrB;QAWE;;WAEG;QACK,UAAK,GAAa,KAAK,CAAC;QAEhC;;WAEG;QACK,UAAK,GAAmF,SAAS,CAAC;QAE1G;;WAEG;QACK,QAAG,GAAY,KAAK,CAAC;QAE7B;;WAEG;QACK,WAAM,GAAY,KAAK,CAAC;QAEhC;;WAEG;QACK,aAAQ,GAAY,KAAK,CAAC;QAElC;;WAEG;QACK,aAAQ,GAAsC,SAAS,CAAC;QAEhE;;WAEG;QACK,YAAO,GAAY,KAAK,CAAC;KAyBlC;IAvBC,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAC,mBAAmB;YAC7B,eAAa;YACZ,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAC3B,YACE,KAAK,EACH,wBAAwB,IAAI,CAAC,KAAK;gBAChC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;gBAChC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBACpC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,eAAe,IAAI,CAAC,QAAQ;gBACtE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,EAAE,IAE7C,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CACnB,CACR,CACI,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'alc-badge',\n  styleUrl: 'alc-badge.css',\n  shadow: false,\n})\nexport class AlcBadge {\n  /**\n   * O texto a ser exibido dentro do badge (ex: \"99+\" ou \"Novo\").\n   */\n  @Prop() label?: string;\n\n  /**\n   * Define se o badge deve ser exibido como um contador.\n   */\n  @Prop() count?: boolean = false;\n\n  /**\n   * Define a cor do badge. Pode ser 'primary', 'secondary', 'success', 'warning', 'error', 'info' ou 'neutral'.\n   */\n  @Prop() color: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info' | 'neutral' = 'primary';\n\n  /**\n   * Define se o badge deve ser exibido como um ponto (dot) sem conteúdo.\n   */\n  @Prop() dot: boolean = false;\n\n  /**\n   * Define se o badge deve ser exibido ou não.\n   */\n  @Prop() hidden: boolean = false;\n\n  /**\n   * Define se o badge deve aparecer com um contorno ao invés de ser preenchido.\n   */\n  @Prop() outlined: boolean = false;\n\n  /**\n   * Define a posição do badge: 'default', 'floating' ou 'inline'.\n   */\n  @Prop() position: 'default' | 'floating' | 'inline' = 'default';\n\n  /**\n   * Define se o badge deve ter animação de pulsação.\n   */\n  @Prop() pulsate: boolean = false;\n\n  render() {\n    if (this.hidden) {\n      return null;\n    }\n\n    return (\n      <Host class=\"alc-badge-wrapper\">\n        <slot></slot>\n        {(this.dot || this.label) && (\n          <span\n            class={\n              `alc-badge alc-badge--${this.color} \n              ${this.dot ? 'alc-badge--dot' : ''} \n              ${this.count ? 'alc-badge--count' : ''}\n              ${this.outlined ? 'alc-badge--outlined' : ''} alc-badge--${this.position}\n              ${this.pulsate ? 'alc-badge--pulsate' : ''}`}\n          >\n            {!this.dot && this.label}\n          </span>\n        )}\n      </Host>\n    );\n  }\n}"]}