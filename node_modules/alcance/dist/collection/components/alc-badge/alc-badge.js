import { h, Host } from "@stencil/core";
export class AlcBadge {
    constructor() {
        /**
         * Define se o badge deve ser exibido como um contador.
         */
        this.count = false;
        /**
         * Define a cor do badge. Pode ser 'primary', 'secondary', 'success', 'warning', 'error', 'info' ou 'neutral'.
         */
        this.color = 'primary';
        /**
         * Define se o badge deve ser exibido como um ponto (dot) sem conteúdo.
         */
        this.dot = false;
        /**
         * Define se o badge deve ser exibido ou não.
         */
        this.hidden = false;
        /**
         * Define se o badge deve aparecer com um contorno ao invés de ser preenchido.
         */
        this.outlined = false;
        /**
         * Define a posição do badge: 'default', 'floating' ou 'inline'.
         */
        this.position = 'default';
        /**
         * Define se o badge deve ter animação de pulsação.
         */
        this.pulsate = false;
    }
    render() {
        if (this.hidden) {
            return null;
        }
        return (h(Host, { class: "alc-badge-wrapper" }, h("slot", null), (this.dot || this.label) && (h("span", { class: `alc-badge alc-badge--${this.color} 
              ${this.dot ? 'alc-badge--dot' : ''} 
              ${this.count ? 'alc-badge--count' : ''}
              ${this.outlined ? 'alc-badge--outlined' : ''} alc-badge--${this.position}
              ${this.pulsate ? 'alc-badge--pulsate' : ''}` }, !this.dot && this.label))));
    }
    static get is() { return "alc-badge"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-badge.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-badge.css"]
        };
    }
    static get properties() {
        return {
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "O texto a ser exibido dentro do badge (ex: \"99+\" ou \"Novo\")."
                },
                "getter": false,
                "setter": false,
                "attribute": "label",
                "reflect": false
            },
            "count": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Define se o badge deve ser exibido como um contador."
                },
                "getter": false,
                "setter": false,
                "attribute": "count",
                "reflect": false,
                "defaultValue": "false"
            },
            "color": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info' | 'neutral'",
                    "resolved": "\"error\" | \"info\" | \"neutral\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define a cor do badge. Pode ser 'primary', 'secondary', 'success', 'warning', 'error', 'info' ou 'neutral'."
                },
                "getter": false,
                "setter": false,
                "attribute": "color",
                "reflect": false,
                "defaultValue": "'primary'"
            },
            "dot": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define se o badge deve ser exibido como um ponto (dot) sem conte\u00FAdo."
                },
                "getter": false,
                "setter": false,
                "attribute": "dot",
                "reflect": false,
                "defaultValue": "false"
            },
            "hidden": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define se o badge deve ser exibido ou n\u00E3o."
                },
                "getter": false,
                "setter": false,
                "attribute": "hidden",
                "reflect": false,
                "defaultValue": "false"
            },
            "outlined": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define se o badge deve aparecer com um contorno ao inv\u00E9s de ser preenchido."
                },
                "getter": false,
                "setter": false,
                "attribute": "outlined",
                "reflect": false,
                "defaultValue": "false"
            },
            "position": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'default' | 'floating' | 'inline'",
                    "resolved": "\"default\" | \"floating\" | \"inline\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define a posi\u00E7\u00E3o do badge: 'default', 'floating' ou 'inline'."
                },
                "getter": false,
                "setter": false,
                "attribute": "position",
                "reflect": false,
                "defaultValue": "'default'"
            },
            "pulsate": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define se o badge deve ter anima\u00E7\u00E3o de pulsa\u00E7\u00E3o."
                },
                "getter": false,
                "setter": false,
                "attribute": "pulsate",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
}
//# sourceMappingURL=alc-badge.js.map
