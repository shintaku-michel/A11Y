import { Host, h } from "@stencil/core";
import { getAppliedTheme, setAppliedTheme, loadUserPreference, saveUserPreference } from "../utils/theme";
export class AlcMenuItemTheme {
    constructor() {
        // Estado para controlar se o tema escuro está ativado
        this.checked = false;
        // Constantes para os temas
        this.DARK_THEME = 'dark';
        this.LIGHT_THEME = 'light';
    }
    // Listener para o evento 'alc-select', alterna o tema entre claro e escuro.
    handleClick() {
        this.toggleTheme();
    }
    // Alterna o tema entre claro e escuro.
    toggleTheme() {
        this.checked = !this.checked;
        const theme = this.checked ? this.DARK_THEME : this.LIGHT_THEME;
        setAppliedTheme(theme);
        saveUserPreference(theme);
    }
    // Define o estado inicial do tema com base na preferência do usuário ou no tema do sistema.
    componentWillLoad() {
        const userPreference = loadUserPreference();
        switch (userPreference) {
            case this.LIGHT_THEME:
                this.checked = false;
                break;
            case this.DARK_THEME:
                this.checked = true;
                break;
            default:
                // Se o tema do sistema for dark, então checked 'true' se não 'false'.
                this.checked = getAppliedTheme('system') === this.DARK_THEME;
                break;
        }
    }
    render() {
        return (h(Host, { key: '788a260b2aeae1d875d478e3ad990fb3cef50866' }, h("alc-menu-item", { key: '4b333a7fc81b036be43319a6411f363e13d6d04e', type: "checkbox", checked: this.checked }, h("alc-icon", { key: '6723be08ad75ec0f9e9fe4736d8befb3fbfba68a', icon: "moon", label: "", slot: "prefix" }), "Ver no tema escuro")));
    }
    static get is() { return "alc-menu-item-theme"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-menu-item-theme.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-menu-item-theme.css"]
        };
    }
    static get states() {
        return {
            "checked": {}
        };
    }
    static get listeners() {
        return [{
                "name": "alc-select",
                "method": "handleClick",
                "target": undefined,
                "capture": false,
                "passive": false
            }];
    }
}
//# sourceMappingURL=alc-menu-item-theme.js.map
