{"version":3,"file":"alc-theme.js","sourceRoot":"","sources":["../../../../src/components/alc-theme/alc-theme.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, State } from '@stencil/core';\nimport logger from '../utils/logger';\nimport { getAppliedTheme, setAppliedTheme, loadUserPreference, saveUserPreference, removeUserPreference } from '../utils/theme';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport testAttributes from '../utils/testAttributes';\n\nconst NO_THEME = 0;\nconst LIGHT_THEME = 1;\nconst DARK_THEME = 2;\n\n@Component({\n  tag: 'alc-theme',\n  styleUrls: {\n    base: 'alc-theme-base.css',\n    theme: 'alc-theme.css'\n  },\n  scoped: false\n})\nexport class AlcTheme {\n\n  themeLink: HTMLLinkElement;\n  selectId: string;\n\n  @State() selectedTheme: number;\n\n  private change(theme: number) {\n\n    logger.log('changed to', theme);\n    switch (theme) {\n      case LIGHT_THEME:\n        setAppliedTheme('light');\n        saveUserPreference('light');\n        break;\n        case DARK_THEME:\n        setAppliedTheme('dark');\n        saveUserPreference('dark');\n        break;\n      default:\n        setAppliedTheme(getAppliedTheme('system'));\n        removeUserPreference();\n        break;\n    }\n    this.selectedTheme = theme;\n  }\n\n  private getSelectedValue(select: HTMLSelectElement): number {\n    return parseInt(select.selectedOptions[0].value);\n  }\n\n  componentWillLoad() {\n\n    const userPreference = loadUserPreference();\n    if (userPreference === 'light') {\n      this.selectedTheme = LIGHT_THEME;\n    }\n    else if (userPreference === 'dark') {\n      this.selectedTheme = DARK_THEME;\n    }\n    else {\n      this.selectedTheme = NO_THEME;\n    }\n    this.selectId = getUniqueId();\n  }\n\n  render() {\n\n    return (\n      <Host>\n        <alc-field>\n          {/* Label colocado como slot para poder ter seu visual personalizado (sr-only) */}\n          <label\n            htmlFor={this.selectId}\n            slot=\"label\"\n            class=\"alc-theme__label\"\n            {...testAttributes('data-test-label')}\n          >\n            Tema\n          </label>\n          <div>\n            <select\n              onChange={(e) => this.change(this.getSelectedValue(e.target as HTMLSelectElement))}\n              class=\"alc-theme__select\"\n              id={this.selectId}\n              {...testAttributes('data-test-select')}\n            >\n              <option value={NO_THEME} selected={this.selectedTheme === NO_THEME}>\n                Do Sistema\n                {this.selectedTheme === NO_THEME ? ' ✔' : ''}\n              </option>\n              <option value={LIGHT_THEME} selected={this.selectedTheme === LIGHT_THEME}>\n                Claro\n                {this.selectedTheme === LIGHT_THEME ? ' ✔' : ''}\n              </option>\n              <option value={DARK_THEME} selected={this.selectedTheme === DARK_THEME}>\n                Escuro\n                {this.selectedTheme === DARK_THEME ? ' ✔' : ''}\n              </option>\n            </select>\n          </div>\n        </alc-field>\n      </Host>\n    );\n  }\n\n}\n"]}