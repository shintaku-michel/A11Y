{"version":3,"file":"alc-datatable.js","sourceRoot":"","sources":["../../../../src/components/alc-datatable/alc-datatable.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, h, Prop, Method, forceUpdate, State, Listen, Watch, Event, EventEmitter } from '@stencil/core';\n// import Table from '../functional/table';\nimport { setCssClasses } from '../functional/table';\n\n// Forma de importar o DataTable foi inspirada nesse exemplo:\n// https://stackoverflow.com/questions/72676143/how-to-use-datatable-without-jquery\nimport DataTableModule from 'datatables.net';\nimport portugues from 'datatables.net-plugins/i18n/pt-BR.mjs';\nimport Select from 'datatables.net-select/js/dataTables.select.js';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport { removeDiacritics } from '../utils/removeDiacritics';\nimport { AlcMenuItemCustomEvent } from '../../components';\n\nconst dtEvents = [];\n\n// Decorator @OriginalEvent\n// Inclui o evento em dtEvents com os valores informados no decorator\nfunction OriginalEvent(value: {\n  name: string,\n  cancelable?: boolean,\n  detail: Array<string>\n} = {\n  name: '',\n  cancelable: true,\n  detail: []\n}) {\n  return function (_component, target) {\n    dtEvents.push({...value, emitterName: target});\n  };\n}\n\n\n@Component({\n  tag: 'alc-datatable',\n  styleUrls: {\n    base: 'alc-datatable-base.css',\n    theme: 'alc-datatable.css',\n  },\n  scoped: false,\n})\nexport class AlcDatatable {\n  @Element() el: HTMLAlcDatatableElement;\n\n  //===========================================================================\n  //#region EVENTOS DO DATATABLES.NET\n\n  // ----- Eventos do Core -----\n\n  // \t'childRow'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'childRow',\n    cancelable: false,\n    detail: ['e', 'show', 'row'],\n  })\n  @Event({\n    eventName: 'alc-child-row',\n    cancelable: false,\n  })\n  childRow: EventEmitter;\n\n  // \t'column-sizing'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'column-sizing',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-column-sizing',\n    cancelable: false,\n  })\n  columnSizing: EventEmitter;\n\n  // \t'column-visibility'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'column-visibility',\n    cancelable: false,\n    detail: ['e', 'settings', 'column', 'state', 'recalc'],\n  })\n  @Event({\n    eventName: 'alc-column-visibility',\n    cancelable: false,\n  })\n  columnVisibility: EventEmitter;\n\n  // \t'destroy'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'destroy',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-destroy',\n    cancelable: false,\n  })\n  destroy: EventEmitter;\n\n  // \t'draw'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'draw',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-draw',\n    cancelable: false,\n  })\n  draw: EventEmitter;\n\n  // \t'error'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'error',\n    cancelable: false,\n    detail: ['e', 'settings', 'techNote', 'message'],\n  })\n  @Event({\n    eventName: 'alc-error',\n    cancelable: false,\n  })\n  error: EventEmitter;\n\n  // \t'init'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'init',\n    cancelable: false,\n    detail: ['e', 'settings', 'json'],\n  })\n  @Event({\n    eventName: 'alc-init',\n    cancelable: false,\n  })\n  init: EventEmitter;\n\n  // \t'length'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'length',\n    cancelable: false,\n    detail: ['e', 'settings', 'len'],\n  })\n  @Event({\n    eventName: 'alc-length',\n    cancelable: false,\n  })\n  length: EventEmitter;\n\n  // \t'order'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'order',\n    cancelable: false,\n    detail: ['e', 'settings', 'ordArr'],\n  })\n  @Event({\n    eventName: 'alc-order',\n    cancelable: false,\n  })\n  order: EventEmitter;\n\n  // \t'page'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'page',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-page',\n    cancelable: false,\n  })\n  page: EventEmitter;\n\n  // \t'preDraw'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'preDraw',\n    cancelable: true,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-pre-draw',\n    cancelable: true,\n  })\n  preDraw: EventEmitter;\n\n  // \t'preInit'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'preInit',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-pre-init',\n    cancelable: false,\n  })\n  preInit: EventEmitter;\n\n  // \t'preXhr'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'preXhr',\n    cancelable: false,\n    detail: ['e', 'settings', 'data'],\n  })\n  @Event({\n    eventName: 'alc-pre-xhr',\n    cancelable: false,\n  })\n  preXhr: EventEmitter;\n\n  // \t'processing'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'processing',\n    cancelable: false,\n    detail: ['e', 'settings', 'processing'],\n  })\n  @Event({\n    eventName: 'alc-processing',\n    cancelable: false,\n  })\n  processing: EventEmitter;\n\n  // \t'requestChild'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'requestChild',\n    cancelable: false,\n    detail: ['e', 'row'],\n  })\n  @Event({\n    eventName: 'alc-request-child',\n    cancelable: false,\n  })\n  requestChild: EventEmitter;\n\n  // \t'search'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'search',\n    cancelable: false,\n    detail: ['e', 'settings'],\n  })\n  @Event({\n    eventName: 'alc-search',\n    cancelable: false,\n  })\n  search: EventEmitter;\n\n  // \t'stateLoadParams'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'stateLoadParams',\n    cancelable: false,\n    detail: ['e', 'settings', 'data'],\n  })\n  @Event({\n    eventName: 'alc-state-load-params',\n    cancelable: false,\n  })\n  stateLoadParams: EventEmitter;\n\n  // \t'stateLoaded'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'stateLoaded',\n    cancelable: false,\n    detail: ['e', 'settings', 'data'],\n  })\n  @Event({\n    eventName: 'alc-state-loaded',\n    cancelable: false,\n  })\n  stateLoaded: EventEmitter;\n\n  // \t'stateSaveParams'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'stateSaveParams',\n    cancelable: false,\n    detail: ['e', 'settings', 'data'],\n  })\n  @Event({\n    eventName: 'alc-state-save-params',\n    cancelable: false,\n  })\n  stateSaveParams: EventEmitter;\n\n  // \t'xhr'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'xhr',\n    cancelable: false,\n    detail: ['e', 'settings', 'json', 'xhr'],\n  })\n  @Event({\n    eventName: 'alc-xhr',\n    cancelable: false,\n  })\n  xhr: EventEmitter;\n\n  // ----- Eventos da extensão Select -----\n\n  // \t'deselect'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'deselect',\n    cancelable: false,\n    detail: ['e', 'dt', 'type', 'indexes'],\n  })\n  @Event({\n    eventName: 'alc-deselect',\n    cancelable: false,\n  })\n  deselect: EventEmitter;\n\n  // \t'select'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'select',\n    cancelable: false,\n    detail: ['e', 'dt', 'type', 'indexes'],\n  })\n  @Event({\n    eventName: 'alc-select',\n    cancelable: false,\n  })\n  select: EventEmitter;\n\n  // \t'select-blur'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'select-blur',\n    cancelable: true,\n    detail: ['e', 'dt', 'target', 'originalEvent'],\n  })\n  @Event({\n    eventName: 'alc-select-blur',\n    cancelable: true,\n  })\n  selectBlur: EventEmitter;\n\n  // \t'selectItems'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'selectItems',\n    cancelable: false,\n    detail: ['e', 'dt', 'items'],\n  })\n  @Event({\n    eventName: 'alc-select-items',\n    cancelable: false,\n  })\n  selectItems: EventEmitter;\n\n  // \t'selectStyle'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'selectStyle',\n    cancelable: false,\n    detail: ['e', 'dt', 'style'],\n  })\n  @Event({\n    eventName: 'alc-select-style',\n    cancelable: false,\n  })\n  selectStyle: EventEmitter;\n\n  // \t'user-select'\n  /**\n   * Ver documentação do DataTables.net\n   */\n  @OriginalEvent({\n    name: 'user-select',\n    cancelable: true,\n    detail: ['e', 'dt', 'type', 'cell', 'originalEvent'],\n  })\n  @Event({\n    eventName: 'alc-user-select',\n    cancelable: true,\n  })\n  userSelect: EventEmitter;\n\n  //#endregion EVENTOS DO DATATABLES.NET\n  //===========================================================================\n\n\n  private dataTable;\n  // private ro: ResizeObserver;\n  private columns = Array<{ textContent: string; th: HTMLElement }>();\n  private processedOptions: any = {};\n  private tableWrapper: HTMLElement;\n  private alertVisibility: boolean = false;\n  private paginationElement: HTMLAlcPaginationElement;\n  private dataTableModule: any; /* O objeto DataTable (do DataTables.net)  */\n  private started = false;\n  private firstLoadingWithProcessing = true;\n  private showProcessing = false;\n  private shouldShowLoader = () =>\n    this.firstLoadingWithProcessing || this.showProcessing;\n\n  private extensionsDefaults = {\n    orderIntl: true,\n  };\n\n  ensureJson(input: string | JSON): JSON {\n    return typeof input === 'object' ? input : JSON.parse(input);\n  }\n\n  @State() currentPage = 1;\n\n  @State() initCompleted = false;\n\n  @State() searchText = '';\n\n  @State() pageLength = '10';\n\n  @State() isProcessing = false;\n  @State() isLoadingActive = false;\n\n  @Watch('isProcessing')\n  watchIsProcessing() {\n\n    if (this.isProcessing) {\n      // Aguarda um tempo para mostrar o loading... para evitar que, quando o servidor responde rapidamente,\n      // o loading fique \"piscando\" na tela a cada interação.\n      setTimeout(() => {\n        // Depois do timeout, talvez o processamento já tenha terminado (this.isProcessing = false)\n        // Neste caso, o loading não vai ser mostrado na tela, por não ser mais necessário.\n        this.isLoadingActive = this.isProcessing;\n      }, 500);\n    }\n    else {\n      this.isLoadingActive = false;\n    }\n  }\n\n  /**\n   * Os dados da tabela\n   */\n  @Prop({ mutable: true, reflect: true }) data?: string | JSON;\n  @Watch('data')\n  dataWatcher(newValue: string | JSON) {\n    if (this.currentPage > 1) {\n      this.alertVisibility = true;\n    }\n\n    this.jsonData = this.ensureJson(newValue);\n\n    this.dataTable.clear();\n    this.dataTable.rows.add(this.jsonData);\n    this.dataTable.draw();\n  }\n\n  /**\n   * As opções da tabela\n   */\n  @Prop() options?: string | JSON;\n\n  /**\n   * Define as extensões para habilitar/desabilitar\n   */\n  // @Prop() extensions?: string | JSON;\n  // ^^^ Removida a prop para posterior revisão de seu nome.\n  private extensions?: string | JSON;\n\n  /**\n   * Faz com que o componente aguarde a chamada ao método `start()` para iniciar o DataTable.\n   */\n  @Prop({\n    mutable: false,\n    reflect: true,\n  })\n  deferStart: boolean = false;\n\n  /**\n   * Define o atributo `id` para a tabela (tag `table`), quando ela é criada automaticamente pelo componente.\n   * É você não incluir a tag `table` e usar a opção `stateSave`, é necessário definir esse atributo.\n   */\n  @Prop({\n    mutable: false,\n    reflect: true,\n  })\n  tableId: string;\n\n  DataTableSetup() {\n    if (!this.dataTableModule) {\n      // @ts-ignore\n      this.dataTableModule = DataTableModule();\n      Select();\n    }\n  }\n\n  /**\n   * Retorna o objeto DataTable.\n   * Por meio do objeto retornado é possível configurar extensões do DataTable.\n   */\n  @Method()\n  async getDataTable() {\n    return this.dataTableModule.$.fn.dataTable;\n  }\n\n  /**\n   * Retorna a API DataTable.\n   */\n  @Method()\n  async getApi() {\n    if (this.deferStart && !this.started) {\n      logger.warn(`DataTable ainda não foi inicializado. Execute o método \"start()\" antes de chamar \"getApi()\".`);\n      return;\n    }\n\n    await this.start(); // Garante que só avançará quando o start estiver concluído.\n    return this.dataTable;\n  }\n\n  jsonData: JSON;\n\n  /**\n   * Atualiza a exibição da tabela.\n   * Necessário para que o componente capture os novos dados depois de uma alteração, quando\n   * os dados são providos pelo DOM.\n   */\n  // @Method()\n  // async refreshData() {\n  //   // this.dataTable.rows().invalidate();\n  // }\n\n  // componentShouldUpdate(_newValue, _oldValue, propName) {\n\n  //   // if (propName === 'columns') {\n  //   //   return false;\n  //   // }\n  // }\n\n  componentWillLoad() {\n    this.DataTableSetup();\n\n    if (!this.deferStart) {\n      this.start();\n    }\n  }\n\n  /**\n    Inicia o DataTable.\n    Sempre que `defer-start` for `true`, esse método deve ser chamado para que o componente inicie seu funcionamento.\n    @returns O valor retornado é `true` se o DataTable foi realmente iniciado com a chamada desse método.\n   */\n  @Method()\n  async start(): Promise<boolean> {\n    // Garante que o método só seja executado uma vez.\n    if (this.started) {\n      return false;\n    }\n\n    this.started = true;\n\n    const DataTable = this.dataTableModule;\n\n    moment.locale('pt-br');\n    const formats = getAllDateFormats();\n\n    // Plugin de type detect para \"br-data\"\n    DataTable.$.fn.dataTable.ext.type.detect.unshift(function (data: any) {\n      if (data === '') {\n        return 'br-data';\n      }\n      if (moment(data, formats, true).isValid()) {\n        return 'br-data';\n      }\n      return null;\n    });\n\n    // Plugin de type order para \"br-data\"\n    DataTable.$.fn.dataTable.ext.type.order['br-data-pre'] = function (data: any) {\n      if (moment(data, formats, true).isValid()) {\n        return parseInt(moment(data, formats, true).format('x'), 10);\n      }\n      return data;\n    };\n\n    let domTable = this.el.querySelector('table');\n\n    !domTable && this.reportEmptyTableProps();\n\n    const that = this;\n\n    const options = this.options ? this.ensureJson(this.options) : {};\n\n    const optionsDefaults = {\n      ordering: true,\n      paging: true,\n      select: false,\n      columnDefs: [\n        {\n          orderable: true,\n          targets: [],\n        },\n      ],\n      searching: true,\n      lengthChange: true,\n      lengthMenu: [10, 25, 50, 100],\n      pageLength: 10,\n    };\n\n    this.processedOptions = {\n      ...optionsDefaults,\n      ...options,\n    };\n\n    const config = this.processedOptions as any;\n\n    this.showProcessing = !!config.processing;\n\n    this.pageLength = config.pageLength;\n\n    await this.resolveExtensions();\n\n    return new Promise(resolve => {\n      let dataTablesConfig: any = {\n        ...config,\n        dom: '<\"alc-datatable__wrapper\"tr>', // O 'r' (processing) foi colocado aqui provisoriamente, depois deve ser retirado.\n        autoWidth: false,\n        language: portugues,\n        initComplete: function () {\n          logger.debug('initComplete', this.api());\n          const api = this.api();\n          api\n            .columns()\n            .header()\n            .each((header: HTMLElement, index: number) => {\n              that.columns.push({\n                textContent: header.textContent,\n                th: header,\n              });\n              that.renderHeader(header, index, api);\n            });\n          that.prepareStack(this[0]); // DOM table, não jQuery\n\n          that.configureTableWrapper();\n\n          that.initCompleted = true;\n\n          resolve(true);\n        },\n      };\n\n      logger.debug(dataTablesConfig);\n\n      // Cria a tabela, se não existir no DOM\n      if (!domTable) {\n        domTable = document.createElement('table');\n        // Adiciona o id caso tenha definido pela propriedade tableId;\n        this.tableId && domTable.setAttribute('id', this.tableId);\n        this.el.insertAdjacentElement('beforeend', domTable);\n      }\n      // domTable.classList.add('alc-datatable');\n\n      // Se data for informado, ignora a tabela que eventualmente exista no DOM\n      if (this.data) {\n        // Transforma atributo data em json.\n        this.jsonData = this.ensureJson(this.data);\n        dataTablesConfig.data = this.jsonData;\n\n        // Cria \"columns\" se a tabela não tiver cabeçalho\n        // if (domTable.querySelectorAll('thead tr th').length === 0) {\n        //   dataTablesConfig.columns = columns;\n        // }\n      }\n\n      // Cria id caso o domTable não ter.\n      if (!domTable.id) {\n        domTable.setAttribute('id', getUniqueId());\n      }\n\n      // Adiciona eventos no Datatable\n      DataTable.$(`#${domTable.id}`)\n        .on('draw.dt', e => {\n          logger.debug('draw', e.currentTarget);\n          this.prepareStack(e.currentTarget);\n\n          // Somente depois da inicialização\n          if (this.dataTable) {\n            this.currentPage = this.dataTable.page() + 1;\n          }\n        })\n        .on('select.dt', (e, _dt, _type, indexes) => {\n          logger.debug('select', e);\n          logger.debug('Linha selecionada', indexes[0]);\n        })\n        .on('order.dt', function (_e, _settings, ordArr) {\n          that.columns.forEach((column, index) => {\n            let header = column.th;\n            const icon = header.querySelector('alc-sort-indicator');\n            if (icon) {\n              const { col, dir } = ordArr[0];\n              const sorting = that.getSorting(col, index, dir);\n              icon.setAttribute('sorting', sorting);\n            }\n          });\n\n          // Há um indicador de ordenação em um menu suspenso criado por nós (não do Datatables.net)\n          // É preciso forçar uma nova renderização para que o estado da ordenação seja mostrado lá também.\n          forceUpdate(that);\n        })\n        .on('search.dt', () => {\n          // Sempre que houver uma busca, searchText tem que estar com o valor correspondente.\n          if (this.dataTable) {\n            this.searchText = this.dataTable.search();\n          }\n        })\n        .on('length.dt', (_e, _settings, len: number) => {\n          // Sempre que houver mudança no tamanho da página, pageLength tem que estar com o valor correspondente.\n          this.pageLength = len.toString();\n        })\n        .on('stateLoaded.dt', (_e, _settings, data) => {\n          logger.debug('stateLoaded event', data);\n          const { search, length, start } = data;\n\n          that.pageLength = length;\n          that.searchText = search?.search || '';\n          that.currentPage = start / length + 1;\n        })\n        .on('processing.dt', (e, settings, processing) => {\n          logger.debug(\"Setup \", settings);\n          // Porque dois processings? Um é disparado pelo evento e retorna true sempre que o load acontece, mesmo que processing seja false.\n          // O outro é o parâmetro de fato (_settings.oInit.processing).\n          // É necessário manter os dois para controle dos dois loadings pois são ativados de maneira diferente.\n          const realProcessing = settings.oInit.processing;\n          // Se nenhuma das duas condições estiver ativa,\n          // simplesmente ignora a UI\n          if (!this.shouldShowLoader()) return;\n\n          // Evita trabalho repetido\n          if (this.isProcessing === processing) return;\n          this.isProcessing = processing;\n\n          // Previne que a tabela venha sem classes quando processando.\n          this.prepareStack(e.currentTarget);\n\n          let processingIndicator =\n            this.el.querySelector('.dataTables_processing') as HTMLElement;\n\n\n          if (!processingIndicator) {\n            processingIndicator = document.createElement('div');\n            processingIndicator.className = 'dataTables_processing';\n            // importantíssimo: display none por padrão\n            processingIndicator.style.display = 'none';\n            this.el.appendChild(processingIndicator);\n          }\n\n          // Sempre deixar o indicador de processamento com display block\n          // para não prejudicar a acessibilidade do loading\n          processingIndicator.style.display = 'block';\n          processingIndicator.style.textAlign = 'center';\n\n          // Aqui o loading vai funcionar só na carga inicial da tabela,\n          // para outras vezes que o evento for chamado, vai ser utilizado o loading do render()\n          // Na primeira carga, o loading do render() não é renderizado até finalizar o processing.\n          if(this.firstLoadingWithProcessing) {\n            // Para não aparecer barra de rolagem\n            const datatableWrapper = this.el.querySelector('.alc-datatable__wrapper') as HTMLElement;\n\n            if (realProcessing) {\n              datatableWrapper.style.height = \"6rem\";\n            } else {\n              datatableWrapper.style.removeProperty('height');\n            }\n\n            let loading = processingIndicator.querySelector('alc-loading');\n            if (!loading) {\n              processingIndicator.innerHTML = '';\n              loading = document.createElement('alc-loading');\n              loading.setAttribute('variant', 'inline');\n              loading.setAttribute('label', portugues.processing);\n              processingIndicator.appendChild(loading);\n            }\n            loading.setAttribute('active', String(processing));\n\n            if (this.firstLoadingWithProcessing && !processing) {\n              this.firstLoadingWithProcessing = false;\n              datatableWrapper.style.removeProperty('height');\n            }\n            logger.debug('isProcessing:', processing);\n          }\n        });\n\n      this.addOriginalEventsListeners(DataTable, domTable, that);\n\n      // Inicializa DataTable\n      this.dataTable = new DataTable(`#${domTable.id}`, dataTablesConfig);\n    });\n  }\n\n  addOriginalEventsListeners(DataTable, domTable, component) {\n    dtEvents.forEach(event => {\n      DataTable.$(domTable).on(`${event.name}.dt`, (...args) => {\n        const emitterName = event.emitterName;\n\n        // Cria o objeto detail com as chaves definidas em event.detail\n        // e os valores definidos em args.\n        let detail = {};\n        event.detail.forEach((key, index) => {\n          detail[key] = args[index];\n        });\n\n        // Emite o evento do Alcance\n        const { defaultPrevented } = component[emitterName].emit(detail);\n        // Se foi cancelado e pode ser cancelado, cancela o evento original.\n        if (defaultPrevented && event.cancelable) {\n          args[0]?.preventDefault();\n        }\n      });\n    });\n  }\n\n  configureTableWrapper() {\n    this.tableWrapper = this.el.querySelector('.alc-datatable__wrapper');\n    this.tableWrapper.addEventListener('scroll', () => this.handleScrollEvent());\n    this.tableWrapper.classList.toggle('has-scroll-end', this.tableWrapper.scrollWidth > this.tableWrapper.clientWidth);\n  }\n\n  disconnectedCallback() {\n    this.tableWrapper.removeEventListener('scroll', this.handleScrollEvent);\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleResize() {\n    if (this.tableWrapper.scrollWidth > this.tableWrapper.clientWidth) {\n      this.tableWrapper.classList.add('has-scroll-end');\n    } else {\n      this.tableWrapper.classList.remove('has-scroll-start');\n      this.tableWrapper.classList.remove('has-scroll-end');\n    }\n  }\n\n  handleScrollEvent() {\n    this.tableWrapper.classList.toggle('has-scroll-start', this.tableWrapper.scrollLeft > 0);\n    this.tableWrapper.classList.toggle('has-scroll-end', Math.ceil(this.tableWrapper.offsetWidth + this.tableWrapper.scrollLeft) < this.tableWrapper.scrollWidth);\n  }\n\n  getSorting(colIndex: number, index: number, dir: string) {\n    let sorting = 'none';\n\n    if (colIndex === index) {\n      sorting = dir;\n    }\n\n    return sorting;\n  }\n\n  async resolveExtensions() {\n    const DataTable = await this.getDataTable();\n    const extensions = this.extensions ? this.ensureJson(this.extensions) : {};\n\n    const ext = {\n      ...this.extensionsDefaults,\n      ...extensions,\n    };\n\n    // Ignorar diacríticos no filtro\n    // Essa extensão pega os textos das celulas da tabela que são string e com filtro habilitado\n    // Retorna o dado original e sem acento para permitir pesquisar de ambas as formas\n    DataTable.ext.type.search.string = function (data: string) {\n      return data + ' ' + removeDiacritics(data);\n    };\n\n    if (ext.orderIntl) {\n      // Plugin order para ignorar diacríticos na ordenação\n      // baseado no https://www.datatables.net/blog/2017-02-28\n      // Collator é mais performático do que localeCompare\n      DataTable.ext.order.intl = function (locales: string, options: object) {\n        if (window.Intl) {\n          const collator = new window.Intl.Collator(locales, options);\n          const types = DataTable.ext.type;\n\n          delete types.order['string-pre'];\n          types.order['string-asc'] = collator.compare;\n          types.order['string-desc'] = function (a, b) {\n            return collator.compare(a, b) * -1;\n          };\n        }\n      };\n\n      // Chama o plugin com as configurações\n      DataTable.ext.order.intl('pt-BR', { sensitivity: 'base' });\n    }\n  }\n\n  renderHeader(header: HTMLElement, index: number, api: any) {\n    if (!this.isColumnOrderable(header)) {\n      return;\n    }\n\n    const orderColIndex = api.order()[0][0];\n    const orderColDir = api.order()[0][1];\n\n    const icon = document.createElement('alc-sort-indicator');\n    icon.classList.add('alc-datatable__sort-icon');\n\n    icon.setAttribute('sorting', this.getSorting(orderColIndex, index, orderColDir));\n    header.appendChild(icon);\n    return header;\n  }\n\n  reportEmptyTableProps() {\n    if (!this.data) {\n      logger.report('data', this.el.tagName.toLowerCase(), this.el);\n    }\n\n    if (!this.options) {\n      logger.report('options', this.el.tagName.toLowerCase(), this.el);\n    }\n  }\n\n  render() {\n    if (!this.initCompleted) {\n      return;\n    }\n    return this.renderTable();\n  }\n\n  renderTable() {\n    logger.debug('alc - renderTable');\n    const { ordering, paging, searching } = this.processedOptions as any;\n\n    return (\n      <Host>\n        <alc-alert type=\"warning\" visible={this.alertVisibility} onAlc-hide={() => (this.alertVisibility = false)}>\n          Tabela reposicionada na primeira página\n        </alc-alert>\n\n        <div class=\"alc-datatable__controls\">\n          <div class=\"alc-datatable__controls-order\">\n            {!!ordering ? this.renderOrderControls(this.columns.map(c => c.textContent)) : null}\n            {this.renderShowColumnsControls(this.columns.map(c => c.textContent))}\n            {this.renderPageLength()}\n          </div>\n\n          {!!searching ? this.renderSearchControl() : null}\n        </div>\n\n        { this.shouldShowLoader() ? this.renderProcessing() : null }\n\n        <slot></slot>\n\n        {paging ? (\n          <div class=\"alc-table__pagination\">\n            {this.renderPageInfo()}\n            {this.renderPagination()}\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n\n  prepareStack = (tableNode: HTMLTableElement) => {\n    setCssClasses(tableNode);\n\n    // const table = this.el.querySelector('table');\n    // logger.debug('prepareStack', table);\n\n    // // Para cada coluna da tabela\n    // table.querySelectorAll('th').forEach((th, thIndex) => {\n    //   // Para cada linha da tabela\n    //   table.querySelectorAll('tr').forEach(tr => {\n    //     // Seta atributo com texto do cabeçalho da coluna\n    //     tr.querySelectorAll('td').item(thIndex)?.setAttribute('data-alc-title', th.innerText);\n    //   })\n    // });\n  };\n\n  renderPageLength = () => {\n    let options = null;\n    const init = this.dataTable.init();\n\n    if (init.lengthChange === false || init.paging === false) {\n      return null;\n    }\n\n    const lengthMenu = init.lengthMenu;\n\n    // Se pageMenu for um array 3D\n    if (Array.isArray(lengthMenu[0])) {\n      options = lengthMenu[0].map((option: string, i) => {\n        return (\n          <option\n            value={option}\n            selected={this.pageLength == option}\n          >\n            {lengthMenu[1][i]}\n          </option>\n        );\n      });\n    }\n    // Se pageMenu for um array 2D\n    else {\n      options = lengthMenu.map((option: string) => {\n        return (\n          <option\n            value={option}\n            selected={this.pageLength == option}\n          >\n            {option}\n          </option>\n        );\n      });\n    }\n\n    const menu = (\n      <alc-field {...test('data-test-length-field')}>\n        <label>\n          Exibir\n          <select\n            // @ts-ignore Não sei por que o JSX entende que o select não possui o atributo value\n            value={this.pageLength}\n            class=\"alc-datatable__select-length\"\n            onChange={e => {\n              this.dataTable.page.len((e.target as HTMLSelectElement).value).draw();\n            }}\n          >\n            {options}\n          </select>\n          por página.\n        </label>\n      </alc-field>\n    );\n\n    return (\n      <div>\n        {menu}\n      </div>\n    );\n  };\n\n  renderPagination = () => {\n    const info = this.dataTable.page.info();\n\n    logger.debug('renderPagination', info.length, info.recordsTotal, info.recordsDisplay);\n\n    // Não renderiza em qualquer das condições abaixo:\n    // - [A] se está mostrando todos os registros\n    // - [B] se o total de itens na tabela for menor que a quantidade de itens por página\n    // - [C] se não houver registros para mostrar na tabela\n    if (\n      info.length === -1 || // A\n      info.recordsTotal <= info.length || // B\n      info.recordsDisplay === 0 // C\n    ) {\n      return null;\n    }\n\n    return (\n      <alc-pagination\n        ref={el => (this.paginationElement = el)}\n        totalPages={info.pages}\n        currentPage={this.currentPage}\n        onAlc-change={this.changePage}\n      >\n      </alc-pagination>\n    );\n  };\n\n  renderPageInfo = (): HTMLElement => {\n    const info = this.dataTable.page.info();\n\n    // Nenhum item mostrado (a informação vai na própria tabela)\n    if (info.recordsDisplay === 0) {\n      return null;\n    }\n\n    // Um único item no total\n    if (info.recordsTotal === 1) {\n      return (\n        <div>1 item listado.</div>\n      );\n    }\n\n    // Uma única página\n    if (info.pages === 1) {\n      // Número de itens exibidos é igual ao total de itens\n      if (info.recordsDisplay === info.recordsTotal) {\n        return (\n          <div>{info.recordsTotal} itens listados.</div>\n        );\n      }\n\n      // Número de itens exibidos é diferente do total de itens\n      return (\n        <div>\n          {info.recordsDisplay} itens - de um total de {info.recordsTotal} itens.\n        </div>\n      );\n    }\n\n    // Várias páginas\n    const start = info.start + 1;\n    const range = start === info.end ? info.end : `De ${start} até ${info.end}`;\n\n    const total = info.recordsDisplay !== info.recordsTotal ? ` - de um total de ${info.recordsTotal} itens` : '';\n\n    return (\n      <div>\n        {range} de {info.recordsDisplay} itens{total}.\n      </div>\n    );\n  };\n  /**\n   * Testa se uma coluna é ordenável.\n   *\n   * Essa função parte do pressuposto que, por padrão, todas as colunas são ordenáveis.\n   * Ou seja, que para não ser ordenável, deve haver uma configuração que diga isso.\n   *\n   * @param colIndex Índice a coluna da tabela\n   * @returns true se a coluna for ordenável\n   */\n  isColumnOrderable = (header: HTMLElement): boolean => {\n    return header.classList.contains('sorting');\n  };\n\n  renderOrderControls = (headers: Array<String>) => {\n    logger.debug('renderOrderControls', this.dataTable.order());\n\n    const items = headers.map((header, index) => {\n      const asc = [index, 'asc'];\n      const desc = [index, 'desc'];\n\n      const headerElement = this.dataTable.columns().header()[index];\n\n      if (this.isColumnOrderable(headerElement)) {\n        logger.log('renderOrderControls', this.dataTable.order()[0].toString());\n\n        return [\n          <alc-menu-item value={asc} type=\"radio\" checked={this.dataTable.order()[0].toString() === asc.toString() ? true : null}>\n            {header}\n            <alc-sort-indicator sorting=\"asc\" aria-label=\"ascendente\" class=\"ml-1\"></alc-sort-indicator>\n          </alc-menu-item>,\n          <alc-menu-item value={desc} type=\"radio\" checked={this.dataTable.order()[0].toString() === desc.toString() ? true : null}>\n            {header}\n            <alc-sort-indicator sorting=\"desc\" aria-label=\"descendente\" class=\"ml-1\"></alc-sort-indicator>\n          </alc-menu-item>,\n        ];\n      }\n\n      return;\n    });\n\n    return (\n      <alc-dropdown {...test('data-test-dropdown-order')}>\n        <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">\n          <alc-sort-indicator sorting=\"none\" class=\"mr-1\"></alc-sort-indicator>\n          Ordenação <alc-icon name=\"chevron-down\" label=\"\"></alc-icon>\n        </button>\n        <alc-menu onAlc-select={this.changeOrder}>\n          {items}\n        </alc-menu>\n      </alc-dropdown>\n    );\n  };\n\n  renderShowColumnsControls = (headers: Array<String>) => {\n    const items = headers.map((header, i) => {\n      return (\n        <alc-menu-item value={`${i}`} type=\"checkbox\" checked={this.dataTable.column(i).visible() ? true : null}>\n          {header}\n        </alc-menu-item>\n      );\n    });\n\n    return (\n      <alc-dropdown {...test('data-test-dropdown-columns')}>\n        <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">\n          <alc-icon name=\"table\" label=\"\" class=\"mr-1 -rotate-90\"></alc-icon>\n          Colunas <alc-icon name=\"chevron-down\" label=\"\"></alc-icon>\n        </button>\n\n        <alc-menu onAlc-select={this.changeVisibility}>\n          {items}\n        </alc-menu>\n      </alc-dropdown>\n    );\n  };\n\n  renderSearchControl = () => {\n    return (\n      <div class=\"alc-datatable__controls-search\">\n        <alc-field\n          label=\"Pesquisar por:\"\n          {...test('data-test-search-field')}\n        >\n          <input\n            type=\"search\"\n            onInput={this.onSearch}\n            value={this.searchText}\n            {...test('data-test-input-search')}\n          />\n        </alc-field>\n      </div>\n    );\n  };\n\n  renderProcessing = () => {\n      // Não muda diretamente a visibilidade de alc-loading, mas sim seu atributo \"active\",\n    // conforme recomendação do próprio componente.\n    return (\n      <div class=\"alc-datatable__processing\">\n        <alc-loading active={this.isLoadingActive} variant=\"container\" label={portugues.processing}></alc-loading>\n      </div>\n    );\n  };\n\n  changePage = (e: CustomEvent) => {\n    const to = e.detail.to - 1;\n    this.currentPage = e.detail.to;\n    this.dataTable.page(to).draw(false);\n    forceUpdate(this.el);\n  };\n\n  changeOrder = (e: AlcMenuItemCustomEvent<any>) => {\n    logger.debug(e.target.value);\n    const order = e.target.value;\n\n    if (this.currentPage > 1) {\n      this.alertVisibility = true;\n    }\n\n    this.dataTable.order(order).draw();\n    logger.debug(this.dataTable.order());\n    forceUpdate(this.el);\n  };\n\n  changeVisibility = (e: AlcMenuItemCustomEvent<any>) => {\n    const col = parseInt(e.target.value);\n    this.dataTable.column(col).visible(!this.dataTable.column(col).visible());\n    // Ao colocar draw(false) a paginação não é alterada\n    // https://datatables.net/reference/api/draw()\n    this.dataTable.columns.adjust().draw(false);\n    forceUpdate(this.el);\n    this.handleScrollEvent();\n  };\n\n  onSearch = (e: InputEvent | Event) => {\n    const input = e.target as HTMLInputElement;\n\n    if (this.currentPage > 1) {\n      const info = this.dataTable.page.info();\n\n      this.currentPage = 1;\n      // Atualiza a paginação\n      this.paginationElement.totalPages = info.pages;\n      this.paginationElement.currentPage = this.currentPage;\n\n      this.alertVisibility = true;\n    }\n\n    this.dataTable.search(input.value).draw();\n    forceUpdate(this.el);\n  };\n}\n\n\n// Retorna todos os formatos de data considerados válidos.\nconst getAllDateFormats = (): Array<string> => {\n  const dateFormats = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"D/M/YYYY\", \"D/M/YY\", \"DD/M/YYYY\", \"DD/M/YY\", \"D/MM/YYYY\", \"D/MM/YY\"];\n\n  const timeFormats = dateFormats.reduce( (array, dateFormat) => {\n    return [...array, `${dateFormat} HH:mm:ss`, `${dateFormat} HH:mm`, `${dateFormat} HH:mm:ss.S`, `${dateFormat} HH:mm:ss.SS`, `${dateFormat} HH:mm:ss.SSS`]\n  }, []);\n\n  return [...dateFormats, ...timeFormats];\n}\n"]}