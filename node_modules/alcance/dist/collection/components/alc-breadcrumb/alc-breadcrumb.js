import { Host, h } from "@stencil/core";
import test from "../utils/testAttributes";
/**
 * @slot - Slot para adicionar os `alc-breadcrumb-item`
*/
export class AlcBreadcrumb {
    constructor() {
        this.checkCurrentPage = () => {
            const items = this.el.querySelectorAll('alc-breadcrumb-item');
            items.forEach((item, index) => {
                // O ultimo breadcrumb-item Ã© a pagina atual
                if (index === items.length - 1) {
                    item.setAttribute('aria-current', 'page');
                }
                else {
                    item.removeAttribute('aria-current');
                }
            });
        };
    }
    componentWillLoad() {
        this.checkCurrentPage();
    }
    render() {
        return (h(Host, { key: '7beb7e14130eb314e5519c4f10d7dc407e2fc404' }, h("nav", Object.assign({ key: '4682ed361c08d53eaed18ad8526b6fdba581043d', "aria-label": "Breadcrumb", class: "alc-breadcrumb" }, test('data-test-nav')), h("div", Object.assign({ key: '85a7d7cd9c299f75bd12f0266577b9a7480d9cbe', class: "alc-breadcrumb__list", role: "list" }, test('data-test-list')), h("slot", { key: '7af5fa7fea926a5bd97f314a6fdac56e67b729fa' })))));
    }
    static get is() { return "alc-breadcrumb"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-breadcrumb.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-breadcrumb.css"]
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=alc-breadcrumb.js.map
