{"version":3,"file":"alc-header-notifications.js","sourceRoot":"","sources":["../../../../src/components/alc-header-notifications/alc-header-notifications.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport logger from '../utils/logger';\n\n/*\n  TODO: Avaliar possibilidade de \"abrir\" para modificar rótulo do botão\n  Nessa versão, não será possível alterar o rótulo do botão.\n  Há uma certa dificuldade para lidar com slot, possível html dentro do slot,\n  e a extração do texto correspondente para criar os elementos audíveis.\n*/\nconst BUTTON_LABEL = \"Notificações\";\nconst MAX_COUNTER = 99;\n\n@Component({\n  tag: 'alc-header-notifications',\n  styleUrl: 'alc-header-notifications.css',\n  scoped: false,\n})\nexport class AlcHeaderNotifications {\n\n  private overflow = false;\n  private notificationsLabel = \"\";\n  private notificationsAudible = \"\";\n\n  /**\n   * Número de notificações a serem exibidas no botão.\n   */\n  @Prop({\n    reflect: true,\n    mutable: false,\n  })\n  notifications: number = 0;\n\n  /**\n   * Define o tipo de elemento a ser renderizado. Pode ser um button ou um link.\n   */\n  @Prop({\n    reflect: true\n  })\n  variant: 'button' | 'link' = 'button';\n\n  /**\n   * URL para a página de notificações. Usado quando a propriedade `variant` é `link`.\n   * Se o `variant` for `button`, esse atributo será ignorado.\n   */\n  @Prop({ reflect: true }) url: string = '';\n\n  @Watch('notifications')\n  watchNotifications(newValue: number) {\n\n    if (Number.isNaN(newValue)) {\n      logger.warn('O valor do atributo \"notifications\" deve ser numérico. Assumindo o valor padrão 0.');\n      newValue = 0;\n    }\n\n    if (newValue === 0) {\n      this.notificationsLabel = \"\";\n      this.notificationsAudible = \"\";\n      this.overflow = false;\n    }\n    else if (newValue > MAX_COUNTER) {\n      this.notificationsLabel = `${MAX_COUNTER}+`;\n      this.notificationsAudible = `Mais de ${MAX_COUNTER} ${BUTTON_LABEL}`;\n      this.overflow = true;\n    }\n    else {\n      this.notificationsLabel = newValue.toString();\n      this.notificationsAudible = `${newValue.toString()} ${BUTTON_LABEL}`;\n      this.overflow = false;\n    }\n  }\n\n  /**\n   * Evento disparado quando o usuário clica nas notificações. Pode ser cancelado.\n   */\n  @Event({\n    eventName: 'alc-click',\n    bubbles: true,\n    cancelable: true\n  })\n  alcClick: EventEmitter<null>;\n\n  async handleClick(event: MouseEvent) {\n    const { defaultPrevented } = this.alcClick.emit();\n    if (defaultPrevented) {\n      event.preventDefault();\n    }\n  }\n\n  componentWillLoad() {\n    this.watchNotifications(this.notifications);\n  }\n\n  render() {\n    const commonProps = {\n      class: \"alc-header-button\",\n      \"aria-label\": this.overflow ? `${this.notificationsAudible}` : null,\n      onClick: (event: MouseEvent) => this.handleClick(event),\n    };\n\n    return (\n      <Host>\n        <span class=\"alc-header-notifications\">\n          \n          {this.variant === 'button' ? (\n            <button {...commonProps}>\n              {this.renderContent()}\n            </button>\n          ) : (\n            <a href={this.url} {...commonProps}>\n              {this.renderContent()}\n            </a>\n          )}\n\n          {/* aria live container */}\n          <span\n            role=\"status\"\n            aria-live=\"polite\"\n            aria-atomic=\"true\"\n            class=\"alc-header-notifications__aria-live\"\n          >\n            { this.notifications\n              ?\n                `${this.notificationsAudible}`\n              :\n                null\n            }\n          </span>\n        </span>\n      </Host>\n    );\n  }\n\n  renderContent() {\n    const badge = (\n      <alc-badge\n        color=\"warning\"\n        count={true}\n        label={this.notificationsLabel}\n      >\n        <alc-icon name=\"bell\" label=\"\" class=\"alc-header-button__icon\"></alc-icon>\n      </alc-badge>\n    )\n\n    const label = (\n      <span class=\"alc-header-button__label\">\n        {BUTTON_LABEL}\n      </span>\n    )\n\n    return [\n      badge,\n      label\n    ]\n  }\n\n}\n"]}