{"version":3,"file":"alc-field.js","sourceRoot":"","sources":["../../../../src/components/alc-field/alc-field.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, h, Prop, State, Watch} from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\n\n/**\n * @slot - Slot para o controle de formulário.\n * Pode ser um `input` (text, number, password, email etc.), `select` ou `textarea`.\n *\n * @slot label - Slot para o elemento label do campo. Há opção de adicionar apenas o texto por meio da propriedade `label`.\n * Use esse recurso case seja necessário alguma personalização no HTML referente ao label.\n *\n * @cssClass alc-field__label - Aplicada ao elemento `label`.\n * @cssClass alc-field__core - Aplicada ao elemento que agrupa o controle de formulário, mensagem de erro e texto de ajuda.\n*/\n\n@Component({\n  tag: 'alc-field',\n  styleUrl: 'alc-field.css',\n  scoped: false,\n})\nexport class AlcField {\n\n  describedBy = new Map();\n  errorId = '';\n  hintId = '';\n\n  @Element() el: HTMLAlcFieldElement;\n\n  @State() input: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n  @State() inputId: string;\n  @State() slottedElement: HTMLElement;\n\n  /**\n   * Texto do label do input.\n  */\n  @Prop({ reflect: true }) label?: string;\n\n  /**\n   * Texto de ajuda.\n  */\n  @Prop({ reflect: true }) hint: string = '';\n\n  /**\n   * Indica se o input é obrigatório.\n  */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  /**\n   * Texto de mensagem de erro.\n  */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  }) errorMsg: string = '';\n  @Watch('errorMsg')\n  watchErrorMsg(newValue: string) {\n    logger.debug('watchErrorMsg', newValue, this.input);\n\n    if (newValue) {\n      if (this.slottedElement.tagName === 'ALC-INPUT-FILE') {\n        const mode = this.slottedElement.getAttribute('mode');\n        if (mode === 'dropzone') {\n          const dropzoneElement = this.slottedElement.querySelector('.alc-input-file__dropzone');\n          if (dropzoneElement) {\n            dropzoneElement.classList.add('alc-field__input--error');\n          }\n        } else if (mode === 'input') {\n          const textInputElement = this.slottedElement.querySelector('.alc-input-file__text-input');\n          if (textInputElement) {\n            textInputElement.classList.add('alc-field__input--error');\n          }\n        } else if (mode === 'button') {\n          const buttonElement = this.slottedElement.querySelector('button.alc-button');\n          if (buttonElement) {\n            buttonElement.classList.add('alc-field__input--error');\n          }\n        }\n      } else {\n        // É um elemento nativo\n        this.input.classList.add('alc-field__input--error');\n      }\n    } else {\n      if (this.slottedElement.tagName === 'ALC-INPUT-FILE') {\n        const mode = this.slottedElement.getAttribute('mode');\n        if (mode === 'dropzone') {\n          const dropzoneElement = this.slottedElement.querySelector('.alc-input-file__dropzone');\n          if (dropzoneElement) {\n            dropzoneElement.classList.remove('alc-field__input--error');\n          }\n        } else if (mode === 'input') {\n          const textInputElement = this.slottedElement.querySelector('.alc-input-file__text-input');\n          if (textInputElement) {\n            textInputElement.classList.remove('alc-field__input--error');\n          }\n        } else if (mode === 'button') {\n          const buttonElement = this.slottedElement.querySelector('button.alc-button');\n          if (buttonElement) {\n            buttonElement.classList.remove('alc-field__input--error');\n          }\n        }\n      } else {\n        // É um elemento nativo\n        this.input.classList.remove('alc-field__input--error');\n      }\n    }\n  }\n  \n  // Função recursiva para encontrar o <input>\n  private findInputElement(element: Element): HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | null {\n    if (!element) return null;\n\n    const tagName = element.tagName.toLowerCase();\n    if (tagName === 'input' || tagName === 'select' || tagName === 'textarea') {\n      return element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n    }\n\n    for (let i = 0; i < element.children.length; i++) {\n      const found = this.findInputElement(element.children[i]);\n      if (found) {\n        return found;\n      }\n    }\n\n    return null;\n  }\n\n  async componentDidLoad() {\n    // Reserva IDs para os elementos de erro e dica\n    this.errorId = getUniqueId();\n    this.hintId = getUniqueId();\n\n    // Seleciona o elemento slotted\n    this.slottedElement = this.el.querySelector('input, select, textarea, alc-input-file');\n\n    if (this.slottedElement) {\n      // Procura o elemento <input> dentro do componente slotted\n      this.input = this.findInputElement(this.slottedElement);\n\n      if (this.input) {\n        this.input.id = this.input.id || getUniqueId();\n        this.input.setAttribute('aria-required', this.required ? 'true' : 'false');\n        this.input.classList.add('alc-field__input');\n        this.inputId = this.input.getAttribute('id');\n        this.watchErrorMsg(this.errorMsg);\n        this.describedBy.set('original', this.input.getAttribute('aria-describedby') || '');\n      }\n    }\n\n    // Configura o label se não estiver usando o slot \"label\"\n    if (!this.label) {\n      const labelEl = this.el.querySelector('[slot=\"label\"] label');\n      labelEl?.classList.add('alc-field__label');\n      if (labelEl && this.required) {\n        const small = document.createElement('small');\n        small.setAttribute('aria-hidden', 'true');\n        small.innerText = ' (obrigatório)';\n        labelEl.appendChild(small);\n      }\n    }\n\n    // Atualiza os atributos de acessibilidade\n    this.updateAriaDescribedBy();\n  }\n  componentWillRender() {\n    this.updateAriaDescribedBy();\n  }\n\n\n  private updateAriaDescribedBy() {\n    if (this.errorMsg) {\n      this.describedBy.set('error', this.errorId);\n    } else {\n      this.describedBy.delete('error');\n    }\n\n    if (this.hint) {\n      this.describedBy.set('hint', this.hintId);\n    } else {\n      this.describedBy.delete('hint');\n    }\n\n    let currentDescribedBy = '';\n\n    currentDescribedBy += ` ${this.describedBy.get('original') || ''}`;\n    currentDescribedBy += ` ${this.describedBy.get('error') || ''}`;\n    currentDescribedBy += ` ${this.describedBy.get('hint') || ''}`;\n\n    if (this.input) this.input.setAttribute('aria-describedby', currentDescribedBy.trim());\n  }\n\n  render() {\n\n    return (\n      <Host\n        class={{\n          'alc-field': true,\n        }}\n      >\n        {\n          this.label\n            ?\n            <div> {/* Essa div faz o label desvincular-se da estrutura do flex, permitindo que seja mostrado inline, que é o natural */}\n              <label\n                class=\"alc-field__label\"\n                htmlFor={this.inputId}\n              >\n                {this.label}\n                {this.required\n                ?\n                  // aria-hidden porque o \"required\" do input já é suficiente para informar.\n                  <small aria-hidden=\"true\"> (obrigatório)</small>\n                :\n                  null\n                }\n              </label>\n            </div>\n            :\n            <slot name=\"label\"></slot>\n        }\n        <div class=\"alc-field__core\">\n          <slot></slot>\n          { this.errorMsg\n            ?\n              <small\n                class=\"alc-field__text alc-field__text--error\"\n                id={this.errorId}\n              >\n                {this.errorMsg}\n              </small>\n            :\n              null\n          }\n          { this.hint\n            ?\n              <small\n                class=\"alc-field__text\"\n                id={this.hintId}\n              >\n                {this.hint}\n              </small>\n            :\n              null\n          }\n        </div>\n\n      </Host>\n    );\n  }\n\n}\n"]}