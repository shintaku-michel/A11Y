{"version":3,"file":"alc-field.stories.js","sourceRoot":"","sources":["../../../../../src/components/alc-field/stories/alc-field.stories.ts"],"names":[],"mappings":"AAAA,aAAa;AACb,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,kDAAkD,CAAC;AACxF,OAAO,cAAc,MAAM,mDAAmD,CAAC;AAC/E,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAA;AAE9C,eAAe;IACb,KAAK,EAAE,mBAAmB;IAC1B,IAAI,EAAE,OAAO;IACb,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,QAAQ;CACnB,CAAC;AAEF,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;AAE7C,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,IAAI,EAAE,QAAQ;IACd,IAAI,kCACC,WAAW,KACd,OAAO,EAAE,MAAM,GAChB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;GAGpC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,IAAI,EAAE,mBAAmB;IACzB,IAAI,kCACC,WAAW,KACd,OAAO,EAAE,UAAU,EACnB,UAAU,EAAE,IAAI,GACjB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;GAGpC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,IAAI,EAAE,0BAA0B;IAChC,IAAI,kCACC,WAAW,KACd,MAAM,EAAE,sBAAsB,EAC9B,OAAO,EAAE,IAAI,GACd;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;GASpC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG;IAClB,IAAI,EAAE,iBAAiB;IACvB,IAAI,kCACC,WAAW,KACd,WAAW,EAAE,yBAAyB,EACtC,OAAO,EAAE,SAAS,GACnB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;GAGpC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,IAAI,EAAE,oBAAoB;IAC1B,IAAI,kCACC,WAAW,KACd,OAAO,EAAE,MAAM,GAChB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;GAGpC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,IAAI,EAAE,mBAAmB;IACzB,IAAI,kCACC,WAAW,KACd,MAAM,EAAE,eAAe,EACvB,UAAU,EAAE,IAAI,GACjB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;;eAEH,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;EASvC,MAAM,CAAC,WAAW;;CAEnB;CACA,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG;IAChC,IAAI,EAAE,sBAAsB;IAC5B,IAAI,kCACC,WAAW,KACd,MAAM,EAAE,UAAU,GACnB;IACD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;aACL,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;;;;;EAerC,MAAM,CAAC,SAAS;;CAEjB;CACA,CAAC","sourcesContent":["// @ts-ignore\nimport { argTypes } from './alc-field.args';\nimport { render as renderArgs } from '../../../stories/functions/components.renderArgs';\nimport getDefaultArgs from '../../../stories/functions/components.defaultArgs';\nimport { styles } from './alc-field-styles.js'\n\nexport default {\n  title: 'Componentes/Field',\n  name: 'Field',\n  component: 'alc-field',\n  parameters: {},\n  argTypes: argTypes,\n};\n\nconst defaultArgs = getDefaultArgs(argTypes);\n\nexport const Basico = {\n  name: 'Básico',\n  args: {\n    ...defaultArgs,\n    'label': 'Nome',\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <input type=\"text\"/>\n</alc-field>\n  `,\n};\n\nexport const Obrigatorio = {\n  name: 'Input Obrigatório',\n  args: {\n    ...defaultArgs,\n    'label': 'Mensagem',\n    'required': true,\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <textarea name=\"msg\" rows=\"4\" cols=\"50\"></textarea>\n</alc-field>\n  `,\n};\n\nexport const TextoAjuda = {\n  name: 'Input com texto de ajuda',\n  args: {\n    ...defaultArgs,\n    'hint': 'Unidade da Federação',\n    'label': 'UF',\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <select name=\"uf\">\n    <option value=\"\" selected>\n      (Selecione)\n    </option>\n    <option value=\"AC\">Acre</option>\n    <option value=\"DF\">Distrito Federal</option>\n  </select>\n</alc-field>\n  `,\n};\n\nexport const Erro = {\n  name: 'Input com error',\n  args: {\n    ...defaultArgs,\n    'error-msg': 'Esse apelido ja existe.',\n    'label': 'Apelido',\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <input type=\"text\"/>\n</alc-field>\n  `,\n};\n\nexport const Desabilitado = {\n  name: 'Input desabilitado',\n  args: {\n    ...defaultArgs,\n    'label': 'Nome',\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <input type=\"text\" disabled />\n</alc-field>\n  `,\n};\n\nexport const FormularioInline = {\n  name: 'Formulário inline',\n  args: {\n    ...defaultArgs,\n    'hint': 'Nome completo',\n    'required': true,\n  },\n  render: args => `\n<div class=\"inline-field-example\">\n  <alc-field ${renderArgs(argTypes, args)}>\n    <div slot=\"label\" class=\"inline-field-example__label\">\n      <label name=\"label\" for=\"inline-nome\">Nome</label>\n    </div>\n    <input type=\"text\" name=\"nome\" id=\"inline-nome\" />\n  </alc-field>\n</div>\n\n<style>\n${styles.inlineField}\n</style>\n`,\n};\n\nexport const FormularioComIcone = {\n  name: 'Formulário com ícone',\n  args: {\n    ...defaultArgs,\n    'hint': 'Endereço',\n  },\n  render: args => `\n<alc-field ${renderArgs(argTypes, args)}>\n  <div slot=\"label\">\n    <label name=\"label\" for=\"example-with-icon\">\n      <alc-icon \n        name=\"envelope\" \n        label=\"\"\n        class=\"inline-field-example__icon\"\n      ></alc-icon>\n      Endereço\n    </label>\n  </div>\n  <input type=\"text\" name=\"endereco\" id=\"example-with-icon\" />\n</alc-field>\n\n<style>\n${styles.labelIcon}\n</style>\n`,\n};"]}