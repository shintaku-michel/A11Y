{"version":3,"file":"alc-tab-button.js","sourceRoot":"","sources":["../../../../src/components/alc-tab-button/alc-tab-button.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Event, EventEmitter, Prop, Element, Watch } from '@stencil/core';\nimport logger from '../utils/logger';\n\n@Component({\n  tag: 'alc-tab-button',\n  styleUrls: {\n    base: 'alc-tab-button-base.css',\n    theme: 'alc-tab-button.css',\n  },\n  scoped: false,\n})\nexport class AlcTabButton {\n  private button: HTMLElement;\n\n  @Element() el!: HTMLAlcTabButtonElement;\n\n  /**\n   * Um identificador da tab deve ser fornecido para cada `alc-tab`.\n   * Isso é usado internamente para referenciar a tab selecionada.\n   */\n  @Prop({ reflect: true }) tab!: string;\n\n  /**\n   * Indica que a tab está selecionada.\n   */\n  @Prop({ mutable: true, reflect: true }) selected: boolean;\n  @Watch('selected')\n  selectedChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      if (newValue) {\n\n        this.button.setAttribute('tabindex', '0');\n      }\n      else {\n\n        this.button.setAttribute('tabindex', '-1');\n      }\n    }\n  }\n\n  /**\n   * Evento disparado ao clicar em alc-tab-button\n   */\n  @Event({ eventName: 'alc-click' }) alcClick: EventEmitter<{\n    tab: string\n  }>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button seguinte deve ser selecionado\n   */\n  @Event({ eventName: 'alc-next' }) alcNext: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o alc-tab-button anterior deve ser selecionado\n   */\n  @Event({ eventName: 'alc-previous' }) alcPrevious: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o primeiro alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-first' }) alcFirst: EventEmitter<null>;\n  /**\n   * Evento disparado para indicar que o último alc-tab-button deve ser selecionado\n   */\n  @Event({ eventName: 'alc-last' }) alcLast: EventEmitter<null>;\n\n  private selectTab(e: Event) {\n\n    if (this.tab !== undefined) {\n      this.alcClick.emit({\n        tab: this.tab\n      });\n      e.preventDefault();\n    }\n  }\n\n  // Inspirado na implementação do WAI - função onKeyDown().\n  // https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/tabs/examples/js/tabs-automatic.js\n  private keyDownHandler(e: KeyboardEvent) {\n    let handled = false;\n    switch(e.key) {\n      case 'ArrowRight':\n        this.alcNext.emit();\n        handled = true;\n        break;\n      case 'ArrowLeft':\n        this.alcPrevious.emit();\n        handled = true;\n        break;\n      case 'Home':\n        this.alcFirst.emit();\n        handled = true;\n        break;\n      case 'End':\n        this.alcLast.emit();\n        handled = true;\n        break;\n    }\n    if (handled) {\n      e.preventDefault();\n    }\n  }\n\n  componentWillLoad() {\n  }\n\n  render() {\n    this.tab ?? logger.report('tab', this.el.tagName.toLowerCase(), this.el);\n    const getId = (): string => {\n\n      let id: string;\n      if (this.el.id) {\n        id = this.el.id;\n      }\n      else {\n        id = `alc-button_${this.el.tab}`;\n      }\n\n      return id;\n    }\n\n\n    return (\n      <Host>\n        <button\n          onClick={this.selectTab.bind(this)}\n          onKeyDown={this.keyDownHandler.bind(this)}\n          role='tab'\n          aria-selected={this.selected ? 'true' : 'false'}\n          tabindex='-1'\n          id={getId()} // Precisa ter id (para acessibilidade)\n          class={{\n            'alc-tabs__button': true,\n            active: this.selected\n          }}\n          ref={el => this.button = el}\n        >\n          <slot />\n        </button>\n      </Host>\n    );\n  }\n}\n\n"]}