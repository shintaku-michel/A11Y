import { Host, h } from "@stencil/core";
import logger from "../utils/logger";
export class AlcTabButton {
    selectedChanged(newValue, oldValue) {
        if (newValue !== oldValue) {
            if (newValue) {
                this.button.setAttribute('tabindex', '0');
            }
            else {
                this.button.setAttribute('tabindex', '-1');
            }
        }
    }
    selectTab(e) {
        if (this.tab !== undefined) {
            this.alcClick.emit({
                tab: this.tab
            });
            e.preventDefault();
        }
    }
    // Inspirado na implementação do WAI - função onKeyDown().
    // https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/tabs/examples/js/tabs-automatic.js
    keyDownHandler(e) {
        let handled = false;
        switch (e.key) {
            case 'ArrowRight':
                this.alcNext.emit();
                handled = true;
                break;
            case 'ArrowLeft':
                this.alcPrevious.emit();
                handled = true;
                break;
            case 'Home':
                this.alcFirst.emit();
                handled = true;
                break;
            case 'End':
                this.alcLast.emit();
                handled = true;
                break;
        }
        if (handled) {
            e.preventDefault();
        }
    }
    componentWillLoad() {
    }
    render() {
        var _a;
        (_a = this.tab) !== null && _a !== void 0 ? _a : logger.report('tab', this.el.tagName.toLowerCase(), this.el);
        const getId = () => {
            let id;
            if (this.el.id) {
                id = this.el.id;
            }
            else {
                id = `alc-button_${this.el.tab}`;
            }
            return id;
        };
        return (h(Host, null, h("button", { onClick: this.selectTab.bind(this), onKeyDown: this.keyDownHandler.bind(this), role: 'tab', "aria-selected": this.selected ? 'true' : 'false', tabindex: '-1', id: getId(), class: {
                'alc-tabs__button': true,
                active: this.selected
            }, ref: el => this.button = el }, h("slot", null))));
    }
    static get is() { return "alc-tab-button"; }
    static get originalStyleUrls() {
        return {
            "base": ["alc-tab-button-base.css"],
            "theme": ["alc-tab-button.css"]
        };
    }
    static get styleUrls() {
        return {
            "base": ["alc-tab-button-base.css"],
            "theme": ["alc-tab-button.css"]
        };
    }
    static get properties() {
        return {
            "tab": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Um identificador da tab deve ser fornecido para cada `alc-tab`.\nIsso \u00E9 usado internamente para referenciar a tab selecionada."
                },
                "getter": false,
                "setter": false,
                "attribute": "tab",
                "reflect": true
            },
            "selected": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Indica que a tab est\u00E1 selecionada."
                },
                "getter": false,
                "setter": false,
                "attribute": "selected",
                "reflect": true
            }
        };
    }
    static get events() {
        return [{
                "method": "alcClick",
                "name": "alc-click",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado ao clicar em alc-tab-button"
                },
                "complexType": {
                    "original": "{\n    tab: string\n  }",
                    "resolved": "{ tab: string; }",
                    "references": {}
                }
            }, {
                "method": "alcNext",
                "name": "alc-next",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado para indicar que o alc-tab-button seguinte deve ser selecionado"
                },
                "complexType": {
                    "original": "null",
                    "resolved": "null",
                    "references": {}
                }
            }, {
                "method": "alcPrevious",
                "name": "alc-previous",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado para indicar que o alc-tab-button anterior deve ser selecionado"
                },
                "complexType": {
                    "original": "null",
                    "resolved": "null",
                    "references": {}
                }
            }, {
                "method": "alcFirst",
                "name": "alc-first",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado para indicar que o primeiro alc-tab-button deve ser selecionado"
                },
                "complexType": {
                    "original": "null",
                    "resolved": "null",
                    "references": {}
                }
            }, {
                "method": "alcLast",
                "name": "alc-last",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado para indicar que o \u00FAltimo alc-tab-button deve ser selecionado"
                },
                "complexType": {
                    "original": "null",
                    "resolved": "null",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "selected",
                "methodName": "selectedChanged"
            }];
    }
}
//# sourceMappingURL=alc-tab-button.js.map
