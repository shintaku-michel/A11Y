import { h, Host } from "@stencil/core";
import logger from "../utils/logger";
export class AlcUserMenu {
    constructor() {
        /**
         * Define a variação do menu de usuário. Geralmente, não é recomendado alterar esse valor.
         */
        this.variation = 'desktop';
        /**
         * Nome do usuário.
         */
        this.name = 'Usuário';
        /**
         * Número de matrícula ou ponto do usuário.
         */
        this.registrationNumber = '';
        /**
         * URL da imagem do usuário. Se não for fornecida, será exibido um ícone padrão.
         */
        this.imgSrc = '';
        this.dropdownOpen = false;
        this.handleLogout = (e) => {
            const { defaultPrevented } = this.alcLogout.emit();
            if (defaultPrevented) {
                e.preventDefault();
            }
        };
    }
    componentDidLoad() {
        if (this.variation === 'desktop') {
            this.externalContainer = this.host.querySelector('.alc-user-menu__info--external');
            this.internalContainer = this.host.querySelector('.alc-user-menu__info--internal');
            this.moveInfo();
        }
    }
    handleResize() {
        if (this.variation === 'desktop') {
            this.moveInfo();
        }
    }
    moveInfo() {
        const largura = window.innerWidth;
        // < 1200px é compacto, >= 1200px é expandido
        if (largura < 1200) {
            if (this.externalContainer && this.internalContainer && this.internalContainer.children.length === 0) {
                while (this.externalContainer.firstChild) {
                    this.internalContainer.appendChild(this.externalContainer.firstChild);
                    this.internalContainer.classList.add('alc-user-menu__info--separator');
                }
            }
        }
        else {
            if (this.externalContainer && this.internalContainer && this.externalContainer.children.length === 0) {
                while (this.internalContainer.firstChild) {
                    this.externalContainer.appendChild(this.internalContainer.firstChild);
                    this.internalContainer.classList.remove('alc-user-menu__info--separator');
                }
            }
        }
    }
    componentDidRender() {
        if (this.variation === 'mobile') {
            this.mobileMenuContainer.insertAdjacentElement('beforeend', this.menu);
            this.mobileSlotContainer.insertAdjacentElement('beforeend', this.defaultSlot);
        }
        else {
            this.desktopMenuContainer.insertAdjacentElement('beforeend', this.menu);
            this.desktopSlotContainer.insertAdjacentElement('beforeend', this.defaultSlot);
        }
    }
    renderDesktop() {
        return (h("div", { class: {
                "alc-user-menu--desktop": true,
                'hidden': this.variation === 'mobile'
            } }, h("div", { class: "alc-user-menu__info--external" }, h("div", null, h("div", { class: "alc-user-menu__primary" }, h("span", { class: "alc-user-menu__name" }, this.name), this.registrationNumber && h("span", { class: "alc-user-menu__reg" }, "(", this.registrationNumber, ")")), h("div", { class: "alc-user-menu__secondary", ref: el => this.desktopSlotContainer = el }))), h("alc-dropdown", { class: "alc-user-menu__dropdown" }, h("button", { slot: "trigger", class: "alc-user-menu__trigger", "aria-label": "Abrir menu do usu\u00E1rio" }, this.imgSrc ? (h("img", { class: "alc-user-menu__image", src: this.imgSrc, alt: this.name })) : (h("alc-icon", { class: "alc-user-menu__image alc-user-menu__icon", name: "person-fill", label: this.name })), h("alc-icon", { icon: "chevron-down", label: "" })), h("div", { class: "alc-user-menu__info--internal" }), h("div", { ref: el => this.desktopMenuContainer = el }))));
    }
    renderMobile() {
        return (h("div", { class: {
                "alc-user-menu--mobile": true,
                'hidden': this.variation === 'desktop'
            } }, h("div", { class: "alc-user-menu--mobile__header" }, this.imgSrc ? (h("img", { class: "alc-user-menu__image", src: this.imgSrc, alt: this.name })) : (h("alc-icon", { class: "alc-user-menu__image alc-user-menu__icon", name: "person-fill", label: this.name })), h("div", { class: "alc-user-menu--mobile__info" }, h("div", { class: "alc-user-menu__name" }, this.name, this.registrationNumber && h("span", { class: "alc-user-menu--mobile__reg" }, "(", this.registrationNumber, ")")), h("div", { class: "alc-user-menu__secondary", ref: el => this.mobileSlotContainer = el }))), h("alc-expander", { label: "Menu do usu\u00E1rio", open: false, "hide-label": "true" }, h("div", null, h("div", { ref: el => this.mobileMenuContainer = el })))));
    }
    render() {
        var _a;
        (_a = this.logoutUrl) !== null && _a !== void 0 ? _a : logger.report('logoutUrl', this.host.tagName.toLowerCase(), this.host);
        return (h(Host, { key: '1df7026fa5897691438a13aebfb38ad075f942f0' }, h("alc-menu", { key: '113f70bfb848564bf76a688356a458042e5e4cc0', ref: el => this.menu = el }, h("slot", { key: '13bdfda9dbb3a473380af99c6f47dde82f81f065', name: "actions" }), h("alc-menu-item-theme", { key: '5dcb6428c37d40843c29d77c5d3c164516646c0a' }), h("alc-menu-link", { key: 'dc29f0f8eec9b925e2f99330113f6b5a26d843b6' }, h("a", { key: '93b72f1a292ed1a45250aa7b515b40f2480c05a2', href: this.logoutUrl, onClick: this.handleLogout }, h("alc-icon", { key: '50c85a0422c3d2d87b340309917f12c0dedf4a37', name: "box-arrow-right", label: "", class: "alc-user-menu__logout-icon" }), "Sair"))), h("div", { key: '9b8f2386263e18f980625e276ba8eb72a152e28d', ref: el => this.defaultSlot = el }, h("slot", { key: '99a076179acea8e92cc4bf7f825593fc2dede355' })), [
            this.renderMobile(),
            this.renderDesktop()
        ]));
    }
    static get is() { return "alc-user-menu"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-user-menu.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-user-menu.css"]
        };
    }
    static get properties() {
        return {
            "variation": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'mobile' | 'desktop'",
                    "resolved": "\"desktop\" | \"mobile\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Define a varia\u00E7\u00E3o do menu de usu\u00E1rio. Geralmente, n\u00E3o \u00E9 recomendado alterar esse valor."
                },
                "getter": false,
                "setter": false,
                "attribute": "variation",
                "reflect": true,
                "defaultValue": "'desktop'"
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Nome do usu\u00E1rio."
                },
                "getter": false,
                "setter": false,
                "attribute": "name",
                "reflect": true,
                "defaultValue": "'Usu\u00E1rio'"
            },
            "registrationNumber": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "N\u00FAmero de matr\u00EDcula ou ponto do usu\u00E1rio."
                },
                "getter": false,
                "setter": false,
                "attribute": "registration-number",
                "reflect": true,
                "defaultValue": "''"
            },
            "logoutUrl": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "URL que efetua o logout do usu\u00E1rio. O link \"Sair\" navegar\u00E1 para essa URL."
                },
                "getter": false,
                "setter": false,
                "attribute": "logout-url",
                "reflect": true
            },
            "imgSrc": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "URL da imagem do usu\u00E1rio. Se n\u00E3o for fornecida, ser\u00E1 exibido um \u00EDcone padr\u00E3o."
                },
                "getter": false,
                "setter": false,
                "attribute": "img-src",
                "reflect": true,
                "defaultValue": "''"
            }
        };
    }
    static get states() {
        return {
            "dropdownOpen": {}
        };
    }
    static get events() {
        return [{
                "method": "alcLogout",
                "name": "alc-logout",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado quando o link \"Sair\" \u00E9 acionado. Se cancelado, n\u00E3o navegar\u00E1 para a URL de logout."
                },
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "host"; }
    static get listeners() {
        return [{
                "name": "resize",
                "method": "handleResize",
                "target": "window",
                "capture": false,
                "passive": true
            }];
    }
}
//# sourceMappingURL=alc-user-menu.js.map
