{"version":3,"file":"alc-alert.core.js","sourceRoot":"","sources":["../../../../src/components/alc-alert/alc-alert.core.ts"],"names":[],"mappings":"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","sourcesContent":["import { AnyFunction, Type } from './index';\nimport logger from '../utils/logger';\n\nconst noop: AnyFunction = () => {};\n\nconst setup = (value, domain = [], defaultValue) => {\n\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  if (!domain.includes(value)) {\n    logger.warn(`\"${value}\" não é um valor válido; usando o valor padrão \"${defaultValue}\"`);\n    return defaultValue;\n  }\n\n  return value;\n}\n\nconst domains = {\n  type: ['info', 'warning', 'error', 'success'],\n  dismissible: [true, false],\n  visible: [true, false]\n}\n\nconst defaults = {\n  type: 'info' as Type,\n  dismissible: true,\n  visible: true\n}\n\nconst setupType = value => setup(value, domains.type, defaults.type);\nconst setupDismissible = value => setup(value, domains.dismissible, defaults.dismissible)\nconst setupVisible = value => setup(value, domains.visible, defaults.visible);\n\nclass AlertCore {\n\n  // Tipo do alert\n  type: Type = 'info';\n  // Indica se o alert pode ou não ser dispensado\n  dismissible = true;\n  // Indica se o alerta está ou não visível\n  visible = true;\n  // Ajusta a visibilidade do alert\n  setVisible: AnyFunction = noop;\n  // Dispara o evento alc-hide\n  dispatchHide: AnyFunction = noop;\n  // Dispara o evento alc-after-hide\n  dispatchAfterHide: AnyFunction = noop;\n\n  constructor({\n    type = defaults.type,\n    dismissible = defaults.dismissible,\n    visible = defaults.visible,\n    dispatchHide = noop,\n    dispatchAfterHide = noop,\n    setVisible = noop\n  }) {\n\n    this.type = setupType(type);\n    this.dismissible = setupDismissible(dismissible);\n    this.dispatchAfterHide = dispatchAfterHide;\n    this.dispatchHide = dispatchHide;\n\n    this.setVisible = visible => {\n      this.visible = visible;\n      setVisible(visible);\n    }\n    this.setVisible(setupVisible(visible));\n  };\n\n  hide = () => {\n    if (!this.visible) {\n      return false;\n    }\n    const { defaultPrevented } = this.dispatchHide();\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.setVisible(false);\n    this.dispatchAfterHide();\n    return true;\n  };\n\n  show = () => {\n    if (!this.visible) {\n      this.setVisible(true);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport { AlertCore, defaults };\n"]}