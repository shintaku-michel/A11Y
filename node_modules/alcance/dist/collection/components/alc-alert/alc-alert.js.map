{"version":3,"file":"alc-alert.js","sourceRoot":"","sources":["../../../../src/components/alc-alert/alc-alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Prop, Event, EventEmitter, h, Method, Watch, Host } from '@stencil/core';\nimport { AlertCore } from './alc-alert.core';\nimport { Type } from './index';\nimport ALC from '../../core/alc';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n// @TODO Ver se é possível deixar os códigos SVG separados em outros arquivos,\n//       mas sem que crie problemas com importação de assets quando for distribuído.\nconst iconMap = new Map();\n\niconMap.set('info', {\n  label: 'Informação:',\n  name: 'info-circle'\n});\niconMap.set('error', {\n  label: 'Erro:',\n  name: 'x-circle'\n});\niconMap.set('warning', {\n  label: 'Alerta:',\n  name: 'exclamation-circle'\n});\niconMap.set('success', {\n  label: 'Sucesso:',\n  name: 'check-circle'\n});\n\n// Comentários sobre o comentário (jsdoc-like) abaixo:\n//\n// 1- O texto livre inicial é colocado na chave `docs` do json.\n//\n// 2- @slot é uma tag definida pelo StencilJS. É colocado na chave:\n//   slots: [\n//     {\n//       \"name\": \"default\",\n//       \"docs\": \"Slot para o conteúdo do alert\"\n//     }\n//   ]\n//\n// 3- @picWidget é um exemplo de tag customizada. É colocado na chave:\n//   docsTags: [\n//     {\n//       \"name\": \"picWidget\",\n//       \"text\": \"pic-alert\"\n//     }\n//   ]\n/**\n * Vamos lá testar.\n * Ver se isso vai funcionar.\n * ^^^^^ [1]\n *\n * @slot - Slot para o conteúdo do alert.\n * @slot summary - Slot para o summary do alert.\n * @picWidget pic-alert\n */\n\n@Component({\n  tag: 'alc-alert',\n  styleUrls: {\n    base: 'alc-alert-base.css',\n    theme: 'alc-alert.css'\n  },\n  scoped: false,\n})\n\nexport class Alert {\n\n  // The alert core\n  private core: AlertCore;\n\n  @Element() el: HTMLAlcAlertElement;\n\n  /**\n   * Indica se o alert está visível. Pode-se usar essa propriedade em vez dos métodos show/hide.\n    */\n  @Prop({ mutable: true, reflect: true }) visible: boolean = true;\n\n  @Watch('visible')\n  watchPropVisible(newValue: boolean) {\n    newValue === true ? this.core.show() : this.core.hide();\n  }\n\n  /**\n   * O tipo do alert, de acordo com a natureza da mensagem nele contido.\n   */\n  // @TODO O ideal seria buscar o valor default do core, mas não fica legal a documentação\n  @Prop({ reflect: true }) type: Type = 'info';\n\n  @Watch('type')\n  watchType(newValue: Type) {\n    this.core.type = newValue;\n  }\n\n  /**\n   * Define se o alert pode ser dispensado pelo usuário.\n   */\n  // @TODO O ideal seria buscar o valor default do core, mas não fica legal a documentação\n  @Prop({ reflect: true }) dismissible: boolean = true;\n\n  @Watch('dismissible')\n  watchDismissible(newValue: boolean) {\n    this.core.dismissible = newValue;\n  }\n\n  /**\n   * Evento disparado quando o alert é dispensado.\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true\n\n  }) alcHide: EventEmitter<null>;\n  /**\n   * Evento disparado quando o alert é dispensado.\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true\n  }) alcAfterHide: EventEmitter<null>;\n\n  connectedCallback() {\n    this.core = new AlertCore({\n      type: this.type,\n      dismissible: this.dismissible,\n      visible: this.visible,\n      dispatchHide: () => this.emitHide(),\n      dispatchAfterHide: () => this.emitAfterHide(),\n      setVisible: this.setVisible\n    });\n  }\n\n  /**\n   * Fecha o alert.\n   * @returns O valor retornado é `true` se o alert foi realmente dispensado com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    return this.core.hide();\n  }\n\n  /**\n   * Exibe o alert.\n   * @returns O valor retornado é `true` se o alert foi realmente exibido com esa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    return this.core.show();\n  }\n\n  /*\n   * Dispara o evento will dismiss\n   */\n  private emitHide(): CustomEvent {\n    return this.alcHide.emit();\n  }\n\n  /*\n   * Dispara o evento did dismiss\n   */\n  private emitAfterHide(): CustomEvent {\n    return this.alcAfterHide.emit();\n  }\n\n\n  /*\n   * Renderiza o ícone de acordo com o type\n   */\n  private renderIcon(): string {\n    let icon = iconMap.get(this.core.type);\n    return <alc-icon name={icon.name} label={icon.label}></alc-icon>\n  }\n\n  /*\n   * Renderiza o botão \"dispensar\" se for o caso.\n   */\n  private renderDismissButton(): string {\n    // Will not have a button if !dismissible\n    if (!this.core.dismissible) {\n      return null;\n    }\n\n    return (\n      <div class=\"alc-alert__dismiss\" {...test('data-test-dismiss')}>\n        <button\n          class={`alc-button alc-button-rounded alc-button-rounded--${this.core.type}`}\n          onClick={() => this.hide()}\n        >\n          <alc-icon name=\"x-lg\" label=\"Dispensar\"></alc-icon>\n        </button>\n      </div>\n    );\n  }\n\n  private setVisible = (visible: boolean) => {\n    this.visible = visible;\n  }\n\n  componentDidRender() {\n    this.el.querySelectorAll('a').forEach(link => {\n      link.classList.add('alc-link--color-text');\n    });\n  }\n\n  /**\n   * StencilJS render\n   */\n\n  render() {\n\n    logger.debug('render alc-alert', ALC);\n\n    return (\n      <Host\n        style={{display: this.visible ? null : 'none'}}\n      >\n        <div class={\"alc-alert alc-alert--\" + this.core.type}>\n          {this.renderIcon()}\n          <div class='alc-alert__content'>\n            <div class=\"alc-alert__summary\">\n              <slot name=\"summary\"></slot>\n            </div>\n            <slot />\n          </div>\n\n          {this.renderDismissButton()}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}