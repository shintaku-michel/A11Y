{"version":3,"file":"alc-loading.js","sourceRoot":"","sources":["../../../../src/components/alc-loading/alc-loading.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Method, Prop, Watch, State, Element, h } from '@stencil/core';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-loading',\n  styleUrl: 'alc-loading.css',\n  shadow: false,\n})\nexport class AlcLoading {\n  @Element() el: HTMLElement;\n  /**\n   * Define se o indicador de carregamento aparece na tela. Quando o valor é `true` mostra o componente e quando o valor é `false` oculta.\n   */\n  @Prop({ mutable: true, reflect: true }) active: boolean = false;\n\n  /**\n  * Texto mostrado na tela enquanto estiver carregando e também anunciado no leitor de tela quando o estado mudar para `active=true`.\n  */\n  @Prop({reflect: true}) label: string = 'Carregando...';\n\n  /**\n  * Texto anunciado ao leitor de tela quando mudar o estado para `active=false`.\n  */\n  @Prop({reflect: true}) endMsg: string = 'Finalizado.';\n\n  /**\n   * Define a variação visual do componente:\n   * - `'full-screen'`: ocupa a tela inteira.\n   * - `'container'`: ocupa o elemento pai.\n   * - `'inline'`: utilizado dentro de textos.\n   * - `'button'`: utilizado dentro de botões.\n   */\n  @Prop({ reflect: true }) variant: 'full-screen' | 'container' | 'inline' | 'button' = 'full-screen';\n\n  /**\n   * Mensagem interna para a região aria-live.\n   */\n  private ariaMessage: string = '';\n\n  private parentButton: HTMLButtonElement | null = null;\n\n  /**\n   * Exibe o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.active) {\n      return false;\n    }\n    this.active = true;\n    return true;\n  }\n\n  /**\n   * Esconde o loading.\n   * @returns O valor retornado é `true` se o loading foi realmente oculto com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.active) {\n      return false;\n    }\n    this.active = false;\n    return true;\n  }\n\n  @Watch('active')\n  onActiveChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.updateAriaMessage();\n      if (this.variant === 'button') {\n        this.updateParentButtonAttributes();\n      }\n    }\n  }\n\n  componentWillLoad() {\n    this.updateAriaMessage();\n  }\n\n  componentDidLoad() {\n    if (this.variant === 'button') {\n      this.findParentButton();\n      this.updateParentButtonAttributes();\n    }\n  }\n\n  private updateAriaMessage() {\n    this.ariaMessage = this.active ? this.label : this.endMsg;\n  }\n\n  private findParentButton() {\n    this.parentButton = this.el.closest('button');\n    if (!this.parentButton) {\n      logger.warn('alc-loading[variant=\"button\"] deve estar dentro de um elemento <button>.');\n    }\n  }\n\n  private updateParentButtonAttributes() {\n    if (this.parentButton) {\n      if (this.active) {\n        this.parentButton.setAttribute('aria-label', this.label);\n      } else {\n        this.parentButton.removeAttribute('aria-label');  \n      }\n    }\n  }\n\n  render() {\n    const shouldRenderAriaLive = this.variant !== 'button';\n  \n    return (\n      <Host>\n        {this.renderLoadingVisuals()}\n        {shouldRenderAriaLive && (\n          <div class=\"sr-only\" aria-live=\"polite\" role=\"status\" {...test('data-test-acessibility')}>\n            {this.ariaMessage}\n          </div>\n        )}\n      </Host>\n    );\n  }\n\n  private renderLoadingVisuals() {\n    switch (this.variant) {\n      case 'full-screen':\n        return this.renderFullScreen();\n      case 'container':\n        return this.renderContainer();\n      case 'inline':\n        return this.renderInline();\n      case 'button':\n        return this.renderButton();\n      default:\n        return null;\n    }\n  }\n\n  private renderFullScreen() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card\">\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderContainer() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__overlay-container\" aria-hidden=\"true\">\n        <div class=\"alc-loading__card-container\">\n          <div class=\"alc-loading__spinner-container\"></div>\n          <p>{this.label}</p>\n        </div>\n      </div>\n    );\n  }\n\n  private renderInline() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__inline\" aria-hidden=\"true\">\n        <div class=\"alc-loading__spinner-inline\"></div>\n        <span class=\"alc-loading__label\">{this.label}</span>\n      </div>\n    );\n  }\n\n  private renderButton() {\n    if (!this.active) return null;\n    return (\n      <div class=\"alc-loading__button\" aria-hidden=\"true\">\n        <span class=\"alc-loading__button-wrapper\">\n          <div class=\"alc-loading__spinner-button\"></div>\n        </span>\n      </div>\n    );\n  }\n}"]}