{"version":3,"file":"alc-modal.js","sourceRoot":"","sources":["../../../../src/components/alc-modal/alc-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Method, Listen, Event, EventEmitter, Watch } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport { getFocusableElements, focusFirstElement, handleKeyDown } from '../utils/keydown';\nimport test from '../utils/testAttributes';\nimport { lockBodyScroll, unlockBodyScroll } from '../utils/scrollLockManager';\n\ntype hideFromType = 'header-button' | 'footer-button' | 'keyboard' | 'overlay';\nexport interface AlcModalHideEventDetail {\n  from: hideFromType;\n}\n\n/**\n * @slot - O conteúdo da modal.\n * @slot header - O conteúdo do cabeçalho da modal.\n * @slot footer - O conteúdo do rodapé da modal.\n */\n\n@Component({\n  tag: 'alc-modal',\n  styleUrls: {\n    base: 'alc-modal-base.css',\n    theme: 'alc-modal.css',\n  },\n  scoped: false,\n})\nexport class AlcModal {\n  private idModalTitle = null;\n  private modalRef?: HTMLElement;\n  private triggerElement = null;\n  private overlayRef!: HTMLElement;\n\n  /**\n   * Define se a modal está aberta ou fechada.\n   */\n  @Prop({ mutable: true }) open?: boolean = false;\n\n  /**\n   * Título da modal\n   */\n  @Prop({ reflect: true }) headerText: string = '';\n\n  /**\n   * Tamanho da modal\n   */\n  @Prop({ mutable: true,  reflect: true  }) size?: 'sm' | 'md' | 'lg' | 'xl' = 'md';\n\n  /**\n   * Previne a modal de fechar ao clicar no overlay.\n   */\n  @Prop({ reflect: true, mutable: false }) preventOverlayClose: boolean = false;\n\n  @Watch('open')\n  watchOpen(open: boolean) {\n    if (open) {\n      // Show\n      this.alcAfterShow.emit();\n      this.triggerElement = document.activeElement as HTMLElement;\n      lockBodyScroll();\n    } else {\n      // Hide\n      this.alcAfterHide.emit();\n\n      const { defaultPrevented: defaultPreventedFocus } = this.alcFocusAfterHide.emit();\n      if (!defaultPreventedFocus) {\n        this.handleFocusWhenCloseModal();\n        unlockBodyScroll();\n      }\n\n    }\n  }\n\n  /**\n   * Evento disparado quando a modal abriu\n   */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando a modal vai fechar\n   */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<{\n    from: 'header-button' | 'footer-button' | 'keyboard' | 'overlay';\n  }>;\n\n  /**\n   * Evento disparado quando a modal fechou\n   */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  /**\n   * Evento disparado quando a modal fechou e esta pronto para lidar com foco.\n   */\n  @Event({\n    eventName: 'alc-focus-after-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcFocusAfterHide: EventEmitter<null>;\n\n  /**\n   * Método para abrir modal.\n   * @returns O valor retornado é `true` se a modal foi realmente exibida com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.open) {\n      return false;\n    }\n\n    this.open = true;\n    return true;\n  }\n\n  /**\n   * Método para fechar modal.\n   * @returns O valor retornado é `true` se a modal foi realmente oculta com essa chamada ao método.\n   */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.open) {\n      return false;\n    }\n    \n    this.open = false;\n    return true;\n  }\n\n  /**\n   * Foco fica dentro da modal quando aberta.\n   */\n  @Listen('keydown', { target: 'document' })\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.open) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this.handleHideByUser('keyboard');\n      return;\n    }\n\n    if (event.key !== 'Tab') return;\n    const focusableElements = getFocusableElements(this.modalRef);\n    handleKeyDown(event, focusableElements);\n  }\n\n  componentWillLoad() {\n    // Antes do componente carregar, cria um id para o titulo da modal (Acessibilidade).\n    this.idModalTitle = getUniqueId();\n\n  }\n\n  componentDidRender() {\n    // Pega os elementos focáveis a cada renderização (Pode haver mudanças na modal).\n    const focusableElements = getFocusableElements(this.modalRef);\n\n    // Após o componente renderizar e estiver aberto, então ja coloca foco dentro da modal.\n    if (this.open) {\n      focusFirstElement(focusableElements);\n    }\n  }\n\n  connectedCallback() {\n    if (this.open) {\n      lockBodyScroll();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.open) {\n      unlockBodyScroll();\n    }\n  }\n\n  private getModalRef = element => (this.modalRef = element as HTMLElement);\n\n  private handleFocusWhenCloseModal = () => {\n    const defaultFocus = ['BODY', 'DOCUMENT'];\n    const hasTriggerElement = !!this.triggerElement && document.body.contains(this.triggerElement);\n\n    if (hasTriggerElement && !defaultFocus.includes(this.triggerElement.tagName)) {\n      this.triggerElement.focus();\n    }\n\n  };\n\n  private handleOutsideClick(event: MouseEvent) {\n    const isClickedOutside = event.target === this.overlayRef;\n\n    if (isClickedOutside) {\n      this.handleHideByUser('overlay');\n    }\n  }\n\n  private handleHideByUser(hideFrom: hideFromType) {\n    // Se o usuário clicar no overlay e estiver impedido de fechar, não faz nada.\n    if (hideFrom === 'overlay' && this.preventOverlayClose) return;\n\n    const { defaultPrevented } = this.alcHide.emit({from: hideFrom});\n    if (!defaultPrevented) {\n      this.open = false;\n    }\n  }\n\n  render() {\n    return (\n      <Host style={{ display: this.open ? 'block' : 'none' }}>\n        <div class=\"alc-modal__base\">\n          <div\n            class=\"alc-modal__overlay\"\n            onClick={(e) => this.handleOutsideClick(e)}\n            {...test('data-test-overlay')}\n            ref={el => this.overlayRef = el}\n          >\n          </div>\n          <div\n            class={{\n              'alc-modal__card': true,\n              'alc-modal__card--sm':   this.size === \"sm\",\n              'alc-modal__card--md':   this.size === \"md\",\n              'alc-modal__card--lg':   this.size === \"lg\",\n              'alc-modal__card--xl':   this.size === \"xl\",\n            }}\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-labelledby={this.idModalTitle}\n            ref={this.getModalRef}\n          >\n            <div class=\"alc-modal__header\">\n              {this.headerText ? (\n                <h2 id={this.idModalTitle} class=\"alc-modal__title\">\n                  {this.headerText}\n                </h2>\n              ) : (\n                <slot name=\"header\"></slot>\n              )}\n              <button type=\"button\" class=\"alc-button alc-button-rounded\" onClick={() => this.handleHideByUser('header-button')} {...test('data-test-close-button')}>\n                <alc-icon name=\"x-lg\" label=\"Fechar Modal\" {...test('data-test-close-icon')} />\n              </button>\n            </div>\n            <div class=\"alc-modal__content\">\n              <slot></slot>\n            </div>\n            <div class=\"alc-modal__footer\">\n              <slot name=\"footer\">\n                <button type=\"button\" class=\"alc-button alc-button-primary\" onClick={() => this.handleHideByUser('footer-button')} {...test('data-test-footer-close-button')}>\n                  Fechar\n                </button>\n              </slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}