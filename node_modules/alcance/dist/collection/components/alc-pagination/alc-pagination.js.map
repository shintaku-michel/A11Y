{"version":3,"file":"alc-pagination.js","sourceRoot":"","sources":["../../../../src/components/alc-pagination/alc-pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, EventEmitter, Event, State, Watch } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\ntype PageChangeType = 'isFirst' | 'isPrev' | 'isLast' | 'isNext' | 'isSelect';\n\nexport interface PageChangeEventProps {\n  from: number;\n  to: number;\n  using: PageChangeType;\n}\n\ninterface PaginationItem {\n  [using: string]: {\n    icon: string;\n    label: string;\n  }\n}\n\n@Component({\n  tag: 'alc-pagination',\n  styleUrls: {\n    base: 'alc-pagination-base.css',\n    theme: 'alc-pagination.css'\n  },\n})\nexport class Pagination {\n  private idSelectPagination = null;\n  private disabledSelect: boolean = false;\n\n  /**\n   * Número total de páginas.\n   */\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) totalPages: number = 1;\n  @Watch('totalPages')\n  watchPropTotalPages(newValue: number , oldValue: number) {\n\n    if (newValue < this.currentPage) {\n      this.totalPages = oldValue;\n      logger.warn(`\"total-pages\" não pode ser menor do que \"current-page\". Foi mantido o valor ${oldValue}`);\n      return;\n    }\n    this.pageList = [...new Array(newValue)].map((_, index) => index + 1);\n  }\n\n  /**\n   * Número da página atual\n   */\n  @Prop({ mutable: true, reflect: true }) currentPage: number = 1;\n\n  /**\n  * @type Array<number>\n  * @default []\n  *\n  * Lista de páginas\n  */\n  @State() pageList: Array<number> = [];\n\n  /**\n   * Disparado quando ocorre a mudança de uma página para outra.\n   */\n  @Event({\n    eventName: 'alc-change',\n    cancelable: false,\n  })\n  alcChange: EventEmitter<{\n    from: number;\n    to: number;\n    using: 'isFirst' | 'isPrev' | 'isLast' | 'isNext' | 'isSelect'\n  }>;\n\n  componentWillLoad() {\n    this.pageList = [...new Array(this.totalPages)].map((_, index) => index + 1);\n    this.idSelectPagination = getUniqueId();\n  }\n\n  private paginationItem: PaginationItem = {\n    'isFirst': {\n      icon: 'chevron-double-left',\n      label: 'Ir para primeira página',\n    },\n    'isLast': {\n      icon: 'chevron-double-right',\n      label: 'Ir para última página',\n    },\n    'isPrev': {\n      icon: 'chevron-left',\n      label: 'Ir para página anterior',\n    },\n    'isNext': {\n      icon: 'chevron-right',\n      label: 'Ir para próxima página',\n    },\n  }\n\n  private checkPage = (using: PageChangeType) => {\n    const leftPaginationItems = ['isFirst', 'isPrev'];\n    const rightPaginationItems = ['isLast', 'isNext'];\n\n    if (leftPaginationItems.includes(using)) {\n      return this.currentPage !== 1\n    }\n\n    if (rightPaginationItems.includes(using)) {\n      return this.currentPage !== this.pageList.length\n    }\n\n    return true;\n  }\n\n  private handleSelectedPage = (event: any) => {\n    this.handleChangePage(parseInt(event.target.value), 'isSelect')\n  }\n\n  private handleChangePage(pageNumber: number, using: PageChangeType) {\n    if (!this.checkPage(using)) {\n      return;\n    }\n\n    const newChange =\n      this.alcChange.emit({\n        from: this.currentPage,\n        to: pageNumber,\n        using: using,\n      });\n\n    this.pageChangeHandler(newChange);\n\n  }\n\n  private pageChangeHandler(event: CustomEvent<PageChangeEventProps>) {\n    const { using, to } = event.detail;\n\n    switch (using) {\n      case 'isFirst':\n        this.currentPage = 1;\n        break;\n      case 'isPrev':\n        this.currentPage = this.currentPage - 1;\n        break;\n      case 'isNext':\n        this.currentPage = this.currentPage + 1;\n        break;\n      case 'isLast':\n        this.currentPage = this.totalPages;\n        break;\n      default:\n        this.currentPage = to;\n        break;\n    }\n  }\n\n  private renderPaginationItem = (pageNumber: number, using: PageChangeType) => {\n    const paginationItemIsDisabled = !this.checkPage(using);\n    const paginationItemLabel = (!paginationItemIsDisabled && using !== 'isFirst') ? `, Ir para página ${pageNumber}` : '';\n\n    return (\n      <li>\n        <button\n          onClick={() => this.handleChangePage(pageNumber, using)}\n          class={{\n            'alc-button alc-button-rounded': true,\n            'alc-pagination__button--first': using === 'isFirst',\n            'alc-pagination__button--last': using === 'isLast',\n          }}\n          aria-label={this.paginationItem[using].label + paginationItemLabel}\n          aria-disabled={paginationItemIsDisabled}\n          disabled={paginationItemIsDisabled}\n          {...test('data-test-pagination-button')}\n        >\n          <alc-icon\n            name={this.paginationItem[using].icon}\n            label=\"\"\n          />\n        </button>\n      </li>\n    )\n  }\n\n  render() {\n    return (\n      <Host>\n        <nav role=\"navigation\" aria-label=\"Navegação paginada\" class=\"alc-pagination\">\n          <ul class=\"alc-pagination__content\">\n\n            {this.renderPaginationItem(1, 'isFirst')}\n            {this.renderPaginationItem(this.currentPage - 1, 'isPrev')}\n\n            <li class=\"alc-pagination__item\">\n              <label htmlFor={this.idSelectPagination}>Página</label>\n              <select onChange={this.handleSelectedPage} class=\"alc-pagination__select\" id={this.idSelectPagination} disabled={this.disabledSelect}>\n                {this.pageList.map(page => (\n                  <option value={page} selected={page === this.currentPage} aria-label={`Página ${page}`}>\n                    {page}\n                  </option>\n                ))}\n              </select>\n              de {this.totalPages}\n            </li>\n\n            {this.renderPaginationItem(this.currentPage + 1, 'isNext')}\n            {this.renderPaginationItem(this.pageList.length, 'isLast')}\n\n          </ul>\n        </nav>\n      </Host>\n    );\n  }\n}\n"]}