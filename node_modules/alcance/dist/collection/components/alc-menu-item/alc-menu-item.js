import { h, Host } from "@stencil/core";
import classNames from "classnames";
const ROLES = {
    normal: 'menuitem',
    checkbox: 'menuitemcheckbox',
    radio: 'menuitemradio',
};
/**
 * @slot - O rótulo do menu-item.
 *
 * @slot prefix - Prefixo do rótulo do menu-item.
 * Geralmente, utilizado para um ícone associado à opção de menu.
 *
 * @slot suffix - Sufixo do rótulo do menu-item.
 * Geralmente, utilizado para um ícone associado à opção de menu.
 */
export class AlcMenuItem {
    constructor() {
        /** Tipo do menu-item. */
        this.type = 'normal';
        /** Indica se o menu-item está ou não marcado. Usado quando `type=checkbox` ou `type=radio`. */
        this.checked = false;
        /** Indica se o menu-item está desabilitado. */
        this.disabled = false;
    }
    handleKeyDown(event) {
        if (' ' === event.key || 'Enter' === event.key) {
            event.preventDefault();
            this.triggerEvent({ originalEvent: event });
        }
    }
    handleClick(event) {
        if (!this.disabled) {
            event.preventDefault();
            this.triggerEvent({ originalEvent: event });
        }
    }
    triggerEvent(detail) {
        if (this.disabled) {
            return;
        }
        this.alcSelect.emit(detail);
    }
    getCssClassMap() {
        return classNames('alc-menu-item', this.disabled && 'alc-menu-item--disabled', this.type !== null && 'alc-menu-item--checkable');
    }
    render() {
        const checked = this.checked ? 'true' : 'false';
        const role = ROLES[this.type];
        return (h(Host, { key: '048aa3032c7030740d576b35ed43ed9763e75f49', role: role, "aria-checked": this.type === 'normal' ? null : checked, "aria-disabled": this.disabled ? 'true' : null, class: this.getCssClassMap(), tabindex: -1 }, h("span", { key: '0401543277ca494a123c9ac64a2a21a32587123e', class: "alc-menu-item__check" }, this.type === 'checkbox' && this.checked
            ? h("alc-icon", { label: "", name: "check" })
            : this.type === 'radio' && this.checked
                ? h("alc-icon", { label: "", name: "record-circle", class: "text-sm" })
                : null), h("span", { key: '20d5ad331ca14ea6924bfb499dfeb6b9c981c31b', class: "alc-menu-item__prefix" }, h("slot", { key: 'b9bb9e57ef0c413b91b4e80f00e4ad091a5673d8', name: "prefix" })), h("span", { key: '40e7fba648f5e6b42f4afd35ab6e911e006f5204', class: "alc-menu-item__label" }, h("slot", { key: '9a19ddeece85958962b7520828b835a0d957070c' })), h("span", { key: '54659f617b03600d2fecef7b209415b4db67ef00', class: "alc-menu-item__suffix" }, h("slot", { key: 'b7935e91e087c73b855504c980e0950289e8e519', name: "suffix" }))));
    }
    static get is() { return "alc-menu-item"; }
    static get originalStyleUrls() {
        return {
            "$": ["alc-menu-item.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["alc-menu-item.css"]
        };
    }
    static get properties() {
        return {
            "type": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'normal' | 'checkbox' | 'radio'",
                    "resolved": "\"checkbox\" | \"normal\" | \"radio\"",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Tipo do menu-item."
                },
                "getter": false,
                "setter": false,
                "attribute": "type",
                "reflect": true,
                "defaultValue": "'normal'"
            },
            "checked": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Indica se o menu-item est\u00E1 ou n\u00E3o marcado. Usado quando `type=checkbox` ou `type=radio`."
                },
                "getter": false,
                "setter": false,
                "attribute": "checked",
                "reflect": true,
                "defaultValue": "false"
            },
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Indica se o menu-item est\u00E1 desabilitado."
                },
                "getter": false,
                "setter": false,
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "value": {
                "type": "any",
                "mutable": false,
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Valor do menu-item, que pode ser utilizado para identificar que item foi selecionado."
                },
                "getter": false,
                "setter": false,
                "attribute": "value",
                "reflect": true
            }
        };
    }
    static get events() {
        return [{
                "method": "alcSelect",
                "name": "alc-select",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Evento disparado quando o menu-item \u00E9 selecionado."
                },
                "complexType": {
                    "original": "{\n    originalEvent: MouseEvent | KeyboardEvent;\n  }",
                    "resolved": "{ originalEvent: KeyboardEvent | MouseEvent; }",
                    "references": {
                        "MouseEvent": {
                            "location": "global",
                            "id": "global::MouseEvent"
                        },
                        "KeyboardEvent": {
                            "location": "global",
                            "id": "global::KeyboardEvent"
                        }
                    }
                }
            }];
    }
    static get elementRef() { return "hostElement"; }
    static get listeners() {
        return [{
                "name": "keydown",
                "method": "handleKeyDown",
                "target": undefined,
                "capture": false,
                "passive": false
            }, {
                "name": "click",
                "method": "handleClick",
                "target": undefined,
                "capture": false,
                "passive": false
            }];
    }
}
//# sourceMappingURL=alc-menu-item.js.map
