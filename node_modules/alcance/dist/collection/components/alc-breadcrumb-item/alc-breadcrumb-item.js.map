{"version":3,"file":"alc-breadcrumb-item.js","sourceRoot":"","sources":["../../../../src/components/alc-breadcrumb-item/alc-breadcrumb-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,IAAI,MAAM,yBAAyB,CAAC;AAE3C;;EAEE;AAOF,MAAM,OAAO,iBAAiB;IAL9B;QAQE,+FAA+F;QACtE,QAAG,GAAW,IAAI,CAAC;QAE5C,mCAAmC;QACV,UAAK,GAAW,IAAI,CAAC;QAE9C,+CAA+C;QACtB,aAAQ,GAAW,IAAI,CAAC;QAExC,kBAAa,GAAG,KAAK,CAAC;KA0ChC;IAxCC,iBAAiB;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;IAC7C,CAAC;IAGD,iBAAiB,CAAC,QAAgB;QAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACxD,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,IAAI,EAAC,UAAU;YACnB,4DAAK,KAAK,EAAC,qBAAqB;gBAC9B,4DACE,KAAK,EAAE;wBACL,2BAA2B,EAAE,IAAI;wBACjC,UAAU,EAAE,CAAC,IAAI,CAAC,aAAa;qBAChC;oBAGA,IAAI,CAAC,QAAQ,IAAI,CAChB,+EAAU,KAAK,EAAC,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAC,2BAA2B,iBAAa,MAAM,IAAK,IAAI,CAAC,gBAAgB,CAAC,EAAa,CACrI;oBAEA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CACV,uBAAG,IAAI,EAAE,IAAI,CAAC,GAAG,IAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAK,CAChE,CAAC,CAAC,CAAC,CACF,eAAa,CACd,CAEG;gBAEL,CAAC,IAAI,CAAC,aAAa,IAAI,CACtB,6DAAM,KAAK,EAAC,gCAAgC,QAAS,CACtD,CACG,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, h, Element, Prop, State, Watch } from '@stencil/core';\nimport test from '../utils/testAttributes';\n\n/**\n * @slot - Slot para adicionar elemento de navegação. Pode ser tanto a tag `<a>` quanto um `<routerlink>` no caso de uso com Vue. Também pode-se usar a propriedade url.\n*/\n\n@Component({\n  tag: 'alc-breadcrumb-item',\n  styleUrl: 'alc-breadcrumb-item.css',\n  shadow: false,\n})\nexport class AlcBreadcrumbItem {\n  @Element() el: HTMLElement;\n\n  /** Indica a url do link, pode-se usar o slot default para adicionar o elemento de navegação */\n  @Prop({ reflect: true }) url: string = null;\n\n  /** Indica a label do breadcrumb */\n  @Prop({ reflect: true }) label: string = null;\n\n  /** Indica o nome do icone a ser renderizado */\n  @Prop({ reflect: true }) iconName: string = null;\n\n  @State() isCurrentPage = false;\n\n  componentWillLoad() {\n    this.isCurrentPage = !!this.el.ariaCurrent;\n  }\n\n  @Watch('aria-current')\n  onAriaLabelChange(newValue: string) {\n    this.isCurrentPage = newValue === null ? false : true;\n  }\n\n  render() {\n    return (\n      <Host role=\"listitem\">\n        <div class='alc-breadcrumb-item'>\n          <div \n            class={{\n              'alc-breadcrumb-item__link': true,\n              'alc-link': !this.isCurrentPage\n            }}\n          >\n            {/* Renderiza icone se ter */}\n            {this.iconName && (\n              <alc-icon label=\"\" name={this.iconName} class=\"alc-breadcrumb-item__icon\" aria-hidden=\"true\" {...test('data-test-icon')}></alc-icon>\n            )}\n            {/* Renderiza link ou slot */}\n            {this.url ? (\n              <a href={this.url} {...test('data-test-link')}>{this.label}</a>\n            ) : (\n              <slot></slot>\n            )\n            }\n          </div>\n          {/*  Renderiza separador */}\n          {!this.isCurrentPage && (\n            <span class='alc-breadcrumb-item__separator'>/</span>\n          )}\n        </div>\n      </Host>\n    );\n  }\n\n}\n"]}