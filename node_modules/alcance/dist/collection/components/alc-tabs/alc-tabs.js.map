{"version":3,"file":"alc-tabs.js","sourceRoot":"","sources":["../../../../src/components/alc-tabs/alc-tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, Prop, Listen, Watch, State, Event, EventEmitter, Method, forceUpdate } from '@stencil/core';\n\nimport { TabButtonClickEventDetail } from '../alc-tab-button/alc-tab-button-interface';\nimport logger from '../utils/logger';\n\nexport interface AlcTabsDidChangeEventTypes {\n  tab: string\n}\n\n@Component({\n  tag: 'alc-tabs',\n  styleUrls: {\n    base: 'alc-tabs-base.css',\n    theme: 'alc-tabs.css'\n  },\n  scoped: false\n})\nexport class AlcTabs {\n\n  private hasButtonSlot: boolean;\n\n  private selectedTabButton?: HTMLAlcTabButtonElement = null;\n\n  private tabList: HTMLDivElement = null;\n\n  private mo: MutationObserver;\n\n  /**\n   * O identificador da tab atualmente selecionada\n   */\n  @Prop({ mutable: true, reflect: true }) selected: string;\n\n  @Watch('selected')\n  selectedChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.select(newValue);\n    }\n  }\n\n  @Element() el!: HTMLAlcTabsElement;\n\n  @State() selectedTab?: HTMLAlcTabElement = null;\n\n  @State() hasScroll = false;\n\n  /**\n   * Disparado quando houve uma mudança de tab\n   */\n  @Event({\n    eventName: 'alc-change'\n  }) alcChange!: EventEmitter<{\n    tab: string\n  }>;\n\n  /**\n   * Seleciona uma tab pelo valor de sua propriedade `tab` ou pela referência do elemento.\n   *\n   * @param tab A tab a ser selecionada. Se passada como string, deve ser o valor da propriedade `tab` da tab.\n   */\n  @Method()\n  async select(tab: string | HTMLAlcTabElement): Promise<boolean> {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    const selectedTabButton = getTabButton(this.tabButtons, selectedTab.getAttribute('tab'));\n    this.tabSwitch(selectedTab, selectedTabButton);\n\n    this.selected = selectedTab.getAttribute('tab');\n    return true;\n  }\n\n  private tabSwitch(selectedTab: HTMLAlcTabElement, selectedTabButton: HTMLAlcTabButtonElement) {\n    const leavingTab = this.selectedTab;\n    const leavingTabButton = this.selectedTabButton;\n    this.selectedTab = selectedTab;\n    this.selectedTabButton = selectedTabButton;\n\n    selectedTab.selected = true;\n    selectedTabButton.selected = true;\n\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.selected = false;\n        this.alcChange.emit({ tab: selectedTab.tab });\n      }\n      if (leavingTabButton) {\n        leavingTabButton.selected = false;\n      }\n    }\n  }\n\n  // Evento disparado por alc-tab-button\n  @Listen('alc-click')\n  selectedHandler(e: CustomEvent) {\n    this.select(e.detail.tab);\n  }\n\n  @Listen('alc-next')\n  selectedNextButton(e: CustomEvent) {\n    this.onTabButtonNext(e)\n  }\n\n  @Listen('alc-previous')\n  selectedPreviousButton(e: CustomEvent) {\n    this.onTabButtonPrevious(e)\n  }\n\n  @Listen('alc-first')\n  selectedFirstButton(e: CustomEvent) {\n    this.onTabButtonFirst(e);\n  }\n\n  @Listen('alc-last')\n  selectedLastButton(e: CustomEvent) {\n    this.onTabButtonLast(e);\n  }\n\n  private shouldSwitch(selectedTab: HTMLAlcTabElement | undefined): selectedTab is HTMLAlcTabElement {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab;\n  }\n\n  private get tabs() {\n    let tabs = Array.from(this.el.querySelectorAll('alc-tab'));\n    tabs = tabs.filter(t => t.closest('alc-tabs') === this.el);\n    logger.log('my tabs are', tabs, this.el);\n    return tabs;\n  }\n\n  private get tabButtons() {\n    let tabButtons = Array.from(this.el.querySelectorAll('alc-tab-button'));\n    tabButtons = tabButtons.filter(b => b.closest('alc-tabs') === this.el)\n    return tabButtons;\n  }\n\n  private getNextButton(button: HTMLAlcTabButtonElement ) {\n\n    let nextIndex: number;\n    const buttonIndex = this.tabButtons.findIndex(b => b === button);\n\n    // Último -> primeiro\n    if (buttonIndex === this.tabButtons.length - 1) {\n      nextIndex = 0;\n    }\n    else {\n      nextIndex = buttonIndex + 1;\n    }\n\n    return this.tabButtons[nextIndex];\n  }\n\n  private getPreviousButton(button: HTMLAlcTabButtonElement ) {\n\n    let previousIndex: number;\n    const buttonIndex = this.tabButtons.findIndex(b => b === button);\n\n\n    // Primeiro -> último\n    if (buttonIndex <= 0) {\n      previousIndex = this.tabButtons.length - 1;\n    }\n    else {\n      previousIndex = buttonIndex - 1;\n    }\n\n    return this.tabButtons[previousIndex];\n  }\n\n  private handleScroll() {\n    let scrollWidth = 0;\n    let width = this.tabList.offsetWidth;\n    let overflowX = this.tabList.style.overflowX;\n\n    this.tabList.style.overflowX = 'auto';\n    scrollWidth = this.tabList.scrollWidth;\n    this.tabList.style.overflowX = overflowX;\n\n    logger.log('width', width, scrollWidth);\n\n    this.hasScroll = scrollWidth > width;\n  }\n\n  @Listen('themeLoaded', {\n    target: 'window'\n  })\n  themeLoadedHandler() {\n    this.handleScroll();\n  }\n\n  async componentDidLoad() {\n    // Se selected não tiver sido indicado, a primeira será a inicial\n    const initialTab = this.selected || this.tabs[0]?.tab;\n\n    await this.select(initialTab);\n\n    let slotButton = Array.from(this.el.querySelectorAll('[slot=\"button\"]'));\n    this.hasButtonSlot = slotButton.some(s => s.closest('alc-tabs') === this.el);\n  }\n\n  private onTabClicked = (e: CustomEvent<TabButtonClickEventDetail>) => {\n    this.select(e.detail.tab);\n  }\n\n  private async onTabButtonNext (e: CustomEvent) {\n    if(!this.isValidTabButton(e)) return;\n    \n    const target = e.target as HTMLAlcTabButtonElement;\n\n    const nextButton = this.getNextButton(target);\n    this.handleSelectTabButton(nextButton);\n  }\n\n  private async onTabButtonPrevious (e: CustomEvent) {\n    if(!this.isValidTabButton(e)) return;\n\n    const target = e.target as HTMLAlcTabButtonElement;\n\n    const previousButton = this.getPreviousButton(target);\n    this.handleSelectTabButton(previousButton);\n  }\n\n  private async onTabButtonFirst (e: CustomEvent) {\n    if(!this.isValidTabButton(e)) return;\n\n    const firstButton = this.tabButtons[0];\n    this.handleSelectTabButton(firstButton);\n  }\n\n  private async onTabButtonLast (e: CustomEvent) {\n    if(!this.isValidTabButton(e)) return;\n\n    const lastButton = this.tabButtons[this.tabButtons.length - 1];\n    this.handleSelectTabButton(lastButton);\n  }\n\n  private async handleSelectTabButton(tab: HTMLAlcTabButtonElement) {\n    const changed = await this.select(tab.tab);\n    if (changed) {\n      tab.querySelector('button').focus();\n    }\n  }\n\n  private isValidTabButton(e: CustomEvent) {\n    const target = e.target as HTMLAlcTabButtonElement;\n    return Array.from(this.tabButtons).includes(target);\n  }\n\n  componentDidRender() {\n\n    /*\n     O trecho abaixo permite que o componente seja atualizado\n     sempre que houver mudanças no conteúdo (como a inclusão de \"fihos\").\n     Isso foi feito para permitir, por exemplo, que uma tab seja\n     adicionada pela simples manipulação do DOM.\n     */\n    this.mo?.disconnect();\n    this.mo = new MutationObserver(() => {\n      forceUpdate(this.el);\n    });\n    this.mo.observe(this.el, {childList: true});\n    this.mo.observe(this.el.querySelector('.alc-tabs'), {childList: true});\n\n\n    this.tabs.map((tab, i) => {\n      const tabpanel = tab.querySelector('[role=\"tabpanel\"]');\n\n      if (this.tabButtons.length <= i) {\n        return;\n      }\n\n      const button = this.tabButtons[i].querySelector('button');\n\n      if (!tabpanel.hasAttribute('id')) {\n        tabpanel.setAttribute('id', `tab_${i}`);\n      }\n      if (!button.hasAttribute('id')) {\n        button.setAttribute('id', `button_${i}`);\n      }\n\n      tabpanel.setAttribute('aria-labelledby', button.getAttribute('id'));\n      button.setAttribute('aria-controls', tabpanel.getAttribute('id'));\n    });\n\n    // this.handleScroll();\n  }\n\n  disconnectedCallback() {\n    this.mo?.disconnect();\n  }\n\n  render() {\n\n    let tabList: Array<HTMLElement>;\n\n    if (!this.hasButtonSlot) {\n      tabList = this.tabs.map((tab) => {\n        // Não parece ser um boa ideia criar esses elementos dinamicamente, dessa forma\n        // Fazendo assim, a inclusão de uma nova tab no DOM, por exemplo, não\n        // reflete automaticamente aqui, porque não ocorre o \"render\".\n        return (\n          <alc-tab-button tab={tab.tab}>\n            {tab.label}\n          </alc-tab-button>\n        );\n      });\n    }\n\n    logger.log('rendering', this.el, tabList);\n\n    return (\n      <Host\n        onAlcTabButtonClick={this.onTabClicked}\n        onAlcTabButtonNext={this.onTabButtonNext.bind(this)}\n        onAlcTabButtonPrevious={this.onTabButtonPrevious.bind(this)}\n      >\n        <div class=\"alc-tabs\">\n\n          <alc-scroll-panel hasFocus={false} scrollToElement={this.selectedTabButton} >\n            <div role=\"tablist\" ref={el => this.tabList = el} class=\"alc-tabs__tab-list\">\n              <slot name=\"button\" />\n              {tabList}\n            </div>\n          </alc-scroll-panel>\n\n          <slot />\n        </div>\n\n      </Host>\n    );\n  }\n\n}\n\nconst getTab = (tabs: HTMLAlcTabElement[], tab: string | HTMLAlcTabElement): HTMLAlcTabElement | undefined => {\n  const tabEl = (typeof tab === 'string')\n    ? tabs.find(t => t.tab === tab)\n    : tab;\n\n  if (!tabEl) {\n    logger.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\n\nconst getTabButton = (buttons: HTMLAlcTabButtonElement[], tab: string): HTMLAlcTabButtonElement | undefined => {\n\n  const buttonEl = buttons.find(b => b.tab === tab);\n\n  if (!buttonEl) {\n    logger.error(`tab button with id: \"${buttonEl}\" does not exist`);\n  }\n  return buttonEl;\n};\n\n"]}