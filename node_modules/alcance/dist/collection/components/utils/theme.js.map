{"version":3,"file":"theme.js","sourceRoot":"","sources":["../../../../src/components/utils/theme.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,SAAS,kBAAkB;IACzB,OAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC;AACvD,CAAC;AAED,SAAS,kBAAkB,CAAC,KAAuB;IACjD,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,oBAAoB;IAC3B,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACvC,CAAC;AAED,SAAS,eAAe,CAAC,cAAsB;IAC7C,kDAAkD;IAClD,IAAI,cAAc,KAAK,OAAO,EAAE,CAAC;QAC/B,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,IAAI,cAAc,KAAK,MAAM,EAAE,CAAC;QAC9B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,2CAA2C;IAC3C,mDAAmD;IACnD,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC,OAAO,EAAE,CAAC;QACvD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,qBAAqB;IACrB,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,eAAe,CAAC,KAAuB;IAE9C,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,WAAW,CAAE;IAEnE,QAAQ,GAAG,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IAEtD,IAAI,QAAQ,KAAK,EAAE,EAAE,CAAC;QACpB,OAAO;IACT,CAAC;IAED,MAAM,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAEjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACjB,IAAI,GAAG,YAAY,WAAW,EAAE,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;QAClC,CAAC;QAAA,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,OAAO;IACd,wDAAwD;IACxD,sCAAsC;IACtC,2BAA2B;IAC3B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;IAChF,OAAO,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;AACpC,CAAC;AAED,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,eAAe,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC","sourcesContent":["/*\n  Controle do tema.\n  Inspirado em \"Dark mode Series' Articles\": https://dev.to/ayc0/series/12983\n */\n\nfunction loadUserPreference(): string {\n  return localStorage.getItem('alc-theme') || 'system';\n}\n\nfunction saveUserPreference(theme: 'light' | 'dark') : void {\n  localStorage.setItem('alc-theme', theme);\n}\n\nfunction removeUserPreference() : void {\n  localStorage.removeItem('alc-theme');\n}\n\nfunction getAppliedTheme(userPreference: string) : 'light' | 'dark' {\n  // Usuário definiu sua preferência (light ou dark)\n  if (userPreference === 'light') {\n    return 'light';\n  }\n  if (userPreference === 'dark') {\n    return 'dark';\n  }\n\n  // Usuário não definiu sua preferência aqui\n  // mas indicou dark por meio do sistema operacional\n  if (matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n\n  // Por default, light\n  return 'light';\n}\n\nfunction setAppliedTheme(theme: 'light' | 'dark') : void {\n\n  let themeTag = document.querySelector('html').dataset.alcThemeTag ;\n\n  themeTag = themeTag === undefined ? 'html' : themeTag;\n\n  if (themeTag === '') {\n    return;\n  }\n\n  const tags = document.querySelectorAll(themeTag);\n\n  tags.forEach(tag => {\n    if (tag instanceof HTMLElement) {\n      tag.dataset['alcTheme'] = theme;\n    };\n  });\n}\n\nfunction getMode(): 'base' | 'theme' {\n  // A página informou que não quer usar o tema do Alcance\n  // usando o atributo data-alc-no-theme\n  // <html data-alc-no-theme>\n  const noTheme = document.querySelector('html').dataset.alcNoTheme !== undefined;\n  return noTheme ? 'base' : 'theme';\n}\n\nexport { loadUserPreference, saveUserPreference, removeUserPreference, getAppliedTheme, setAppliedTheme, getMode };"]}