{"version":3,"file":"alc-field-checker.js","sourceRoot":"","sources":["../../../../src/components/alc-field-checker/alc-field-checker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Element, Prop } from '@stencil/core';\nimport { getUniqueId } from '../utils/getUniqueId'\n@Component({\n  tag: 'alc-field-checker',\n  styleUrl: 'alc-field-checker.css',\n  shadow: false,\n})\nexport class AlcFieldChecker {\n  private idAlert = null;\n  @Element() hostElement: HTMLElement;\n  @State() errorFields: { id: string; label: string; errorMsg: string }[] = [];\n   /**\n   * Verifica o formulário quando houver submissão.\n  */\n  @Prop({ reflect: true }) checkOnSubmit = false;\n  observer: MutationObserver;\n\n  componentWillLoad() {\n    this.idAlert = getUniqueId();\n  }\n  componentDidLoad() {\n    // Se true, o componente só irá verificar os campos caso haja uma submissão de formulário\n    if (!this.checkOnSubmit) {\n      this.checkAlcFields();\n      this.observer = new MutationObserver(() => this.checkAlcFields());\n      const alcFields = this.hostElement.querySelectorAll('alc-field, alc-fieldset, alc-checkbox, alc-radio');\n      // Observa apenas os componentes alc-field que estão dentro do alc-field-checker, permitindo o uso de mais de um formulário por página\n      alcFields.forEach((field) => this.observer.observe(field, { attributes: true, childList: true, subtree: true }));\n    } else {\n      const formElement = this.hostElement.querySelector('form');\n      if (formElement) {\n        formElement.addEventListener('submit', this.handleFormSubmit);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n  }\n\n  getFieldId(field: Element): string {\n    // Obtém o ID do element filho (input, select e etc que estão dentro do alc-field) para criar a âncora quando houver erro\n    const inputElement = field.querySelector('input, textarea, select');\n    return inputElement ? inputElement.getAttribute('id') : '';\n  }\n\n  isChildOfFieldset(element: Element): boolean {\n    // Verifica se o alc-checkbox e alc-radio são filhos de um alc-fieldset\n    return element.closest('alc-fieldset') !== null;\n  }\n\n  getLabelText(field: Element): string {\n    // Obtém o texto dos componentes alc-checkbox e alc-radio, já que não possuem a propriedade label\n    const labelElement = field.querySelector('label');\n    return labelElement ? labelElement.textContent.trim() : '';\n  }\n\n  checkAlcFields() {\n    const alcFields = Array.from(this.hostElement.querySelectorAll('alc-field, alc-fieldset, alc-checkbox, alc-radio'))\n    .filter((field) => {\n      // Se os componentes alc-checkbox e alc-radio forem filhos de um alc-fieldset, o atributo error-msg deles serão ignorados\n      if (field.tagName.toLowerCase() === 'alc-checkbox' || field.tagName.toLowerCase() === 'alc-radio') {\n        return !this.isChildOfFieldset(field);\n      }\n      return true;\n    });\n    this.errorFields = alcFields\n      // Apenas os alc-field que possuem a propriedade erro-msg com alguma mensagem, são enviados para o mapa de erros\n      .filter((field) => field.hasAttribute('error-msg') && field.getAttribute('error-msg') !== '')\n      .map((field) => {\n        const isCheckboxOrRadioButton = field.tagName.toLowerCase() === 'alc-checkbox' || field.tagName.toLowerCase() === 'alc-radio';\n        const isFieldset = field.tagName.toLowerCase() === 'alc-fieldset';\n        return {\n          id: this.getFieldId(field),\n          label: isCheckboxOrRadioButton ? this.getLabelText(field) : isFieldset ? field.getAttribute('legend') : field.getAttribute('label'),\n          errorMsg: field.getAttribute('error-msg'),\n        };\n      });\n  }\n\n  handleFormSubmit = (e: Event) => {\n    this.checkAlcFields();\n    if (this.errorFields.length > 0) {\n      e.preventDefault();\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"alc-field-checker\">\n        {this.errorFields.length > 0 && (\n          <alc-alert id={this.idAlert} type=\"warning\" dismissible={false}>\n            <span class='alc-alert__summary'>Atenção: Seu formulário contém {this.errorFields.length} {this.errorFields.length > 1 ? \"erros\" : \"erro\"}</span>\n            <ul>\n              {this.errorFields.map((field) => (\n                <li>\n                  <a href={`#${field.id}`} class=\"alc-link alc-link--color-text\">\n                    <strong>{field.label}:</strong> {field.errorMsg}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </alc-alert>\n        )}\n        <slot></slot>\n      </div>\n    );\n  }\n}\n"]}