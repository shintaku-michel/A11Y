{"version":3,"file":"alc-event-lab.js","sourceRoot":"","sources":["../../../../src/components/alc-event-lab/alc-event-lab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAWrC,MAAM,OAAO,WAAW;IAJxB;QASE,eAAU,GAAW,CAAC,CAAC;KAgGxB;IAjFC,KAAK,CAAC,UAAU,CAAC,UAAkB;QACjC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,SAAiB;QAE/B,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QAEtC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;QAE3C,mEAAmE;QACnE,+BAA+B;QAC/B,IAAI,SAAS,KAAK,aAAa,EAAE,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAC3C,OAAO;QACT,CAAC;QAED,qCAAqC;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,aAAa;YACnB,EAAE,EAAE,SAAS;SACd,CAAC,CAAC;QAEH,0CAA0C;QAC1C,6BAA6B;QAC7B,IAAI,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;YAChC,OAAO;QACT,CAAC;QAED,kCAAkC;QAClC,IAAI,SAAS,KAAK,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACtC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC;aACI,IAAI,SAAS,KAAK,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACtC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAG5B,oCAAoC;QACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,aAAa;YACnB,EAAE,EAAE,SAAS;SACd,CAAC,CAAC;IAEL,CAAC;IAED,MAAM;QAEJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,CAAC;SACN,CAAC,CAAC;QAEH,OAAO,CACL,EAAC,IAAI;YAEH,+DACE,KAAK,EAAC,kBAAkB,EACxB,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EACvB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAG/B;YAET,+DACE,KAAK,EAAC,QAAQ,EACd,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EACvB,OAAO,EAAE,GAAG,EAAE,CAAA,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,QAG9B;YAET,8DAAa,CACR,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, h, Event, EventEmitter, Method } from '@stencil/core';\nimport logger from '../utils/logger';\n\nexport interface AlcChangeEventTypes {\n  from: number;\n  to: number;\n}\n\n@Component({\n  tag: 'alc-event-lab',\n  styleUrl: 'alc-event-lab.css',\n})\nexport class AlcEventLab {\n\n  b1: HTMLButtonElement;\n  b2: HTMLButtonElement;\n\n  underlined: number = 1;\n\n  @Event({\n    eventName: 'alc-change',\n    cancelable: true\n  })\n  alcChange: EventEmitter<AlcChangeEventTypes>;\n\n  @Event({\n    eventName: 'alc-after-change',\n    cancelable: false\n  })\n  alcAfterChange: EventEmitter<AlcChangeEventTypes>;\n\n  @Method()\n  async changePage(pageNumber: number) {\n    this.requestChangeTo(pageNumber);\n  }\n\n  requestChangeTo(newButton: number) {\n\n    const currentButton = this.underlined;\n\n    logger.debug('RequestChangeTo', newButton);\n\n    // Regra interna do componente, que não faz nada se o botão clicado\n    // for o que já está sublinhado\n    if (newButton === currentButton) {\n      logger.debug('Botão já estava sublinhado');\n      return;\n    }\n\n    // Dispara o evento buttonWillChange.\n    const event = this.alcChange.emit({\n      from: currentButton,\n      to: newButton\n    });\n\n    // Verifica se foi prevenido externamente.\n    // Se foi, não faz mais nada.\n    if (event.defaultPrevented) {\n      logger.debug('defaultPrevented')\n      return;\n    }\n\n    // Registra a alteração solicitada\n    if (newButton === 1) {\n      this.b2.classList.remove('underline');\n      this.b1.classList.add('underline');\n    }\n    else if (newButton === 2) {\n      this.b1.classList.remove('underline');\n      this.b2.classList.add('underline');\n    }\n    this.underlined = newButton;\n\n\n    // Dispara o evento buttonDidChange.\n    this.alcAfterChange.emit({\n      from: currentButton,\n      to: newButton\n    });\n\n  }\n\n  render() {\n\n    this.alcAfterChange.emit({\n      from: undefined,\n      to: 1\n    });\n\n    return (\n      <Host>\n\n        <button\n          class=\"button underline\"\n          ref={el => this.b1 = el}\n          onClick={() => this.requestChangeTo(1)}\n        >\n          1\n        </button>\n\n        <button\n          class=\"button\"\n          ref={el => this.b2 = el}\n          onClick={() =>this.requestChangeTo(2)}\n        >\n          2\n        </button>\n\n        <slot></slot>\n      </Host>\n    );\n  }\n\n}\n"]}