{"version":3,"file":"alc-tooltip.stories.js","sourceRoot":"","sources":["../../../../../src/components/alc-tooltip/stories/alc-tooltip.stories.ts"],"names":[],"mappings":"AAAA,aAAa;AACb,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,kDAAkD,CAAC;AACxF,OAAO,cAAc,MAAM,mDAAmD,CAAC;AAC/E,OAAO,mBAAmB,CAAC;AAE3B,eAAe;IACb,KAAK,EAAE,0BAA0B;IACjC,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,aAAa;IACxB,IAAI,EAAE,CAAC,MAAM,CAAC;IACd,QAAQ,EAAE,QAAQ;CACnB,CAAC;AAEF,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;AAE7C,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,IAAI,EAAE,QAAQ;IACd,IAAI,kCACC,WAAW;QACd,cAAc;QACd,SAAS,EAAE,mBAAmB,GAI/B;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;iBAEJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;GAIxC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,IAAI,EAAE,SAAS;IACf,IAAI,kCACC,WAAW;QACd,cAAc;QACd,eAAe;QACf,WAAW,EAAE,OAAO,GAGrB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;iBAEJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;SAElC,IAAI,CAAC,WAAW,CAAC;;;;GAIvB,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG;IACnB,IAAI,EAAE,OAAO;IACb,IAAI,kCACC,WAAW;QACd,cAAc;QACd,SAAS,EAAE,mBAAmB;QAC9B,iBAAiB;QACjB,gBAAgB;QAChB,SAAS,EAAE,OAAO,GACnB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;iBAEJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;GAIxC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,IAAI,EAAE,QAAQ;IACd,IAAI,kCACC,WAAW;QACd,cAAc;QACd,SAAS,EAAE,SAAS;QACpB,iBAAiB;QACjB,gBAAgB;QAChB,SAAS,EAAE,QAAQ,GACpB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;;;iBAIJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;;;;;GAWxC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG;IAClB,IAAI,EAAE,+BAA+B;IACrC,IAAI,oBACC,WAAW,CAMf;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;iBAEJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;GAKxC,CAAC;CACH,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG;IACtB,IAAI,EAAE,8BAA8B;IACpC,IAAI,kCACC,WAAW,KACd,QAAQ,EAAE,MAAM,EAChB,SAAS,EAAE,OAAO;QAClB,iBAAiB;QACjB,UAAU,EAAE,OAAO,EACnB,SAAS,EAAE,OAAO,GACnB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;iBAEJ,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;;;;GAOxC,CAAC;CACH,CAAC","sourcesContent":["// @ts-ignore\nimport { argTypes } from './alc-tooltip.args';\nimport { render as renderArgs } from '../../../stories/functions/components.renderArgs';\nimport getDefaultArgs from '../../../stories/functions/components.defaultArgs';\nimport './alc-tooltip.css';\n\nexport default {\n  title: 'Componentes Alfa/Tooltip',\n  name: 'Tooltip',\n  component: 'alc-tooltip',\n  tags: ['alfa'],\n  argTypes: argTypes,\n};\n\nconst defaultArgs = getDefaultArgs(argTypes);\n\nexport const Basico = {\n  name: 'Básico',\n  args: {\n    ...defaultArgs,\n    // 'active': ,\n    'content': 'Isto é um tooltip',\n    // 'placement': ,\n    // 'strategy': ,\n    // 'trigger': ,\n  },\n  render: (args) => (`\n<div class=\"example-basic__container\">\n  <alc-tooltip ${renderArgs(argTypes, args)}>\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Clique ou foque aqui</button>\n  </alc-tooltip>\n</div>\n  `)\n};\n\nexport const Placement = {\n  name: 'Posição',\n  args: {\n    ...defaultArgs,\n    // 'active': ,\n    // 'content': ,\n    'placement': 'right',\n    // 'strategy': ,\n    // 'trigger': ,\n  },\n  render: (args) => (`\n<div class=\"example-placement__container\">\n  <alc-tooltip ${renderArgs(argTypes, args)}>\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Clique ou foque aqui</button>\n    <p>${args['placement']}</p>\n  </alc-tooltip>\n</div>\n\n  `)\n};\n\nexport const Click = {\n  name: 'Click',\n  args: {\n    ...defaultArgs,\n    // 'active': ,\n    'content': 'Isto é um tooltip',\n    // 'placement': ,\n    // 'strategy': ,\n    'trigger': 'click',\n  },\n  render: (args) => (`\n<div class=\"example-basic__container\">\n  <alc-tooltip ${renderArgs(argTypes, args)}>\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Clique aqui</button>\n  </alc-tooltip>\n</div>\n  `)\n};\n\nexport const Manual = {\n  name: 'Manual',\n  args: {\n    ...defaultArgs,\n    // 'active': ,\n    'content': 'Coração',\n    // 'placement': ,\n    // 'strategy': ,\n    'trigger': 'manual',\n  },\n  render: (args) => (`\n<div class=\"example-basic__container\">\n  <button class=\"alc-button alc-button--secondary\" onclick=\"openTooltip()\">Clique aqui</button>\n\n  <alc-tooltip ${renderArgs(argTypes, args)} id=\"tooltip-manual\">\n    <alc-icon name=\"heart\" label=\"\" slot=\"trigger\"></alc-icon>\n  </alc-tooltip>\n</div>\n\n<script>\n  async function openTooltip() {\n    const tooltip = document.querySelector('#tooltip-manual');\n    tooltip.active ? await tooltip.hide() : await tooltip.show();\n  }\n</script>\n  `)\n};\n\nexport const HTML = {\n  name: 'Usando HTML no tooltip (Slot)',\n  args: {\n    ...defaultArgs,\n    // 'active': ,\n    // 'content': ,\n    // 'placement': ,\n    // 'strategy': ,\n    // 'trigger': ,\n  },\n  render: (args) => (`\n<div class=\"example-basic__container\">\n  <alc-tooltip ${renderArgs(argTypes, args)}>\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Clique ou foque aqui</button>\n    <p>Utilizando <strong>html</strong> no tooltip</p>\n  </alc-tooltip>\n</div>\n  `)\n};\n\nexport const Strategy = {\n  name: 'Estratégia de posicionamento',\n  args: {\n    ...defaultArgs,\n    'active': 'true',\n    'content': 'Fixed',\n    // 'placement': ,\n    'strategy': 'fixed',\n    'trigger': 'click',\n  },\n  render: (args) => (`\n<div class=\"example-strategy__container\">\n  <alc-tooltip ${renderArgs(argTypes, args)}>\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Fixed</button>\n  </alc-tooltip>\n  <alc-tooltip content=\"Absolute\" active=\"true\" trigger=\"click\">\n    <button slot=\"trigger\" class=\"alc-button alc-button--secondary\">Absolute</button>\n  </alc-tooltip>\n</div>\n  `)\n};"]}