{"version":3,"file":"alc-tooltip.js","sourceRoot":"","sources":["../../../../src/components/alc-tooltip/alc-tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Prop, h, Method, Event, EventEmitter, Watch, Listen } from '@stencil/core';\nimport { PopupPlacement } from '../alc-popup/alc-popup';\nimport { getUniqueId } from '../utils/getUniqueId';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-tooltip',\n  styleUrl: 'alc-tooltip.css',\n  shadow: false\n})\nexport class AlcTooltip {\n  contentId: string = null;\n  anchorSlot: HTMLSlotElement;\n  anchorEl: HTMLElement;\n  hasClickedOrFocused: boolean = false;\n\n  /**\n  * Indica se o tooltip esta ativo ou não. Pode-se usar essa propriedade em vez dos métodos show/hide.\n  */\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\n\n  /**\n  * Indica o conteudo textual do tooltip. Pode-se usar o slot em vez dessa propriedade.\n  */\n  @Prop({ reflect: true }) content: string = null;\n\n  /**\n  * Define o posicionamento do tooltip.\n  */\n  @Prop({ reflect: true }) placement: PopupPlacement = 'top';\n\n  /**\n  * Define como o tooltip vai ser ativado. Pode ser: `click` , `hover` , `focus` e/ou `manual`. Pode adicionar mais de um, separando por espaço. Ex.: 'hover focus'.\n  */\n  @Prop({ reflect: true }) trigger: string = 'hover focus';\n\n  /**\n  * Define o posicionamento do tooltip.\n  */\n  @Prop({ reflect: true }) strategy: 'absolute' | 'fixed' = 'absolute';\n\n  /**\n   * Exibe o tooltip.\n   * @returns O valor retornado é `true` se o tooltip foi realmente exibido com essa chamada ao método.\n   */\n  @Method()\n  async show(): Promise<boolean> {\n    if (this.active) return false;\n\n    const { defaultPrevented } = this.alcShow.emit({from: 'method'});\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.active = true;\n    return true;\n  }\n\n  /**\n  * Fecha o tooltip.\n  * @returns O valor retornado é `true` se o tooltip foi realmente dispensado com essa chamada ao método.\n  */\n  @Method()\n  async hide(): Promise<boolean> {\n    if (!this.active) return false;\n\n    const { defaultPrevented } = this.alcHide.emit({from: 'method'});\n    if (defaultPrevented) {\n      return false;\n    }\n\n    this.active = false;\n    return true;\n  }\n\n  /**\n  * Evento disparado quando o tooltip vai abrir\n  */\n  @Event({\n    eventName: 'alc-show',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcShow: EventEmitter<{\n    from: 'click' | 'hover' | 'focus' | 'method';\n  }>;;\n\n  /**\n  * Evento disparado quando o tooltip abriu\n  */\n  @Event({\n    eventName: 'alc-after-show',\n    cancelable: false,\n    bubbles: true,\n  })\n  alcAfterShow: EventEmitter<null>;\n\n  /**\n  * Evento disparado quando o tooltip vai fechar.\n  */\n  @Event({\n    eventName: 'alc-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcHide: EventEmitter<{\n    from: 'click' | 'hover' | 'focus' | 'keyboard' | 'method';\n  }>;\n\n  /**\n  * Evento disparado quando o tooltip fechou.\n  */\n  @Event({\n    eventName: 'alc-after-hide',\n    cancelable: true,\n    bubbles: true,\n  })\n  alcAfterHide: EventEmitter<null>;\n\n  @Watch('active')\n  watchActive(active: boolean) {\n    if (active) {\n      // Show\n      this.alcAfterShow.emit();\n    } else {\n      // Hide\n      this.alcAfterHide.emit();\n    }\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    if(event.key === 'Escape') {\n      event.preventDefault();\n      this.anchorEl?.focus();\n      this.handleHide('keyboard');\n    }\n  }\n\n  @Listen('focus', { capture: true })\n  handleFocus() {\n    if (!this.hasTrigger('focus')) return;\n\n    const opened = this.handleShow('focus');\n    if (opened) this.hasClickedOrFocused = true;\n  }\n\n  @Listen('blur', { capture: true })\n  handleBlur() {\n    if (!this.hasTrigger('focus')) return;\n\n    const closed = this.handleHide('focus');\n    if (closed) this.hasClickedOrFocused = false;\n  }\n\n  @Listen('mouseover')\n  handleMouseOver() {\n    if(!this.hasTrigger('hover')) return;\n    this.handleShow('hover');\n  }\n\n  @Listen('mouseout')\n  handleMouseOut() {\n    if(!this.hasTrigger('hover')) return;\n\n    // Verifica se ja foi aberto por click ou foco para não fechar com hover\n    if (this.hasClickedOrFocused) return;\n    \n    this.handleHide('hover');\n  }\n\n  @Listen('click')\n  handleClick() {\n    if(!this.hasTrigger('click')) return;\n\n    if(this.active) {\n      // Hide\n      const closed = this.handleHide('click');\n      if (closed) this.hasClickedOrFocused = false;\n    } else {\n      // Show\n      const opened = this.handleShow('click');\n      if (opened) this.hasClickedOrFocused = true;\n    }\n  }\n\n  componentWillLoad() {\n    this.contentId = getUniqueId();\n  }\n\n  componentDidLoad() {\n    if(this.anchorSlot) {\n      const el = this.anchorSlot.assignedElements()[0];\n      if (el instanceof HTMLElement) {\n        this.anchorEl = el;\n        this.anchorEl.setAttribute('aria-describedby', this.contentId);\n        this.anchorEl.setAttribute('tabindex', '0');\n      }\n    }\n  }\n\n  async handleHide(type: 'click' | 'hover' | 'focus' | 'keyboard') {\n    const { defaultPrevented } = this.alcHide.emit({from: type});\n    let closed = false;\n\n    if(!defaultPrevented) {\n      closed = await this.hide();\n    }\n\n    return closed;\n  }\n\n  async handleShow(type: 'click' | 'hover' | 'focus' ) {\n    const { defaultPrevented } = this.alcShow.emit({from: type});\n    let opened = false;\n\n    if(!defaultPrevented) {\n      opened = await this.show();\n    }\n    \n    return opened;\n  }\n\n  hasTrigger(triggerType: string) {\n    const triggers = this.trigger.split(' ');\n    return triggers.includes(triggerType);\n  }\n\n  render() {\n    return (\n      <Host>\n        <alc-popup\n          active={this.active}\n          placement={this.placement}\n          shift\n          flip\n          distance={8}\n          arrow\n          role=\"tooltip\"\n          strategy={this.strategy}\n        >\n          <div slot=\"anchor\" {...test('data-test-trigger')}>\n            <slot name=\"trigger\" ref={(el: HTMLSlotElement) => this.anchorSlot = el}/>\n          </div>\n\n          <div class=\"alc-tooltip__content\" id={this.contentId} {...test('data-test-content')}>\n            <slot>{this.content}</slot>\n          </div>\n        </alc-popup>\n      </Host>\n    );\n  }\n}\n"]}