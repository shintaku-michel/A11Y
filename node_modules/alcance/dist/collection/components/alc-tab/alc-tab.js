import { Host, h } from "@stencil/core";
import logger from "../utils/logger";
import test from "../utils/testAttributes";
export class AlcTab {
    constructor() {
        /**
         * Rótulo da tab.
         */
        this.label = '';
        /**
         * Se, dentro da tab, o primeiro elemento com conteúdo significativo for focalizável, deve ser definido como `true`.
         * Caso contrário, deve ser mantido o valor padrão (`false`).
         */
        this.contentFocus = false;
    }
    render() {
        var _a;
        (_a = this.tab) !== null && _a !== void 0 ? _a : logger.report('tab', this.el.tagName.toLowerCase(), this.el);
        const getId = () => {
            let id;
            if (this.el.id) {
                id = this.el.id;
            }
            else {
                id = `alc-tab_${this.el.tab}`;
            }
            return id;
        };
        return (h(Host, null, h("div", Object.assign({ hidden: !this.selected, role: 'tabpanel', id: getId(), tabindex: this.contentFocus ? null : '0', class: 'alc-tabs__tab' }, test('data-test-tab')), h("div", { class: 'alc-tabs__tab--content' }, h("slot", null)))));
    }
    static get is() { return "alc-tab"; }
    static get originalStyleUrls() {
        return {
            "base": ["alc-tab-base.css"],
            "theme": ["alc-tab.css"]
        };
    }
    static get styleUrls() {
        return {
            "base": ["alc-tab-base.css"],
            "theme": ["alc-tab.css"]
        };
    }
    static get properties() {
        return {
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "R\u00F3tulo da tab."
                },
                "getter": false,
                "setter": false,
                "attribute": "label",
                "reflect": true,
                "defaultValue": "''"
            },
            "tab": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Identificador \u00FAnico da tab."
                },
                "getter": false,
                "setter": false,
                "attribute": "tab",
                "reflect": true
            },
            "selected": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Indica se a tab est\u00E1 ou n\u00E3o selecionada."
                },
                "getter": false,
                "setter": false,
                "attribute": "selected",
                "reflect": true
            },
            "contentFocus": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "Se, dentro da tab, o primeiro elemento com conte\u00FAdo significativo for focaliz\u00E1vel, deve ser definido como `true`.\nCaso contr\u00E1rio, deve ser mantido o valor padr\u00E3o (`false`)."
                },
                "getter": false,
                "setter": false,
                "attribute": "content-focus",
                "reflect": true,
                "defaultValue": "false"
            }
        };
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=alc-tab.js.map
