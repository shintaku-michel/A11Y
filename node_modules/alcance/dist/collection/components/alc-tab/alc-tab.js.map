{"version":3,"file":"alc-tab.js","sourceRoot":"","sources":["../../../../src/components/alc-tab/alc-tab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAClE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,IAAI,MAAM,yBAAyB,CAAC;AAU3C,MAAM,OAAO,MAAM;IARnB;QASE;;WAEG;QACsB,UAAK,GAAW,EAAE,CAAC;QAW5C;;;WAGG;QACsB,iBAAY,GAAa,KAAK,CAAC;KAuCzD;IAjCC,MAAM;;QACJ,MAAA,IAAI,CAAC,GAAG,mCAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;QACxE,MAAM,KAAK,GAAG,GAAW,EAAE;YAEzB,IAAI,EAAU,CAAC;YACf,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACf,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAClB,CAAC;iBACI,CAAC;gBACJ,EAAE,GAAG,WAAW,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YAChC,CAAC;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,CAAA;QAED,OAAO,CACL,EAAC,IAAI;YACH,yBACE,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,EACtB,IAAI,EAAC,UAAU,EACf,EAAE,EAAE,KAAK,EAAE,EACX,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EACxC,KAAK,EAAC,eAAe,IACjB,IAAI,CAAC,eAAe,CAAC;gBAEzB,WAAK,KAAK,EAAC,wBAAwB;oBACjC,eAAQ,CACJ,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Host, h, Prop, Element } from '@stencil/core';\nimport logger from '../utils/logger';\nimport test from '../utils/testAttributes';\n\n@Component({\n  tag: 'alc-tab',\n  styleUrls: {\n    base: 'alc-tab-base.css',\n    theme: 'alc-tab.css',\n  },\n  scoped: false,\n})\nexport class AlcTab {\n  /**\n   * Rótulo da tab.\n   */\n  @Prop({ reflect: true }) label: string = '';\n  /**\n   * Identificador único da tab.\n   */\n  @Prop({ reflect: true }) tab!: string;\n\n  /**\n   * Indica se a tab está ou não selecionada.\n   */\n  @Prop({ reflect: true }) selected: boolean;\n\n  /**\n   * Se, dentro da tab, o primeiro elemento com conteúdo significativo for focalizável, deve ser definido como `true`.\n   * Caso contrário, deve ser mantido o valor padrão (`false`).\n   */\n  @Prop({ reflect: true }) contentFocus?: boolean = false;\n\n\n  @Element() el: HTMLAlcTabElement;\n\n\n  render() {\n    this.tab ?? logger.report('tab', this.el.tagName.toLowerCase(), this.el)\n    const getId = (): string => {\n\n      let id: string;\n      if (this.el.id) {\n        id = this.el.id;\n      }\n      else {\n        id = `alc-tab_${this.el.tab}`;\n      }\n\n      return id;\n    }\n\n    return (\n      <Host>\n        <div\n          hidden={!this.selected}\n          role='tabpanel'\n          id={getId()} // Precisa ter id (para acessibilidade)\n          tabindex={this.contentFocus ? null : '0'}\n          class='alc-tabs__tab'\n          {...test('data-test-tab')}\n        >\n          <div class='alc-tabs__tab--content'>\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"]}