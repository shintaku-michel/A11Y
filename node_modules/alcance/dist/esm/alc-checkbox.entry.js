import { r as registerInstance, h, H as Host, g as getElement } from './index-BuFKlV49.js';
import { g as getUniqueId } from './getUniqueId-BY09qPiz.js';
import { t as testAttributes } from './testAttributes-DKpd2q2s.js';

const alcCheckboxCss = "[data-alc-theme=\"dark\"] alc-checkbox{--accent-color:var(--alc-color-action-40);--outline-color:var(--alc-color-action-30);--text-color:var(--alc-color-text-4);--text-color-error:var(--alc-color-error-45)}[data-alc-theme=\"light\"] alc-checkbox{--accent-color:var(--alc-color-action-60);--outline-color:var(--alc-color-action-60);--text-color:var(--alc-color-text-4);--text-color-error:var(--alc-color-error-50)}alc-checkbox{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;gap:0.5rem}alc-checkbox input[type='checkbox']{margin-top:1px}alc-checkbox input[type='checkbox']:focus{outline-style:solid;outline-width:2px;outline-offset:2px}alc-checkbox input[type='checkbox']{accent-color:var(--accent-color)}alc-checkbox input[type='checkbox']:focus{outline-color:var(--outline-color)}.alc-checkbox__label{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;font-size:0.875rem;line-height:1rem;font-weight:500}.alc-checkbox__text{font-size:0.875rem;line-height:1rem;font-weight:400;color:var(--text-color)}.alc-checkbox__text--error{color:var(--text-color-error)}";

const AlcCheckbox = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.describedBy = new Map();
        this.errorId = '';
        this.hintId = '';
        /**
         * Texto de ajuda.
        */
        this.hint = '';
        /**
         * Texto do label do input. Há opção de adicionar o elemento label pelo slot "label".
        */
        this.label = '';
        /**
         * Texto de mensagem de erro.
        */
        this.errorMsg = '';
    }
    componentWillLoad() {
        // Independentemente de qualquer coisa, reserva ids para esses elementos.
        this.errorId = getUniqueId();
        this.hintId = getUniqueId();
        this.input = this.el.querySelector('input[type="checkbox"]');
        const labelElement = this.el.querySelector('label');
        this.inputId = this.input.id;
        if (!this.inputId) {
            this.inputId = getUniqueId();
            this.input.setAttribute('id', this.inputId);
        }
        if (labelElement && !labelElement.getAttribute('for')) {
            labelElement.setAttribute('for', this.inputId);
        }
        this.describedBy.set('original', this.input.getAttribute('aria-describedby') || '');
    }
    componentWillRender() {
        if (this.errorMsg) {
            this.describedBy.set('error', this.errorId);
        }
        else {
            this.describedBy.delete('error');
        }
        if (this.hint) {
            this.describedBy.set('hint', this.hintId);
        }
        else {
            this.describedBy.delete('hint');
        }
        let currentDescribedBy = '';
        currentDescribedBy += ` ${this.describedBy.get('original') || ''}`;
        currentDescribedBy += ` ${this.describedBy.get('error') || ''}`;
        currentDescribedBy += ` ${this.describedBy.get('hint') || ''}`;
        this.input.setAttribute('aria-describedby', currentDescribedBy.trim());
    }
    render() {
        return (h(Host, { key: 'a179d87b40573e1ad81802377317efef827c849a' }, h("slot", { key: '1574ef832bb947b7e90095c47ca372d6a4a7dc4c' }), h("div", { key: '77f58ecc51076beeb1c468cdaa1f845961d8c866', class: "alc-checkbox__label" }, h("div", { key: 'dea6b75f230ec6989be8bdbb894f83c15f1106e7' }, this.label
            ?
                h("label", Object.assign({ htmlFor: this.inputId }, testAttributes()), this.label)
            :
                h("slot", { name: "label" })), this.errorMsg
            ?
                h("small", Object.assign({ class: "alc-checkbox__text alc-checkbox__text--error", id: this.errorId }, testAttributes()), this.errorMsg)
            :
                null, this.hint
            ?
                h("small", Object.assign({ class: "alc-checkbox__text", id: this.hintId }, testAttributes()), this.hint)
            :
                null)));
    }
    get el() { return getElement(this); }
};
AlcCheckbox.style = alcCheckboxCss;

export { AlcCheckbox as alc_checkbox };
//# sourceMappingURL=alc-checkbox.entry.js.map

//# sourceMappingURL=alc-checkbox.entry.js.map