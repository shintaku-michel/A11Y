import { r as registerInstance, h, H as Host } from './index-BuFKlV49.js';
import { f as focusFirstElement, g as getFocusableElements } from './keydown-CsSB10gC.js';
import { s as screens } from './tailwind-screens-CIbwQM8x.js';
import { l as logger } from './logger-CZkdJRkw.js';

const alcSkipToNavCss = "alc-skip-to-nav{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0;z-index:10}alc-skip-to-nav:focus-within{position:static;width:auto;height:auto;padding:0;margin:0;overflow:visible;clip:auto;white-space:normal;position:absolute;top:0px;width:100%;background-color:var(--alc-color-surface-secondary);padding:1rem;text-align:center}";

const MD_BREAKPOINT = Number(screens.md.split('px')[0]);
const AlcSkipToNav = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.handleClick = (event) => {
            event.preventDefault();
            // Abaixo do breakpoint md, é renderizado o drawer.
            if (window.innerWidth < MD_BREAKPOINT) {
                // Procura pelo botão que abre o drawer: ou o gerado pelo alc-header(-v2), ou o gerado pelo sidepanel.
                const drawerButton = document.querySelector('[data-alc-header-drawer-button], [data-alc-sidepanel-drawer-button]');
                if (!drawerButton) {
                    logger.warn('O componente <alc-skip-to-nav> necessita de <alc-header> ou <alc-sidepanel> para funcionar corretamente no modo mobile.');
                    return;
                }
                if (drawerButton instanceof HTMLButtonElement) {
                    drawerButton.focus();
                }
                return;
            }
            // Lógica para não mobile
            let skipped = false;
            // Cenário 1 - alc-nav-panel
            const navpanel = document.querySelector('alc-nav-panel');
            if (navpanel) {
                if (navpanel.open) {
                    const nav = navpanel.querySelector('alc-nav');
                    if (nav) {
                        focusFirstElement(getFocusableElements(nav));
                        skipped = true;
                    }
                    else {
                        logger.warn('Ao usar o <alc-nav-panel>, é necessário <alc-nav> dentro dele para <alc-skip-top-nav> funcionar corretamente.');
                        return; // Aqui, não há mais nada a fazer.
                    }
                }
                else { // navpanel fechado
                    const navButton = document.querySelector('[data-alc-navpanel-button]');
                    if (navButton instanceof HTMLButtonElement) {
                        navButton.focus();
                        skipped = true;
                    }
                }
            }
            if (skipped) {
                return;
            }
            // Cenário 2 - alc-sidepanel (legado)
            const sidepanel = document.querySelector('alc-sidepanel');
            if (sidepanel) {
                if (sidepanel.visible) {
                    const nav = sidepanel.querySelector('alc-nav');
                    if (nav) {
                        focusFirstElement(getFocusableElements(nav));
                        skipped = true;
                    }
                    else {
                        logger.warn('Ao usar o <alc-sidepanel>, é necessário <alc-nav> dentro dele para <alc-skip-top-nav> funcionar corretamente.');
                        return; // Aqui, não há mais nada a fazer.
                    }
                }
                else { // sidepanel fechado
                    const navButton = document.querySelector('[data-alc-sidepanel-button]');
                    if (navButton instanceof HTMLButtonElement) {
                        navButton.focus();
                        skipped = true;
                    }
                }
            }
            if (skipped) {
                return;
            }
            // Cenário 3 - alc-nav sem nenhum dos painéis (genérico)
            const nav = document.querySelector('alc-nav');
            if (nav) {
                focusFirstElement(getFocusableElements(nav));
                skipped = true;
            }
            if (!skipped) {
                logger.warn('O componente <alc-skip-to-nav> não localizou os elementos necessários para funcionar corretamente. Verifique a documentação do componente.');
            }
        };
    }
    render() {
        return (h(Host, { key: 'ef85488d12ccdc429fe6cea44e663702ab3d1aa1' }, h("a", { key: '17f46884a85c5ee1bdf93e73ebd6b71d203c9db9', class: 'alc-link text-center', href: '#', onClick: this.handleClick }, "Ir para navega\u00E7\u00E3o")));
    }
};
AlcSkipToNav.style = alcSkipToNavCss;

export { AlcSkipToNav as alc_skip_to_nav };
//# sourceMappingURL=alc-skip-to-nav.entry.js.map

//# sourceMappingURL=alc-skip-to-nav.entry.js.map